ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"Ft_Esd_Gauge__Generated.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Ft_Esd_Theme_GetBackColor,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	Ft_Esd_Theme_GetBackColor:
  25              	.LFB4:
  26              		.file 1 "FT_Esd_Widgets/FT_Esd_Theme.h"
   1:FT_Esd_Widgets/FT_Esd_Theme.h **** 
   2:FT_Esd_Widgets/FT_Esd_Theme.h **** #ifndef FT_ESD_THEME_H
   3:FT_Esd_Widgets/FT_Esd_Theme.h **** #define FT_ESD_THEME_H
   4:FT_Esd_Widgets/FT_Esd_Theme.h **** #include "FT_DataTypes.h"
   5:FT_Esd_Widgets/FT_Esd_Theme.h **** #include "Ft_Esd.h"
   6:FT_Esd_Widgets/FT_Esd_Theme.h **** 
   7:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_CATEGORY(EsdTheme, DisplayName = "ESD Theme")
   8:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_CATEGORY(EsdTheme_Themes, DisplayName = "Themes", Category = EsdTheme)
   9:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  10:FT_Esd_Widgets/FT_Esd_Theme.h **** typedef unsigned int ft_uint32_t;
  11:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  12:FT_Esd_Widgets/FT_Esd_Theme.h **** typedef struct
  13:FT_Esd_Widgets/FT_Esd_Theme.h **** {
  14:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t ClearColor;
  15:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t BackColor;
  16:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t TextColor;
  17:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t ButtonTextColor;
  18:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t DefaultColor;
  19:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t PrimaryColor;
  20:FT_Esd_Widgets/FT_Esd_Theme.h **** } Ft_Esd_Theme;
  21:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  22:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_TYPE(Ft_Esd_Theme *, Native = Pointer, Edit = Library)
  23:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  24:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_RENDER(Ft_Esd_Theme_SetCurrent, DisplayName = "Set Current Theme", Category = EsdTheme, Include
  25:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *)
  26:FT_Esd_Widgets/FT_Esd_Theme.h **** void Ft_Esd_Theme_SetCurrent(Ft_Esd_Theme *theme);
  27:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  28:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetCurrent, DisplayName = "Current Theme", Category = EsdTheme, Type = Ft
  29:FT_Esd_Widgets/FT_Esd_Theme.h **** Ft_Esd_Theme *Ft_Esd_Theme_GetCurrent();
  30:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  31:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetClearColor, DisplayName = "Get Clear Color", Category = EsdTheme, Type
  32:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s 			page 2


  33:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetClearColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_Es
  34:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  35:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetBackColor, DisplayName = "Get Back Color", Category = EsdTheme, Type =
  36:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  37:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetBackColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_Esd
  27              		.loc 1 37 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
  43              		.loc 1 37 0
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 002B     		cmp	r3, #0
  46 000c 04D1     		bne	.L2
  47              		.loc 1 37 0 is_stmt 0 discriminator 1
  48 000e FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
  49 0012 0346     		mov	r3, r0
  50 0014 5B68     		ldr	r3, [r3, #4]
  51 0016 01E0     		b	.L3
  52              	.L2:
  53              		.loc 1 37 0 discriminator 2
  54 0018 7B68     		ldr	r3, [r7, #4]
  55 001a 5B68     		ldr	r3, [r3, #4]
  56              	.L3:
  57              		.loc 1 37 0
  58 001c 1846     		mov	r0, r3
  59 001e 0837     		adds	r7, r7, #8
  60              	.LCFI3:
  61              		.cfi_def_cfa_offset 8
  62 0020 BD46     		mov	sp, r7
  63              	.LCFI4:
  64              		.cfi_def_cfa_register 13
  65              		@ sp needed
  66 0022 80BD     		pop	{r7, pc}
  67              		.cfi_endproc
  68              	.LFE4:
  70              		.section	.text.Ft_Esd_Theme_GetTextColor,"ax",%progbits
  71              		.align	1
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  75              		.fpu fpv5-sp-d16
  77              	Ft_Esd_Theme_GetTextColor:
  78              	.LFB5:
  38:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  39:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetTextColor, DisplayName = "Get Text Color", Category = EsdTheme, Type =
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s 			page 3


  40:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  41:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetTextColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_Esd
  79              		.loc 1 41 0 is_stmt 1
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 8
  82              		@ frame_needed = 1, uses_anonymous_args = 0
  83 0000 80B5     		push	{r7, lr}
  84              	.LCFI5:
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 7, -8
  87              		.cfi_offset 14, -4
  88 0002 82B0     		sub	sp, sp, #8
  89              	.LCFI6:
  90              		.cfi_def_cfa_offset 16
  91 0004 00AF     		add	r7, sp, #0
  92              	.LCFI7:
  93              		.cfi_def_cfa_register 7
  94 0006 7860     		str	r0, [r7, #4]
  95              		.loc 1 41 0
  96 0008 7B68     		ldr	r3, [r7, #4]
  97 000a 002B     		cmp	r3, #0
  98 000c 04D1     		bne	.L5
  99              		.loc 1 41 0 is_stmt 0 discriminator 1
 100 000e FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
 101 0012 0346     		mov	r3, r0
 102 0014 9B68     		ldr	r3, [r3, #8]
 103 0016 01E0     		b	.L6
 104              	.L5:
 105              		.loc 1 41 0 discriminator 2
 106 0018 7B68     		ldr	r3, [r7, #4]
 107 001a 9B68     		ldr	r3, [r3, #8]
 108              	.L6:
 109              		.loc 1 41 0
 110 001c 1846     		mov	r0, r3
 111 001e 0837     		adds	r7, r7, #8
 112              	.LCFI8:
 113              		.cfi_def_cfa_offset 8
 114 0020 BD46     		mov	sp, r7
 115              	.LCFI9:
 116              		.cfi_def_cfa_register 13
 117              		@ sp needed
 118 0022 80BD     		pop	{r7, pc}
 119              		.cfi_endproc
 120              	.LFE5:
 122              		.section	.text.Ft_Esd_BitmapCell_GetInfo,"ax",%progbits
 123              		.align	1
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 127              		.fpu fpv5-sp-d16
 129              	Ft_Esd_BitmapCell_GetInfo:
 130              	.LFB9:
 131              		.file 2 "FT_Esd_Framework/Ft_Esd_BitmapInfo.h"
   1:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** /*
   2:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** Bitmap info structure
   3:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** */
   4:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s 			page 4


   5:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #ifndef FT_ESD_BITMAPINFO_H
   6:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #define FT_ESD_BITMAPINFO_H
   7:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
   8:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "Ft_Esd.h"
   9:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "FT_DataTypes.h"
  10:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "Ft_Esd_GpuAlloc.h"
  11:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  12:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapInfo, Native = Struct) // TODO: Struct support, expose values
  13:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  14:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  15:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Width;
  16:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Height;
  17:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Stride;
  18:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Format;
  19:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Size;
  20:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	const char *File;
  21:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  22:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Handle pointing to the address in RAM_G if it is allocated
  23:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_GpuHandle GpuHandle;
  24:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  25:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Bitmap handle that is being used
  26:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_uint32_t BitmapHandle;
  27:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  28:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	const char *PaletteFile;
  29:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_GpuHandle PaletteGpuHandle;
  30:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  31:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// When this is set, the allocated ram is not free'd automatically
  32:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Use Ft_Esd_GpuAlloc_Free(GpuAlloc, GpuHandle) to free the GPU ram manually
  33:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_bool_t Persistent;
  34:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  35:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_BitmapInfo;
  36:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  37:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapInfo *, Native = Pointer, Edit = Library)
  38:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  39:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapCell, Native = Struct) // TODO: Struct support, expose values
  40:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  41:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  42:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapInfo *Info;
  43:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Cell;
  44:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_BitmapCell;
  45:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  46:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapCell *, Native = Pointer, Edit = Library)
  47:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  48:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // Attempts to load the specified bitmap if it has not been loaded into RAM_G yet.
  49:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // Call during the Update cycle of each frame to keep the bitmap flagged as in use, otherwise the m
  50:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_LoadBitmap, Type = ft_uint32_t, Include = "Ft_Esd_BitmapInfo.h", DisplayName = 
  51:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapInfo, Type = Ft_Esd_BitmapInfo *)
  52:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ft_uint32_t Ft_Esd_LoadBitmap(Ft_Esd_BitmapInfo *bitmapInfo);
  53:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  54:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_LoadPalette, Type = ft_uint32_t, Include = "Ft_Esd_BitmapInfo.h", DisplayName =
  55:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapInfo, Type = Ft_Esd_BitmapInfo *)
  56:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ft_uint32_t Ft_Esd_LoadPalette(Ft_Esd_BitmapInfo *bitmapInfo);
  57:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  58:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_ENUM(_BitmapResourceFormat, DisplayName = "Bitmap Format")
  59:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB1555)
  60:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L1)
  61:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L2)
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s 			page 5


  62:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L4)
  63:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L8)
  64:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(RGB332)
  65:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB2)
  66:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB4)
  67:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(RGB565)
  68:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(PALETTED565)
  69:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(PALETTED4444)
  70:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(PALETTED8)
  71:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(JPEG)
  72:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(PNG)
  73:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_END()
  74:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  75:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_LOGIC(Ft_Esd_SwitchBitmapCell, Callback, Include = "Ft_Esd_BitmapInfo.h", DisplayName = "Switch
  76:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  77:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  78:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Callback
  79:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	void *Parent;
  80:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  81:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  82:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Input
  83:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  84:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  85:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ESD_INPUT(BitmapInfo, Type = Ft_Esd_BitmapInfo *, DisplayName = "Bitmap Info")
  86:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapInfo *(* BitmapInfo)(void *context);
  87:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  88:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ESD_INPUT(Cell, Type = ft_uint8_t, DisplayName = "Cell")
  89:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_uint8_t(* Cell)(void *context);
  90:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  91:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  92:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Variables
  93:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  94:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  95:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// BitmapCell object
  96:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapCell BitmapCell;
  97:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  98:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_SwitchBitmapCell;
  99:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 100:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** void Ft_Esd_SwitchBitmapCell__Initializer(Ft_Esd_SwitchBitmapCell *context);
 101:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 102:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_OUTPUT(BitmapCell, Type = Ft_Esd_BitmapCell *, DisplayName = "Bitmap Cell")
 103:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** Ft_Esd_BitmapCell *Ft_Esd_SwitchBitmapCell_BitmapCell(Ft_Esd_SwitchBitmapCell *context);
 104:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 105:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_UPDATE(Ft_Esd_BitmapPersist, DisplayName = "Bitmap Persist", Category = EsdUtilities)
 106:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapCell, Type = Ft_Esd_BitmapCell *)
 107:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** void Ft_Esd_BitmapPersist(Ft_Esd_BitmapCell *bitmapCell);
 108:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 109:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_BitmapCell_GetInfo, Type = Ft_Esd_BitmapInfo *, DisplayName = "ESD BitmapCell G
 110:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapCell, Type = Ft_Esd_BitmapCell *)
 111:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** static Ft_Esd_BitmapInfo *Ft_Esd_BitmapCell_GetInfo(Ft_Esd_BitmapCell *bitmapCell)
 112:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
 132              		.loc 2 112 0 is_stmt 1
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 8
 135              		@ frame_needed = 1, uses_anonymous_args = 0
 136              		@ link register save eliminated.
 137 0000 80B4     		push	{r7}
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s 			page 6


 138              	.LCFI10:
 139              		.cfi_def_cfa_offset 4
 140              		.cfi_offset 7, -4
 141 0002 83B0     		sub	sp, sp, #12
 142              	.LCFI11:
 143              		.cfi_def_cfa_offset 16
 144 0004 00AF     		add	r7, sp, #0
 145              	.LCFI12:
 146              		.cfi_def_cfa_register 7
 147 0006 7860     		str	r0, [r7, #4]
 113:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	if (!bitmapCell) return 0;
 148              		.loc 2 113 0
 149 0008 7B68     		ldr	r3, [r7, #4]
 150 000a 002B     		cmp	r3, #0
 151 000c 01D1     		bne	.L8
 152              		.loc 2 113 0 is_stmt 0 discriminator 1
 153 000e 0023     		movs	r3, #0
 154 0010 01E0     		b	.L9
 155              	.L8:
 114:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	return bitmapCell->Info;
 156              		.loc 2 114 0 is_stmt 1
 157 0012 7B68     		ldr	r3, [r7, #4]
 158 0014 1B68     		ldr	r3, [r3]
 159              	.L9:
 115:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** }
 160              		.loc 2 115 0
 161 0016 1846     		mov	r0, r3
 162 0018 0C37     		adds	r7, r7, #12
 163              	.LCFI13:
 164              		.cfi_def_cfa_offset 4
 165 001a BD46     		mov	sp, r7
 166              	.LCFI14:
 167              		.cfi_def_cfa_register 13
 168              		@ sp needed
 169 001c 5DF8047B 		ldr	r7, [sp], #4
 170              	.LCFI15:
 171              		.cfi_restore 7
 172              		.cfi_def_cfa_offset 0
 173 0020 7047     		bx	lr
 174              		.cfi_endproc
 175              	.LFE9:
 177              		.section	.text.Ft_Esd_Dl_COLOR_RGB,"ax",%progbits
 178              		.align	1
 179              		.syntax unified
 180              		.thumb
 181              		.thumb_func
 182              		.fpu fpv5-sp-d16
 184              	Ft_Esd_Dl_COLOR_RGB:
 185              	.LFB13:
 186              		.file 3 "FT_Esd_Framework/FT_Esd_Dl.h"
   1:FT_Esd_Framework/FT_Esd_Dl.h **** 
   2:FT_Esd_Framework/FT_Esd_Dl.h **** #ifndef FT_ESD_DL_H
   3:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_DL_H
   4:FT_Esd_Framework/FT_Esd_Dl.h **** 
   5:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_DataTypes.h"
   6:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_Platform.h"
   7:FT_Esd_Framework/FT_Esd_Dl.h **** #include "Ft_Esd.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s 			page 7


   8:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_Gpu.h"
   9:FT_Esd_Framework/FT_Esd_Dl.h **** #include "Ft_Esd_BitmapInfo.h"
  10:FT_Esd_Framework/FT_Esd_Dl.h **** 
  11:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_CATEGORY(EsdUtilities, DisplayName = "ESD Utilities")
  12:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_CATEGORY(EveRenderFunctions, DisplayName = "EVE Render Functions")
  13:FT_Esd_Framework/FT_Esd_Dl.h **** 
  14:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_TYPE(Ft_Gpu_Hal_Context_t *, Native = Pointer, Edit = Library)
  15:FT_Esd_Framework/FT_Esd_Dl.h **** 
  16:FT_Esd_Framework/FT_Esd_Dl.h **** // Keep cache of displaylist values that don't often change but are generally set by every widget t
  17:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_OPTIMIZE_DISPLAYLIST 1
  18:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_STATE_STACK_SIZE 5
  19:FT_Esd_Framework/FT_Esd_Dl.h **** 
  20:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_BITMAPHANDLE_INVALID 255
  21:FT_Esd_Framework/FT_Esd_Dl.h **** 
  22:FT_Esd_Framework/FT_Esd_Dl.h **** //
  23:FT_Esd_Framework/FT_Esd_Dl.h **** // Structs
  24:FT_Esd_Framework/FT_Esd_Dl.h **** //
  25:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_ESD_OPTIMIZE_DISPLAYLIST
  26:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_STATE Ft_Esd_GpuState[Ft_Esd_GpuState_I]
  27:FT_Esd_Framework/FT_Esd_Dl.h **** typedef struct
  28:FT_Esd_Framework/FT_Esd_Dl.h **** {
  29:FT_Esd_Framework/FT_Esd_Dl.h **** 	// Keep to a minimum
  30:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_81X_ENABLE
  31:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint32_t PaletteSource;
  32:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  33:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint32_t ColorRGB;
  34:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t ColorA;
  35:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t Handle;         // Current handle
  36:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t Cell;           // Current cell
  37:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_bool_t BitmapTransform; // BitmapTransform other than default is set
  38:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_81X_ENABLE
  39:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t VertexFormat;   // Current vertex format
  40:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  41:FT_Esd_Framework/FT_Esd_Dl.h **** } Ft_Esd_GpuState_T;
  42:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  43:FT_Esd_Framework/FT_Esd_Dl.h **** 
  44:FT_Esd_Framework/FT_Esd_Dl.h **** //
  45:FT_Esd_Framework/FT_Esd_Dl.h **** // Globals
  46:FT_Esd_Framework/FT_Esd_Dl.h **** //
  47:FT_Esd_Framework/FT_Esd_Dl.h **** extern Ft_Gpu_Hal_Context_t *Ft_Esd_Host;
  48:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint16_t Ft_Esd_FontHeight[32];
  49:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_ESD_OPTIMIZE_DISPLAYLIST
  50:FT_Esd_Framework/FT_Esd_Dl.h **** extern Ft_Esd_GpuState_T Ft_Esd_GpuState[FT_ESD_STATE_STACK_SIZE];
  51:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint8_t Ft_Esd_GpuState_I;
  52:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint32_t Ft_Esd_CoFgColor;
  53:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint32_t Ft_Esd_CoBgColor;
  54:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  55:FT_Esd_Framework/FT_Esd_Dl.h **** 
  56:FT_Esd_Framework/FT_Esd_Dl.h **** //Get the height of builtin font
  57:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_GetFontHeight, Type = ft_uint16_t ,DisplayName = "Get Font Height", Category = 
  58:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(i, Type = int, DisplayName = "Bitmap Handle", Default = 0, Min = 0, Max = 31)
  59:FT_Esd_Framework/FT_Esd_Dl.h **** // inline static ft_uint16_t Ft_Esd_GetFontHeight(int i) { return Ft_Esd_FontHeight[i]; }
  60:FT_Esd_Framework/FT_Esd_Dl.h **** #define Ft_Esd_GetFontHeight(i) (Ft_Esd_FontHeight[i]);
  61:FT_Esd_Framework/FT_Esd_Dl.h **** 
  62:FT_Esd_Framework/FT_Esd_Dl.h **** // Reset any cached state
  63:FT_Esd_Framework/FT_Esd_Dl.h **** void Ft_Esd_ResetGpuState();
  64:FT_Esd_Framework/FT_Esd_Dl.h **** void Ft_Esd_ResetCoState();
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s 			page 8


  65:FT_Esd_Framework/FT_Esd_Dl.h **** 
  66:FT_Esd_Framework/FT_Esd_Dl.h **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotalUsed();
  67:FT_Esd_Framework/FT_Esd_Dl.h **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotal();
  68:FT_Esd_Framework/FT_Esd_Dl.h **** 
  69:FT_Esd_Framework/FT_Esd_Dl.h **** /// Set current tag. Must be returned to 255 after usage, to ensure next widgets don't draw with in
  70:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_TAG, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  71:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(s, Type = ft_uint8_t, DisplayName = "Tag", Default = 255, Min = 0, Max = 255)
  72:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_TAG(ft_uint8_t s)
  73:FT_Esd_Framework/FT_Esd_Dl.h **** {
  74:FT_Esd_Framework/FT_Esd_Dl.h **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, TAG(s));
  75:FT_Esd_Framework/FT_Esd_Dl.h **** }
  76:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify color RGB
  77:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_RGB, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  78:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(c, Type = ft_rgb32_t, DisplayName = "Color")
  79:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_RGB(ft_rgb32_t c)
  80:FT_Esd_Framework/FT_Esd_Dl.h **** {
 187              		.loc 3 80 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 16
 190              		@ frame_needed = 1, uses_anonymous_args = 0
 191 0000 80B5     		push	{r7, lr}
 192              	.LCFI16:
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 7, -8
 195              		.cfi_offset 14, -4
 196 0002 84B0     		sub	sp, sp, #16
 197              	.LCFI17:
 198              		.cfi_def_cfa_offset 24
 199 0004 00AF     		add	r7, sp, #0
 200              	.LCFI18:
 201              		.cfi_def_cfa_register 7
 202 0006 7860     		str	r0, [r7, #4]
  81:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  82:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_rgb32_t rgb = c & 0xFFFFFF;
 203              		.loc 3 82 0
 204 0008 7B68     		ldr	r3, [r7, #4]
 205 000a 23F07F43 		bic	r3, r3, #-16777216
 206 000e FB60     		str	r3, [r7, #12]
  83:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (rgb != FT_ESD_STATE.ColorRGB)
 207              		.loc 3 83 0
 208 0010 0F4B     		ldr	r3, .L13
 209 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 210 0014 0F4A     		ldr	r2, .L13+4
 211 0016 1B01     		lsls	r3, r3, #4
 212 0018 1344     		add	r3, r3, r2
 213 001a 0433     		adds	r3, r3, #4
 214 001c 1B68     		ldr	r3, [r3]
 215 001e FA68     		ldr	r2, [r7, #12]
 216 0020 9A42     		cmp	r2, r3
 217 0022 10D0     		beq	.L12
  84:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
  85:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  86:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, (4UL << 24) | (rgb));
 218              		.loc 3 86 0
 219 0024 0C4B     		ldr	r3, .L13+8
 220 0026 1A68     		ldr	r2, [r3]
 221 0028 FB68     		ldr	r3, [r7, #12]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s 			page 9


 222 002a 43F08063 		orr	r3, r3, #67108864
 223 002e 1946     		mov	r1, r3
 224 0030 1046     		mov	r0, r2
 225 0032 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  87:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  88:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.ColorRGB = rgb;
 226              		.loc 3 88 0
 227 0036 064B     		ldr	r3, .L13
 228 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 229 003a 064A     		ldr	r2, .L13+4
 230 003c 1B01     		lsls	r3, r3, #4
 231 003e 1344     		add	r3, r3, r2
 232 0040 0433     		adds	r3, r3, #4
 233 0042 FA68     		ldr	r2, [r7, #12]
 234 0044 1A60     		str	r2, [r3]
 235              	.L12:
  89:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
  90:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  91:FT_Esd_Framework/FT_Esd_Dl.h **** }
 236              		.loc 3 91 0
 237 0046 00BF     		nop
 238 0048 1037     		adds	r7, r7, #16
 239              	.LCFI19:
 240              		.cfi_def_cfa_offset 8
 241 004a BD46     		mov	sp, r7
 242              	.LCFI20:
 243              		.cfi_def_cfa_register 13
 244              		@ sp needed
 245 004c 80BD     		pop	{r7, pc}
 246              	.L14:
 247 004e 00BF     		.align	2
 248              	.L13:
 249 0050 00000000 		.word	Ft_Esd_GpuState_I
 250 0054 00000000 		.word	Ft_Esd_GpuState
 251 0058 00000000 		.word	Ft_Esd_Host
 252              		.cfi_endproc
 253              	.LFE13:
 255              		.section	.text.Ft_Esd_Dl_COLOR_A,"ax",%progbits
 256              		.align	1
 257              		.syntax unified
 258              		.thumb
 259              		.thumb_func
 260              		.fpu fpv5-sp-d16
 262              	Ft_Esd_Dl_COLOR_A:
 263              	.LFB14:
  92:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify alpha channel
  93:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_A, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  94:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(alpha, Type = ft_uint8_t, Default = 255, Min = 0, Max = 255)
  95:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_A(ft_uint8_t alpha)
  96:FT_Esd_Framework/FT_Esd_Dl.h **** {
 264              		.loc 3 96 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 8
 267              		@ frame_needed = 1, uses_anonymous_args = 0
 268 0000 80B5     		push	{r7, lr}
 269              	.LCFI21:
 270              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s 			page 10


 271              		.cfi_offset 7, -8
 272              		.cfi_offset 14, -4
 273 0002 82B0     		sub	sp, sp, #8
 274              	.LCFI22:
 275              		.cfi_def_cfa_offset 16
 276 0004 00AF     		add	r7, sp, #0
 277              	.LCFI23:
 278              		.cfi_def_cfa_register 7
 279 0006 0346     		mov	r3, r0
 280 0008 FB71     		strb	r3, [r7, #7]
  97:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  98:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (alpha != FT_ESD_STATE.ColorA)
 281              		.loc 3 98 0
 282 000a 0F4B     		ldr	r3, .L18
 283 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 284 000e 0F4A     		ldr	r2, .L18+4
 285 0010 1B01     		lsls	r3, r3, #4
 286 0012 1344     		add	r3, r3, r2
 287 0014 0833     		adds	r3, r3, #8
 288 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 289 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 290 001a 9A42     		cmp	r2, r3
 291 001c 10D0     		beq	.L17
  99:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
 100:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 101:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, COLOR_A(alpha));
 292              		.loc 3 101 0
 293 001e 0C4B     		ldr	r3, .L18+8
 294 0020 1A68     		ldr	r2, [r3]
 295 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 296 0024 43F08053 		orr	r3, r3, #268435456
 297 0028 1946     		mov	r1, r3
 298 002a 1046     		mov	r0, r2
 299 002c FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 102:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 103:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.ColorA = alpha;
 300              		.loc 3 103 0
 301 0030 054B     		ldr	r3, .L18
 302 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 303 0034 054A     		ldr	r2, .L18+4
 304 0036 1B01     		lsls	r3, r3, #4
 305 0038 1344     		add	r3, r3, r2
 306 003a 0833     		adds	r3, r3, #8
 307 003c FA79     		ldrb	r2, [r7, #7]
 308 003e 1A70     		strb	r2, [r3]
 309              	.L17:
 104:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
 105:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 106:FT_Esd_Framework/FT_Esd_Dl.h **** }
 310              		.loc 3 106 0
 311 0040 00BF     		nop
 312 0042 0837     		adds	r7, r7, #8
 313              	.LCFI24:
 314              		.cfi_def_cfa_offset 8
 315 0044 BD46     		mov	sp, r7
 316              	.LCFI25:
 317              		.cfi_def_cfa_register 13
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s 			page 11


 318              		@ sp needed
 319 0046 80BD     		pop	{r7, pc}
 320              	.L19:
 321              		.align	2
 322              	.L18:
 323 0048 00000000 		.word	Ft_Esd_GpuState_I
 324 004c 00000000 		.word	Ft_Esd_GpuState
 325 0050 00000000 		.word	Ft_Esd_Host
 326              		.cfi_endproc
 327              	.LFE14:
 329              		.section	.text.Ft_Esd_Gauge_Theme__Default,"ax",%progbits
 330              		.align	1
 331              		.global	Ft_Esd_Gauge_Theme__Default
 332              		.syntax unified
 333              		.thumb
 334              		.thumb_func
 335              		.fpu fpv5-sp-d16
 337              	Ft_Esd_Gauge_Theme__Default:
 338              	.LFB23:
 339              		.file 4 "FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c"
   1:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** /*
   2:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** This file is automatically generated
   3:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** Ft_Esd_Gauge
   4:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** C Source
   5:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** */
   6:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 
   7:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** #include "Ft_Esd_Gauge.h"
   8:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 
   9:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** #include "FT_Esd_CoPro_Cmds.h"
  10:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** #include "FT_Esd_Dl.h"
  11:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** #include "FT_Gpu.h"
  12:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 
  13:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** extern void Ft_Esd_Noop(void *context);
  14:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** Ft_Esd_Theme * Ft_Esd_Gauge_Theme__Default(void *context) { return Ft_Esd_Theme_GetCurrent(); }
 340              		.loc 4 14 0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 8
 343              		@ frame_needed = 1, uses_anonymous_args = 0
 344 0000 80B5     		push	{r7, lr}
 345              	.LCFI26:
 346              		.cfi_def_cfa_offset 8
 347              		.cfi_offset 7, -8
 348              		.cfi_offset 14, -4
 349 0002 82B0     		sub	sp, sp, #8
 350              	.LCFI27:
 351              		.cfi_def_cfa_offset 16
 352 0004 00AF     		add	r7, sp, #0
 353              	.LCFI28:
 354              		.cfi_def_cfa_register 7
 355 0006 7860     		str	r0, [r7, #4]
 356              		.loc 4 14 0
 357 0008 FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
 358 000c 0346     		mov	r3, r0
 359 000e 1846     		mov	r0, r3
 360 0010 0837     		adds	r7, r7, #8
 361              	.LCFI29:
 362              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s 			page 12


 363 0012 BD46     		mov	sp, r7
 364              	.LCFI30:
 365              		.cfi_def_cfa_register 13
 366              		@ sp needed
 367 0014 80BD     		pop	{r7, pc}
 368              		.cfi_endproc
 369              	.LFE23:
 371              		.section	.text.Ft_Esd_Gauge_X__Default,"ax",%progbits
 372              		.align	1
 373              		.global	Ft_Esd_Gauge_X__Default
 374              		.syntax unified
 375              		.thumb
 376              		.thumb_func
 377              		.fpu fpv5-sp-d16
 379              	Ft_Esd_Gauge_X__Default:
 380              	.LFB24:
  15:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** ft_int16_t Ft_Esd_Gauge_X__Default(void *context) { return 0; }
 381              		.loc 4 15 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 8
 384              		@ frame_needed = 1, uses_anonymous_args = 0
 385              		@ link register save eliminated.
 386 0000 80B4     		push	{r7}
 387              	.LCFI31:
 388              		.cfi_def_cfa_offset 4
 389              		.cfi_offset 7, -4
 390 0002 83B0     		sub	sp, sp, #12
 391              	.LCFI32:
 392              		.cfi_def_cfa_offset 16
 393 0004 00AF     		add	r7, sp, #0
 394              	.LCFI33:
 395              		.cfi_def_cfa_register 7
 396 0006 7860     		str	r0, [r7, #4]
 397              		.loc 4 15 0
 398 0008 0023     		movs	r3, #0
 399 000a 1846     		mov	r0, r3
 400 000c 0C37     		adds	r7, r7, #12
 401              	.LCFI34:
 402              		.cfi_def_cfa_offset 4
 403 000e BD46     		mov	sp, r7
 404              	.LCFI35:
 405              		.cfi_def_cfa_register 13
 406              		@ sp needed
 407 0010 5DF8047B 		ldr	r7, [sp], #4
 408              	.LCFI36:
 409              		.cfi_restore 7
 410              		.cfi_def_cfa_offset 0
 411 0014 7047     		bx	lr
 412              		.cfi_endproc
 413              	.LFE24:
 415              		.section	.text.Ft_Esd_Gauge_Y__Default,"ax",%progbits
 416              		.align	1
 417              		.global	Ft_Esd_Gauge_Y__Default
 418              		.syntax unified
 419              		.thumb
 420              		.thumb_func
 421              		.fpu fpv5-sp-d16
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s 			page 13


 423              	Ft_Esd_Gauge_Y__Default:
 424              	.LFB25:
  16:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** ft_int16_t Ft_Esd_Gauge_Y__Default(void *context) { return 0; }
 425              		.loc 4 16 0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 8
 428              		@ frame_needed = 1, uses_anonymous_args = 0
 429              		@ link register save eliminated.
 430 0000 80B4     		push	{r7}
 431              	.LCFI37:
 432              		.cfi_def_cfa_offset 4
 433              		.cfi_offset 7, -4
 434 0002 83B0     		sub	sp, sp, #12
 435              	.LCFI38:
 436              		.cfi_def_cfa_offset 16
 437 0004 00AF     		add	r7, sp, #0
 438              	.LCFI39:
 439              		.cfi_def_cfa_register 7
 440 0006 7860     		str	r0, [r7, #4]
 441              		.loc 4 16 0
 442 0008 0023     		movs	r3, #0
 443 000a 1846     		mov	r0, r3
 444 000c 0C37     		adds	r7, r7, #12
 445              	.LCFI40:
 446              		.cfi_def_cfa_offset 4
 447 000e BD46     		mov	sp, r7
 448              	.LCFI41:
 449              		.cfi_def_cfa_register 13
 450              		@ sp needed
 451 0010 5DF8047B 		ldr	r7, [sp], #4
 452              	.LCFI42:
 453              		.cfi_restore 7
 454              		.cfi_def_cfa_offset 0
 455 0014 7047     		bx	lr
 456              		.cfi_endproc
 457              	.LFE25:
 459              		.section	.text.Ft_Esd_Gauge_Width__Default,"ax",%progbits
 460              		.align	1
 461              		.global	Ft_Esd_Gauge_Width__Default
 462              		.syntax unified
 463              		.thumb
 464              		.thumb_func
 465              		.fpu fpv5-sp-d16
 467              	Ft_Esd_Gauge_Width__Default:
 468              	.LFB26:
  17:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** ft_int16_t Ft_Esd_Gauge_Width__Default(void *context) { return 144; }
 469              		.loc 4 17 0
 470              		.cfi_startproc
 471              		@ args = 0, pretend = 0, frame = 8
 472              		@ frame_needed = 1, uses_anonymous_args = 0
 473              		@ link register save eliminated.
 474 0000 80B4     		push	{r7}
 475              	.LCFI43:
 476              		.cfi_def_cfa_offset 4
 477              		.cfi_offset 7, -4
 478 0002 83B0     		sub	sp, sp, #12
 479              	.LCFI44:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s 			page 14


 480              		.cfi_def_cfa_offset 16
 481 0004 00AF     		add	r7, sp, #0
 482              	.LCFI45:
 483              		.cfi_def_cfa_register 7
 484 0006 7860     		str	r0, [r7, #4]
 485              		.loc 4 17 0
 486 0008 9023     		movs	r3, #144
 487 000a 1846     		mov	r0, r3
 488 000c 0C37     		adds	r7, r7, #12
 489              	.LCFI46:
 490              		.cfi_def_cfa_offset 4
 491 000e BD46     		mov	sp, r7
 492              	.LCFI47:
 493              		.cfi_def_cfa_register 13
 494              		@ sp needed
 495 0010 5DF8047B 		ldr	r7, [sp], #4
 496              	.LCFI48:
 497              		.cfi_restore 7
 498              		.cfi_def_cfa_offset 0
 499 0014 7047     		bx	lr
 500              		.cfi_endproc
 501              	.LFE26:
 503              		.section	.text.Ft_Esd_Gauge_Height__Default,"ax",%progbits
 504              		.align	1
 505              		.global	Ft_Esd_Gauge_Height__Default
 506              		.syntax unified
 507              		.thumb
 508              		.thumb_func
 509              		.fpu fpv5-sp-d16
 511              	Ft_Esd_Gauge_Height__Default:
 512              	.LFB27:
  18:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** ft_int16_t Ft_Esd_Gauge_Height__Default(void *context) { return 144; }
 513              		.loc 4 18 0
 514              		.cfi_startproc
 515              		@ args = 0, pretend = 0, frame = 8
 516              		@ frame_needed = 1, uses_anonymous_args = 0
 517              		@ link register save eliminated.
 518 0000 80B4     		push	{r7}
 519              	.LCFI49:
 520              		.cfi_def_cfa_offset 4
 521              		.cfi_offset 7, -4
 522 0002 83B0     		sub	sp, sp, #12
 523              	.LCFI50:
 524              		.cfi_def_cfa_offset 16
 525 0004 00AF     		add	r7, sp, #0
 526              	.LCFI51:
 527              		.cfi_def_cfa_register 7
 528 0006 7860     		str	r0, [r7, #4]
 529              		.loc 4 18 0
 530 0008 9023     		movs	r3, #144
 531 000a 1846     		mov	r0, r3
 532 000c 0C37     		adds	r7, r7, #12
 533              	.LCFI52:
 534              		.cfi_def_cfa_offset 4
 535 000e BD46     		mov	sp, r7
 536              	.LCFI53:
 537              		.cfi_def_cfa_register 13
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s 			page 15


 538              		@ sp needed
 539 0010 5DF8047B 		ldr	r7, [sp], #4
 540              	.LCFI54:
 541              		.cfi_restore 7
 542              		.cfi_def_cfa_offset 0
 543 0014 7047     		bx	lr
 544              		.cfi_endproc
 545              	.LFE27:
 547              		.section	.text.Ft_Esd_Gauge_Alpha__Default,"ax",%progbits
 548              		.align	1
 549              		.global	Ft_Esd_Gauge_Alpha__Default
 550              		.syntax unified
 551              		.thumb
 552              		.thumb_func
 553              		.fpu fpv5-sp-d16
 555              	Ft_Esd_Gauge_Alpha__Default:
 556              	.LFB28:
  19:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** ft_uint8_t Ft_Esd_Gauge_Alpha__Default(void *context) { return 255; }
 557              		.loc 4 19 0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 8
 560              		@ frame_needed = 1, uses_anonymous_args = 0
 561              		@ link register save eliminated.
 562 0000 80B4     		push	{r7}
 563              	.LCFI55:
 564              		.cfi_def_cfa_offset 4
 565              		.cfi_offset 7, -4
 566 0002 83B0     		sub	sp, sp, #12
 567              	.LCFI56:
 568              		.cfi_def_cfa_offset 16
 569 0004 00AF     		add	r7, sp, #0
 570              	.LCFI57:
 571              		.cfi_def_cfa_register 7
 572 0006 7860     		str	r0, [r7, #4]
 573              		.loc 4 19 0
 574 0008 FF23     		movs	r3, #255
 575 000a 1846     		mov	r0, r3
 576 000c 0C37     		adds	r7, r7, #12
 577              	.LCFI58:
 578              		.cfi_def_cfa_offset 4
 579 000e BD46     		mov	sp, r7
 580              	.LCFI59:
 581              		.cfi_def_cfa_register 13
 582              		@ sp needed
 583 0010 5DF8047B 		ldr	r7, [sp], #4
 584              	.LCFI60:
 585              		.cfi_restore 7
 586              		.cfi_def_cfa_offset 0
 587 0014 7047     		bx	lr
 588              		.cfi_endproc
 589              	.LFE28:
 591              		.section	.text.Ft_Esd_Gauge_Val__Default,"ax",%progbits
 592              		.align	1
 593              		.global	Ft_Esd_Gauge_Val__Default
 594              		.syntax unified
 595              		.thumb
 596              		.thumb_func
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s 			page 16


 597              		.fpu fpv5-sp-d16
 599              	Ft_Esd_Gauge_Val__Default:
 600              	.LFB29:
  20:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** ft_uint16_t Ft_Esd_Gauge_Val__Default(void *context) { return 0U; }
 601              		.loc 4 20 0
 602              		.cfi_startproc
 603              		@ args = 0, pretend = 0, frame = 8
 604              		@ frame_needed = 1, uses_anonymous_args = 0
 605              		@ link register save eliminated.
 606 0000 80B4     		push	{r7}
 607              	.LCFI61:
 608              		.cfi_def_cfa_offset 4
 609              		.cfi_offset 7, -4
 610 0002 83B0     		sub	sp, sp, #12
 611              	.LCFI62:
 612              		.cfi_def_cfa_offset 16
 613 0004 00AF     		add	r7, sp, #0
 614              	.LCFI63:
 615              		.cfi_def_cfa_register 7
 616 0006 7860     		str	r0, [r7, #4]
 617              		.loc 4 20 0
 618 0008 0023     		movs	r3, #0
 619 000a 1846     		mov	r0, r3
 620 000c 0C37     		adds	r7, r7, #12
 621              	.LCFI64:
 622              		.cfi_def_cfa_offset 4
 623 000e BD46     		mov	sp, r7
 624              	.LCFI65:
 625              		.cfi_def_cfa_register 13
 626              		@ sp needed
 627 0010 5DF8047B 		ldr	r7, [sp], #4
 628              	.LCFI66:
 629              		.cfi_restore 7
 630              		.cfi_def_cfa_offset 0
 631 0014 7047     		bx	lr
 632              		.cfi_endproc
 633              	.LFE29:
 635              		.section	.text.Ft_Esd_Gauge_Range__Default,"ax",%progbits
 636              		.align	1
 637              		.global	Ft_Esd_Gauge_Range__Default
 638              		.syntax unified
 639              		.thumb
 640              		.thumb_func
 641              		.fpu fpv5-sp-d16
 643              	Ft_Esd_Gauge_Range__Default:
 644              	.LFB30:
  21:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** ft_uint16_t Ft_Esd_Gauge_Range__Default(void *context) { return 0U; }
 645              		.loc 4 21 0
 646              		.cfi_startproc
 647              		@ args = 0, pretend = 0, frame = 8
 648              		@ frame_needed = 1, uses_anonymous_args = 0
 649              		@ link register save eliminated.
 650 0000 80B4     		push	{r7}
 651              	.LCFI67:
 652              		.cfi_def_cfa_offset 4
 653              		.cfi_offset 7, -4
 654 0002 83B0     		sub	sp, sp, #12
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s 			page 17


 655              	.LCFI68:
 656              		.cfi_def_cfa_offset 16
 657 0004 00AF     		add	r7, sp, #0
 658              	.LCFI69:
 659              		.cfi_def_cfa_register 7
 660 0006 7860     		str	r0, [r7, #4]
 661              		.loc 4 21 0
 662 0008 0023     		movs	r3, #0
 663 000a 1846     		mov	r0, r3
 664 000c 0C37     		adds	r7, r7, #12
 665              	.LCFI70:
 666              		.cfi_def_cfa_offset 4
 667 000e BD46     		mov	sp, r7
 668              	.LCFI71:
 669              		.cfi_def_cfa_register 13
 670              		@ sp needed
 671 0010 5DF8047B 		ldr	r7, [sp], #4
 672              	.LCFI72:
 673              		.cfi_restore 7
 674              		.cfi_def_cfa_offset 0
 675 0014 7047     		bx	lr
 676              		.cfi_endproc
 677              	.LFE30:
 679              		.section	.text.Ft_Esd_Gauge_Major__Default,"ax",%progbits
 680              		.align	1
 681              		.global	Ft_Esd_Gauge_Major__Default
 682              		.syntax unified
 683              		.thumb
 684              		.thumb_func
 685              		.fpu fpv5-sp-d16
 687              	Ft_Esd_Gauge_Major__Default:
 688              	.LFB31:
  22:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** ft_uint16_t Ft_Esd_Gauge_Major__Default(void *context) { return 4U; }
 689              		.loc 4 22 0
 690              		.cfi_startproc
 691              		@ args = 0, pretend = 0, frame = 8
 692              		@ frame_needed = 1, uses_anonymous_args = 0
 693              		@ link register save eliminated.
 694 0000 80B4     		push	{r7}
 695              	.LCFI73:
 696              		.cfi_def_cfa_offset 4
 697              		.cfi_offset 7, -4
 698 0002 83B0     		sub	sp, sp, #12
 699              	.LCFI74:
 700              		.cfi_def_cfa_offset 16
 701 0004 00AF     		add	r7, sp, #0
 702              	.LCFI75:
 703              		.cfi_def_cfa_register 7
 704 0006 7860     		str	r0, [r7, #4]
 705              		.loc 4 22 0
 706 0008 0423     		movs	r3, #4
 707 000a 1846     		mov	r0, r3
 708 000c 0C37     		adds	r7, r7, #12
 709              	.LCFI76:
 710              		.cfi_def_cfa_offset 4
 711 000e BD46     		mov	sp, r7
 712              	.LCFI77:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s 			page 18


 713              		.cfi_def_cfa_register 13
 714              		@ sp needed
 715 0010 5DF8047B 		ldr	r7, [sp], #4
 716              	.LCFI78:
 717              		.cfi_restore 7
 718              		.cfi_def_cfa_offset 0
 719 0014 7047     		bx	lr
 720              		.cfi_endproc
 721              	.LFE31:
 723              		.section	.text.Ft_Esd_Gauge_Minor__Default,"ax",%progbits
 724              		.align	1
 725              		.global	Ft_Esd_Gauge_Minor__Default
 726              		.syntax unified
 727              		.thumb
 728              		.thumb_func
 729              		.fpu fpv5-sp-d16
 731              	Ft_Esd_Gauge_Minor__Default:
 732              	.LFB32:
  23:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** ft_uint16_t Ft_Esd_Gauge_Minor__Default(void *context) { return 16U; }
 733              		.loc 4 23 0
 734              		.cfi_startproc
 735              		@ args = 0, pretend = 0, frame = 8
 736              		@ frame_needed = 1, uses_anonymous_args = 0
 737              		@ link register save eliminated.
 738 0000 80B4     		push	{r7}
 739              	.LCFI79:
 740              		.cfi_def_cfa_offset 4
 741              		.cfi_offset 7, -4
 742 0002 83B0     		sub	sp, sp, #12
 743              	.LCFI80:
 744              		.cfi_def_cfa_offset 16
 745 0004 00AF     		add	r7, sp, #0
 746              	.LCFI81:
 747              		.cfi_def_cfa_register 7
 748 0006 7860     		str	r0, [r7, #4]
 749              		.loc 4 23 0
 750 0008 1023     		movs	r3, #16
 751 000a 1846     		mov	r0, r3
 752 000c 0C37     		adds	r7, r7, #12
 753              	.LCFI82:
 754              		.cfi_def_cfa_offset 4
 755 000e BD46     		mov	sp, r7
 756              	.LCFI83:
 757              		.cfi_def_cfa_register 13
 758              		@ sp needed
 759 0010 5DF8047B 		ldr	r7, [sp], #4
 760              	.LCFI84:
 761              		.cfi_restore 7
 762              		.cfi_def_cfa_offset 0
 763 0014 7047     		bx	lr
 764              		.cfi_endproc
 765              	.LFE32:
 767              		.section	.text.Ft_Esd_Gauge__Initializer,"ax",%progbits
 768              		.align	1
 769              		.global	Ft_Esd_Gauge__Initializer
 770              		.syntax unified
 771              		.thumb
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s 			page 19


 772              		.thumb_func
 773              		.fpu fpv5-sp-d16
 775              	Ft_Esd_Gauge__Initializer:
 776              	.LFB33:
  24:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 
  25:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** Ft_Gpu_Hal_Context_t * Ft_Esd_GetHost();
  26:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** Ft_Esd_Theme * Ft_Esd_Theme_GetCurrent();
  27:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** static ft_int16_t Ft_Esd_Gauge_Ft_Esd_PosSizeToRadius_X__Property(void *context);
  28:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** static ft_int16_t Ft_Esd_Gauge_Ft_Esd_PosSizeToRadius_Y__Property(void *context);
  29:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** static ft_int16_t Ft_Esd_Gauge_Ft_Esd_PosSizeToRadius_Width__Property(void *context);
  30:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** static ft_int16_t Ft_Esd_Gauge_Ft_Esd_PosSizeToRadius_Height__Property(void *context);
  31:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 
  32:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 
  33:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** void Ft_Esd_Gauge__Initializer(Ft_Esd_Gauge *context)
  34:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** {
 777              		.loc 4 34 0
 778              		.cfi_startproc
 779              		@ args = 0, pretend = 0, frame = 8
 780              		@ frame_needed = 1, uses_anonymous_args = 0
 781 0000 80B5     		push	{r7, lr}
 782              	.LCFI85:
 783              		.cfi_def_cfa_offset 8
 784              		.cfi_offset 7, -8
 785              		.cfi_offset 14, -4
 786 0002 82B0     		sub	sp, sp, #8
 787              	.LCFI86:
 788              		.cfi_def_cfa_offset 16
 789 0004 00AF     		add	r7, sp, #0
 790              	.LCFI87:
 791              		.cfi_def_cfa_register 7
 792 0006 7860     		str	r0, [r7, #4]
  35:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	context->Parent = 0;
 793              		.loc 4 35 0
 794 0008 7B68     		ldr	r3, [r7, #4]
 795 000a 0022     		movs	r2, #0
 796 000c 1A60     		str	r2, [r3]
  36:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	context->Theme = Ft_Esd_Gauge_Theme__Default;
 797              		.loc 4 36 0
 798 000e 7B68     		ldr	r3, [r7, #4]
 799 0010 1A4A     		ldr	r2, .L41
 800 0012 5A60     		str	r2, [r3, #4]
  37:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	context->X = Ft_Esd_Gauge_X__Default;
 801              		.loc 4 37 0
 802 0014 7B68     		ldr	r3, [r7, #4]
 803 0016 1A4A     		ldr	r2, .L41+4
 804 0018 9A60     		str	r2, [r3, #8]
  38:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	context->Y = Ft_Esd_Gauge_Y__Default;
 805              		.loc 4 38 0
 806 001a 7B68     		ldr	r3, [r7, #4]
 807 001c 194A     		ldr	r2, .L41+8
 808 001e DA60     		str	r2, [r3, #12]
  39:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	context->Width = Ft_Esd_Gauge_Width__Default;
 809              		.loc 4 39 0
 810 0020 7B68     		ldr	r3, [r7, #4]
 811 0022 194A     		ldr	r2, .L41+12
 812 0024 1A61     		str	r2, [r3, #16]
  40:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	context->Height = Ft_Esd_Gauge_Height__Default;
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s 			page 20


 813              		.loc 4 40 0
 814 0026 7B68     		ldr	r3, [r7, #4]
 815 0028 184A     		ldr	r2, .L41+16
 816 002a 5A61     		str	r2, [r3, #20]
  41:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	Ft_Esd_PosSizeToRadius__Initializer(&context->Ft_Esd_PosSizeToRadius);
 817              		.loc 4 41 0
 818 002c 7B68     		ldr	r3, [r7, #4]
 819 002e 1833     		adds	r3, r3, #24
 820 0030 1846     		mov	r0, r3
 821 0032 FFF7FEFF 		bl	Ft_Esd_PosSizeToRadius__Initializer
  42:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	context->Ft_Esd_PosSizeToRadius.Parent = context;
 822              		.loc 4 42 0
 823 0036 7B68     		ldr	r3, [r7, #4]
 824 0038 7A68     		ldr	r2, [r7, #4]
 825 003a 9A61     		str	r2, [r3, #24]
  43:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	context->Ft_Esd_PosSizeToRadius.X = Ft_Esd_Gauge_Ft_Esd_PosSizeToRadius_X__Property;
 826              		.loc 4 43 0
 827 003c 7B68     		ldr	r3, [r7, #4]
 828 003e 144A     		ldr	r2, .L41+20
 829 0040 DA61     		str	r2, [r3, #28]
  44:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	context->Ft_Esd_PosSizeToRadius.Y = Ft_Esd_Gauge_Ft_Esd_PosSizeToRadius_Y__Property;
 830              		.loc 4 44 0
 831 0042 7B68     		ldr	r3, [r7, #4]
 832 0044 134A     		ldr	r2, .L41+24
 833 0046 1A62     		str	r2, [r3, #32]
  45:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	context->Ft_Esd_PosSizeToRadius.Width = Ft_Esd_Gauge_Ft_Esd_PosSizeToRadius_Width__Property;
 834              		.loc 4 45 0
 835 0048 7B68     		ldr	r3, [r7, #4]
 836 004a 134A     		ldr	r2, .L41+28
 837 004c 5A62     		str	r2, [r3, #36]
  46:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	context->Ft_Esd_PosSizeToRadius.Height = Ft_Esd_Gauge_Ft_Esd_PosSizeToRadius_Height__Property;
 838              		.loc 4 46 0
 839 004e 7B68     		ldr	r3, [r7, #4]
 840 0050 124A     		ldr	r2, .L41+32
 841 0052 9A62     		str	r2, [r3, #40]
  47:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	context->Alpha = Ft_Esd_Gauge_Alpha__Default;
 842              		.loc 4 47 0
 843 0054 7B68     		ldr	r3, [r7, #4]
 844 0056 124A     		ldr	r2, .L41+36
 845 0058 DA62     		str	r2, [r3, #44]
  48:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	context->Val = Ft_Esd_Gauge_Val__Default;
 846              		.loc 4 48 0
 847 005a 7B68     		ldr	r3, [r7, #4]
 848 005c 114A     		ldr	r2, .L41+40
 849 005e 1A63     		str	r2, [r3, #48]
  49:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	context->Range = Ft_Esd_Gauge_Range__Default;
 850              		.loc 4 49 0
 851 0060 7B68     		ldr	r3, [r7, #4]
 852 0062 114A     		ldr	r2, .L41+44
 853 0064 5A63     		str	r2, [r3, #52]
  50:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	context->Major = Ft_Esd_Gauge_Major__Default;
 854              		.loc 4 50 0
 855 0066 7B68     		ldr	r3, [r7, #4]
 856 0068 104A     		ldr	r2, .L41+48
 857 006a 9A63     		str	r2, [r3, #56]
  51:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	context->Minor = Ft_Esd_Gauge_Minor__Default;
 858              		.loc 4 51 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s 			page 21


 859 006c 7B68     		ldr	r3, [r7, #4]
 860 006e 104A     		ldr	r2, .L41+52
 861 0070 DA63     		str	r2, [r3, #60]
  52:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** }
 862              		.loc 4 52 0
 863 0072 00BF     		nop
 864 0074 0837     		adds	r7, r7, #8
 865              	.LCFI88:
 866              		.cfi_def_cfa_offset 8
 867 0076 BD46     		mov	sp, r7
 868              	.LCFI89:
 869              		.cfi_def_cfa_register 13
 870              		@ sp needed
 871 0078 80BD     		pop	{r7, pc}
 872              	.L42:
 873 007a 00BF     		.align	2
 874              	.L41:
 875 007c 00000000 		.word	Ft_Esd_Gauge_Theme__Default
 876 0080 00000000 		.word	Ft_Esd_Gauge_X__Default
 877 0084 00000000 		.word	Ft_Esd_Gauge_Y__Default
 878 0088 00000000 		.word	Ft_Esd_Gauge_Width__Default
 879 008c 00000000 		.word	Ft_Esd_Gauge_Height__Default
 880 0090 00000000 		.word	Ft_Esd_Gauge_Ft_Esd_PosSizeToRadius_X__Property
 881 0094 00000000 		.word	Ft_Esd_Gauge_Ft_Esd_PosSizeToRadius_Y__Property
 882 0098 00000000 		.word	Ft_Esd_Gauge_Ft_Esd_PosSizeToRadius_Width__Property
 883 009c 00000000 		.word	Ft_Esd_Gauge_Ft_Esd_PosSizeToRadius_Height__Property
 884 00a0 00000000 		.word	Ft_Esd_Gauge_Alpha__Default
 885 00a4 00000000 		.word	Ft_Esd_Gauge_Val__Default
 886 00a8 00000000 		.word	Ft_Esd_Gauge_Range__Default
 887 00ac 00000000 		.word	Ft_Esd_Gauge_Major__Default
 888 00b0 00000000 		.word	Ft_Esd_Gauge_Minor__Default
 889              		.cfi_endproc
 890              	.LFE33:
 892              		.section	.text.Ft_Esd_Gauge_Render,"ax",%progbits
 893              		.align	1
 894              		.global	Ft_Esd_Gauge_Render
 895              		.syntax unified
 896              		.thumb
 897              		.thumb_func
 898              		.fpu fpv5-sp-d16
 900              	Ft_Esd_Gauge_Render:
 901              	.LFB34:
  53:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 
  54:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** ft_void_t Ft_Gpu_CoCmd_BgColor(Ft_Gpu_Hal_Context_t *, ft_rgb32_t);
  55:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** ft_void_t Ft_Gpu_CoCmd_Gauge(Ft_Gpu_Hal_Context_t *, ft_int16_t, ft_int16_t, ft_int16_t, ft_uint16_
  56:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 
  57:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** void Ft_Esd_Gauge_Render(Ft_Esd_Gauge *context)
  58:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** {
 902              		.loc 4 58 0
 903              		.cfi_startproc
 904              		@ args = 0, pretend = 0, frame = 56
 905              		@ frame_needed = 1, uses_anonymous_args = 0
 906 0000 80B5     		push	{r7, lr}
 907              	.LCFI90:
 908              		.cfi_def_cfa_offset 8
 909              		.cfi_offset 7, -8
 910              		.cfi_offset 14, -4
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s 			page 22


 911 0002 94B0     		sub	sp, sp, #80
 912              	.LCFI91:
 913              		.cfi_def_cfa_offset 88
 914 0004 06AF     		add	r7, sp, #24
 915              	.LCFI92:
 916              		.cfi_def_cfa 7, 64
 917 0006 7860     		str	r0, [r7, #4]
  59:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	void *parent = context->Parent;
 918              		.loc 4 59 0
 919 0008 7B68     		ldr	r3, [r7, #4]
 920 000a 1B68     		ldr	r3, [r3]
 921 000c 7B63     		str	r3, [r7, #52]
  60:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	ft_uint8_t alpha = context->Alpha(parent);
 922              		.loc 4 60 0
 923 000e 7B68     		ldr	r3, [r7, #4]
 924 0010 DB6A     		ldr	r3, [r3, #44]
 925 0012 786B     		ldr	r0, [r7, #52]
 926 0014 9847     		blx	r3
 927              	.LVL0:
 928 0016 0346     		mov	r3, r0
 929 0018 87F83330 		strb	r3, [r7, #51]
  61:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	Ft_Esd_Dl_COLOR_A(alpha);
 930              		.loc 4 61 0
 931 001c 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 932 0020 1846     		mov	r0, r3
 933 0022 FFF7FEFF 		bl	Ft_Esd_Dl_COLOR_A
  62:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	Ft_Gpu_Hal_Context_t * phost = Ft_Esd_GetHost();
 934              		.loc 4 62 0
 935 0026 FFF7FEFF 		bl	Ft_Esd_GetHost
 936 002a F862     		str	r0, [r7, #44]
  63:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	Ft_Esd_Theme * theme = context->Theme(parent);
 937              		.loc 4 63 0
 938 002c 7B68     		ldr	r3, [r7, #4]
 939 002e 5B68     		ldr	r3, [r3, #4]
 940 0030 786B     		ldr	r0, [r7, #52]
 941 0032 9847     		blx	r3
 942              	.LVL1:
 943 0034 B862     		str	r0, [r7, #40]
  64:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	ft_rgb32_t c = Ft_Esd_Theme_GetBackColor(theme);
 944              		.loc 4 64 0
 945 0036 B86A     		ldr	r0, [r7, #40]
 946 0038 FFF7FEFF 		bl	Ft_Esd_Theme_GetBackColor
 947 003c 7862     		str	r0, [r7, #36]
  65:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	Ft_Gpu_CoCmd_BgColor(phost, c);
 948              		.loc 4 65 0
 949 003e 796A     		ldr	r1, [r7, #36]
 950 0040 F86A     		ldr	r0, [r7, #44]
 951 0042 FFF7FEFF 		bl	Ft_Gpu_CoCmd_BgColor
  66:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	Ft_Esd_Theme * theme_1 = context->Theme(parent);
 952              		.loc 4 66 0
 953 0046 7B68     		ldr	r3, [r7, #4]
 954 0048 5B68     		ldr	r3, [r3, #4]
 955 004a 786B     		ldr	r0, [r7, #52]
 956 004c 9847     		blx	r3
 957              	.LVL2:
 958 004e 3862     		str	r0, [r7, #32]
  67:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	ft_rgb32_t c_1 = Ft_Esd_Theme_GetTextColor(theme_1);
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s 			page 23


 959              		.loc 4 67 0
 960 0050 386A     		ldr	r0, [r7, #32]
 961 0052 FFF7FEFF 		bl	Ft_Esd_Theme_GetTextColor
 962 0056 F861     		str	r0, [r7, #28]
  68:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	Ft_Esd_Dl_COLOR_RGB(c_1);
 963              		.loc 4 68 0
 964 0058 F869     		ldr	r0, [r7, #28]
 965 005a FFF7FEFF 		bl	Ft_Esd_Dl_COLOR_RGB
  69:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	Ft_Gpu_Hal_Context_t * phost_1 = Ft_Esd_GetHost();
 966              		.loc 4 69 0
 967 005e FFF7FEFF 		bl	Ft_Esd_GetHost
 968 0062 B861     		str	r0, [r7, #24]
  70:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	ft_int16_t x = Ft_Esd_PosSizeToRadius_CenterX(&context->Ft_Esd_PosSizeToRadius);
 969              		.loc 4 70 0
 970 0064 7B68     		ldr	r3, [r7, #4]
 971 0066 1833     		adds	r3, r3, #24
 972 0068 1846     		mov	r0, r3
 973 006a FFF7FEFF 		bl	Ft_Esd_PosSizeToRadius_CenterX
 974 006e 0346     		mov	r3, r0
 975 0070 FB82     		strh	r3, [r7, #22]	@ movhi
  71:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	ft_int16_t y = Ft_Esd_PosSizeToRadius_CenterY(&context->Ft_Esd_PosSizeToRadius);
 976              		.loc 4 71 0
 977 0072 7B68     		ldr	r3, [r7, #4]
 978 0074 1833     		adds	r3, r3, #24
 979 0076 1846     		mov	r0, r3
 980 0078 FFF7FEFF 		bl	Ft_Esd_PosSizeToRadius_CenterY
 981 007c 0346     		mov	r3, r0
 982 007e BB82     		strh	r3, [r7, #20]	@ movhi
  72:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	ft_int16_t r = Ft_Esd_PosSizeToRadius_Radius(&context->Ft_Esd_PosSizeToRadius);
 983              		.loc 4 72 0
 984 0080 7B68     		ldr	r3, [r7, #4]
 985 0082 1833     		adds	r3, r3, #24
 986 0084 1846     		mov	r0, r3
 987 0086 FFF7FEFF 		bl	Ft_Esd_PosSizeToRadius_Radius
 988 008a 0346     		mov	r3, r0
 989 008c 7B82     		strh	r3, [r7, #18]	@ movhi
  73:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	ft_uint16_t options = 0;
 990              		.loc 4 73 0
 991 008e 0023     		movs	r3, #0
 992 0090 3B82     		strh	r3, [r7, #16]	@ movhi
  74:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	ft_uint16_t major = context->Major(parent);
 993              		.loc 4 74 0
 994 0092 7B68     		ldr	r3, [r7, #4]
 995 0094 9B6B     		ldr	r3, [r3, #56]
 996 0096 786B     		ldr	r0, [r7, #52]
 997 0098 9847     		blx	r3
 998              	.LVL3:
 999 009a 0346     		mov	r3, r0
 1000 009c FB81     		strh	r3, [r7, #14]	@ movhi
  75:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	ft_uint16_t minor = context->Minor(parent);
 1001              		.loc 4 75 0
 1002 009e 7B68     		ldr	r3, [r7, #4]
 1003 00a0 DB6B     		ldr	r3, [r3, #60]
 1004 00a2 786B     		ldr	r0, [r7, #52]
 1005 00a4 9847     		blx	r3
 1006              	.LVL4:
 1007 00a6 0346     		mov	r3, r0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s 			page 24


 1008 00a8 BB81     		strh	r3, [r7, #12]	@ movhi
  76:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	ft_uint16_t val = context->Val(parent);
 1009              		.loc 4 76 0
 1010 00aa 7B68     		ldr	r3, [r7, #4]
 1011 00ac 1B6B     		ldr	r3, [r3, #48]
 1012 00ae 786B     		ldr	r0, [r7, #52]
 1013 00b0 9847     		blx	r3
 1014              	.LVL5:
 1015 00b2 0346     		mov	r3, r0
 1016 00b4 7B81     		strh	r3, [r7, #10]	@ movhi
  77:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	ft_uint16_t range = context->Range(parent);
 1017              		.loc 4 77 0
 1018 00b6 7B68     		ldr	r3, [r7, #4]
 1019 00b8 5B6B     		ldr	r3, [r3, #52]
 1020 00ba 786B     		ldr	r0, [r7, #52]
 1021 00bc 9847     		blx	r3
 1022              	.LVL6:
 1023 00be 0346     		mov	r3, r0
 1024 00c0 3B81     		strh	r3, [r7, #8]	@ movhi
  78:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	Ft_Gpu_CoCmd_Gauge(phost_1, x, y, r, options, major, minor, val, range);
 1025              		.loc 4 78 0
 1026 00c2 B7F91200 		ldrsh	r0, [r7, #18]
 1027 00c6 B7F91420 		ldrsh	r2, [r7, #20]
 1028 00ca B7F91610 		ldrsh	r1, [r7, #22]
 1029 00ce 3B89     		ldrh	r3, [r7, #8]
 1030 00d0 0493     		str	r3, [sp, #16]
 1031 00d2 7B89     		ldrh	r3, [r7, #10]
 1032 00d4 0393     		str	r3, [sp, #12]
 1033 00d6 BB89     		ldrh	r3, [r7, #12]
 1034 00d8 0293     		str	r3, [sp, #8]
 1035 00da FB89     		ldrh	r3, [r7, #14]
 1036 00dc 0193     		str	r3, [sp, #4]
 1037 00de 3B8A     		ldrh	r3, [r7, #16]
 1038 00e0 0093     		str	r3, [sp]
 1039 00e2 0346     		mov	r3, r0
 1040 00e4 B869     		ldr	r0, [r7, #24]
 1041 00e6 FFF7FEFF 		bl	Ft_Gpu_CoCmd_Gauge
  79:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** }
 1042              		.loc 4 79 0
 1043 00ea 00BF     		nop
 1044 00ec 3837     		adds	r7, r7, #56
 1045              	.LCFI93:
 1046              		.cfi_def_cfa_offset 8
 1047 00ee BD46     		mov	sp, r7
 1048              	.LCFI94:
 1049              		.cfi_def_cfa_register 13
 1050              		@ sp needed
 1051 00f0 80BD     		pop	{r7, pc}
 1052              		.cfi_endproc
 1053              	.LFE34:
 1055              		.section	.text.Ft_Esd_Gauge_Ft_Esd_PosSizeToRadius_X__Property,"ax",%progbits
 1056              		.align	1
 1057              		.syntax unified
 1058              		.thumb
 1059              		.thumb_func
 1060              		.fpu fpv5-sp-d16
 1062              	Ft_Esd_Gauge_Ft_Esd_PosSizeToRadius_X__Property:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s 			page 25


 1063              	.LFB35:
  80:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 
  81:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** ft_int16_t Ft_Esd_Gauge_Ft_Esd_PosSizeToRadius_X__Property(void *c)
  82:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** {
 1064              		.loc 4 82 0
 1065              		.cfi_startproc
 1066              		@ args = 0, pretend = 0, frame = 16
 1067              		@ frame_needed = 1, uses_anonymous_args = 0
 1068 0000 80B5     		push	{r7, lr}
 1069              	.LCFI95:
 1070              		.cfi_def_cfa_offset 8
 1071              		.cfi_offset 7, -8
 1072              		.cfi_offset 14, -4
 1073 0002 84B0     		sub	sp, sp, #16
 1074              	.LCFI96:
 1075              		.cfi_def_cfa_offset 24
 1076 0004 00AF     		add	r7, sp, #0
 1077              	.LCFI97:
 1078              		.cfi_def_cfa_register 7
 1079 0006 7860     		str	r0, [r7, #4]
  83:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	Ft_Esd_Gauge *context = (Ft_Esd_Gauge *)c;
 1080              		.loc 4 83 0
 1081 0008 7B68     		ldr	r3, [r7, #4]
 1082 000a FB60     		str	r3, [r7, #12]
  84:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	void *parent = context->Parent;
 1083              		.loc 4 84 0
 1084 000c FB68     		ldr	r3, [r7, #12]
 1085 000e 1B68     		ldr	r3, [r3]
 1086 0010 BB60     		str	r3, [r7, #8]
  85:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	return context->X(parent);
 1087              		.loc 4 85 0
 1088 0012 FB68     		ldr	r3, [r7, #12]
 1089 0014 9B68     		ldr	r3, [r3, #8]
 1090 0016 B868     		ldr	r0, [r7, #8]
 1091 0018 9847     		blx	r3
 1092              	.LVL7:
 1093 001a 0346     		mov	r3, r0
  86:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** }
 1094              		.loc 4 86 0
 1095 001c 1846     		mov	r0, r3
 1096 001e 1037     		adds	r7, r7, #16
 1097              	.LCFI98:
 1098              		.cfi_def_cfa_offset 8
 1099 0020 BD46     		mov	sp, r7
 1100              	.LCFI99:
 1101              		.cfi_def_cfa_register 13
 1102              		@ sp needed
 1103 0022 80BD     		pop	{r7, pc}
 1104              		.cfi_endproc
 1105              	.LFE35:
 1107              		.section	.text.Ft_Esd_Gauge_Ft_Esd_PosSizeToRadius_Y__Property,"ax",%progbits
 1108              		.align	1
 1109              		.syntax unified
 1110              		.thumb
 1111              		.thumb_func
 1112              		.fpu fpv5-sp-d16
 1114              	Ft_Esd_Gauge_Ft_Esd_PosSizeToRadius_Y__Property:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s 			page 26


 1115              	.LFB36:
  87:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 
  88:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** ft_int16_t Ft_Esd_Gauge_Ft_Esd_PosSizeToRadius_Y__Property(void *c)
  89:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** {
 1116              		.loc 4 89 0
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 16
 1119              		@ frame_needed = 1, uses_anonymous_args = 0
 1120 0000 80B5     		push	{r7, lr}
 1121              	.LCFI100:
 1122              		.cfi_def_cfa_offset 8
 1123              		.cfi_offset 7, -8
 1124              		.cfi_offset 14, -4
 1125 0002 84B0     		sub	sp, sp, #16
 1126              	.LCFI101:
 1127              		.cfi_def_cfa_offset 24
 1128 0004 00AF     		add	r7, sp, #0
 1129              	.LCFI102:
 1130              		.cfi_def_cfa_register 7
 1131 0006 7860     		str	r0, [r7, #4]
  90:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	Ft_Esd_Gauge *context = (Ft_Esd_Gauge *)c;
 1132              		.loc 4 90 0
 1133 0008 7B68     		ldr	r3, [r7, #4]
 1134 000a FB60     		str	r3, [r7, #12]
  91:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	void *parent = context->Parent;
 1135              		.loc 4 91 0
 1136 000c FB68     		ldr	r3, [r7, #12]
 1137 000e 1B68     		ldr	r3, [r3]
 1138 0010 BB60     		str	r3, [r7, #8]
  92:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	return context->Y(parent);
 1139              		.loc 4 92 0
 1140 0012 FB68     		ldr	r3, [r7, #12]
 1141 0014 DB68     		ldr	r3, [r3, #12]
 1142 0016 B868     		ldr	r0, [r7, #8]
 1143 0018 9847     		blx	r3
 1144              	.LVL8:
 1145 001a 0346     		mov	r3, r0
  93:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** }
 1146              		.loc 4 93 0
 1147 001c 1846     		mov	r0, r3
 1148 001e 1037     		adds	r7, r7, #16
 1149              	.LCFI103:
 1150              		.cfi_def_cfa_offset 8
 1151 0020 BD46     		mov	sp, r7
 1152              	.LCFI104:
 1153              		.cfi_def_cfa_register 13
 1154              		@ sp needed
 1155 0022 80BD     		pop	{r7, pc}
 1156              		.cfi_endproc
 1157              	.LFE36:
 1159              		.section	.text.Ft_Esd_Gauge_Ft_Esd_PosSizeToRadius_Width__Property,"ax",%progbits
 1160              		.align	1
 1161              		.syntax unified
 1162              		.thumb
 1163              		.thumb_func
 1164              		.fpu fpv5-sp-d16
 1166              	Ft_Esd_Gauge_Ft_Esd_PosSizeToRadius_Width__Property:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s 			page 27


 1167              	.LFB37:
  94:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 
  95:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** ft_int16_t Ft_Esd_Gauge_Ft_Esd_PosSizeToRadius_Width__Property(void *c)
  96:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** {
 1168              		.loc 4 96 0
 1169              		.cfi_startproc
 1170              		@ args = 0, pretend = 0, frame = 16
 1171              		@ frame_needed = 1, uses_anonymous_args = 0
 1172 0000 80B5     		push	{r7, lr}
 1173              	.LCFI105:
 1174              		.cfi_def_cfa_offset 8
 1175              		.cfi_offset 7, -8
 1176              		.cfi_offset 14, -4
 1177 0002 84B0     		sub	sp, sp, #16
 1178              	.LCFI106:
 1179              		.cfi_def_cfa_offset 24
 1180 0004 00AF     		add	r7, sp, #0
 1181              	.LCFI107:
 1182              		.cfi_def_cfa_register 7
 1183 0006 7860     		str	r0, [r7, #4]
  97:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	Ft_Esd_Gauge *context = (Ft_Esd_Gauge *)c;
 1184              		.loc 4 97 0
 1185 0008 7B68     		ldr	r3, [r7, #4]
 1186 000a FB60     		str	r3, [r7, #12]
  98:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	void *parent = context->Parent;
 1187              		.loc 4 98 0
 1188 000c FB68     		ldr	r3, [r7, #12]
 1189 000e 1B68     		ldr	r3, [r3]
 1190 0010 BB60     		str	r3, [r7, #8]
  99:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	return context->Width(parent);
 1191              		.loc 4 99 0
 1192 0012 FB68     		ldr	r3, [r7, #12]
 1193 0014 1B69     		ldr	r3, [r3, #16]
 1194 0016 B868     		ldr	r0, [r7, #8]
 1195 0018 9847     		blx	r3
 1196              	.LVL9:
 1197 001a 0346     		mov	r3, r0
 100:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** }
 1198              		.loc 4 100 0
 1199 001c 1846     		mov	r0, r3
 1200 001e 1037     		adds	r7, r7, #16
 1201              	.LCFI108:
 1202              		.cfi_def_cfa_offset 8
 1203 0020 BD46     		mov	sp, r7
 1204              	.LCFI109:
 1205              		.cfi_def_cfa_register 13
 1206              		@ sp needed
 1207 0022 80BD     		pop	{r7, pc}
 1208              		.cfi_endproc
 1209              	.LFE37:
 1211              		.section	.text.Ft_Esd_Gauge_Ft_Esd_PosSizeToRadius_Height__Property,"ax",%progbits
 1212              		.align	1
 1213              		.syntax unified
 1214              		.thumb
 1215              		.thumb_func
 1216              		.fpu fpv5-sp-d16
 1218              	Ft_Esd_Gauge_Ft_Esd_PosSizeToRadius_Height__Property:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s 			page 28


 1219              	.LFB38:
 101:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 
 102:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** ft_int16_t Ft_Esd_Gauge_Ft_Esd_PosSizeToRadius_Height__Property(void *c)
 103:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** {
 1220              		.loc 4 103 0
 1221              		.cfi_startproc
 1222              		@ args = 0, pretend = 0, frame = 16
 1223              		@ frame_needed = 1, uses_anonymous_args = 0
 1224 0000 80B5     		push	{r7, lr}
 1225              	.LCFI110:
 1226              		.cfi_def_cfa_offset 8
 1227              		.cfi_offset 7, -8
 1228              		.cfi_offset 14, -4
 1229 0002 84B0     		sub	sp, sp, #16
 1230              	.LCFI111:
 1231              		.cfi_def_cfa_offset 24
 1232 0004 00AF     		add	r7, sp, #0
 1233              	.LCFI112:
 1234              		.cfi_def_cfa_register 7
 1235 0006 7860     		str	r0, [r7, #4]
 104:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	Ft_Esd_Gauge *context = (Ft_Esd_Gauge *)c;
 1236              		.loc 4 104 0
 1237 0008 7B68     		ldr	r3, [r7, #4]
 1238 000a FB60     		str	r3, [r7, #12]
 105:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	void *parent = context->Parent;
 1239              		.loc 4 105 0
 1240 000c FB68     		ldr	r3, [r7, #12]
 1241 000e 1B68     		ldr	r3, [r3]
 1242 0010 BB60     		str	r3, [r7, #8]
 106:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** 	return context->Height(parent);
 1243              		.loc 4 106 0
 1244 0012 FB68     		ldr	r3, [r7, #12]
 1245 0014 5B69     		ldr	r3, [r3, #20]
 1246 0016 B868     		ldr	r0, [r7, #8]
 1247 0018 9847     		blx	r3
 1248              	.LVL10:
 1249 001a 0346     		mov	r3, r0
 107:FT_Esd_Widgets/Ft_Esd_Gauge__Generated.c **** }
 1250              		.loc 4 107 0
 1251 001c 1846     		mov	r0, r3
 1252 001e 1037     		adds	r7, r7, #16
 1253              	.LCFI113:
 1254              		.cfi_def_cfa_offset 8
 1255 0020 BD46     		mov	sp, r7
 1256              	.LCFI114:
 1257              		.cfi_def_cfa_register 13
 1258              		@ sp needed
 1259 0022 80BD     		pop	{r7, pc}
 1260              		.cfi_endproc
 1261              	.LFE38:
 1263              		.text
 1264              	.Letext0:
 1265              		.file 5 "FT_Eve_Hal/FT_DataTypes.h"
 1266              		.file 6 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/lock.h"
 1267              		.file 7 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_types.h"
 1268              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 1269              		.file 9 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/unistd.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s 			page 29


 1270              		.file 10 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/reent.h"
 1271              		.file 11 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/stdlib.h"
 1272              		.file 12 "FT_Eve_Hal/FT_Gpu_Hal.h"
 1273              		.file 13 "FT_Esd_Framework/Ft_Esd.h"
 1274              		.file 14 "FT_Esd_Widgets/Ft_Esd_DefaultTheme.h"
 1275              		.file 15 "FT_Esd_Widgets/Ft_Esd_PosSizeToRadius.h"
 1276              		.file 16 "FT_Esd_Widgets/Ft_Esd_Gauge.h"
 1277              		.file 17 "FT_Esd_Framework/FT_Esd_CoPro_Cmds.h"
 1278              		.file 18 "FT_Esd_Framework/Ft_Esd_GpuAlloc.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s 			page 30


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Ft_Esd_Gauge__Generated.c
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:18     .text.Ft_Esd_Theme_GetBackColor:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:24     .text.Ft_Esd_Theme_GetBackColor:0000000000000000 Ft_Esd_Theme_GetBackColor
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:71     .text.Ft_Esd_Theme_GetTextColor:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:77     .text.Ft_Esd_Theme_GetTextColor:0000000000000000 Ft_Esd_Theme_GetTextColor
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:123    .text.Ft_Esd_BitmapCell_GetInfo:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:129    .text.Ft_Esd_BitmapCell_GetInfo:0000000000000000 Ft_Esd_BitmapCell_GetInfo
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:178    .text.Ft_Esd_Dl_COLOR_RGB:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:184    .text.Ft_Esd_Dl_COLOR_RGB:0000000000000000 Ft_Esd_Dl_COLOR_RGB
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:249    .text.Ft_Esd_Dl_COLOR_RGB:0000000000000050 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:256    .text.Ft_Esd_Dl_COLOR_A:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:262    .text.Ft_Esd_Dl_COLOR_A:0000000000000000 Ft_Esd_Dl_COLOR_A
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:323    .text.Ft_Esd_Dl_COLOR_A:0000000000000048 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:330    .text.Ft_Esd_Gauge_Theme__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:337    .text.Ft_Esd_Gauge_Theme__Default:0000000000000000 Ft_Esd_Gauge_Theme__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:372    .text.Ft_Esd_Gauge_X__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:379    .text.Ft_Esd_Gauge_X__Default:0000000000000000 Ft_Esd_Gauge_X__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:416    .text.Ft_Esd_Gauge_Y__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:423    .text.Ft_Esd_Gauge_Y__Default:0000000000000000 Ft_Esd_Gauge_Y__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:460    .text.Ft_Esd_Gauge_Width__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:467    .text.Ft_Esd_Gauge_Width__Default:0000000000000000 Ft_Esd_Gauge_Width__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:504    .text.Ft_Esd_Gauge_Height__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:511    .text.Ft_Esd_Gauge_Height__Default:0000000000000000 Ft_Esd_Gauge_Height__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:548    .text.Ft_Esd_Gauge_Alpha__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:555    .text.Ft_Esd_Gauge_Alpha__Default:0000000000000000 Ft_Esd_Gauge_Alpha__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:592    .text.Ft_Esd_Gauge_Val__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:599    .text.Ft_Esd_Gauge_Val__Default:0000000000000000 Ft_Esd_Gauge_Val__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:636    .text.Ft_Esd_Gauge_Range__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:643    .text.Ft_Esd_Gauge_Range__Default:0000000000000000 Ft_Esd_Gauge_Range__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:680    .text.Ft_Esd_Gauge_Major__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:687    .text.Ft_Esd_Gauge_Major__Default:0000000000000000 Ft_Esd_Gauge_Major__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:724    .text.Ft_Esd_Gauge_Minor__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:731    .text.Ft_Esd_Gauge_Minor__Default:0000000000000000 Ft_Esd_Gauge_Minor__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:768    .text.Ft_Esd_Gauge__Initializer:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:775    .text.Ft_Esd_Gauge__Initializer:0000000000000000 Ft_Esd_Gauge__Initializer
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:875    .text.Ft_Esd_Gauge__Initializer:000000000000007c $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:1062   .text.Ft_Esd_Gauge_Ft_Esd_PosSizeToRadius_X__Property:0000000000000000 Ft_Esd_Gauge_Ft_Esd_PosSizeToRadius_X__Property
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:1114   .text.Ft_Esd_Gauge_Ft_Esd_PosSizeToRadius_Y__Property:0000000000000000 Ft_Esd_Gauge_Ft_Esd_PosSizeToRadius_Y__Property
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:1166   .text.Ft_Esd_Gauge_Ft_Esd_PosSizeToRadius_Width__Property:0000000000000000 Ft_Esd_Gauge_Ft_Esd_PosSizeToRadius_Width__Property
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:1218   .text.Ft_Esd_Gauge_Ft_Esd_PosSizeToRadius_Height__Property:0000000000000000 Ft_Esd_Gauge_Ft_Esd_PosSizeToRadius_Height__Property
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:893    .text.Ft_Esd_Gauge_Render:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:900    .text.Ft_Esd_Gauge_Render:0000000000000000 Ft_Esd_Gauge_Render
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:1056   .text.Ft_Esd_Gauge_Ft_Esd_PosSizeToRadius_X__Property:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:1108   .text.Ft_Esd_Gauge_Ft_Esd_PosSizeToRadius_Y__Property:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:1160   .text.Ft_Esd_Gauge_Ft_Esd_PosSizeToRadius_Width__Property:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s:1212   .text.Ft_Esd_Gauge_Ft_Esd_PosSizeToRadius_Height__Property:0000000000000000 $t

UNDEFINED SYMBOLS
Ft_Esd_Theme_GetCurrent
Ft_Gpu_Hal_WrCmd32
Ft_Esd_GpuState_I
Ft_Esd_GpuState
Ft_Esd_Host
Ft_Esd_PosSizeToRadius__Initializer
Ft_Esd_GetHost
Ft_Gpu_CoCmd_BgColor
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc330n8j.s 			page 31


Ft_Esd_PosSizeToRadius_CenterX
Ft_Esd_PosSizeToRadius_CenterY
Ft_Esd_PosSizeToRadius_Radius
Ft_Gpu_CoCmd_Gauge
