ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"Ft_Esd_ImageButton__Generated.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Ft_Esd_BitmapCell_GetInfo,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	Ft_Esd_BitmapCell_GetInfo:
  25              	.LFB3:
  26              		.file 1 "FT_Esd_Framework/Ft_Esd_BitmapInfo.h"
   1:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** /*
   2:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** Bitmap info structure
   3:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** */
   4:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
   5:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #ifndef FT_ESD_BITMAPINFO_H
   6:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #define FT_ESD_BITMAPINFO_H
   7:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
   8:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "Ft_Esd.h"
   9:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "FT_DataTypes.h"
  10:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "Ft_Esd_GpuAlloc.h"
  11:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  12:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapInfo, Native = Struct) // TODO: Struct support, expose values
  13:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  14:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  15:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Width;
  16:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Height;
  17:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Stride;
  18:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Format;
  19:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Size;
  20:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	const char *File;
  21:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  22:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Handle pointing to the address in RAM_G if it is allocated
  23:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_GpuHandle GpuHandle;
  24:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  25:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Bitmap handle that is being used
  26:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_uint32_t BitmapHandle;
  27:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  28:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	const char *PaletteFile;
  29:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_GpuHandle PaletteGpuHandle;
  30:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  31:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// When this is set, the allocated ram is not free'd automatically
  32:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Use Ft_Esd_GpuAlloc_Free(GpuAlloc, GpuHandle) to free the GPU ram manually
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s 			page 2


  33:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_bool_t Persistent;
  34:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  35:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_BitmapInfo;
  36:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  37:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapInfo *, Native = Pointer, Edit = Library)
  38:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  39:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapCell, Native = Struct) // TODO: Struct support, expose values
  40:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  41:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  42:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapInfo *Info;
  43:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Cell;
  44:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_BitmapCell;
  45:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  46:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapCell *, Native = Pointer, Edit = Library)
  47:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  48:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // Attempts to load the specified bitmap if it has not been loaded into RAM_G yet.
  49:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // Call during the Update cycle of each frame to keep the bitmap flagged as in use, otherwise the m
  50:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_LoadBitmap, Type = ft_uint32_t, Include = "Ft_Esd_BitmapInfo.h", DisplayName = 
  51:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapInfo, Type = Ft_Esd_BitmapInfo *)
  52:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ft_uint32_t Ft_Esd_LoadBitmap(Ft_Esd_BitmapInfo *bitmapInfo);
  53:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  54:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_LoadPalette, Type = ft_uint32_t, Include = "Ft_Esd_BitmapInfo.h", DisplayName =
  55:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapInfo, Type = Ft_Esd_BitmapInfo *)
  56:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ft_uint32_t Ft_Esd_LoadPalette(Ft_Esd_BitmapInfo *bitmapInfo);
  57:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  58:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_ENUM(_BitmapResourceFormat, DisplayName = "Bitmap Format")
  59:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB1555)
  60:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L1)
  61:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L2)
  62:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L4)
  63:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L8)
  64:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(RGB332)
  65:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB2)
  66:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB4)
  67:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(RGB565)
  68:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(PALETTED565)
  69:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(PALETTED4444)
  70:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(PALETTED8)
  71:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(JPEG)
  72:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(PNG)
  73:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_END()
  74:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  75:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_LOGIC(Ft_Esd_SwitchBitmapCell, Callback, Include = "Ft_Esd_BitmapInfo.h", DisplayName = "Switch
  76:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  77:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  78:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Callback
  79:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	void *Parent;
  80:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  81:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  82:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Input
  83:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  84:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  85:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ESD_INPUT(BitmapInfo, Type = Ft_Esd_BitmapInfo *, DisplayName = "Bitmap Info")
  86:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapInfo *(* BitmapInfo)(void *context);
  87:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  88:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ESD_INPUT(Cell, Type = ft_uint8_t, DisplayName = "Cell")
  89:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_uint8_t(* Cell)(void *context);
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s 			page 3


  90:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  91:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  92:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Variables
  93:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  94:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  95:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// BitmapCell object
  96:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapCell BitmapCell;
  97:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  98:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_SwitchBitmapCell;
  99:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 100:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** void Ft_Esd_SwitchBitmapCell__Initializer(Ft_Esd_SwitchBitmapCell *context);
 101:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 102:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_OUTPUT(BitmapCell, Type = Ft_Esd_BitmapCell *, DisplayName = "Bitmap Cell")
 103:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** Ft_Esd_BitmapCell *Ft_Esd_SwitchBitmapCell_BitmapCell(Ft_Esd_SwitchBitmapCell *context);
 104:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 105:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_UPDATE(Ft_Esd_BitmapPersist, DisplayName = "Bitmap Persist", Category = EsdUtilities)
 106:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapCell, Type = Ft_Esd_BitmapCell *)
 107:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** void Ft_Esd_BitmapPersist(Ft_Esd_BitmapCell *bitmapCell);
 108:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 109:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_BitmapCell_GetInfo, Type = Ft_Esd_BitmapInfo *, DisplayName = "ESD BitmapCell G
 110:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapCell, Type = Ft_Esd_BitmapCell *)
 111:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** static Ft_Esd_BitmapInfo *Ft_Esd_BitmapCell_GetInfo(Ft_Esd_BitmapCell *bitmapCell)
 112:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  27              		.loc 1 112 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 113:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	if (!bitmapCell) return 0;
  43              		.loc 1 113 0
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 002B     		cmp	r3, #0
  46 000c 01D1     		bne	.L2
  47              		.loc 1 113 0 is_stmt 0 discriminator 1
  48 000e 0023     		movs	r3, #0
  49 0010 01E0     		b	.L3
  50              	.L2:
 114:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	return bitmapCell->Info;
  51              		.loc 1 114 0 is_stmt 1
  52 0012 7B68     		ldr	r3, [r7, #4]
  53 0014 1B68     		ldr	r3, [r3]
  54              	.L3:
 115:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** }
  55              		.loc 1 115 0
  56 0016 1846     		mov	r0, r3
  57 0018 0C37     		adds	r7, r7, #12
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s 			page 4


  58              	.LCFI3:
  59              		.cfi_def_cfa_offset 4
  60 001a BD46     		mov	sp, r7
  61              	.LCFI4:
  62              		.cfi_def_cfa_register 13
  63              		@ sp needed
  64 001c 5DF8047B 		ldr	r7, [sp], #4
  65              	.LCFI5:
  66              		.cfi_restore 7
  67              		.cfi_def_cfa_offset 0
  68 0020 7047     		bx	lr
  69              		.cfi_endproc
  70              	.LFE3:
  72              		.section	.text.Ft_Esd_Dl_TAG,"ax",%progbits
  73              		.align	1
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  77              		.fpu fpv5-sp-d16
  79              	Ft_Esd_Dl_TAG:
  80              	.LFB12:
  81              		.file 2 "FT_Esd_Framework/FT_Esd_Dl.h"
   1:FT_Esd_Framework/FT_Esd_Dl.h **** 
   2:FT_Esd_Framework/FT_Esd_Dl.h **** #ifndef FT_ESD_DL_H
   3:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_DL_H
   4:FT_Esd_Framework/FT_Esd_Dl.h **** 
   5:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_DataTypes.h"
   6:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_Platform.h"
   7:FT_Esd_Framework/FT_Esd_Dl.h **** #include "Ft_Esd.h"
   8:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_Gpu.h"
   9:FT_Esd_Framework/FT_Esd_Dl.h **** #include "Ft_Esd_BitmapInfo.h"
  10:FT_Esd_Framework/FT_Esd_Dl.h **** 
  11:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_CATEGORY(EsdUtilities, DisplayName = "ESD Utilities")
  12:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_CATEGORY(EveRenderFunctions, DisplayName = "EVE Render Functions")
  13:FT_Esd_Framework/FT_Esd_Dl.h **** 
  14:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_TYPE(Ft_Gpu_Hal_Context_t *, Native = Pointer, Edit = Library)
  15:FT_Esd_Framework/FT_Esd_Dl.h **** 
  16:FT_Esd_Framework/FT_Esd_Dl.h **** // Keep cache of displaylist values that don't often change but are generally set by every widget t
  17:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_OPTIMIZE_DISPLAYLIST 1
  18:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_STATE_STACK_SIZE 5
  19:FT_Esd_Framework/FT_Esd_Dl.h **** 
  20:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_BITMAPHANDLE_INVALID 255
  21:FT_Esd_Framework/FT_Esd_Dl.h **** 
  22:FT_Esd_Framework/FT_Esd_Dl.h **** //
  23:FT_Esd_Framework/FT_Esd_Dl.h **** // Structs
  24:FT_Esd_Framework/FT_Esd_Dl.h **** //
  25:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_ESD_OPTIMIZE_DISPLAYLIST
  26:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_STATE Ft_Esd_GpuState[Ft_Esd_GpuState_I]
  27:FT_Esd_Framework/FT_Esd_Dl.h **** typedef struct
  28:FT_Esd_Framework/FT_Esd_Dl.h **** {
  29:FT_Esd_Framework/FT_Esd_Dl.h **** 	// Keep to a minimum
  30:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_81X_ENABLE
  31:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint32_t PaletteSource;
  32:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  33:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint32_t ColorRGB;
  34:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t ColorA;
  35:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t Handle;         // Current handle
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s 			page 5


  36:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t Cell;           // Current cell
  37:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_bool_t BitmapTransform; // BitmapTransform other than default is set
  38:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_81X_ENABLE
  39:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t VertexFormat;   // Current vertex format
  40:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  41:FT_Esd_Framework/FT_Esd_Dl.h **** } Ft_Esd_GpuState_T;
  42:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  43:FT_Esd_Framework/FT_Esd_Dl.h **** 
  44:FT_Esd_Framework/FT_Esd_Dl.h **** //
  45:FT_Esd_Framework/FT_Esd_Dl.h **** // Globals
  46:FT_Esd_Framework/FT_Esd_Dl.h **** //
  47:FT_Esd_Framework/FT_Esd_Dl.h **** extern Ft_Gpu_Hal_Context_t *Ft_Esd_Host;
  48:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint16_t Ft_Esd_FontHeight[32];
  49:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_ESD_OPTIMIZE_DISPLAYLIST
  50:FT_Esd_Framework/FT_Esd_Dl.h **** extern Ft_Esd_GpuState_T Ft_Esd_GpuState[FT_ESD_STATE_STACK_SIZE];
  51:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint8_t Ft_Esd_GpuState_I;
  52:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint32_t Ft_Esd_CoFgColor;
  53:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint32_t Ft_Esd_CoBgColor;
  54:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  55:FT_Esd_Framework/FT_Esd_Dl.h **** 
  56:FT_Esd_Framework/FT_Esd_Dl.h **** //Get the height of builtin font
  57:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_GetFontHeight, Type = ft_uint16_t ,DisplayName = "Get Font Height", Category = 
  58:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(i, Type = int, DisplayName = "Bitmap Handle", Default = 0, Min = 0, Max = 31)
  59:FT_Esd_Framework/FT_Esd_Dl.h **** // inline static ft_uint16_t Ft_Esd_GetFontHeight(int i) { return Ft_Esd_FontHeight[i]; }
  60:FT_Esd_Framework/FT_Esd_Dl.h **** #define Ft_Esd_GetFontHeight(i) (Ft_Esd_FontHeight[i]);
  61:FT_Esd_Framework/FT_Esd_Dl.h **** 
  62:FT_Esd_Framework/FT_Esd_Dl.h **** // Reset any cached state
  63:FT_Esd_Framework/FT_Esd_Dl.h **** void Ft_Esd_ResetGpuState();
  64:FT_Esd_Framework/FT_Esd_Dl.h **** void Ft_Esd_ResetCoState();
  65:FT_Esd_Framework/FT_Esd_Dl.h **** 
  66:FT_Esd_Framework/FT_Esd_Dl.h **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotalUsed();
  67:FT_Esd_Framework/FT_Esd_Dl.h **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotal();
  68:FT_Esd_Framework/FT_Esd_Dl.h **** 
  69:FT_Esd_Framework/FT_Esd_Dl.h **** /// Set current tag. Must be returned to 255 after usage, to ensure next widgets don't draw with in
  70:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_TAG, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  71:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(s, Type = ft_uint8_t, DisplayName = "Tag", Default = 255, Min = 0, Max = 255)
  72:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_TAG(ft_uint8_t s)
  73:FT_Esd_Framework/FT_Esd_Dl.h **** {
  82              		.loc 2 73 0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 8
  85              		@ frame_needed = 1, uses_anonymous_args = 0
  86 0000 80B5     		push	{r7, lr}
  87              	.LCFI6:
  88              		.cfi_def_cfa_offset 8
  89              		.cfi_offset 7, -8
  90              		.cfi_offset 14, -4
  91 0002 82B0     		sub	sp, sp, #8
  92              	.LCFI7:
  93              		.cfi_def_cfa_offset 16
  94 0004 00AF     		add	r7, sp, #0
  95              	.LCFI8:
  96              		.cfi_def_cfa_register 7
  97 0006 0346     		mov	r3, r0
  98 0008 FB71     		strb	r3, [r7, #7]
  74:FT_Esd_Framework/FT_Esd_Dl.h **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, TAG(s));
  99              		.loc 2 74 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s 			page 6


 100 000a 064B     		ldr	r3, .L5
 101 000c 1A68     		ldr	r2, [r3]
 102 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 103 0010 43F04073 		orr	r3, r3, #50331648
 104 0014 1946     		mov	r1, r3
 105 0016 1046     		mov	r0, r2
 106 0018 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  75:FT_Esd_Framework/FT_Esd_Dl.h **** }
 107              		.loc 2 75 0
 108 001c 00BF     		nop
 109 001e 0837     		adds	r7, r7, #8
 110              	.LCFI9:
 111              		.cfi_def_cfa_offset 8
 112 0020 BD46     		mov	sp, r7
 113              	.LCFI10:
 114              		.cfi_def_cfa_register 13
 115              		@ sp needed
 116 0022 80BD     		pop	{r7, pc}
 117              	.L6:
 118              		.align	2
 119              	.L5:
 120 0024 00000000 		.word	Ft_Esd_Host
 121              		.cfi_endproc
 122              	.LFE12:
 124              		.section	.text.Ft_Esd_ImageButton_Theme__Default,"ax",%progbits
 125              		.align	1
 126              		.global	Ft_Esd_ImageButton_Theme__Default
 127              		.syntax unified
 128              		.thumb
 129              		.thumb_func
 130              		.fpu fpv5-sp-d16
 132              	Ft_Esd_ImageButton_Theme__Default:
 133              	.LFB26:
 134              		.file 3 "FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c"
   1:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** /*
   2:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** This file is automatically generated
   3:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** Ft_Esd_ImageButton
   4:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** C Source
   5:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** */
   6:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 
   7:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** #include "Ft_Esd_ImageButton.h"
   8:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 
   9:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** #include "FT_Esd_CoPro_Cmds.h"
  10:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** #include "FT_Esd_Dl.h"
  11:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** #include "FT_Esd_Primitives.h"
  12:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** #include "FT_Gpu.h"
  13:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 
  14:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** extern void Ft_Esd_Noop(void *context);
  15:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** Ft_Esd_Theme * Ft_Esd_ImageButton_Theme__Default(void *context) { return Ft_Esd_Theme_GetCurrent();
 135              		.loc 3 15 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 8
 138              		@ frame_needed = 1, uses_anonymous_args = 0
 139 0000 80B5     		push	{r7, lr}
 140              	.LCFI11:
 141              		.cfi_def_cfa_offset 8
 142              		.cfi_offset 7, -8
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s 			page 7


 143              		.cfi_offset 14, -4
 144 0002 82B0     		sub	sp, sp, #8
 145              	.LCFI12:
 146              		.cfi_def_cfa_offset 16
 147 0004 00AF     		add	r7, sp, #0
 148              	.LCFI13:
 149              		.cfi_def_cfa_register 7
 150 0006 7860     		str	r0, [r7, #4]
 151              		.loc 3 15 0
 152 0008 FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
 153 000c 0346     		mov	r3, r0
 154 000e 1846     		mov	r0, r3
 155 0010 0837     		adds	r7, r7, #8
 156              	.LCFI14:
 157              		.cfi_def_cfa_offset 8
 158 0012 BD46     		mov	sp, r7
 159              	.LCFI15:
 160              		.cfi_def_cfa_register 13
 161              		@ sp needed
 162 0014 80BD     		pop	{r7, pc}
 163              		.cfi_endproc
 164              	.LFE26:
 166              		.section	.text.Ft_Esd_ImageButton_X__Default,"ax",%progbits
 167              		.align	1
 168              		.global	Ft_Esd_ImageButton_X__Default
 169              		.syntax unified
 170              		.thumb
 171              		.thumb_func
 172              		.fpu fpv5-sp-d16
 174              	Ft_Esd_ImageButton_X__Default:
 175              	.LFB27:
  16:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** ft_int16_t Ft_Esd_ImageButton_X__Default(void *context) { return 0; }
 176              		.loc 3 16 0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 8
 179              		@ frame_needed = 1, uses_anonymous_args = 0
 180              		@ link register save eliminated.
 181 0000 80B4     		push	{r7}
 182              	.LCFI16:
 183              		.cfi_def_cfa_offset 4
 184              		.cfi_offset 7, -4
 185 0002 83B0     		sub	sp, sp, #12
 186              	.LCFI17:
 187              		.cfi_def_cfa_offset 16
 188 0004 00AF     		add	r7, sp, #0
 189              	.LCFI18:
 190              		.cfi_def_cfa_register 7
 191 0006 7860     		str	r0, [r7, #4]
 192              		.loc 3 16 0
 193 0008 0023     		movs	r3, #0
 194 000a 1846     		mov	r0, r3
 195 000c 0C37     		adds	r7, r7, #12
 196              	.LCFI19:
 197              		.cfi_def_cfa_offset 4
 198 000e BD46     		mov	sp, r7
 199              	.LCFI20:
 200              		.cfi_def_cfa_register 13
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s 			page 8


 201              		@ sp needed
 202 0010 5DF8047B 		ldr	r7, [sp], #4
 203              	.LCFI21:
 204              		.cfi_restore 7
 205              		.cfi_def_cfa_offset 0
 206 0014 7047     		bx	lr
 207              		.cfi_endproc
 208              	.LFE27:
 210              		.section	.text.Ft_Esd_ImageButton_Y__Default,"ax",%progbits
 211              		.align	1
 212              		.global	Ft_Esd_ImageButton_Y__Default
 213              		.syntax unified
 214              		.thumb
 215              		.thumb_func
 216              		.fpu fpv5-sp-d16
 218              	Ft_Esd_ImageButton_Y__Default:
 219              	.LFB28:
  17:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** ft_int16_t Ft_Esd_ImageButton_Y__Default(void *context) { return 0; }
 220              		.loc 3 17 0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 8
 223              		@ frame_needed = 1, uses_anonymous_args = 0
 224              		@ link register save eliminated.
 225 0000 80B4     		push	{r7}
 226              	.LCFI22:
 227              		.cfi_def_cfa_offset 4
 228              		.cfi_offset 7, -4
 229 0002 83B0     		sub	sp, sp, #12
 230              	.LCFI23:
 231              		.cfi_def_cfa_offset 16
 232 0004 00AF     		add	r7, sp, #0
 233              	.LCFI24:
 234              		.cfi_def_cfa_register 7
 235 0006 7860     		str	r0, [r7, #4]
 236              		.loc 3 17 0
 237 0008 0023     		movs	r3, #0
 238 000a 1846     		mov	r0, r3
 239 000c 0C37     		adds	r7, r7, #12
 240              	.LCFI25:
 241              		.cfi_def_cfa_offset 4
 242 000e BD46     		mov	sp, r7
 243              	.LCFI26:
 244              		.cfi_def_cfa_register 13
 245              		@ sp needed
 246 0010 5DF8047B 		ldr	r7, [sp], #4
 247              	.LCFI27:
 248              		.cfi_restore 7
 249              		.cfi_def_cfa_offset 0
 250 0014 7047     		bx	lr
 251              		.cfi_endproc
 252              	.LFE28:
 254              		.section	.text.Ft_Esd_ImageButton_BitmapNormal__Default,"ax",%progbits
 255              		.align	1
 256              		.global	Ft_Esd_ImageButton_BitmapNormal__Default
 257              		.syntax unified
 258              		.thumb
 259              		.thumb_func
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s 			page 9


 260              		.fpu fpv5-sp-d16
 262              	Ft_Esd_ImageButton_BitmapNormal__Default:
 263              	.LFB29:
  18:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** Ft_Esd_BitmapCell * Ft_Esd_ImageButton_BitmapNormal__Default(void *context) { return 0; }
 264              		.loc 3 18 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 8
 267              		@ frame_needed = 1, uses_anonymous_args = 0
 268              		@ link register save eliminated.
 269 0000 80B4     		push	{r7}
 270              	.LCFI28:
 271              		.cfi_def_cfa_offset 4
 272              		.cfi_offset 7, -4
 273 0002 83B0     		sub	sp, sp, #12
 274              	.LCFI29:
 275              		.cfi_def_cfa_offset 16
 276 0004 00AF     		add	r7, sp, #0
 277              	.LCFI30:
 278              		.cfi_def_cfa_register 7
 279 0006 7860     		str	r0, [r7, #4]
 280              		.loc 3 18 0
 281 0008 0023     		movs	r3, #0
 282 000a 1846     		mov	r0, r3
 283 000c 0C37     		adds	r7, r7, #12
 284              	.LCFI31:
 285              		.cfi_def_cfa_offset 4
 286 000e BD46     		mov	sp, r7
 287              	.LCFI32:
 288              		.cfi_def_cfa_register 13
 289              		@ sp needed
 290 0010 5DF8047B 		ldr	r7, [sp], #4
 291              	.LCFI33:
 292              		.cfi_restore 7
 293              		.cfi_def_cfa_offset 0
 294 0014 7047     		bx	lr
 295              		.cfi_endproc
 296              	.LFE29:
 298              		.section	.text.Ft_Esd_ImageButton_BitmapPressed__Default,"ax",%progbits
 299              		.align	1
 300              		.global	Ft_Esd_ImageButton_BitmapPressed__Default
 301              		.syntax unified
 302              		.thumb
 303              		.thumb_func
 304              		.fpu fpv5-sp-d16
 306              	Ft_Esd_ImageButton_BitmapPressed__Default:
 307              	.LFB30:
  19:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** Ft_Esd_BitmapCell * Ft_Esd_ImageButton_BitmapPressed__Default(void *context) { return 0; }
 308              		.loc 3 19 0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 8
 311              		@ frame_needed = 1, uses_anonymous_args = 0
 312              		@ link register save eliminated.
 313 0000 80B4     		push	{r7}
 314              	.LCFI34:
 315              		.cfi_def_cfa_offset 4
 316              		.cfi_offset 7, -4
 317 0002 83B0     		sub	sp, sp, #12
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s 			page 10


 318              	.LCFI35:
 319              		.cfi_def_cfa_offset 16
 320 0004 00AF     		add	r7, sp, #0
 321              	.LCFI36:
 322              		.cfi_def_cfa_register 7
 323 0006 7860     		str	r0, [r7, #4]
 324              		.loc 3 19 0
 325 0008 0023     		movs	r3, #0
 326 000a 1846     		mov	r0, r3
 327 000c 0C37     		adds	r7, r7, #12
 328              	.LCFI37:
 329              		.cfi_def_cfa_offset 4
 330 000e BD46     		mov	sp, r7
 331              	.LCFI38:
 332              		.cfi_def_cfa_register 13
 333              		@ sp needed
 334 0010 5DF8047B 		ldr	r7, [sp], #4
 335              	.LCFI39:
 336              		.cfi_restore 7
 337              		.cfi_def_cfa_offset 0
 338 0014 7047     		bx	lr
 339              		.cfi_endproc
 340              	.LFE30:
 342              		.section	.text.Ft_Esd_ImageButton__Initializer,"ax",%progbits
 343              		.align	1
 344              		.global	Ft_Esd_ImageButton__Initializer
 345              		.syntax unified
 346              		.thumb
 347              		.thumb_func
 348              		.fpu fpv5-sp-d16
 350              	Ft_Esd_ImageButton__Initializer:
 351              	.LFB31:
  20:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 
  21:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** Ft_Gpu_Hal_Context_t * Ft_Esd_GetHost();
  22:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 
  23:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** static void Ft_Esd_ImageButton_Touch_Tag_Down__Signal(void *context);
  24:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** static void Ft_Esd_ImageButton_Touch_Tag_Up__Signal(void *context);
  25:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** static void Ft_Esd_ImageButton_Touch_Tag_Tap__Signal(void *context);
  26:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 
  27:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** void Ft_Esd_ImageButton__Initializer(Ft_Esd_ImageButton *context)
  28:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** {
 352              		.loc 3 28 0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 8
 355              		@ frame_needed = 1, uses_anonymous_args = 0
 356 0000 80B5     		push	{r7, lr}
 357              	.LCFI40:
 358              		.cfi_def_cfa_offset 8
 359              		.cfi_offset 7, -8
 360              		.cfi_offset 14, -4
 361 0002 82B0     		sub	sp, sp, #8
 362              	.LCFI41:
 363              		.cfi_def_cfa_offset 16
 364 0004 00AF     		add	r7, sp, #0
 365              	.LCFI42:
 366              		.cfi_def_cfa_register 7
 367 0006 7860     		str	r0, [r7, #4]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s 			page 11


  29:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	context->Parent = 0;
 368              		.loc 3 29 0
 369 0008 7B68     		ldr	r3, [r7, #4]
 370 000a 0022     		movs	r2, #0
 371 000c 1A60     		str	r2, [r3]
  30:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	context->Theme = Ft_Esd_ImageButton_Theme__Default;
 372              		.loc 3 30 0
 373 000e 7B68     		ldr	r3, [r7, #4]
 374 0010 154A     		ldr	r2, .L18
 375 0012 5A60     		str	r2, [r3, #4]
  31:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	context->X = Ft_Esd_ImageButton_X__Default;
 376              		.loc 3 31 0
 377 0014 7B68     		ldr	r3, [r7, #4]
 378 0016 154A     		ldr	r2, .L18+4
 379 0018 9A60     		str	r2, [r3, #8]
  32:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	context->Y = Ft_Esd_ImageButton_Y__Default;
 380              		.loc 3 32 0
 381 001a 7B68     		ldr	r3, [r7, #4]
 382 001c 144A     		ldr	r2, .L18+8
 383 001e DA60     		str	r2, [r3, #12]
  33:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	context->BitmapNormal = Ft_Esd_ImageButton_BitmapNormal__Default;
 384              		.loc 3 33 0
 385 0020 7B68     		ldr	r3, [r7, #4]
 386 0022 144A     		ldr	r2, .L18+12
 387 0024 1A61     		str	r2, [r3, #16]
  34:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	context->BitmapPressed = Ft_Esd_ImageButton_BitmapPressed__Default;
 388              		.loc 3 34 0
 389 0026 7B68     		ldr	r3, [r7, #4]
 390 0028 134A     		ldr	r2, .L18+16
 391 002a 5A61     		str	r2, [r3, #20]
  35:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	context->Down = Ft_Esd_Noop;
 392              		.loc 3 35 0
 393 002c 7B68     		ldr	r3, [r7, #4]
 394 002e 134A     		ldr	r2, .L18+20
 395 0030 9A61     		str	r2, [r3, #24]
  36:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	context->Up = Ft_Esd_Noop;
 396              		.loc 3 36 0
 397 0032 7B68     		ldr	r3, [r7, #4]
 398 0034 114A     		ldr	r2, .L18+20
 399 0036 DA61     		str	r2, [r3, #28]
  37:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	Ft_Esd_TouchTag__Initializer(&context->Touch_Tag);
 400              		.loc 3 37 0
 401 0038 7B68     		ldr	r3, [r7, #4]
 402 003a 2033     		adds	r3, r3, #32
 403 003c 1846     		mov	r0, r3
 404 003e FFF7FEFF 		bl	Ft_Esd_TouchTag__Initializer
  38:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	context->Touch_Tag.Parent = context;
 405              		.loc 3 38 0
 406 0042 7B68     		ldr	r3, [r7, #4]
 407 0044 7A68     		ldr	r2, [r7, #4]
 408 0046 1A62     		str	r2, [r3, #32]
  39:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	context->Touch_Tag.Down = Ft_Esd_ImageButton_Touch_Tag_Down__Signal;
 409              		.loc 3 39 0
 410 0048 7B68     		ldr	r3, [r7, #4]
 411 004a 0D4A     		ldr	r2, .L18+24
 412 004c 5A62     		str	r2, [r3, #36]
  40:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	context->Touch_Tag.Up = Ft_Esd_ImageButton_Touch_Tag_Up__Signal;
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s 			page 12


 413              		.loc 3 40 0
 414 004e 7B68     		ldr	r3, [r7, #4]
 415 0050 0C4A     		ldr	r2, .L18+28
 416 0052 9A62     		str	r2, [r3, #40]
  41:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	context->Touch_Tag.Tap = Ft_Esd_ImageButton_Touch_Tag_Tap__Signal;
 417              		.loc 3 41 0
 418 0054 7B68     		ldr	r3, [r7, #4]
 419 0056 0C4A     		ldr	r2, .L18+32
 420 0058 DA62     		str	r2, [r3, #44]
  42:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	context->Pushed = Ft_Esd_Noop;
 421              		.loc 3 42 0
 422 005a 7B68     		ldr	r3, [r7, #4]
 423 005c 074A     		ldr	r2, .L18+20
 424 005e 9A63     		str	r2, [r3, #56]
  43:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** }
 425              		.loc 3 43 0
 426 0060 00BF     		nop
 427 0062 0837     		adds	r7, r7, #8
 428              	.LCFI43:
 429              		.cfi_def_cfa_offset 8
 430 0064 BD46     		mov	sp, r7
 431              	.LCFI44:
 432              		.cfi_def_cfa_register 13
 433              		@ sp needed
 434 0066 80BD     		pop	{r7, pc}
 435              	.L19:
 436              		.align	2
 437              	.L18:
 438 0068 00000000 		.word	Ft_Esd_ImageButton_Theme__Default
 439 006c 00000000 		.word	Ft_Esd_ImageButton_X__Default
 440 0070 00000000 		.word	Ft_Esd_ImageButton_Y__Default
 441 0074 00000000 		.word	Ft_Esd_ImageButton_BitmapNormal__Default
 442 0078 00000000 		.word	Ft_Esd_ImageButton_BitmapPressed__Default
 443 007c 00000000 		.word	Ft_Esd_Noop
 444 0080 00000000 		.word	Ft_Esd_ImageButton_Touch_Tag_Down__Signal
 445 0084 00000000 		.word	Ft_Esd_ImageButton_Touch_Tag_Up__Signal
 446 0088 00000000 		.word	Ft_Esd_ImageButton_Touch_Tag_Tap__Signal
 447              		.cfi_endproc
 448              	.LFE31:
 450              		.section	.text.Ft_Esd_ImageButton_Render,"ax",%progbits
 451              		.align	1
 452              		.global	Ft_Esd_ImageButton_Render
 453              		.syntax unified
 454              		.thumb
 455              		.thumb_func
 456              		.fpu fpv5-sp-d16
 458              	Ft_Esd_ImageButton_Render:
 459              	.LFB32:
  44:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 
  45:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** ft_void_t Ft_Esd_Render_Bitmap(ft_int16_t, ft_int16_t, Ft_Esd_BitmapCell *, ft_argb32_t);
  46:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** ft_void_t Ft_Gpu_CoCmd_Number(Ft_Gpu_Hal_Context_t *, ft_int16_t, ft_int16_t, ft_int16_t, ft_uint16
  47:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 
  48:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** void Ft_Esd_ImageButton_Render(Ft_Esd_ImageButton *context)
  49:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** {
 460              		.loc 3 49 0
 461              		.cfi_startproc
 462              		@ args = 0, pretend = 0, frame = 40
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s 			page 13


 463              		@ frame_needed = 1, uses_anonymous_args = 0
 464 0000 80B5     		push	{r7, lr}
 465              	.LCFI45:
 466              		.cfi_def_cfa_offset 8
 467              		.cfi_offset 7, -8
 468              		.cfi_offset 14, -4
 469 0002 8AB0     		sub	sp, sp, #40
 470              	.LCFI46:
 471              		.cfi_def_cfa_offset 48
 472 0004 00AF     		add	r7, sp, #0
 473              	.LCFI47:
 474              		.cfi_def_cfa_register 7
 475 0006 7860     		str	r0, [r7, #4]
  50:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	void *parent = context->Parent;
 476              		.loc 3 50 0
 477 0008 7B68     		ldr	r3, [r7, #4]
 478 000a 1B68     		ldr	r3, [r3]
 479 000c 3B62     		str	r3, [r7, #32]
  51:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	ft_uint8_t s = Ft_Esd_TouchTag_Tag(&context->Touch_Tag);
 480              		.loc 3 51 0
 481 000e 7B68     		ldr	r3, [r7, #4]
 482 0010 2033     		adds	r3, r3, #32
 483 0012 1846     		mov	r0, r3
 484 0014 FFF7FEFF 		bl	Ft_Esd_TouchTag_Tag
 485 0018 0346     		mov	r3, r0
 486 001a FB77     		strb	r3, [r7, #31]
  52:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	Ft_Esd_Dl_TAG(s);
 487              		.loc 3 52 0
 488 001c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 489 001e 1846     		mov	r0, r3
 490 0020 FFF7FEFF 		bl	Ft_Esd_Dl_TAG
  53:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	ft_int16_t x = context->X(parent);
 491              		.loc 3 53 0
 492 0024 7B68     		ldr	r3, [r7, #4]
 493 0026 9B68     		ldr	r3, [r3, #8]
 494 0028 386A     		ldr	r0, [r7, #32]
 495 002a 9847     		blx	r3
 496              	.LVL0:
 497 002c 0346     		mov	r3, r0
 498 002e BB83     		strh	r3, [r7, #28]	@ movhi
  54:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	ft_int16_t y = context->Y(parent);
 499              		.loc 3 54 0
 500 0030 7B68     		ldr	r3, [r7, #4]
 501 0032 DB68     		ldr	r3, [r3, #12]
 502 0034 386A     		ldr	r0, [r7, #32]
 503 0036 9847     		blx	r3
 504              	.LVL1:
 505 0038 0346     		mov	r3, r0
 506 003a 7B83     		strh	r3, [r7, #26]	@ movhi
  55:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	ft_bool_t if_1 = Ft_Esd_TouchTag_Touching(&context->Touch_Tag);
 507              		.loc 3 55 0
 508 003c 7B68     		ldr	r3, [r7, #4]
 509 003e 2033     		adds	r3, r3, #32
 510 0040 1846     		mov	r0, r3
 511 0042 FFF7FEFF 		bl	Ft_Esd_TouchTag_Touching
 512 0046 0346     		mov	r3, r0
 513 0048 7B76     		strb	r3, [r7, #25]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s 			page 14


  56:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	Ft_Esd_BitmapCell * bitmapCell;
  57:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	if (if_1)
 514              		.loc 3 57 0
 515 004a 7B7E     		ldrb	r3, [r7, #25]	@ zero_extendqisi2
 516 004c 002B     		cmp	r3, #0
 517 004e 13D0     		beq	.L21
 518              	.LBB2:
  58:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	{
  59:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 		Ft_Esd_BitmapCell * if_2 = context->BitmapPressed(parent);
 519              		.loc 3 59 0
 520 0050 7B68     		ldr	r3, [r7, #4]
 521 0052 5B69     		ldr	r3, [r3, #20]
 522 0054 386A     		ldr	r0, [r7, #32]
 523 0056 9847     		blx	r3
 524              	.LVL2:
 525 0058 7861     		str	r0, [r7, #20]
  60:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 		if (if_2)
 526              		.loc 3 60 0
 527 005a 7B69     		ldr	r3, [r7, #20]
 528 005c 002B     		cmp	r3, #0
 529 005e 05D0     		beq	.L22
  61:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 		{
  62:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 			bitmapCell = context->BitmapPressed(parent);
 530              		.loc 3 62 0
 531 0060 7B68     		ldr	r3, [r7, #4]
 532 0062 5B69     		ldr	r3, [r3, #20]
 533 0064 386A     		ldr	r0, [r7, #32]
 534 0066 9847     		blx	r3
 535              	.LVL3:
 536 0068 7862     		str	r0, [r7, #36]
 537 006a 0AE0     		b	.L24
 538              	.L22:
  63:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 		}
  64:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 		else
  65:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 		{
  66:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 			bitmapCell = context->BitmapNormal(parent);
 539              		.loc 3 66 0
 540 006c 7B68     		ldr	r3, [r7, #4]
 541 006e 1B69     		ldr	r3, [r3, #16]
 542 0070 386A     		ldr	r0, [r7, #32]
 543 0072 9847     		blx	r3
 544              	.LVL4:
 545 0074 7862     		str	r0, [r7, #36]
 546 0076 04E0     		b	.L24
 547              	.L21:
 548              	.LBE2:
  67:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 		}
  68:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	}
  69:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	else
  70:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	{
  71:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 		bitmapCell = context->BitmapNormal(parent);
 549              		.loc 3 71 0
 550 0078 7B68     		ldr	r3, [r7, #4]
 551 007a 1B69     		ldr	r3, [r3, #16]
 552 007c 386A     		ldr	r0, [r7, #32]
 553 007e 9847     		blx	r3
 554              	.LVL5:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s 			page 15


 555 0080 7862     		str	r0, [r7, #36]
 556              	.L24:
  72:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	}
  73:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	ft_argb32_t c = 0xffffffffUL;
 557              		.loc 3 73 0
 558 0082 4FF0FF33 		mov	r3, #-1
 559 0086 3B61     		str	r3, [r7, #16]
  74:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	Ft_Esd_Render_Bitmap(x, y, bitmapCell, c);
 560              		.loc 3 74 0
 561 0088 B7F91A10 		ldrsh	r1, [r7, #26]
 562 008c B7F91C00 		ldrsh	r0, [r7, #28]
 563 0090 3B69     		ldr	r3, [r7, #16]
 564 0092 7A6A     		ldr	r2, [r7, #36]
 565 0094 FFF7FEFF 		bl	Ft_Esd_Render_Bitmap
  75:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	ft_uint8_t s_1 = 255;
 566              		.loc 3 75 0
 567 0098 FF23     		movs	r3, #255
 568 009a FB73     		strb	r3, [r7, #15]
  76:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	Ft_Esd_Dl_TAG(s_1);
 569              		.loc 3 76 0
 570 009c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 571 009e 1846     		mov	r0, r3
 572 00a0 FFF7FEFF 		bl	Ft_Esd_Dl_TAG
  77:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** }
 573              		.loc 3 77 0
 574 00a4 00BF     		nop
 575 00a6 2837     		adds	r7, r7, #40
 576              	.LCFI48:
 577              		.cfi_def_cfa_offset 8
 578 00a8 BD46     		mov	sp, r7
 579              	.LCFI49:
 580              		.cfi_def_cfa_register 13
 581              		@ sp needed
 582 00aa 80BD     		pop	{r7, pc}
 583              		.cfi_endproc
 584              	.LFE32:
 586              		.section	.text.Ft_Esd_ImageButton_Start,"ax",%progbits
 587              		.align	1
 588              		.global	Ft_Esd_ImageButton_Start
 589              		.syntax unified
 590              		.thumb
 591              		.thumb_func
 592              		.fpu fpv5-sp-d16
 594              	Ft_Esd_ImageButton_Start:
 595              	.LFB33:
  78:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 
  79:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** void Ft_Esd_ImageButton_Start(Ft_Esd_ImageButton *context)
  80:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** {
 596              		.loc 3 80 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 16
 599              		@ frame_needed = 1, uses_anonymous_args = 0
 600 0000 80B5     		push	{r7, lr}
 601              	.LCFI50:
 602              		.cfi_def_cfa_offset 8
 603              		.cfi_offset 7, -8
 604              		.cfi_offset 14, -4
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s 			page 16


 605 0002 84B0     		sub	sp, sp, #16
 606              	.LCFI51:
 607              		.cfi_def_cfa_offset 24
 608 0004 00AF     		add	r7, sp, #0
 609              	.LCFI52:
 610              		.cfi_def_cfa_register 7
 611 0006 7860     		str	r0, [r7, #4]
  81:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	void *parent = context->Parent;
 612              		.loc 3 81 0
 613 0008 7B68     		ldr	r3, [r7, #4]
 614 000a 1B68     		ldr	r3, [r3]
 615 000c FB60     		str	r3, [r7, #12]
  82:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	Ft_Esd_TouchTag_Start(&context->Touch_Tag);
 616              		.loc 3 82 0
 617 000e 7B68     		ldr	r3, [r7, #4]
 618 0010 2033     		adds	r3, r3, #32
 619 0012 1846     		mov	r0, r3
 620 0014 FFF7FEFF 		bl	Ft_Esd_TouchTag_Start
  83:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** }
 621              		.loc 3 83 0
 622 0018 00BF     		nop
 623 001a 1037     		adds	r7, r7, #16
 624              	.LCFI53:
 625              		.cfi_def_cfa_offset 8
 626 001c BD46     		mov	sp, r7
 627              	.LCFI54:
 628              		.cfi_def_cfa_register 13
 629              		@ sp needed
 630 001e 80BD     		pop	{r7, pc}
 631              		.cfi_endproc
 632              	.LFE33:
 634              		.section	.text.Ft_Esd_ImageButton_Touch_Tag_Down__Signal,"ax",%progbits
 635              		.align	1
 636              		.syntax unified
 637              		.thumb
 638              		.thumb_func
 639              		.fpu fpv5-sp-d16
 641              	Ft_Esd_ImageButton_Touch_Tag_Down__Signal:
 642              	.LFB34:
  84:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 
  85:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** void Ft_Esd_ImageButton_Touch_Tag_Down__Signal(void *c)
  86:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** {
 643              		.loc 3 86 0
 644              		.cfi_startproc
 645              		@ args = 0, pretend = 0, frame = 16
 646              		@ frame_needed = 1, uses_anonymous_args = 0
 647 0000 80B5     		push	{r7, lr}
 648              	.LCFI55:
 649              		.cfi_def_cfa_offset 8
 650              		.cfi_offset 7, -8
 651              		.cfi_offset 14, -4
 652 0002 84B0     		sub	sp, sp, #16
 653              	.LCFI56:
 654              		.cfi_def_cfa_offset 24
 655 0004 00AF     		add	r7, sp, #0
 656              	.LCFI57:
 657              		.cfi_def_cfa_register 7
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s 			page 17


 658 0006 7860     		str	r0, [r7, #4]
  87:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	Ft_Esd_ImageButton *context = (Ft_Esd_ImageButton *)c;
 659              		.loc 3 87 0
 660 0008 7B68     		ldr	r3, [r7, #4]
 661 000a FB60     		str	r3, [r7, #12]
  88:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	void *parent = context->Parent;
 662              		.loc 3 88 0
 663 000c FB68     		ldr	r3, [r7, #12]
 664 000e 1B68     		ldr	r3, [r3]
 665 0010 BB60     		str	r3, [r7, #8]
  89:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	context->Down(parent);
 666              		.loc 3 89 0
 667 0012 FB68     		ldr	r3, [r7, #12]
 668 0014 9B69     		ldr	r3, [r3, #24]
 669 0016 B868     		ldr	r0, [r7, #8]
 670 0018 9847     		blx	r3
 671              	.LVL6:
  90:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** }
 672              		.loc 3 90 0
 673 001a 00BF     		nop
 674 001c 1037     		adds	r7, r7, #16
 675              	.LCFI58:
 676              		.cfi_def_cfa_offset 8
 677 001e BD46     		mov	sp, r7
 678              	.LCFI59:
 679              		.cfi_def_cfa_register 13
 680              		@ sp needed
 681 0020 80BD     		pop	{r7, pc}
 682              		.cfi_endproc
 683              	.LFE34:
 685              		.section	.text.Ft_Esd_ImageButton_Touch_Tag_Up__Signal,"ax",%progbits
 686              		.align	1
 687              		.syntax unified
 688              		.thumb
 689              		.thumb_func
 690              		.fpu fpv5-sp-d16
 692              	Ft_Esd_ImageButton_Touch_Tag_Up__Signal:
 693              	.LFB35:
  91:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 
  92:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** void Ft_Esd_ImageButton_Touch_Tag_Up__Signal(void *c)
  93:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** {
 694              		.loc 3 93 0
 695              		.cfi_startproc
 696              		@ args = 0, pretend = 0, frame = 16
 697              		@ frame_needed = 1, uses_anonymous_args = 0
 698 0000 80B5     		push	{r7, lr}
 699              	.LCFI60:
 700              		.cfi_def_cfa_offset 8
 701              		.cfi_offset 7, -8
 702              		.cfi_offset 14, -4
 703 0002 84B0     		sub	sp, sp, #16
 704              	.LCFI61:
 705              		.cfi_def_cfa_offset 24
 706 0004 00AF     		add	r7, sp, #0
 707              	.LCFI62:
 708              		.cfi_def_cfa_register 7
 709 0006 7860     		str	r0, [r7, #4]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s 			page 18


  94:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	Ft_Esd_ImageButton *context = (Ft_Esd_ImageButton *)c;
 710              		.loc 3 94 0
 711 0008 7B68     		ldr	r3, [r7, #4]
 712 000a FB60     		str	r3, [r7, #12]
  95:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	void *parent = context->Parent;
 713              		.loc 3 95 0
 714 000c FB68     		ldr	r3, [r7, #12]
 715 000e 1B68     		ldr	r3, [r3]
 716 0010 BB60     		str	r3, [r7, #8]
  96:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	context->Up(parent);
 717              		.loc 3 96 0
 718 0012 FB68     		ldr	r3, [r7, #12]
 719 0014 DB69     		ldr	r3, [r3, #28]
 720 0016 B868     		ldr	r0, [r7, #8]
 721 0018 9847     		blx	r3
 722              	.LVL7:
  97:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** }
 723              		.loc 3 97 0
 724 001a 00BF     		nop
 725 001c 1037     		adds	r7, r7, #16
 726              	.LCFI63:
 727              		.cfi_def_cfa_offset 8
 728 001e BD46     		mov	sp, r7
 729              	.LCFI64:
 730              		.cfi_def_cfa_register 13
 731              		@ sp needed
 732 0020 80BD     		pop	{r7, pc}
 733              		.cfi_endproc
 734              	.LFE35:
 736              		.section	.text.Ft_Esd_ImageButton_Touch_Tag_Tap__Signal,"ax",%progbits
 737              		.align	1
 738              		.syntax unified
 739              		.thumb
 740              		.thumb_func
 741              		.fpu fpv5-sp-d16
 743              	Ft_Esd_ImageButton_Touch_Tag_Tap__Signal:
 744              	.LFB36:
  98:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 
  99:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** void Ft_Esd_ImageButton_Touch_Tag_Tap__Signal(void *c)
 100:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** {
 745              		.loc 3 100 0
 746              		.cfi_startproc
 747              		@ args = 0, pretend = 0, frame = 16
 748              		@ frame_needed = 1, uses_anonymous_args = 0
 749 0000 80B5     		push	{r7, lr}
 750              	.LCFI65:
 751              		.cfi_def_cfa_offset 8
 752              		.cfi_offset 7, -8
 753              		.cfi_offset 14, -4
 754 0002 84B0     		sub	sp, sp, #16
 755              	.LCFI66:
 756              		.cfi_def_cfa_offset 24
 757 0004 00AF     		add	r7, sp, #0
 758              	.LCFI67:
 759              		.cfi_def_cfa_register 7
 760 0006 7860     		str	r0, [r7, #4]
 101:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	Ft_Esd_ImageButton *context = (Ft_Esd_ImageButton *)c;
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s 			page 19


 761              		.loc 3 101 0
 762 0008 7B68     		ldr	r3, [r7, #4]
 763 000a FB60     		str	r3, [r7, #12]
 102:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	void *parent = context->Parent;
 764              		.loc 3 102 0
 765 000c FB68     		ldr	r3, [r7, #12]
 766 000e 1B68     		ldr	r3, [r3]
 767 0010 BB60     		str	r3, [r7, #8]
 103:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	context->Pushed(parent);
 768              		.loc 3 103 0
 769 0012 FB68     		ldr	r3, [r7, #12]
 770 0014 9B6B     		ldr	r3, [r3, #56]
 771 0016 B868     		ldr	r0, [r7, #8]
 772 0018 9847     		blx	r3
 773              	.LVL8:
 104:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** }
 774              		.loc 3 104 0
 775 001a 00BF     		nop
 776 001c 1037     		adds	r7, r7, #16
 777              	.LCFI68:
 778              		.cfi_def_cfa_offset 8
 779 001e BD46     		mov	sp, r7
 780              	.LCFI69:
 781              		.cfi_def_cfa_register 13
 782              		@ sp needed
 783 0020 80BD     		pop	{r7, pc}
 784              		.cfi_endproc
 785              	.LFE36:
 787              		.section	.text.Ft_Esd_ImageButton_Update,"ax",%progbits
 788              		.align	1
 789              		.global	Ft_Esd_ImageButton_Update
 790              		.syntax unified
 791              		.thumb
 792              		.thumb_func
 793              		.fpu fpv5-sp-d16
 795              	Ft_Esd_ImageButton_Update:
 796              	.LFB37:
 105:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 
 106:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** void Ft_Esd_ImageButton_Update(Ft_Esd_ImageButton *context)
 107:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** {
 797              		.loc 3 107 0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 16
 800              		@ frame_needed = 1, uses_anonymous_args = 0
 801 0000 80B5     		push	{r7, lr}
 802              	.LCFI70:
 803              		.cfi_def_cfa_offset 8
 804              		.cfi_offset 7, -8
 805              		.cfi_offset 14, -4
 806 0002 84B0     		sub	sp, sp, #16
 807              	.LCFI71:
 808              		.cfi_def_cfa_offset 24
 809 0004 00AF     		add	r7, sp, #0
 810              	.LCFI72:
 811              		.cfi_def_cfa_register 7
 812 0006 7860     		str	r0, [r7, #4]
 108:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	void *parent = context->Parent;
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s 			page 20


 813              		.loc 3 108 0
 814 0008 7B68     		ldr	r3, [r7, #4]
 815 000a 1B68     		ldr	r3, [r3]
 816 000c FB60     		str	r3, [r7, #12]
 109:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	Ft_Esd_TouchTag_Update(&context->Touch_Tag);
 817              		.loc 3 109 0
 818 000e 7B68     		ldr	r3, [r7, #4]
 819 0010 2033     		adds	r3, r3, #32
 820 0012 1846     		mov	r0, r3
 821 0014 FFF7FEFF 		bl	Ft_Esd_TouchTag_Update
 110:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** }
 822              		.loc 3 110 0
 823 0018 00BF     		nop
 824 001a 1037     		adds	r7, r7, #16
 825              	.LCFI73:
 826              		.cfi_def_cfa_offset 8
 827 001c BD46     		mov	sp, r7
 828              	.LCFI74:
 829              		.cfi_def_cfa_register 13
 830              		@ sp needed
 831 001e 80BD     		pop	{r7, pc}
 832              		.cfi_endproc
 833              	.LFE37:
 835              		.section	.text.Ft_Esd_ImageButton_Pushing,"ax",%progbits
 836              		.align	1
 837              		.global	Ft_Esd_ImageButton_Pushing
 838              		.syntax unified
 839              		.thumb
 840              		.thumb_func
 841              		.fpu fpv5-sp-d16
 843              	Ft_Esd_ImageButton_Pushing:
 844              	.LFB38:
 111:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 
 112:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** ft_bool_t Ft_Esd_ImageButton_Pushing(Ft_Esd_ImageButton *context)
 113:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** {
 845              		.loc 3 113 0
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 16
 848              		@ frame_needed = 1, uses_anonymous_args = 0
 849 0000 80B5     		push	{r7, lr}
 850              	.LCFI75:
 851              		.cfi_def_cfa_offset 8
 852              		.cfi_offset 7, -8
 853              		.cfi_offset 14, -4
 854 0002 84B0     		sub	sp, sp, #16
 855              	.LCFI76:
 856              		.cfi_def_cfa_offset 24
 857 0004 00AF     		add	r7, sp, #0
 858              	.LCFI77:
 859              		.cfi_def_cfa_register 7
 860 0006 7860     		str	r0, [r7, #4]
 114:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	void *parent = context->Parent;
 861              		.loc 3 114 0
 862 0008 7B68     		ldr	r3, [r7, #4]
 863 000a 1B68     		ldr	r3, [r3]
 864 000c FB60     		str	r3, [r7, #12]
 115:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	return Ft_Esd_TouchTag_Inside(&context->Touch_Tag);
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s 			page 21


 865              		.loc 3 115 0
 866 000e 7B68     		ldr	r3, [r7, #4]
 867 0010 2033     		adds	r3, r3, #32
 868 0012 1846     		mov	r0, r3
 869 0014 FFF7FEFF 		bl	Ft_Esd_TouchTag_Inside
 870 0018 0346     		mov	r3, r0
 116:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** }
 871              		.loc 3 116 0
 872 001a 1846     		mov	r0, r3
 873 001c 1037     		adds	r7, r7, #16
 874              	.LCFI78:
 875              		.cfi_def_cfa_offset 8
 876 001e BD46     		mov	sp, r7
 877              	.LCFI79:
 878              		.cfi_def_cfa_register 13
 879              		@ sp needed
 880 0020 80BD     		pop	{r7, pc}
 881              		.cfi_endproc
 882              	.LFE38:
 884              		.section	.text.Ft_Esd_ImageButton_End,"ax",%progbits
 885              		.align	1
 886              		.global	Ft_Esd_ImageButton_End
 887              		.syntax unified
 888              		.thumb
 889              		.thumb_func
 890              		.fpu fpv5-sp-d16
 892              	Ft_Esd_ImageButton_End:
 893              	.LFB39:
 117:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 
 118:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** void Ft_Esd_ImageButton_End(Ft_Esd_ImageButton *context)
 119:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** {
 894              		.loc 3 119 0
 895              		.cfi_startproc
 896              		@ args = 0, pretend = 0, frame = 16
 897              		@ frame_needed = 1, uses_anonymous_args = 0
 898 0000 80B5     		push	{r7, lr}
 899              	.LCFI80:
 900              		.cfi_def_cfa_offset 8
 901              		.cfi_offset 7, -8
 902              		.cfi_offset 14, -4
 903 0002 84B0     		sub	sp, sp, #16
 904              	.LCFI81:
 905              		.cfi_def_cfa_offset 24
 906 0004 00AF     		add	r7, sp, #0
 907              	.LCFI82:
 908              		.cfi_def_cfa_register 7
 909 0006 7860     		str	r0, [r7, #4]
 120:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	void *parent = context->Parent;
 910              		.loc 3 120 0
 911 0008 7B68     		ldr	r3, [r7, #4]
 912 000a 1B68     		ldr	r3, [r3]
 913 000c FB60     		str	r3, [r7, #12]
 121:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** 	Ft_Esd_TouchTag_End(&context->Touch_Tag);
 914              		.loc 3 121 0
 915 000e 7B68     		ldr	r3, [r7, #4]
 916 0010 2033     		adds	r3, r3, #32
 917 0012 1846     		mov	r0, r3
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s 			page 22


 918 0014 FFF7FEFF 		bl	Ft_Esd_TouchTag_End
 122:FT_Esd_Widgets/Ft_Esd_ImageButton__Generated.c **** }
 919              		.loc 3 122 0
 920 0018 00BF     		nop
 921 001a 1037     		adds	r7, r7, #16
 922              	.LCFI83:
 923              		.cfi_def_cfa_offset 8
 924 001c BD46     		mov	sp, r7
 925              	.LCFI84:
 926              		.cfi_def_cfa_register 13
 927              		@ sp needed
 928 001e 80BD     		pop	{r7, pc}
 929              		.cfi_endproc
 930              	.LFE39:
 932              		.text
 933              	.Letext0:
 934              		.file 4 "FT_Eve_Hal/FT_DataTypes.h"
 935              		.file 5 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/lock.h"
 936              		.file 6 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_types.h"
 937              		.file 7 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 938              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/unistd.h"
 939              		.file 9 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/reent.h"
 940              		.file 10 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/stdlib.h"
 941              		.file 11 "FT_Eve_Hal/FT_Gpu_Hal.h"
 942              		.file 12 "FT_Esd_Framework/Ft_Esd.h"
 943              		.file 13 "FT_Esd_Framework/Ft_Esd_GpuAlloc.h"
 944              		.file 14 "FT_Esd_Widgets/FT_Esd_Theme.h"
 945              		.file 15 "FT_Esd_Widgets/Ft_Esd_DefaultTheme.h"
 946              		.file 16 "FT_Esd_Framework/Ft_Esd_TouchTag.h"
 947              		.file 17 "FT_Esd_Widgets/Ft_Esd_ImageButton.h"
 948              		.file 18 "FT_Esd_Framework/FT_Esd_CoPro_Cmds.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s 			page 23


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Ft_Esd_ImageButton__Generated.c
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s:18     .text.Ft_Esd_BitmapCell_GetInfo:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s:24     .text.Ft_Esd_BitmapCell_GetInfo:0000000000000000 Ft_Esd_BitmapCell_GetInfo
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s:73     .text.Ft_Esd_Dl_TAG:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s:79     .text.Ft_Esd_Dl_TAG:0000000000000000 Ft_Esd_Dl_TAG
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s:120    .text.Ft_Esd_Dl_TAG:0000000000000024 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s:125    .text.Ft_Esd_ImageButton_Theme__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s:132    .text.Ft_Esd_ImageButton_Theme__Default:0000000000000000 Ft_Esd_ImageButton_Theme__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s:167    .text.Ft_Esd_ImageButton_X__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s:174    .text.Ft_Esd_ImageButton_X__Default:0000000000000000 Ft_Esd_ImageButton_X__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s:211    .text.Ft_Esd_ImageButton_Y__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s:218    .text.Ft_Esd_ImageButton_Y__Default:0000000000000000 Ft_Esd_ImageButton_Y__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s:255    .text.Ft_Esd_ImageButton_BitmapNormal__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s:262    .text.Ft_Esd_ImageButton_BitmapNormal__Default:0000000000000000 Ft_Esd_ImageButton_BitmapNormal__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s:299    .text.Ft_Esd_ImageButton_BitmapPressed__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s:306    .text.Ft_Esd_ImageButton_BitmapPressed__Default:0000000000000000 Ft_Esd_ImageButton_BitmapPressed__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s:343    .text.Ft_Esd_ImageButton__Initializer:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s:350    .text.Ft_Esd_ImageButton__Initializer:0000000000000000 Ft_Esd_ImageButton__Initializer
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s:438    .text.Ft_Esd_ImageButton__Initializer:0000000000000068 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s:641    .text.Ft_Esd_ImageButton_Touch_Tag_Down__Signal:0000000000000000 Ft_Esd_ImageButton_Touch_Tag_Down__Signal
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s:692    .text.Ft_Esd_ImageButton_Touch_Tag_Up__Signal:0000000000000000 Ft_Esd_ImageButton_Touch_Tag_Up__Signal
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s:743    .text.Ft_Esd_ImageButton_Touch_Tag_Tap__Signal:0000000000000000 Ft_Esd_ImageButton_Touch_Tag_Tap__Signal
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s:451    .text.Ft_Esd_ImageButton_Render:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s:458    .text.Ft_Esd_ImageButton_Render:0000000000000000 Ft_Esd_ImageButton_Render
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s:587    .text.Ft_Esd_ImageButton_Start:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s:594    .text.Ft_Esd_ImageButton_Start:0000000000000000 Ft_Esd_ImageButton_Start
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s:635    .text.Ft_Esd_ImageButton_Touch_Tag_Down__Signal:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s:686    .text.Ft_Esd_ImageButton_Touch_Tag_Up__Signal:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s:737    .text.Ft_Esd_ImageButton_Touch_Tag_Tap__Signal:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s:788    .text.Ft_Esd_ImageButton_Update:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s:795    .text.Ft_Esd_ImageButton_Update:0000000000000000 Ft_Esd_ImageButton_Update
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s:836    .text.Ft_Esd_ImageButton_Pushing:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s:843    .text.Ft_Esd_ImageButton_Pushing:0000000000000000 Ft_Esd_ImageButton_Pushing
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s:885    .text.Ft_Esd_ImageButton_End:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccnFR55G.s:892    .text.Ft_Esd_ImageButton_End:0000000000000000 Ft_Esd_ImageButton_End

UNDEFINED SYMBOLS
Ft_Gpu_Hal_WrCmd32
Ft_Esd_Host
Ft_Esd_Theme_GetCurrent
Ft_Esd_TouchTag__Initializer
Ft_Esd_Noop
Ft_Esd_TouchTag_Tag
Ft_Esd_TouchTag_Touching
Ft_Esd_Render_Bitmap
Ft_Esd_TouchTag_Start
Ft_Esd_TouchTag_Update
Ft_Esd_TouchTag_Inside
Ft_Esd_TouchTag_End
