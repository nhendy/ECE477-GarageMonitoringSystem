ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"FT_Esd_Primitives.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Ft_Esd_BitmapCell_GetInfo,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	Ft_Esd_BitmapCell_GetInfo:
  25              	.LFB9:
  26              		.file 1 "FT_Esd_Framework/Ft_Esd_BitmapInfo.h"
   1:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** /*
   2:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** Bitmap info structure
   3:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** */
   4:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
   5:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #ifndef FT_ESD_BITMAPINFO_H
   6:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #define FT_ESD_BITMAPINFO_H
   7:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
   8:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "Ft_Esd.h"
   9:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "FT_DataTypes.h"
  10:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "Ft_Esd_GpuAlloc.h"
  11:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  12:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapInfo, Native = Struct) // TODO: Struct support, expose values
  13:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  14:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  15:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Width;
  16:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Height;
  17:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Stride;
  18:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Format;
  19:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Size;
  20:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	const char *File;
  21:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  22:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Handle pointing to the address in RAM_G if it is allocated
  23:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_GpuHandle GpuHandle;
  24:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  25:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Bitmap handle that is being used
  26:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_uint32_t BitmapHandle;
  27:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  28:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	const char *PaletteFile;
  29:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_GpuHandle PaletteGpuHandle;
  30:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  31:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// When this is set, the allocated ram is not free'd automatically
  32:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Use Ft_Esd_GpuAlloc_Free(GpuAlloc, GpuHandle) to free the GPU ram manually
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 2


  33:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_bool_t Persistent;
  34:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  35:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_BitmapInfo;
  36:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  37:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapInfo *, Native = Pointer, Edit = Library)
  38:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  39:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapCell, Native = Struct) // TODO: Struct support, expose values
  40:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  41:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  42:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapInfo *Info;
  43:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Cell;
  44:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_BitmapCell;
  45:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  46:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapCell *, Native = Pointer, Edit = Library)
  47:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  48:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // Attempts to load the specified bitmap if it has not been loaded into RAM_G yet.
  49:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // Call during the Update cycle of each frame to keep the bitmap flagged as in use, otherwise the m
  50:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_LoadBitmap, Type = ft_uint32_t, Include = "Ft_Esd_BitmapInfo.h", DisplayName = 
  51:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapInfo, Type = Ft_Esd_BitmapInfo *)
  52:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ft_uint32_t Ft_Esd_LoadBitmap(Ft_Esd_BitmapInfo *bitmapInfo);
  53:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  54:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_LoadPalette, Type = ft_uint32_t, Include = "Ft_Esd_BitmapInfo.h", DisplayName =
  55:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapInfo, Type = Ft_Esd_BitmapInfo *)
  56:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ft_uint32_t Ft_Esd_LoadPalette(Ft_Esd_BitmapInfo *bitmapInfo);
  57:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  58:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_ENUM(_BitmapResourceFormat, DisplayName = "Bitmap Format")
  59:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB1555)
  60:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L1)
  61:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L2)
  62:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L4)
  63:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L8)
  64:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(RGB332)
  65:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB2)
  66:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB4)
  67:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(RGB565)
  68:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(PALETTED565)
  69:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(PALETTED4444)
  70:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(PALETTED8)
  71:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(JPEG)
  72:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(PNG)
  73:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_END()
  74:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  75:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_LOGIC(Ft_Esd_SwitchBitmapCell, Callback, Include = "Ft_Esd_BitmapInfo.h", DisplayName = "Switch
  76:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  77:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  78:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Callback
  79:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	void *Parent;
  80:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  81:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  82:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Input
  83:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  84:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  85:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ESD_INPUT(BitmapInfo, Type = Ft_Esd_BitmapInfo *, DisplayName = "Bitmap Info")
  86:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapInfo *(* BitmapInfo)(void *context);
  87:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  88:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ESD_INPUT(Cell, Type = ft_uint8_t, DisplayName = "Cell")
  89:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_uint8_t(* Cell)(void *context);
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 3


  90:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  91:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  92:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Variables
  93:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  94:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  95:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// BitmapCell object
  96:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapCell BitmapCell;
  97:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  98:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_SwitchBitmapCell;
  99:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 100:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** void Ft_Esd_SwitchBitmapCell__Initializer(Ft_Esd_SwitchBitmapCell *context);
 101:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 102:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_OUTPUT(BitmapCell, Type = Ft_Esd_BitmapCell *, DisplayName = "Bitmap Cell")
 103:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** Ft_Esd_BitmapCell *Ft_Esd_SwitchBitmapCell_BitmapCell(Ft_Esd_SwitchBitmapCell *context);
 104:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 105:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_UPDATE(Ft_Esd_BitmapPersist, DisplayName = "Bitmap Persist", Category = EsdUtilities)
 106:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapCell, Type = Ft_Esd_BitmapCell *)
 107:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** void Ft_Esd_BitmapPersist(Ft_Esd_BitmapCell *bitmapCell);
 108:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 109:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_BitmapCell_GetInfo, Type = Ft_Esd_BitmapInfo *, DisplayName = "ESD BitmapCell G
 110:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapCell, Type = Ft_Esd_BitmapCell *)
 111:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** static Ft_Esd_BitmapInfo *Ft_Esd_BitmapCell_GetInfo(Ft_Esd_BitmapCell *bitmapCell)
 112:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  27              		.loc 1 112 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 113:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	if (!bitmapCell) return 0;
  43              		.loc 1 113 0
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 002B     		cmp	r3, #0
  46 000c 01D1     		bne	.L2
  47              		.loc 1 113 0 is_stmt 0 discriminator 1
  48 000e 0023     		movs	r3, #0
  49 0010 01E0     		b	.L3
  50              	.L2:
 114:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	return bitmapCell->Info;
  51              		.loc 1 114 0 is_stmt 1
  52 0012 7B68     		ldr	r3, [r7, #4]
  53 0014 1B68     		ldr	r3, [r3]
  54              	.L3:
 115:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** }
  55              		.loc 1 115 0
  56 0016 1846     		mov	r0, r3
  57 0018 0C37     		adds	r7, r7, #12
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 4


  58              	.LCFI3:
  59              		.cfi_def_cfa_offset 4
  60 001a BD46     		mov	sp, r7
  61              	.LCFI4:
  62              		.cfi_def_cfa_register 13
  63              		@ sp needed
  64 001c 5DF8047B 		ldr	r7, [sp], #4
  65              	.LCFI5:
  66              		.cfi_restore 7
  67              		.cfi_def_cfa_offset 0
  68 0020 7047     		bx	lr
  69              		.cfi_endproc
  70              	.LFE9:
  72              		.section	.text.Ft_Esd_Dl_COLOR_RGB,"ax",%progbits
  73              		.align	1
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  77              		.fpu fpv5-sp-d16
  79              	Ft_Esd_Dl_COLOR_RGB:
  80              	.LFB16:
  81              		.file 2 "FT_Esd_Framework/FT_Esd_Dl.h"
   1:FT_Esd_Framework/FT_Esd_Dl.h **** 
   2:FT_Esd_Framework/FT_Esd_Dl.h **** #ifndef FT_ESD_DL_H
   3:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_DL_H
   4:FT_Esd_Framework/FT_Esd_Dl.h **** 
   5:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_DataTypes.h"
   6:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_Platform.h"
   7:FT_Esd_Framework/FT_Esd_Dl.h **** #include "Ft_Esd.h"
   8:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_Gpu.h"
   9:FT_Esd_Framework/FT_Esd_Dl.h **** #include "Ft_Esd_BitmapInfo.h"
  10:FT_Esd_Framework/FT_Esd_Dl.h **** 
  11:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_CATEGORY(EsdUtilities, DisplayName = "ESD Utilities")
  12:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_CATEGORY(EveRenderFunctions, DisplayName = "EVE Render Functions")
  13:FT_Esd_Framework/FT_Esd_Dl.h **** 
  14:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_TYPE(Ft_Gpu_Hal_Context_t *, Native = Pointer, Edit = Library)
  15:FT_Esd_Framework/FT_Esd_Dl.h **** 
  16:FT_Esd_Framework/FT_Esd_Dl.h **** // Keep cache of displaylist values that don't often change but are generally set by every widget t
  17:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_OPTIMIZE_DISPLAYLIST 1
  18:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_STATE_STACK_SIZE 5
  19:FT_Esd_Framework/FT_Esd_Dl.h **** 
  20:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_BITMAPHANDLE_INVALID 255
  21:FT_Esd_Framework/FT_Esd_Dl.h **** 
  22:FT_Esd_Framework/FT_Esd_Dl.h **** //
  23:FT_Esd_Framework/FT_Esd_Dl.h **** // Structs
  24:FT_Esd_Framework/FT_Esd_Dl.h **** //
  25:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_ESD_OPTIMIZE_DISPLAYLIST
  26:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_STATE Ft_Esd_GpuState[Ft_Esd_GpuState_I]
  27:FT_Esd_Framework/FT_Esd_Dl.h **** typedef struct
  28:FT_Esd_Framework/FT_Esd_Dl.h **** {
  29:FT_Esd_Framework/FT_Esd_Dl.h **** 	// Keep to a minimum
  30:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_81X_ENABLE
  31:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint32_t PaletteSource;
  32:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  33:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint32_t ColorRGB;
  34:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t ColorA;
  35:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t Handle;         // Current handle
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 5


  36:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t Cell;           // Current cell
  37:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_bool_t BitmapTransform; // BitmapTransform other than default is set
  38:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_81X_ENABLE
  39:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t VertexFormat;   // Current vertex format
  40:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  41:FT_Esd_Framework/FT_Esd_Dl.h **** } Ft_Esd_GpuState_T;
  42:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  43:FT_Esd_Framework/FT_Esd_Dl.h **** 
  44:FT_Esd_Framework/FT_Esd_Dl.h **** //
  45:FT_Esd_Framework/FT_Esd_Dl.h **** // Globals
  46:FT_Esd_Framework/FT_Esd_Dl.h **** //
  47:FT_Esd_Framework/FT_Esd_Dl.h **** extern Ft_Gpu_Hal_Context_t *Ft_Esd_Host;
  48:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint16_t Ft_Esd_FontHeight[32];
  49:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_ESD_OPTIMIZE_DISPLAYLIST
  50:FT_Esd_Framework/FT_Esd_Dl.h **** extern Ft_Esd_GpuState_T Ft_Esd_GpuState[FT_ESD_STATE_STACK_SIZE];
  51:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint8_t Ft_Esd_GpuState_I;
  52:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint32_t Ft_Esd_CoFgColor;
  53:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint32_t Ft_Esd_CoBgColor;
  54:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  55:FT_Esd_Framework/FT_Esd_Dl.h **** 
  56:FT_Esd_Framework/FT_Esd_Dl.h **** //Get the height of builtin font
  57:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_GetFontHeight, Type = ft_uint16_t ,DisplayName = "Get Font Height", Category = 
  58:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(i, Type = int, DisplayName = "Bitmap Handle", Default = 0, Min = 0, Max = 31)
  59:FT_Esd_Framework/FT_Esd_Dl.h **** // inline static ft_uint16_t Ft_Esd_GetFontHeight(int i) { return Ft_Esd_FontHeight[i]; }
  60:FT_Esd_Framework/FT_Esd_Dl.h **** #define Ft_Esd_GetFontHeight(i) (Ft_Esd_FontHeight[i]);
  61:FT_Esd_Framework/FT_Esd_Dl.h **** 
  62:FT_Esd_Framework/FT_Esd_Dl.h **** // Reset any cached state
  63:FT_Esd_Framework/FT_Esd_Dl.h **** void Ft_Esd_ResetGpuState();
  64:FT_Esd_Framework/FT_Esd_Dl.h **** void Ft_Esd_ResetCoState();
  65:FT_Esd_Framework/FT_Esd_Dl.h **** 
  66:FT_Esd_Framework/FT_Esd_Dl.h **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotalUsed();
  67:FT_Esd_Framework/FT_Esd_Dl.h **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotal();
  68:FT_Esd_Framework/FT_Esd_Dl.h **** 
  69:FT_Esd_Framework/FT_Esd_Dl.h **** /// Set current tag. Must be returned to 255 after usage, to ensure next widgets don't draw with in
  70:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_TAG, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  71:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(s, Type = ft_uint8_t, DisplayName = "Tag", Default = 255, Min = 0, Max = 255)
  72:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_TAG(ft_uint8_t s)
  73:FT_Esd_Framework/FT_Esd_Dl.h **** {
  74:FT_Esd_Framework/FT_Esd_Dl.h **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, TAG(s));
  75:FT_Esd_Framework/FT_Esd_Dl.h **** }
  76:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify color RGB
  77:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_RGB, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  78:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(c, Type = ft_rgb32_t, DisplayName = "Color")
  79:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_RGB(ft_rgb32_t c)
  80:FT_Esd_Framework/FT_Esd_Dl.h **** {
  82              		.loc 2 80 0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 16
  85              		@ frame_needed = 1, uses_anonymous_args = 0
  86 0000 80B5     		push	{r7, lr}
  87              	.LCFI6:
  88              		.cfi_def_cfa_offset 8
  89              		.cfi_offset 7, -8
  90              		.cfi_offset 14, -4
  91 0002 84B0     		sub	sp, sp, #16
  92              	.LCFI7:
  93              		.cfi_def_cfa_offset 24
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 6


  94 0004 00AF     		add	r7, sp, #0
  95              	.LCFI8:
  96              		.cfi_def_cfa_register 7
  97 0006 7860     		str	r0, [r7, #4]
  81:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  82:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_rgb32_t rgb = c & 0xFFFFFF;
  98              		.loc 2 82 0
  99 0008 7B68     		ldr	r3, [r7, #4]
 100 000a 23F07F43 		bic	r3, r3, #-16777216
 101 000e FB60     		str	r3, [r7, #12]
  83:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (rgb != FT_ESD_STATE.ColorRGB)
 102              		.loc 2 83 0
 103 0010 0F4B     		ldr	r3, .L7
 104 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 105 0014 0F4A     		ldr	r2, .L7+4
 106 0016 1B01     		lsls	r3, r3, #4
 107 0018 1344     		add	r3, r3, r2
 108 001a 0433     		adds	r3, r3, #4
 109 001c 1B68     		ldr	r3, [r3]
 110 001e FA68     		ldr	r2, [r7, #12]
 111 0020 9A42     		cmp	r2, r3
 112 0022 10D0     		beq	.L6
  84:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
  85:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  86:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, (4UL << 24) | (rgb));
 113              		.loc 2 86 0
 114 0024 0C4B     		ldr	r3, .L7+8
 115 0026 1A68     		ldr	r2, [r3]
 116 0028 FB68     		ldr	r3, [r7, #12]
 117 002a 43F08063 		orr	r3, r3, #67108864
 118 002e 1946     		mov	r1, r3
 119 0030 1046     		mov	r0, r2
 120 0032 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  87:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  88:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.ColorRGB = rgb;
 121              		.loc 2 88 0
 122 0036 064B     		ldr	r3, .L7
 123 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 124 003a 064A     		ldr	r2, .L7+4
 125 003c 1B01     		lsls	r3, r3, #4
 126 003e 1344     		add	r3, r3, r2
 127 0040 0433     		adds	r3, r3, #4
 128 0042 FA68     		ldr	r2, [r7, #12]
 129 0044 1A60     		str	r2, [r3]
 130              	.L6:
  89:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
  90:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  91:FT_Esd_Framework/FT_Esd_Dl.h **** }
 131              		.loc 2 91 0
 132 0046 00BF     		nop
 133 0048 1037     		adds	r7, r7, #16
 134              	.LCFI9:
 135              		.cfi_def_cfa_offset 8
 136 004a BD46     		mov	sp, r7
 137              	.LCFI10:
 138              		.cfi_def_cfa_register 13
 139              		@ sp needed
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 7


 140 004c 80BD     		pop	{r7, pc}
 141              	.L8:
 142 004e 00BF     		.align	2
 143              	.L7:
 144 0050 00000000 		.word	Ft_Esd_GpuState_I
 145 0054 00000000 		.word	Ft_Esd_GpuState
 146 0058 00000000 		.word	Ft_Esd_Host
 147              		.cfi_endproc
 148              	.LFE16:
 150              		.section	.text.Ft_Esd_Dl_COLOR_A,"ax",%progbits
 151              		.align	1
 152              		.syntax unified
 153              		.thumb
 154              		.thumb_func
 155              		.fpu fpv5-sp-d16
 157              	Ft_Esd_Dl_COLOR_A:
 158              	.LFB17:
  92:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify alpha channel
  93:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_A, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  94:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(alpha, Type = ft_uint8_t, Default = 255, Min = 0, Max = 255)
  95:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_A(ft_uint8_t alpha)
  96:FT_Esd_Framework/FT_Esd_Dl.h **** {
 159              		.loc 2 96 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 8
 162              		@ frame_needed = 1, uses_anonymous_args = 0
 163 0000 80B5     		push	{r7, lr}
 164              	.LCFI11:
 165              		.cfi_def_cfa_offset 8
 166              		.cfi_offset 7, -8
 167              		.cfi_offset 14, -4
 168 0002 82B0     		sub	sp, sp, #8
 169              	.LCFI12:
 170              		.cfi_def_cfa_offset 16
 171 0004 00AF     		add	r7, sp, #0
 172              	.LCFI13:
 173              		.cfi_def_cfa_register 7
 174 0006 0346     		mov	r3, r0
 175 0008 FB71     		strb	r3, [r7, #7]
  97:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  98:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (alpha != FT_ESD_STATE.ColorA)
 176              		.loc 2 98 0
 177 000a 0F4B     		ldr	r3, .L12
 178 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 179 000e 0F4A     		ldr	r2, .L12+4
 180 0010 1B01     		lsls	r3, r3, #4
 181 0012 1344     		add	r3, r3, r2
 182 0014 0833     		adds	r3, r3, #8
 183 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 184 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 185 001a 9A42     		cmp	r2, r3
 186 001c 10D0     		beq	.L11
  99:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
 100:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 101:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, COLOR_A(alpha));
 187              		.loc 2 101 0
 188 001e 0C4B     		ldr	r3, .L12+8
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 8


 189 0020 1A68     		ldr	r2, [r3]
 190 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 191 0024 43F08053 		orr	r3, r3, #268435456
 192 0028 1946     		mov	r1, r3
 193 002a 1046     		mov	r0, r2
 194 002c FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 102:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 103:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.ColorA = alpha;
 195              		.loc 2 103 0
 196 0030 054B     		ldr	r3, .L12
 197 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 198 0034 054A     		ldr	r2, .L12+4
 199 0036 1B01     		lsls	r3, r3, #4
 200 0038 1344     		add	r3, r3, r2
 201 003a 0833     		adds	r3, r3, #8
 202 003c FA79     		ldrb	r2, [r7, #7]
 203 003e 1A70     		strb	r2, [r3]
 204              	.L11:
 104:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
 105:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 106:FT_Esd_Framework/FT_Esd_Dl.h **** }
 205              		.loc 2 106 0
 206 0040 00BF     		nop
 207 0042 0837     		adds	r7, r7, #8
 208              	.LCFI14:
 209              		.cfi_def_cfa_offset 8
 210 0044 BD46     		mov	sp, r7
 211              	.LCFI15:
 212              		.cfi_def_cfa_register 13
 213              		@ sp needed
 214 0046 80BD     		pop	{r7, pc}
 215              	.L13:
 216              		.align	2
 217              	.L12:
 218 0048 00000000 		.word	Ft_Esd_GpuState_I
 219 004c 00000000 		.word	Ft_Esd_GpuState
 220 0050 00000000 		.word	Ft_Esd_Host
 221              		.cfi_endproc
 222              	.LFE17:
 224              		.section	.text.Ft_Esd_Dl_COLOR_ARGB,"ax",%progbits
 225              		.align	1
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu fpv5-sp-d16
 231              	Ft_Esd_Dl_COLOR_ARGB:
 232              	.LFB18:
 107:FT_Esd_Framework/FT_Esd_Dl.h **** 
 108:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify color: Alpha(31~24 bit) + RGB(23~0 bit)
 109:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_ARGB, Type = ft_void_t, Category = EveRenderFunctions, Inline)
 110:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(c, Type = ft_argb32_t, DisplayName = "Color")
 111:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_ARGB(ft_uint32_t c)
 112:FT_Esd_Framework/FT_Esd_Dl.h **** {
 233              		.loc 2 112 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 8
 236              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 9


 237 0000 80B5     		push	{r7, lr}
 238              	.LCFI16:
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 7, -8
 241              		.cfi_offset 14, -4
 242 0002 82B0     		sub	sp, sp, #8
 243              	.LCFI17:
 244              		.cfi_def_cfa_offset 16
 245 0004 00AF     		add	r7, sp, #0
 246              	.LCFI18:
 247              		.cfi_def_cfa_register 7
 248 0006 7860     		str	r0, [r7, #4]
 113:FT_Esd_Framework/FT_Esd_Dl.h **** 	Ft_Esd_Dl_COLOR_RGB(c);
 249              		.loc 2 113 0
 250 0008 7868     		ldr	r0, [r7, #4]
 251 000a FFF7FEFF 		bl	Ft_Esd_Dl_COLOR_RGB
 114:FT_Esd_Framework/FT_Esd_Dl.h **** 	Ft_Esd_Dl_COLOR_A(c >> 24);
 252              		.loc 2 114 0
 253 000e 7B68     		ldr	r3, [r7, #4]
 254 0010 1B0E     		lsrs	r3, r3, #24
 255 0012 DBB2     		uxtb	r3, r3
 256 0014 1846     		mov	r0, r3
 257 0016 FFF7FEFF 		bl	Ft_Esd_Dl_COLOR_A
 115:FT_Esd_Framework/FT_Esd_Dl.h **** }
 258              		.loc 2 115 0
 259 001a 00BF     		nop
 260 001c 0837     		adds	r7, r7, #8
 261              	.LCFI19:
 262              		.cfi_def_cfa_offset 8
 263 001e BD46     		mov	sp, r7
 264              	.LCFI20:
 265              		.cfi_def_cfa_register 13
 266              		@ sp needed
 267 0020 80BD     		pop	{r7, pc}
 268              		.cfi_endproc
 269              	.LFE18:
 271              		.section	.text.Ft_Esd_Dl_BITMAP_HANDLE,"ax",%progbits
 272              		.align	1
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu fpv5-sp-d16
 278              	Ft_Esd_Dl_BITMAP_HANDLE:
 279              	.LFB19:
 116:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify bitmap handle, see BITMAP_HANDLE
 117:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_BITMAP_HANDLE, Type = ft_void_t, Category = EveRenderFunctions, Inline)
 118:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(handle, Type = ft_uint8_t, Min = 0, Max = 31)
 119:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_BITMAP_HANDLE(ft_uint8_t handle)
 120:FT_Esd_Framework/FT_Esd_Dl.h **** {
 280              		.loc 2 120 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 8
 283              		@ frame_needed = 1, uses_anonymous_args = 0
 284 0000 80B5     		push	{r7, lr}
 285              	.LCFI21:
 286              		.cfi_def_cfa_offset 8
 287              		.cfi_offset 7, -8
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 10


 288              		.cfi_offset 14, -4
 289 0002 82B0     		sub	sp, sp, #8
 290              	.LCFI22:
 291              		.cfi_def_cfa_offset 16
 292 0004 00AF     		add	r7, sp, #0
 293              	.LCFI23:
 294              		.cfi_def_cfa_register 7
 295 0006 0346     		mov	r3, r0
 296 0008 FB71     		strb	r3, [r7, #7]
 121:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 122:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (handle != FT_ESD_STATE.Handle)
 297              		.loc 2 122 0
 298 000a 104B     		ldr	r3, .L18
 299 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 300 000e 104A     		ldr	r2, .L18+4
 301 0010 1B01     		lsls	r3, r3, #4
 302 0012 1344     		add	r3, r3, r2
 303 0014 0933     		adds	r3, r3, #9
 304 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 305 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 306 001a 9A42     		cmp	r2, r3
 307 001c 12D0     		beq	.L17
 123:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
 124:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 125:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, BITMAP_HANDLE(handle));
 308              		.loc 2 125 0
 309 001e 0D4B     		ldr	r3, .L18+8
 310 0020 1A68     		ldr	r2, [r3]
 311 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 312 0024 03F01F03 		and	r3, r3, #31
 313 0028 43F0A063 		orr	r3, r3, #83886080
 314 002c 1946     		mov	r1, r3
 315 002e 1046     		mov	r0, r2
 316 0030 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 126:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 127:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.Handle = handle;
 317              		.loc 2 127 0
 318 0034 054B     		ldr	r3, .L18
 319 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 320 0038 054A     		ldr	r2, .L18+4
 321 003a 1B01     		lsls	r3, r3, #4
 322 003c 1344     		add	r3, r3, r2
 323 003e 0933     		adds	r3, r3, #9
 324 0040 FA79     		ldrb	r2, [r7, #7]
 325 0042 1A70     		strb	r2, [r3]
 326              	.L17:
 128:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
 129:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 130:FT_Esd_Framework/FT_Esd_Dl.h **** }
 327              		.loc 2 130 0
 328 0044 00BF     		nop
 329 0046 0837     		adds	r7, r7, #8
 330              	.LCFI24:
 331              		.cfi_def_cfa_offset 8
 332 0048 BD46     		mov	sp, r7
 333              	.LCFI25:
 334              		.cfi_def_cfa_register 13
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 11


 335              		@ sp needed
 336 004a 80BD     		pop	{r7, pc}
 337              	.L19:
 338              		.align	2
 339              	.L18:
 340 004c 00000000 		.word	Ft_Esd_GpuState_I
 341 0050 00000000 		.word	Ft_Esd_GpuState
 342 0054 00000000 		.word	Ft_Esd_Host
 343              		.cfi_endproc
 344              	.LFE19:
 346              		.section	.text.Ft_Esd_Dl_CELL,"ax",%progbits
 347              		.align	1
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 351              		.fpu fpv5-sp-d16
 353              	Ft_Esd_Dl_CELL:
 354              	.LFB20:
 131:FT_Esd_Framework/FT_Esd_Dl.h **** 
 132:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify cell number for bitmap, see CELL 
 133:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_CELL, Type = ft_void_t, Category = EveRenderFunctions, Inline)
 134:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(cell, Type = ft_uint8_t, Min = 0, Max = 255)
 135:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_CELL(ft_uint8_t cell)
 136:FT_Esd_Framework/FT_Esd_Dl.h **** {
 355              		.loc 2 136 0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 8
 358              		@ frame_needed = 1, uses_anonymous_args = 0
 359 0000 80B5     		push	{r7, lr}
 360              	.LCFI26:
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 7, -8
 363              		.cfi_offset 14, -4
 364 0002 82B0     		sub	sp, sp, #8
 365              	.LCFI27:
 366              		.cfi_def_cfa_offset 16
 367 0004 00AF     		add	r7, sp, #0
 368              	.LCFI28:
 369              		.cfi_def_cfa_register 7
 370 0006 0346     		mov	r3, r0
 371 0008 FB71     		strb	r3, [r7, #7]
 137:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 138:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (cell != FT_ESD_STATE.Cell)
 372              		.loc 2 138 0
 373 000a 104B     		ldr	r3, .L23
 374 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 375 000e 104A     		ldr	r2, .L23+4
 376 0010 1B01     		lsls	r3, r3, #4
 377 0012 1344     		add	r3, r3, r2
 378 0014 0A33     		adds	r3, r3, #10
 379 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 380 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 381 001a 9A42     		cmp	r2, r3
 382 001c 12D0     		beq	.L22
 139:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
 140:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 141:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, CELL(cell));
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 12


 383              		.loc 2 141 0
 384 001e 0D4B     		ldr	r3, .L23+8
 385 0020 1A68     		ldr	r2, [r3]
 386 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 387 0024 03F07F03 		and	r3, r3, #127
 388 0028 43F0C063 		orr	r3, r3, #100663296
 389 002c 1946     		mov	r1, r3
 390 002e 1046     		mov	r0, r2
 391 0030 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 142:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 143:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.Cell = cell;
 392              		.loc 2 143 0
 393 0034 054B     		ldr	r3, .L23
 394 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 395 0038 054A     		ldr	r2, .L23+4
 396 003a 1B01     		lsls	r3, r3, #4
 397 003c 1344     		add	r3, r3, r2
 398 003e 0A33     		adds	r3, r3, #10
 399 0040 FA79     		ldrb	r2, [r7, #7]
 400 0042 1A70     		strb	r2, [r3]
 401              	.L22:
 144:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
 145:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 146:FT_Esd_Framework/FT_Esd_Dl.h **** }
 402              		.loc 2 146 0
 403 0044 00BF     		nop
 404 0046 0837     		adds	r7, r7, #8
 405              	.LCFI29:
 406              		.cfi_def_cfa_offset 8
 407 0048 BD46     		mov	sp, r7
 408              	.LCFI30:
 409              		.cfi_def_cfa_register 13
 410              		@ sp needed
 411 004a 80BD     		pop	{r7, pc}
 412              	.L24:
 413              		.align	2
 414              	.L23:
 415 004c 00000000 		.word	Ft_Esd_GpuState_I
 416 0050 00000000 		.word	Ft_Esd_GpuState
 417 0054 00000000 		.word	Ft_Esd_Host
 418              		.cfi_endproc
 419              	.LFE20:
 421              		.section	.text.Ft_Esd_Dl_SAVE_CONTEXT,"ax",%progbits
 422              		.align	1
 423              		.syntax unified
 424              		.thumb
 425              		.thumb_func
 426              		.fpu fpv5-sp-d16
 428              	Ft_Esd_Dl_SAVE_CONTEXT:
 429              	.LFB21:
 147:FT_Esd_Framework/FT_Esd_Dl.h **** //Save EVE context, see SAVE_CONTEXT
 148:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_SAVE_CONTEXT, Type = ft_void_t, Category = EveRenderFunctions, Inline)
 149:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_SAVE_CONTEXT()
 150:FT_Esd_Framework/FT_Esd_Dl.h **** {
 430              		.loc 2 150 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 13


 433              		@ frame_needed = 1, uses_anonymous_args = 0
 434 0000 90B5     		push	{r4, r7, lr}
 435              	.LCFI31:
 436              		.cfi_def_cfa_offset 12
 437              		.cfi_offset 4, -12
 438              		.cfi_offset 7, -8
 439              		.cfi_offset 14, -4
 440 0002 83B0     		sub	sp, sp, #12
 441              	.LCFI32:
 442              		.cfi_def_cfa_offset 24
 443 0004 00AF     		add	r7, sp, #0
 444              	.LCFI33:
 445              		.cfi_def_cfa_register 7
 151:FT_Esd_Framework/FT_Esd_Dl.h **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, SAVE_CONTEXT());
 446              		.loc 2 151 0
 447 0006 114B     		ldr	r3, .L28
 448 0008 1B68     		ldr	r3, [r3]
 449 000a 4FF00851 		mov	r1, #570425344
 450 000e 1846     		mov	r0, r3
 451 0010 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 152:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 153:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t nextState = Ft_Esd_GpuState_I + 1;
 452              		.loc 2 153 0
 453 0014 0E4B     		ldr	r3, .L28+4
 454 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 455 0018 0133     		adds	r3, r3, #1
 456 001a FB71     		strb	r3, [r7, #7]
 154:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (nextState < FT_ESD_STATE_STACK_SIZE)
 457              		.loc 2 154 0
 458 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 459 001e 042B     		cmp	r3, #4
 460 0020 10D8     		bhi	.L27
 155:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
 156:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Esd_GpuState[nextState] = Ft_Esd_GpuState[Ft_Esd_GpuState_I];
 461              		.loc 2 156 0
 462 0022 0B4B     		ldr	r3, .L28+4
 463 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 464 0026 1846     		mov	r0, r3
 465 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 466 002a 0A4A     		ldr	r2, .L28+8
 467 002c 1B01     		lsls	r3, r3, #4
 468 002e D118     		adds	r1, r2, r3
 469 0030 084A     		ldr	r2, .L28+8
 470 0032 0301     		lsls	r3, r0, #4
 471 0034 1344     		add	r3, r3, r2
 472 0036 0C46     		mov	r4, r1
 473 0038 0FCB     		ldm	r3, {r0, r1, r2, r3}
 474 003a 84E80F00 		stm	r4, {r0, r1, r2, r3}
 157:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Esd_GpuState_I = nextState;
 475              		.loc 2 157 0
 476 003e 044A     		ldr	r2, .L28+4
 477 0040 FB79     		ldrb	r3, [r7, #7]
 478 0042 1370     		strb	r3, [r2]
 479              	.L27:
 158:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
 159:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 160:FT_Esd_Framework/FT_Esd_Dl.h **** }
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 14


 480              		.loc 2 160 0
 481 0044 00BF     		nop
 482 0046 0C37     		adds	r7, r7, #12
 483              	.LCFI34:
 484              		.cfi_def_cfa_offset 12
 485 0048 BD46     		mov	sp, r7
 486              	.LCFI35:
 487              		.cfi_def_cfa_register 13
 488              		@ sp needed
 489 004a 90BD     		pop	{r4, r7, pc}
 490              	.L29:
 491              		.align	2
 492              	.L28:
 493 004c 00000000 		.word	Ft_Esd_Host
 494 0050 00000000 		.word	Ft_Esd_GpuState_I
 495 0054 00000000 		.word	Ft_Esd_GpuState
 496              		.cfi_endproc
 497              	.LFE21:
 499              		.section	.text.Ft_Esd_Dl_RESTORE_CONTEXT,"ax",%progbits
 500              		.align	1
 501              		.syntax unified
 502              		.thumb
 503              		.thumb_func
 504              		.fpu fpv5-sp-d16
 506              	Ft_Esd_Dl_RESTORE_CONTEXT:
 507              	.LFB22:
 161:FT_Esd_Framework/FT_Esd_Dl.h **** //Restore EVE context, see RESTORE_CONTEXT
 162:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_RESTORE_CONTEXT, Type = ft_void_t, Category = EveRenderFunctions, Inline)
 163:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_RESTORE_CONTEXT()
 164:FT_Esd_Framework/FT_Esd_Dl.h **** {
 508              		.loc 2 164 0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 0
 511              		@ frame_needed = 1, uses_anonymous_args = 0
 512 0000 80B5     		push	{r7, lr}
 513              	.LCFI36:
 514              		.cfi_def_cfa_offset 8
 515              		.cfi_offset 7, -8
 516              		.cfi_offset 14, -4
 517 0002 00AF     		add	r7, sp, #0
 518              	.LCFI37:
 519              		.cfi_def_cfa_register 7
 165:FT_Esd_Framework/FT_Esd_Dl.h **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, RESTORE_CONTEXT());
 520              		.loc 2 165 0
 521 0004 094B     		ldr	r3, .L33
 522 0006 1B68     		ldr	r3, [r3]
 523 0008 4FF00C51 		mov	r1, #587202560
 524 000c 1846     		mov	r0, r3
 525 000e FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 166:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 167:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (Ft_Esd_GpuState_I > 0)
 526              		.loc 2 167 0
 527 0012 074B     		ldr	r3, .L33+4
 528 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 529 0016 002B     		cmp	r3, #0
 530 0018 05D0     		beq	.L32
 168:FT_Esd_Framework/FT_Esd_Dl.h **** 		--Ft_Esd_GpuState_I;
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 15


 531              		.loc 2 168 0
 532 001a 054B     		ldr	r3, .L33+4
 533 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 534 001e 013B     		subs	r3, r3, #1
 535 0020 DAB2     		uxtb	r2, r3
 536 0022 034B     		ldr	r3, .L33+4
 537 0024 1A70     		strb	r2, [r3]
 538              	.L32:
 169:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 170:FT_Esd_Framework/FT_Esd_Dl.h **** }
 539              		.loc 2 170 0
 540 0026 00BF     		nop
 541 0028 80BD     		pop	{r7, pc}
 542              	.L34:
 543 002a 00BF     		.align	2
 544              	.L33:
 545 002c 00000000 		.word	Ft_Esd_Host
 546 0030 00000000 		.word	Ft_Esd_GpuState_I
 547              		.cfi_endproc
 548              	.LFE22:
 550              		.section	.text.Ft_Esd_Dl_VERTEX_FORMAT,"ax",%progbits
 551              		.align	1
 552              		.syntax unified
 553              		.thumb
 554              		.thumb_func
 555              		.fpu fpv5-sp-d16
 557              	Ft_Esd_Dl_VERTEX_FORMAT:
 558              	.LFB23:
 171:FT_Esd_Framework/FT_Esd_Dl.h **** 
 172:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify vertex format , see VERTEX_FORMAT command
 173:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_VERTEX_FORMAT, Type = ft_void_t, Category = EveRenderFunctions, Inline)
 174:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(frac, Type = ft_uint8_t, Min = 0, Max = 4)
 175:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_VERTEX_FORMAT(ft_uint8_t frac)
 176:FT_Esd_Framework/FT_Esd_Dl.h **** {
 559              		.loc 2 176 0
 560              		.cfi_startproc
 561              		@ args = 0, pretend = 0, frame = 8
 562              		@ frame_needed = 1, uses_anonymous_args = 0
 563 0000 80B5     		push	{r7, lr}
 564              	.LCFI38:
 565              		.cfi_def_cfa_offset 8
 566              		.cfi_offset 7, -8
 567              		.cfi_offset 14, -4
 568 0002 82B0     		sub	sp, sp, #8
 569              	.LCFI39:
 570              		.cfi_def_cfa_offset 16
 571 0004 00AF     		add	r7, sp, #0
 572              	.LCFI40:
 573              		.cfi_def_cfa_register 7
 574 0006 0346     		mov	r3, r0
 575 0008 FB71     		strb	r3, [r7, #7]
 177:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 178:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (frac != FT_ESD_STATE.VertexFormat)
 576              		.loc 2 178 0
 577 000a 104B     		ldr	r3, .L38
 578 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 579 000e 104A     		ldr	r2, .L38+4
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 16


 580 0010 1B01     		lsls	r3, r3, #4
 581 0012 1344     		add	r3, r3, r2
 582 0014 0C33     		adds	r3, r3, #12
 583 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 584 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 585 001a 9A42     		cmp	r2, r3
 586 001c 12D0     		beq	.L37
 179:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
 180:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 181:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, VERTEX_FORMAT(frac));
 587              		.loc 2 181 0
 588 001e 0D4B     		ldr	r3, .L38+8
 589 0020 1A68     		ldr	r2, [r3]
 590 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 591 0024 03F00703 		and	r3, r3, #7
 592 0028 43F01C53 		orr	r3, r3, #654311424
 593 002c 1946     		mov	r1, r3
 594 002e 1046     		mov	r0, r2
 595 0030 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 182:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 183:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.VertexFormat = frac;
 596              		.loc 2 183 0
 597 0034 054B     		ldr	r3, .L38
 598 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 599 0038 054A     		ldr	r2, .L38+4
 600 003a 1B01     		lsls	r3, r3, #4
 601 003c 1344     		add	r3, r3, r2
 602 003e 0C33     		adds	r3, r3, #12
 603 0040 FA79     		ldrb	r2, [r7, #7]
 604 0042 1A70     		strb	r2, [r3]
 605              	.L37:
 184:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
 185:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 186:FT_Esd_Framework/FT_Esd_Dl.h **** }
 606              		.loc 2 186 0
 607 0044 00BF     		nop
 608 0046 0837     		adds	r7, r7, #8
 609              	.LCFI41:
 610              		.cfi_def_cfa_offset 8
 611 0048 BD46     		mov	sp, r7
 612              	.LCFI42:
 613              		.cfi_def_cfa_register 13
 614              		@ sp needed
 615 004a 80BD     		pop	{r7, pc}
 616              	.L39:
 617              		.align	2
 618              	.L38:
 619 004c 00000000 		.word	Ft_Esd_GpuState_I
 620 0050 00000000 		.word	Ft_Esd_GpuState
 621 0054 00000000 		.word	Ft_Esd_Host
 622              		.cfi_endproc
 623              	.LFE23:
 625              		.section	.text.Ft_Esd_Dl_LINE_WIDTH,"ax",%progbits
 626              		.align	1
 627              		.syntax unified
 628              		.thumb
 629              		.thumb_func
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 17


 630              		.fpu fpv5-sp-d16
 632              	Ft_Esd_Dl_LINE_WIDTH:
 633              	.LFB25:
 187:FT_Esd_Framework/FT_Esd_Dl.h **** 
 188:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify vertex format , see VERTEX_FORMAT command
 189:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_PALETTE_SOURCE, Type = ft_void_t, Category = EveRenderFunctions, Inline)
 190:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(addr, Type = ft_uint32_t, Min = 0)
 191:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_PALETTE_SOURCE(ft_uint32_t addr)
 192:FT_Esd_Framework/FT_Esd_Dl.h **** {
 193:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 194:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (addr != FT_ESD_STATE.PaletteSource)
 195:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
 196:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 197:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, PALETTE_SOURCE(addr));
 198:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 199:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.PaletteSource = addr;
 200:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
 201:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 202:FT_Esd_Framework/FT_Esd_Dl.h **** }
 203:FT_Esd_Framework/FT_Esd_Dl.h **** 
 204:FT_Esd_Framework/FT_Esd_Dl.h **** // Prepares a valid handle for a bitmap. Call during render to get bitmap handle. Does not necessar
 205:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_Bitmap_Setup, Type = ft_uint8_t, DisplayName = "Ft_Esd_Dl_Bitmap_Setup", Cat
 206:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(bitmapInfo, Type = Ft_Esd_BitmapInfo *)
 207:FT_Esd_Framework/FT_Esd_Dl.h **** ft_uint8_t Ft_Esd_Dl_Bitmap_Setup(Ft_Esd_BitmapInfo *bitmapInfo);
 208:FT_Esd_Framework/FT_Esd_Dl.h **** 
 209:FT_Esd_Framework/FT_Esd_Dl.h **** void Ft_Esd_Dl_Bitmap_WidthHeight(ft_uint8_t handle, ft_uint16_t width, ft_uint16_t height);
 210:FT_Esd_Framework/FT_Esd_Dl.h **** void Ft_Esd_Dl_Bitmap_WidthHeightReset(ft_uint8_t handle);
 211:FT_Esd_Framework/FT_Esd_Dl.h **** 
 212:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify line width in subpixel format
 213:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_LINE_WIDTH, Type = ft_void_t, Category = EveRenderFunctions, Inline)
 214:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(width, Type = ft_int32_f4_t)
 215:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_LINE_WIDTH(ft_int32_f4_t width) { Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host,
 634              		.loc 2 215 0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 8
 637              		@ frame_needed = 1, uses_anonymous_args = 0
 638 0000 80B5     		push	{r7, lr}
 639              	.LCFI43:
 640              		.cfi_def_cfa_offset 8
 641              		.cfi_offset 7, -8
 642              		.cfi_offset 14, -4
 643 0002 82B0     		sub	sp, sp, #8
 644              	.LCFI44:
 645              		.cfi_def_cfa_offset 16
 646 0004 00AF     		add	r7, sp, #0
 647              	.LCFI45:
 648              		.cfi_def_cfa_register 7
 649 0006 7860     		str	r0, [r7, #4]
 650              		.loc 2 215 0
 651 0008 074B     		ldr	r3, .L41
 652 000a 1A68     		ldr	r2, [r3]
 653 000c 7B68     		ldr	r3, [r7, #4]
 654 000e C3F30B03 		ubfx	r3, r3, #0, #12
 655 0012 43F06063 		orr	r3, r3, #234881024
 656 0016 1946     		mov	r1, r3
 657 0018 1046     		mov	r0, r2
 658 001a FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 18


 659 001e 00BF     		nop
 660 0020 0837     		adds	r7, r7, #8
 661              	.LCFI46:
 662              		.cfi_def_cfa_offset 8
 663 0022 BD46     		mov	sp, r7
 664              	.LCFI47:
 665              		.cfi_def_cfa_register 13
 666              		@ sp needed
 667 0024 80BD     		pop	{r7, pc}
 668              	.L42:
 669 0026 00BF     		.align	2
 670              	.L41:
 671 0028 00000000 		.word	Ft_Esd_Host
 672              		.cfi_endproc
 673              	.LFE25:
 675              		.section	.text.Ft_Esd_Render_RectangleF,"ax",%progbits
 676              		.align	1
 677              		.global	Ft_Esd_Render_RectangleF
 678              		.syntax unified
 679              		.thumb
 680              		.thumb_func
 681              		.fpu fpv5-sp-d16
 683              	Ft_Esd_Render_RectangleF:
 684              	.LFB26:
 685              		.file 3 "FT_Esd_Framework/FT_Esd_Primitives.c"
   1:FT_Esd_Framework/FT_Esd_Primitives.c **** 
   2:FT_Esd_Framework/FT_Esd_Primitives.c **** #include "FT_Platform.h"
   3:FT_Esd_Framework/FT_Esd_Primitives.c **** #include "FT_Gpu_Hal.h"
   4:FT_Esd_Framework/FT_Esd_Primitives.c **** #include "FT_Esd_Primitives.h"
   5:FT_Esd_Framework/FT_Esd_Primitives.c **** #include "FT_Esd_Dl.h"
   6:FT_Esd_Framework/FT_Esd_Primitives.c **** 
   7:FT_Esd_Framework/FT_Esd_Primitives.c **** extern Ft_Gpu_Hal_Context_t *Ft_Esd_Host;
   8:FT_Esd_Framework/FT_Esd_Primitives.c **** 
   9:FT_Esd_Framework/FT_Esd_Primitives.c **** #define FT_ESD_DL_END 0
  10:FT_Esd_Framework/FT_Esd_Primitives.c **** 
  11:FT_Esd_Framework/FT_Esd_Primitives.c **** // Rectangle drawing with some logic to convert from radius to line width and width height to posit
  12:FT_Esd_Framework/FT_Esd_Primitives.c **** ft_void_t Ft_Esd_Render_RectangleF(ft_int32_f4_t x, ft_int32_f4_t y, ft_int32_f4_t w, ft_int32_f4_t
  13:FT_Esd_Framework/FT_Esd_Primitives.c **** {
 686              		.loc 3 13 0
 687              		.cfi_startproc
 688              		@ args = 8, pretend = 0, frame = 40
 689              		@ frame_needed = 1, uses_anonymous_args = 0
 690 0000 80B5     		push	{r7, lr}
 691              	.LCFI48:
 692              		.cfi_def_cfa_offset 8
 693              		.cfi_offset 7, -8
 694              		.cfi_offset 14, -4
 695 0002 8AB0     		sub	sp, sp, #40
 696              	.LCFI49:
 697              		.cfi_def_cfa_offset 48
 698 0004 00AF     		add	r7, sp, #0
 699              	.LCFI50:
 700              		.cfi_def_cfa_register 7
 701 0006 F860     		str	r0, [r7, #12]
 702 0008 B960     		str	r1, [r7, #8]
 703 000a 7A60     		str	r2, [r7, #4]
 704 000c 3B60     		str	r3, [r7]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 19


  14:FT_Esd_Framework/FT_Esd_Primitives.c **** 	Ft_Gpu_Hal_Context_t *phost = Ft_Esd_Host;
 705              		.loc 3 14 0
 706 000e 254B     		ldr	r3, .L44
 707 0010 1B68     		ldr	r3, [r3]
 708 0012 7B62     		str	r3, [r7, #36]
  15:FT_Esd_Framework/FT_Esd_Primitives.c **** 	ft_int32_t width = radius + 8;
 709              		.loc 3 15 0
 710 0014 3B6B     		ldr	r3, [r7, #48]
 711 0016 0833     		adds	r3, r3, #8
 712 0018 3B62     		str	r3, [r7, #32]
  16:FT_Esd_Framework/FT_Esd_Primitives.c **** 	ft_int32_t x0 = x + radius;
 713              		.loc 3 16 0
 714 001a FA68     		ldr	r2, [r7, #12]
 715 001c 3B6B     		ldr	r3, [r7, #48]
 716 001e 1344     		add	r3, r3, r2
 717 0020 FB61     		str	r3, [r7, #28]
  17:FT_Esd_Framework/FT_Esd_Primitives.c **** 	ft_int32_t y0 = y + radius;
 718              		.loc 3 17 0
 719 0022 BA68     		ldr	r2, [r7, #8]
 720 0024 3B6B     		ldr	r3, [r7, #48]
 721 0026 1344     		add	r3, r3, r2
 722 0028 BB61     		str	r3, [r7, #24]
  18:FT_Esd_Framework/FT_Esd_Primitives.c **** 	ft_int32_t x1 = x + w - 16 - radius;
 723              		.loc 3 18 0
 724 002a FA68     		ldr	r2, [r7, #12]
 725 002c 7B68     		ldr	r3, [r7, #4]
 726 002e 1344     		add	r3, r3, r2
 727 0030 A3F11002 		sub	r2, r3, #16
 728 0034 3B6B     		ldr	r3, [r7, #48]
 729 0036 D31A     		subs	r3, r2, r3
 730 0038 7B61     		str	r3, [r7, #20]
  19:FT_Esd_Framework/FT_Esd_Primitives.c **** 	ft_int32_t y1 = y + h - 16 - radius;
 731              		.loc 3 19 0
 732 003a BA68     		ldr	r2, [r7, #8]
 733 003c 3B68     		ldr	r3, [r7]
 734 003e 1344     		add	r3, r3, r2
 735 0040 A3F11002 		sub	r2, r3, #16
 736 0044 3B6B     		ldr	r3, [r7, #48]
 737 0046 D31A     		subs	r3, r2, r3
 738 0048 3B61     		str	r3, [r7, #16]
  20:FT_Esd_Framework/FT_Esd_Primitives.c **** 	Ft_Esd_Dl_COLOR_ARGB(color);
 739              		.loc 3 20 0
 740 004a 786B     		ldr	r0, [r7, #52]
 741 004c FFF7FEFF 		bl	Ft_Esd_Dl_COLOR_ARGB
  21:FT_Esd_Framework/FT_Esd_Primitives.c **** 	Ft_Esd_Dl_LINE_WIDTH(width);
 742              		.loc 3 21 0
 743 0050 386A     		ldr	r0, [r7, #32]
 744 0052 FFF7FEFF 		bl	Ft_Esd_Dl_LINE_WIDTH
  22:FT_Esd_Framework/FT_Esd_Primitives.c **** 	Ft_Gpu_Hal_WrCmd32(phost, BEGIN(RECTS));
 745              		.loc 3 22 0
 746 0056 1449     		ldr	r1, .L44+4
 747 0058 786A     		ldr	r0, [r7, #36]
 748 005a FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  23:FT_Esd_Framework/FT_Esd_Primitives.c **** #ifdef FT_81X_ENABLE
  24:FT_Esd_Framework/FT_Esd_Primitives.c **** 	Ft_Esd_Dl_VERTEX_FORMAT(4);
 749              		.loc 3 24 0
 750 005e 0420     		movs	r0, #4
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 20


 751 0060 FFF7FEFF 		bl	Ft_Esd_Dl_VERTEX_FORMAT
  25:FT_Esd_Framework/FT_Esd_Primitives.c **** #endif
  26:FT_Esd_Framework/FT_Esd_Primitives.c **** 	Ft_Gpu_Hal_WrCmd32(phost, VERTEX2F(x0, y0));
 752              		.loc 3 26 0
 753 0064 FB69     		ldr	r3, [r7, #28]
 754 0066 DA03     		lsls	r2, r3, #15
 755 0068 104B     		ldr	r3, .L44+8
 756 006a 1340     		ands	r3, r3, r2
 757 006c BA69     		ldr	r2, [r7, #24]
 758 006e C2F30E02 		ubfx	r2, r2, #0, #15
 759 0072 1343     		orrs	r3, r3, r2
 760 0074 43F08043 		orr	r3, r3, #1073741824
 761 0078 1946     		mov	r1, r3
 762 007a 786A     		ldr	r0, [r7, #36]
 763 007c FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  27:FT_Esd_Framework/FT_Esd_Primitives.c **** 	Ft_Gpu_Hal_WrCmd32(phost, VERTEX2F(x1, y1));
 764              		.loc 3 27 0
 765 0080 7B69     		ldr	r3, [r7, #20]
 766 0082 DA03     		lsls	r2, r3, #15
 767 0084 094B     		ldr	r3, .L44+8
 768 0086 1340     		ands	r3, r3, r2
 769 0088 3A69     		ldr	r2, [r7, #16]
 770 008a C2F30E02 		ubfx	r2, r2, #0, #15
 771 008e 1343     		orrs	r3, r3, r2
 772 0090 43F08043 		orr	r3, r3, #1073741824
 773 0094 1946     		mov	r1, r3
 774 0096 786A     		ldr	r0, [r7, #36]
 775 0098 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  28:FT_Esd_Framework/FT_Esd_Primitives.c **** #if FT_ESD_DL_END
  29:FT_Esd_Framework/FT_Esd_Primitives.c **** 	Ft_Gpu_Hal_WrCmd32(phost, END());
  30:FT_Esd_Framework/FT_Esd_Primitives.c **** #endif
  31:FT_Esd_Framework/FT_Esd_Primitives.c **** }
 776              		.loc 3 31 0
 777 009c 00BF     		nop
 778 009e 2837     		adds	r7, r7, #40
 779              	.LCFI51:
 780              		.cfi_def_cfa_offset 8
 781 00a0 BD46     		mov	sp, r7
 782              	.LCFI52:
 783              		.cfi_def_cfa_register 13
 784              		@ sp needed
 785 00a2 80BD     		pop	{r7, pc}
 786              	.L45:
 787              		.align	2
 788              	.L44:
 789 00a4 00000000 		.word	Ft_Esd_Host
 790 00a8 0900001F 		.word	520093705
 791 00ac 0080FF3F 		.word	1073709056
 792              		.cfi_endproc
 793              	.LFE26:
 795              		.section	.text.Ft_Esd_Render_LineF,"ax",%progbits
 796              		.align	1
 797              		.global	Ft_Esd_Render_LineF
 798              		.syntax unified
 799              		.thumb
 800              		.thumb_func
 801              		.fpu fpv5-sp-d16
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 21


 803              	Ft_Esd_Render_LineF:
 804              	.LFB27:
  32:FT_Esd_Framework/FT_Esd_Primitives.c **** 
  33:FT_Esd_Framework/FT_Esd_Primitives.c **** ft_void_t Ft_Esd_Render_LineF(ft_int32_f4_t x0, ft_int32_f4_t y0, ft_int32_f4_t x1, ft_int32_f4_t y
  34:FT_Esd_Framework/FT_Esd_Primitives.c **** {
 805              		.loc 3 34 0
 806              		.cfi_startproc
 807              		@ args = 8, pretend = 0, frame = 24
 808              		@ frame_needed = 1, uses_anonymous_args = 0
 809 0000 80B5     		push	{r7, lr}
 810              	.LCFI53:
 811              		.cfi_def_cfa_offset 8
 812              		.cfi_offset 7, -8
 813              		.cfi_offset 14, -4
 814 0002 86B0     		sub	sp, sp, #24
 815              	.LCFI54:
 816              		.cfi_def_cfa_offset 32
 817 0004 00AF     		add	r7, sp, #0
 818              	.LCFI55:
 819              		.cfi_def_cfa_register 7
 820 0006 F860     		str	r0, [r7, #12]
 821 0008 B960     		str	r1, [r7, #8]
 822 000a 7A60     		str	r2, [r7, #4]
 823 000c 3B60     		str	r3, [r7]
  35:FT_Esd_Framework/FT_Esd_Primitives.c **** 	Ft_Gpu_Hal_Context_t *phost = Ft_Esd_Host;
 824              		.loc 3 35 0
 825 000e 184B     		ldr	r3, .L47
 826 0010 1B68     		ldr	r3, [r3]
 827 0012 7B61     		str	r3, [r7, #20]
  36:FT_Esd_Framework/FT_Esd_Primitives.c **** 	Ft_Esd_Dl_COLOR_ARGB(color);
 828              		.loc 3 36 0
 829 0014 786A     		ldr	r0, [r7, #36]
 830 0016 FFF7FEFF 		bl	Ft_Esd_Dl_COLOR_ARGB
  37:FT_Esd_Framework/FT_Esd_Primitives.c **** 	Ft_Esd_Dl_LINE_WIDTH(width);
 831              		.loc 3 37 0
 832 001a 386A     		ldr	r0, [r7, #32]
 833 001c FFF7FEFF 		bl	Ft_Esd_Dl_LINE_WIDTH
  38:FT_Esd_Framework/FT_Esd_Primitives.c **** 	Ft_Gpu_Hal_WrCmd32(phost, BEGIN(LINES));
 834              		.loc 3 38 0
 835 0020 1449     		ldr	r1, .L47+4
 836 0022 7869     		ldr	r0, [r7, #20]
 837 0024 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  39:FT_Esd_Framework/FT_Esd_Primitives.c **** #ifdef FT_81X_ENABLE
  40:FT_Esd_Framework/FT_Esd_Primitives.c **** 	Ft_Esd_Dl_VERTEX_FORMAT(4);
 838              		.loc 3 40 0
 839 0028 0420     		movs	r0, #4
 840 002a FFF7FEFF 		bl	Ft_Esd_Dl_VERTEX_FORMAT
  41:FT_Esd_Framework/FT_Esd_Primitives.c **** #endif
  42:FT_Esd_Framework/FT_Esd_Primitives.c **** 	Ft_Gpu_Hal_WrCmd32(phost, VERTEX2F(x0, y0));
 841              		.loc 3 42 0
 842 002e FB68     		ldr	r3, [r7, #12]
 843 0030 DA03     		lsls	r2, r3, #15
 844 0032 114B     		ldr	r3, .L47+8
 845 0034 1340     		ands	r3, r3, r2
 846 0036 BA68     		ldr	r2, [r7, #8]
 847 0038 C2F30E02 		ubfx	r2, r2, #0, #15
 848 003c 1343     		orrs	r3, r3, r2
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 22


 849 003e 43F08043 		orr	r3, r3, #1073741824
 850 0042 1946     		mov	r1, r3
 851 0044 7869     		ldr	r0, [r7, #20]
 852 0046 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  43:FT_Esd_Framework/FT_Esd_Primitives.c **** 	Ft_Gpu_Hal_WrCmd32(phost, VERTEX2F(x1, y1));
 853              		.loc 3 43 0
 854 004a 7B68     		ldr	r3, [r7, #4]
 855 004c DA03     		lsls	r2, r3, #15
 856 004e 0A4B     		ldr	r3, .L47+8
 857 0050 1340     		ands	r3, r3, r2
 858 0052 3A68     		ldr	r2, [r7]
 859 0054 C2F30E02 		ubfx	r2, r2, #0, #15
 860 0058 1343     		orrs	r3, r3, r2
 861 005a 43F08043 		orr	r3, r3, #1073741824
 862 005e 1946     		mov	r1, r3
 863 0060 7869     		ldr	r0, [r7, #20]
 864 0062 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  44:FT_Esd_Framework/FT_Esd_Primitives.c **** #if FT_ESD_DL_END
  45:FT_Esd_Framework/FT_Esd_Primitives.c **** 	Ft_Gpu_Hal_WrCmd32(phost, END());
  46:FT_Esd_Framework/FT_Esd_Primitives.c **** #endif
  47:FT_Esd_Framework/FT_Esd_Primitives.c **** }
 865              		.loc 3 47 0
 866 0066 00BF     		nop
 867 0068 1837     		adds	r7, r7, #24
 868              	.LCFI56:
 869              		.cfi_def_cfa_offset 8
 870 006a BD46     		mov	sp, r7
 871              	.LCFI57:
 872              		.cfi_def_cfa_register 13
 873              		@ sp needed
 874 006c 80BD     		pop	{r7, pc}
 875              	.L48:
 876 006e 00BF     		.align	2
 877              	.L47:
 878 0070 00000000 		.word	Ft_Esd_Host
 879 0074 0300001F 		.word	520093699
 880 0078 0080FF3F 		.word	1073709056
 881              		.cfi_endproc
 882              	.LFE27:
 884              		.section	.text.Ft_Esd_Render_Bitmap,"ax",%progbits
 885              		.align	1
 886              		.global	Ft_Esd_Render_Bitmap
 887              		.syntax unified
 888              		.thumb
 889              		.thumb_func
 890              		.fpu fpv5-sp-d16
 892              	Ft_Esd_Render_Bitmap:
 893              	.LFB28:
  48:FT_Esd_Framework/FT_Esd_Primitives.c **** 
  49:FT_Esd_Framework/FT_Esd_Primitives.c **** void Ft_Esd_Render_Bitmap(ft_int16_t x, ft_int16_t y, Ft_Esd_BitmapCell *bitmapCell, ft_argb32_t c)
  50:FT_Esd_Framework/FT_Esd_Primitives.c **** {
 894              		.loc 3 50 0
 895              		.cfi_startproc
 896              		@ args = 0, pretend = 0, frame = 32
 897              		@ frame_needed = 1, uses_anonymous_args = 0
 898 0000 80B5     		push	{r7, lr}
 899              	.LCFI58:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 23


 900              		.cfi_def_cfa_offset 8
 901              		.cfi_offset 7, -8
 902              		.cfi_offset 14, -4
 903 0002 88B0     		sub	sp, sp, #32
 904              	.LCFI59:
 905              		.cfi_def_cfa_offset 40
 906 0004 00AF     		add	r7, sp, #0
 907              	.LCFI60:
 908              		.cfi_def_cfa_register 7
 909 0006 BA60     		str	r2, [r7, #8]
 910 0008 7B60     		str	r3, [r7, #4]
 911 000a 0346     		mov	r3, r0	@ movhi
 912 000c FB81     		strh	r3, [r7, #14]	@ movhi
 913 000e 0B46     		mov	r3, r1	@ movhi
 914 0010 BB81     		strh	r3, [r7, #12]	@ movhi
  51:FT_Esd_Framework/FT_Esd_Primitives.c **** 	if (!bitmapCell || !bitmapCell->Info)
 915              		.loc 3 51 0
 916 0012 BB68     		ldr	r3, [r7, #8]
 917 0014 002B     		cmp	r3, #0
 918 0016 64D0     		beq	.L55
 919              		.loc 3 51 0 is_stmt 0 discriminator 1
 920 0018 BB68     		ldr	r3, [r7, #8]
 921 001a 1B68     		ldr	r3, [r3]
 922 001c 002B     		cmp	r3, #0
 923 001e 60D0     		beq	.L55
  52:FT_Esd_Framework/FT_Esd_Primitives.c **** 		return;
  53:FT_Esd_Framework/FT_Esd_Primitives.c **** 
  54:FT_Esd_Framework/FT_Esd_Primitives.c **** 	Ft_Esd_BitmapInfo *bitmapInfo = bitmapCell->Info;
 924              		.loc 3 54 0 is_stmt 1
 925 0020 BB68     		ldr	r3, [r7, #8]
 926 0022 1B68     		ldr	r3, [r3]
 927 0024 FB61     		str	r3, [r7, #28]
  55:FT_Esd_Framework/FT_Esd_Primitives.c **** 	ft_uint8_t cell = bitmapCell->Cell;
 928              		.loc 3 55 0
 929 0026 BB68     		ldr	r3, [r7, #8]
 930 0028 5B68     		ldr	r3, [r3, #4]
 931 002a FB76     		strb	r3, [r7, #27]
  56:FT_Esd_Framework/FT_Esd_Primitives.c **** 	Ft_Gpu_Hal_Context_t *phost = Ft_Esd_Host;
 932              		.loc 3 56 0
 933 002c 2F4B     		ldr	r3, .L56
 934 002e 1B68     		ldr	r3, [r3]
 935 0030 7B61     		str	r3, [r7, #20]
  57:FT_Esd_Framework/FT_Esd_Primitives.c **** 	ft_uint8_t handle = Ft_Esd_Dl_Bitmap_Setup(bitmapInfo);
 936              		.loc 3 57 0
 937 0032 F869     		ldr	r0, [r7, #28]
 938 0034 FFF7FEFF 		bl	Ft_Esd_Dl_Bitmap_Setup
 939 0038 0346     		mov	r3, r0
 940 003a FB74     		strb	r3, [r7, #19]
  58:FT_Esd_Framework/FT_Esd_Primitives.c **** 	if (handle != FT_ESD_BITMAPHANDLE_INVALID)
 941              		.loc 3 58 0
 942 003c FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 943 003e FF2B     		cmp	r3, #255
 944 0040 50D0     		beq	.L49
  59:FT_Esd_Framework/FT_Esd_Primitives.c **** 	{
  60:FT_Esd_Framework/FT_Esd_Primitives.c **** 		Ft_Esd_Dl_Bitmap_WidthHeightReset(handle);
 945              		.loc 3 60 0
 946 0042 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 24


 947 0044 1846     		mov	r0, r3
 948 0046 FFF7FEFF 		bl	Ft_Esd_Dl_Bitmap_WidthHeightReset
  61:FT_Esd_Framework/FT_Esd_Primitives.c **** 		Ft_Esd_Dl_COLOR_ARGB(c);
 949              		.loc 3 61 0
 950 004a 7868     		ldr	r0, [r7, #4]
 951 004c FFF7FEFF 		bl	Ft_Esd_Dl_COLOR_ARGB
  62:FT_Esd_Framework/FT_Esd_Primitives.c **** 		Ft_Gpu_Hal_WrCmd32(phost, BEGIN(BITMAPS));
 952              		.loc 3 62 0
 953 0050 2749     		ldr	r1, .L56+4
 954 0052 7869     		ldr	r0, [r7, #20]
 955 0054 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  63:FT_Esd_Framework/FT_Esd_Primitives.c **** #ifdef FT_81X_ENABLE
  64:FT_Esd_Framework/FT_Esd_Primitives.c **** 		if (x < 0 || y < 0 || x >= 512 || y >= 512)
 956              		.loc 3 64 0
 957 0058 B7F90E30 		ldrsh	r3, [r7, #14]
 958 005c 002B     		cmp	r3, #0
 959 005e 0DDB     		blt	.L53
 960              		.loc 3 64 0 is_stmt 0 discriminator 1
 961 0060 B7F90C30 		ldrsh	r3, [r7, #12]
 962 0064 002B     		cmp	r3, #0
 963 0066 09DB     		blt	.L53
 964              		.loc 3 64 0 discriminator 2
 965 0068 B7F90E30 		ldrsh	r3, [r7, #14]
 966 006c B3F5007F 		cmp	r3, #512
 967 0070 04DA     		bge	.L53
 968              		.loc 3 64 0 discriminator 3
 969 0072 B7F90C30 		ldrsh	r3, [r7, #12]
 970 0076 B3F5007F 		cmp	r3, #512
 971 007a 19DB     		blt	.L54
 972              	.L53:
  65:FT_Esd_Framework/FT_Esd_Primitives.c **** 		{
  66:FT_Esd_Framework/FT_Esd_Primitives.c **** 			Ft_Esd_Dl_VERTEX_FORMAT(0);
 973              		.loc 3 66 0 is_stmt 1
 974 007c 0020     		movs	r0, #0
 975 007e FFF7FEFF 		bl	Ft_Esd_Dl_VERTEX_FORMAT
  67:FT_Esd_Framework/FT_Esd_Primitives.c **** 			Ft_Esd_Dl_BITMAP_HANDLE(handle);
 976              		.loc 3 67 0
 977 0082 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 978 0084 1846     		mov	r0, r3
 979 0086 FFF7FEFF 		bl	Ft_Esd_Dl_BITMAP_HANDLE
  68:FT_Esd_Framework/FT_Esd_Primitives.c **** 			Ft_Esd_Dl_CELL(cell);
 980              		.loc 3 68 0
 981 008a FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 982 008c 1846     		mov	r0, r3
 983 008e FFF7FEFF 		bl	Ft_Esd_Dl_CELL
  69:FT_Esd_Framework/FT_Esd_Primitives.c **** 			Ft_Gpu_Hal_WrCmd32(phost, VERTEX2F(x, y));
 984              		.loc 3 69 0
 985 0092 FB89     		ldrh	r3, [r7, #14]
 986 0094 DA03     		lsls	r2, r3, #15
 987 0096 174B     		ldr	r3, .L56+8
 988 0098 1340     		ands	r3, r3, r2
 989 009a BA89     		ldrh	r2, [r7, #12]
 990 009c C2F30E02 		ubfx	r2, r2, #0, #15
 991 00a0 1343     		orrs	r3, r3, r2
 992 00a2 43F08043 		orr	r3, r3, #1073741824
 993 00a6 1946     		mov	r1, r3
 994 00a8 7869     		ldr	r0, [r7, #20]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 25


 995 00aa FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 996 00ae 19E0     		b	.L49
 997              	.L54:
  70:FT_Esd_Framework/FT_Esd_Primitives.c **** 		}
  71:FT_Esd_Framework/FT_Esd_Primitives.c **** 		else
  72:FT_Esd_Framework/FT_Esd_Primitives.c **** #endif
  73:FT_Esd_Framework/FT_Esd_Primitives.c **** 		{
  74:FT_Esd_Framework/FT_Esd_Primitives.c **** 			Ft_Gpu_Hal_WrCmd32(phost, VERTEX2II(x, y, handle, cell));
 998              		.loc 3 74 0
 999 00b0 FB89     		ldrh	r3, [r7, #14]
 1000 00b2 5B05     		lsls	r3, r3, #21
 1001 00b4 104A     		ldr	r2, .L56+12
 1002 00b6 1A40     		ands	r2, r2, r3
 1003 00b8 BB89     		ldrh	r3, [r7, #12]
 1004 00ba 1903     		lsls	r1, r3, #12
 1005 00bc 0F4B     		ldr	r3, .L56+16
 1006 00be 0B40     		ands	r3, r3, r1
 1007 00c0 1A43     		orrs	r2, r2, r3
 1008 00c2 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1009 00c4 DB01     		lsls	r3, r3, #7
 1010 00c6 03F47863 		and	r3, r3, #3968
 1011 00ca 1A43     		orrs	r2, r2, r3
 1012 00cc FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 1013 00ce 03F07F03 		and	r3, r3, #127
 1014 00d2 1343     		orrs	r3, r3, r2
 1015 00d4 43F00043 		orr	r3, r3, #-2147483648
 1016 00d8 1946     		mov	r1, r3
 1017 00da 7869     		ldr	r0, [r7, #20]
 1018 00dc FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 1019 00e0 00E0     		b	.L49
 1020              	.L55:
  52:FT_Esd_Framework/FT_Esd_Primitives.c **** 
 1021              		.loc 3 52 0
 1022 00e2 00BF     		nop
 1023              	.L49:
  75:FT_Esd_Framework/FT_Esd_Primitives.c **** 		}
  76:FT_Esd_Framework/FT_Esd_Primitives.c **** 	}
  77:FT_Esd_Framework/FT_Esd_Primitives.c **** }
 1024              		.loc 3 77 0
 1025 00e4 2037     		adds	r7, r7, #32
 1026              	.LCFI61:
 1027              		.cfi_def_cfa_offset 8
 1028 00e6 BD46     		mov	sp, r7
 1029              	.LCFI62:
 1030              		.cfi_def_cfa_register 13
 1031              		@ sp needed
 1032 00e8 80BD     		pop	{r7, pc}
 1033              	.L57:
 1034 00ea 00BF     		.align	2
 1035              	.L56:
 1036 00ec 00000000 		.word	Ft_Esd_Host
 1037 00f0 0100001F 		.word	520093697
 1038 00f4 0080FF3F 		.word	1073709056
 1039 00f8 0000E03F 		.word	1071644672
 1040 00fc 00F01F00 		.word	2093056
 1041              		.cfi_endproc
 1042              	.LFE28:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 26


 1044              		.section	.text.Ft_Esd_Render_BitmapScaled,"ax",%progbits
 1045              		.align	1
 1046              		.global	Ft_Esd_Render_BitmapScaled
 1047              		.syntax unified
 1048              		.thumb
 1049              		.thumb_func
 1050              		.fpu fpv5-sp-d16
 1052              	Ft_Esd_Render_BitmapScaled:
 1053              	.LFB29:
  78:FT_Esd_Framework/FT_Esd_Primitives.c **** 
  79:FT_Esd_Framework/FT_Esd_Primitives.c **** ft_void_t Ft_Esd_Render_BitmapScaled(ft_int16_t x, ft_int16_t y, Ft_Esd_BitmapCell *bitmapCell, ft_
  80:FT_Esd_Framework/FT_Esd_Primitives.c **** {
 1054              		.loc 3 80 0
 1055              		.cfi_startproc
 1056              		@ args = 24, pretend = 0, frame = 32
 1057              		@ frame_needed = 1, uses_anonymous_args = 0
 1058 0000 80B5     		push	{r7, lr}
 1059              	.LCFI63:
 1060              		.cfi_def_cfa_offset 8
 1061              		.cfi_offset 7, -8
 1062              		.cfi_offset 14, -4
 1063 0002 88B0     		sub	sp, sp, #32
 1064              	.LCFI64:
 1065              		.cfi_def_cfa_offset 40
 1066 0004 00AF     		add	r7, sp, #0
 1067              	.LCFI65:
 1068              		.cfi_def_cfa_register 7
 1069 0006 BA60     		str	r2, [r7, #8]
 1070 0008 7B60     		str	r3, [r7, #4]
 1071 000a 0346     		mov	r3, r0	@ movhi
 1072 000c FB81     		strh	r3, [r7, #14]	@ movhi
 1073 000e 0B46     		mov	r3, r1	@ movhi
 1074 0010 BB81     		strh	r3, [r7, #12]	@ movhi
  81:FT_Esd_Framework/FT_Esd_Primitives.c **** 	if (!bitmapCell || !bitmapCell->Info)
 1075              		.loc 3 81 0
 1076 0012 BB68     		ldr	r3, [r7, #8]
 1077 0014 002B     		cmp	r3, #0
 1078 0016 00F08380 		beq	.L65
 1079              		.loc 3 81 0 is_stmt 0 discriminator 1
 1080 001a BB68     		ldr	r3, [r7, #8]
 1081 001c 1B68     		ldr	r3, [r3]
 1082 001e 002B     		cmp	r3, #0
 1083 0020 7ED0     		beq	.L65
  82:FT_Esd_Framework/FT_Esd_Primitives.c **** 		return;
  83:FT_Esd_Framework/FT_Esd_Primitives.c **** 
  84:FT_Esd_Framework/FT_Esd_Primitives.c **** 	Ft_Esd_BitmapInfo *bitmapInfo = bitmapCell->Info;
 1084              		.loc 3 84 0 is_stmt 1
 1085 0022 BB68     		ldr	r3, [r7, #8]
 1086 0024 1B68     		ldr	r3, [r3]
 1087 0026 FB61     		str	r3, [r7, #28]
  85:FT_Esd_Framework/FT_Esd_Primitives.c **** 	ft_uint8_t cell = bitmapCell->Cell;
 1088              		.loc 3 85 0
 1089 0028 BB68     		ldr	r3, [r7, #8]
 1090 002a 5B68     		ldr	r3, [r3, #4]
 1091 002c FB76     		strb	r3, [r7, #27]
  86:FT_Esd_Framework/FT_Esd_Primitives.c **** 	Ft_Gpu_Hal_Context_t *phost = Ft_Esd_Host;
 1092              		.loc 3 86 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 27


 1093 002e 3E4B     		ldr	r3, .L66
 1094 0030 1B68     		ldr	r3, [r3]
 1095 0032 7B61     		str	r3, [r7, #20]
  87:FT_Esd_Framework/FT_Esd_Primitives.c **** 	ft_uint8_t handle = Ft_Esd_Dl_Bitmap_Setup(bitmapInfo);
 1096              		.loc 3 87 0
 1097 0034 F869     		ldr	r0, [r7, #28]
 1098 0036 FFF7FEFF 		bl	Ft_Esd_Dl_Bitmap_Setup
 1099 003a 0346     		mov	r3, r0
 1100 003c FB74     		strb	r3, [r7, #19]
  88:FT_Esd_Framework/FT_Esd_Primitives.c **** 
  89:FT_Esd_Framework/FT_Esd_Primitives.c **** 	if (handle != FT_ESD_BITMAPHANDLE_INVALID)
 1101              		.loc 3 89 0
 1102 003e FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1103 0040 FF2B     		cmp	r3, #255
 1104 0042 6ED0     		beq	.L58
  90:FT_Esd_Framework/FT_Esd_Primitives.c **** 	{
  91:FT_Esd_Framework/FT_Esd_Primitives.c **** 		Ft_Esd_Dl_Bitmap_WidthHeight(handle, width, height);
 1105              		.loc 3 91 0
 1106 0044 398F     		ldrh	r1, [r7, #56]
 1107 0046 BA8F     		ldrh	r2, [r7, #60]
 1108 0048 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1109 004a 1846     		mov	r0, r3
 1110 004c FFF7FEFF 		bl	Ft_Esd_Dl_Bitmap_WidthHeight
  92:FT_Esd_Framework/FT_Esd_Primitives.c **** 		Ft_Esd_Dl_COLOR_ARGB(c);
 1111              		.loc 3 92 0
 1112 0050 7868     		ldr	r0, [r7, #4]
 1113 0052 FFF7FEFF 		bl	Ft_Esd_Dl_COLOR_ARGB
  93:FT_Esd_Framework/FT_Esd_Primitives.c **** 		Ft_Esd_Dl_SAVE_CONTEXT();
 1114              		.loc 3 93 0
 1115 0056 FFF7FEFF 		bl	Ft_Esd_Dl_SAVE_CONTEXT
  94:FT_Esd_Framework/FT_Esd_Primitives.c **** 		Ft_Gpu_CoCmd_Translate(Ft_Esd_Host, xoffset, yoffset);
 1116              		.loc 3 94 0
 1117 005a 334B     		ldr	r3, .L66
 1118 005c 1B68     		ldr	r3, [r3]
 1119 005e 7A6B     		ldr	r2, [r7, #52]
 1120 0060 396B     		ldr	r1, [r7, #48]
 1121 0062 1846     		mov	r0, r3
 1122 0064 FFF7FEFF 		bl	Ft_Gpu_CoCmd_Translate
  95:FT_Esd_Framework/FT_Esd_Primitives.c **** 		Ft_Gpu_CoCmd_Scale(Ft_Esd_Host, xscale, yscale);
 1123              		.loc 3 95 0
 1124 0068 2F4B     		ldr	r3, .L66
 1125 006a 1B68     		ldr	r3, [r3]
 1126 006c FA6A     		ldr	r2, [r7, #44]
 1127 006e B96A     		ldr	r1, [r7, #40]
 1128 0070 1846     		mov	r0, r3
 1129 0072 FFF7FEFF 		bl	Ft_Gpu_CoCmd_Scale
  96:FT_Esd_Framework/FT_Esd_Primitives.c **** 		Ft_Gpu_CoCmd_SetMatrix(Ft_Esd_Host);
 1130              		.loc 3 96 0
 1131 0076 2C4B     		ldr	r3, .L66
 1132 0078 1B68     		ldr	r3, [r3]
 1133 007a 1846     		mov	r0, r3
 1134 007c FFF7FEFF 		bl	Ft_Gpu_CoCmd_SetMatrix
  97:FT_Esd_Framework/FT_Esd_Primitives.c **** 		Ft_Gpu_Hal_WrCmd32(phost, BEGIN(BITMAPS));
 1135              		.loc 3 97 0
 1136 0080 2A49     		ldr	r1, .L66+4
 1137 0082 7869     		ldr	r0, [r7, #20]
 1138 0084 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 28


  98:FT_Esd_Framework/FT_Esd_Primitives.c **** #ifdef FT_81X_ENABLE
  99:FT_Esd_Framework/FT_Esd_Primitives.c **** 		if (x < 0 || y < 0 || x >= 512 || y >= 512)
 1139              		.loc 3 99 0
 1140 0088 B7F90E30 		ldrsh	r3, [r7, #14]
 1141 008c 002B     		cmp	r3, #0
 1142 008e 0DDB     		blt	.L62
 1143              		.loc 3 99 0 is_stmt 0 discriminator 1
 1144 0090 B7F90C30 		ldrsh	r3, [r7, #12]
 1145 0094 002B     		cmp	r3, #0
 1146 0096 09DB     		blt	.L62
 1147              		.loc 3 99 0 discriminator 2
 1148 0098 B7F90E30 		ldrsh	r3, [r7, #14]
 1149 009c B3F5007F 		cmp	r3, #512
 1150 00a0 04DA     		bge	.L62
 1151              		.loc 3 99 0 discriminator 3
 1152 00a2 B7F90C30 		ldrsh	r3, [r7, #12]
 1153 00a6 B3F5007F 		cmp	r3, #512
 1154 00aa 19DB     		blt	.L63
 1155              	.L62:
 100:FT_Esd_Framework/FT_Esd_Primitives.c **** 		{
 101:FT_Esd_Framework/FT_Esd_Primitives.c **** 			Ft_Esd_Dl_VERTEX_FORMAT(0);
 1156              		.loc 3 101 0 is_stmt 1
 1157 00ac 0020     		movs	r0, #0
 1158 00ae FFF7FEFF 		bl	Ft_Esd_Dl_VERTEX_FORMAT
 102:FT_Esd_Framework/FT_Esd_Primitives.c **** 			Ft_Esd_Dl_BITMAP_HANDLE(handle);
 1159              		.loc 3 102 0
 1160 00b2 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1161 00b4 1846     		mov	r0, r3
 1162 00b6 FFF7FEFF 		bl	Ft_Esd_Dl_BITMAP_HANDLE
 103:FT_Esd_Framework/FT_Esd_Primitives.c **** 			Ft_Esd_Dl_CELL(cell);
 1163              		.loc 3 103 0
 1164 00ba FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 1165 00bc 1846     		mov	r0, r3
 1166 00be FFF7FEFF 		bl	Ft_Esd_Dl_CELL
 104:FT_Esd_Framework/FT_Esd_Primitives.c **** 			Ft_Gpu_Hal_WrCmd32(phost, VERTEX2F(x, y));
 1167              		.loc 3 104 0
 1168 00c2 FB89     		ldrh	r3, [r7, #14]
 1169 00c4 DA03     		lsls	r2, r3, #15
 1170 00c6 1A4B     		ldr	r3, .L66+8
 1171 00c8 1340     		ands	r3, r3, r2
 1172 00ca BA89     		ldrh	r2, [r7, #12]
 1173 00cc C2F30E02 		ubfx	r2, r2, #0, #15
 1174 00d0 1343     		orrs	r3, r3, r2
 1175 00d2 43F08043 		orr	r3, r3, #1073741824
 1176 00d6 1946     		mov	r1, r3
 1177 00d8 7869     		ldr	r0, [r7, #20]
 1178 00da FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 1179 00de 17E0     		b	.L64
 1180              	.L63:
 105:FT_Esd_Framework/FT_Esd_Primitives.c **** 		}
 106:FT_Esd_Framework/FT_Esd_Primitives.c **** 		else
 107:FT_Esd_Framework/FT_Esd_Primitives.c **** #endif
 108:FT_Esd_Framework/FT_Esd_Primitives.c **** 		{
 109:FT_Esd_Framework/FT_Esd_Primitives.c **** 			Ft_Gpu_Hal_WrCmd32(phost, VERTEX2II(x, y, handle, cell));
 1181              		.loc 3 109 0
 1182 00e0 FB89     		ldrh	r3, [r7, #14]
 1183 00e2 5B05     		lsls	r3, r3, #21
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 29


 1184 00e4 134A     		ldr	r2, .L66+12
 1185 00e6 1A40     		ands	r2, r2, r3
 1186 00e8 BB89     		ldrh	r3, [r7, #12]
 1187 00ea 1903     		lsls	r1, r3, #12
 1188 00ec 124B     		ldr	r3, .L66+16
 1189 00ee 0B40     		ands	r3, r3, r1
 1190 00f0 1A43     		orrs	r2, r2, r3
 1191 00f2 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1192 00f4 DB01     		lsls	r3, r3, #7
 1193 00f6 03F47863 		and	r3, r3, #3968
 1194 00fa 1A43     		orrs	r2, r2, r3
 1195 00fc FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 1196 00fe 03F07F03 		and	r3, r3, #127
 1197 0102 1343     		orrs	r3, r3, r2
 1198 0104 43F00043 		orr	r3, r3, #-2147483648
 1199 0108 1946     		mov	r1, r3
 1200 010a 7869     		ldr	r0, [r7, #20]
 1201 010c FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 1202              	.L64:
 110:FT_Esd_Framework/FT_Esd_Primitives.c **** 		}
 111:FT_Esd_Framework/FT_Esd_Primitives.c **** 		Ft_Gpu_CoCmd_LoadIdentity(Ft_Esd_Host);
 1203              		.loc 3 111 0
 1204 0110 054B     		ldr	r3, .L66
 1205 0112 1B68     		ldr	r3, [r3]
 1206 0114 1846     		mov	r0, r3
 1207 0116 FFF7FEFF 		bl	Ft_Gpu_CoCmd_LoadIdentity
 112:FT_Esd_Framework/FT_Esd_Primitives.c **** 		Ft_Esd_Dl_RESTORE_CONTEXT();
 1208              		.loc 3 112 0
 1209 011a FFF7FEFF 		bl	Ft_Esd_Dl_RESTORE_CONTEXT
 1210 011e 00E0     		b	.L58
 1211              	.L65:
  82:FT_Esd_Framework/FT_Esd_Primitives.c **** 
 1212              		.loc 3 82 0
 1213 0120 00BF     		nop
 1214              	.L58:
 113:FT_Esd_Framework/FT_Esd_Primitives.c **** 	}
 114:FT_Esd_Framework/FT_Esd_Primitives.c **** }
 1215              		.loc 3 114 0
 1216 0122 2037     		adds	r7, r7, #32
 1217              	.LCFI66:
 1218              		.cfi_def_cfa_offset 8
 1219 0124 BD46     		mov	sp, r7
 1220              	.LCFI67:
 1221              		.cfi_def_cfa_register 13
 1222              		@ sp needed
 1223 0126 80BD     		pop	{r7, pc}
 1224              	.L67:
 1225              		.align	2
 1226              	.L66:
 1227 0128 00000000 		.word	Ft_Esd_Host
 1228 012c 0100001F 		.word	520093697
 1229 0130 0080FF3F 		.word	1073709056
 1230 0134 0000E03F 		.word	1071644672
 1231 0138 00F01F00 		.word	2093056
 1232              		.cfi_endproc
 1233              	.LFE29:
 1235              		.section	.text.Ft_Esd_Render_BitmapRotate,"ax",%progbits
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 30


 1236              		.align	1
 1237              		.global	Ft_Esd_Render_BitmapRotate
 1238              		.syntax unified
 1239              		.thumb
 1240              		.thumb_func
 1241              		.fpu fpv5-sp-d16
 1243              	Ft_Esd_Render_BitmapRotate:
 1244              	.LFB30:
 115:FT_Esd_Framework/FT_Esd_Primitives.c **** 
 116:FT_Esd_Framework/FT_Esd_Primitives.c **** 
 117:FT_Esd_Framework/FT_Esd_Primitives.c **** 
 118:FT_Esd_Framework/FT_Esd_Primitives.c **** ft_void_t Ft_Esd_Render_BitmapRotate(ft_int16_t x, ft_int16_t y, Ft_Esd_BitmapCell *bitmapCell, ft_
 119:FT_Esd_Framework/FT_Esd_Primitives.c **** {
 1245              		.loc 3 119 0
 1246              		.cfi_startproc
 1247              		@ args = 24, pretend = 0, frame = 56
 1248              		@ frame_needed = 1, uses_anonymous_args = 0
 1249 0000 80B5     		push	{r7, lr}
 1250              	.LCFI68:
 1251              		.cfi_def_cfa_offset 8
 1252              		.cfi_offset 7, -8
 1253              		.cfi_offset 14, -4
 1254 0002 8EB0     		sub	sp, sp, #56
 1255              	.LCFI69:
 1256              		.cfi_def_cfa_offset 64
 1257 0004 00AF     		add	r7, sp, #0
 1258              	.LCFI70:
 1259              		.cfi_def_cfa_register 7
 1260 0006 BA60     		str	r2, [r7, #8]
 1261 0008 7B60     		str	r3, [r7, #4]
 1262 000a 0346     		mov	r3, r0	@ movhi
 1263 000c FB81     		strh	r3, [r7, #14]	@ movhi
 1264 000e 0B46     		mov	r3, r1	@ movhi
 1265 0010 BB81     		strh	r3, [r7, #12]	@ movhi
 120:FT_Esd_Framework/FT_Esd_Primitives.c **** 	if (!bitmapCell || !bitmapCell->Info)
 1266              		.loc 3 120 0
 1267 0012 BB68     		ldr	r3, [r7, #8]
 1268 0014 002B     		cmp	r3, #0
 1269 0016 00F0A480 		beq	.L76
 1270              		.loc 3 120 0 is_stmt 0 discriminator 1
 1271 001a BB68     		ldr	r3, [r7, #8]
 1272 001c 1B68     		ldr	r3, [r3]
 1273 001e 002B     		cmp	r3, #0
 1274 0020 00F09F80 		beq	.L76
 121:FT_Esd_Framework/FT_Esd_Primitives.c **** 		return;
 122:FT_Esd_Framework/FT_Esd_Primitives.c **** 
 123:FT_Esd_Framework/FT_Esd_Primitives.c **** 	Ft_Esd_BitmapInfo *bitmapInfo = bitmapCell->Info;
 1275              		.loc 3 123 0 is_stmt 1
 1276 0024 BB68     		ldr	r3, [r7, #8]
 1277 0026 1B68     		ldr	r3, [r3]
 1278 0028 BB62     		str	r3, [r7, #40]
 124:FT_Esd_Framework/FT_Esd_Primitives.c **** 	ft_uint8_t cell = bitmapCell->Cell;
 1279              		.loc 3 124 0
 1280 002a BB68     		ldr	r3, [r7, #8]
 1281 002c 5B68     		ldr	r3, [r3, #4]
 1282 002e 87F82730 		strb	r3, [r7, #39]
 125:FT_Esd_Framework/FT_Esd_Primitives.c **** 	Ft_Gpu_Hal_Context_t *phost = Ft_Esd_Host;
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 31


 1283              		.loc 3 125 0
 1284 0032 4E4B     		ldr	r3, .L77
 1285 0034 1B68     		ldr	r3, [r3]
 1286 0036 3B62     		str	r3, [r7, #32]
 126:FT_Esd_Framework/FT_Esd_Primitives.c **** 	ft_uint8_t handle = Ft_Esd_Dl_Bitmap_Setup(bitmapInfo);
 1287              		.loc 3 126 0
 1288 0038 B86A     		ldr	r0, [r7, #40]
 1289 003a FFF7FEFF 		bl	Ft_Esd_Dl_Bitmap_Setup
 1290 003e 0346     		mov	r3, r0
 1291 0040 FB77     		strb	r3, [r7, #31]
 127:FT_Esd_Framework/FT_Esd_Primitives.c ****     
 128:FT_Esd_Framework/FT_Esd_Primitives.c ****     
 129:FT_Esd_Framework/FT_Esd_Primitives.c ****     ft_int32_t translate_pixels = 2*bitmapInfo->Width*65536;
 1292              		.loc 3 129 0
 1293 0042 BB6A     		ldr	r3, [r7, #40]
 1294 0044 1B68     		ldr	r3, [r3]
 1295 0046 5B04     		lsls	r3, r3, #17
 1296 0048 BB61     		str	r3, [r7, #24]
 130:FT_Esd_Framework/FT_Esd_Primitives.c **** 
 131:FT_Esd_Framework/FT_Esd_Primitives.c **** 	if (handle != FT_ESD_BITMAPHANDLE_INVALID)	
 1297              		.loc 3 131 0
 1298 004a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1299 004c FF2B     		cmp	r3, #255
 1300 004e 00F08980 		beq	.L68
 1301              	.LBB2:
 132:FT_Esd_Framework/FT_Esd_Primitives.c ****     {
 133:FT_Esd_Framework/FT_Esd_Primitives.c ****         
 134:FT_Esd_Framework/FT_Esd_Primitives.c **** #if 1        
 135:FT_Esd_Framework/FT_Esd_Primitives.c ****         int tilenumber = 0;
 1302              		.loc 3 135 0
 1303 0052 0023     		movs	r3, #0
 1304 0054 7B63     		str	r3, [r7, #52]
 136:FT_Esd_Framework/FT_Esd_Primitives.c ****         const int TITLE_SIZE = 64;//Magic number, DONOT CHANGE
 1305              		.loc 3 136 0
 1306 0056 4023     		movs	r3, #64
 1307 0058 7B61     		str	r3, [r7, #20]
 137:FT_Esd_Framework/FT_Esd_Primitives.c ****         Ft_Esd_Dl_SAVE_CONTEXT();
 1308              		.loc 3 137 0
 1309 005a FFF7FEFF 		bl	Ft_Esd_Dl_SAVE_CONTEXT
 138:FT_Esd_Framework/FT_Esd_Primitives.c ****         Ft_Esd_Dl_COLOR_ARGB(c);
 1310              		.loc 3 138 0
 1311 005e 7868     		ldr	r0, [r7, #4]
 1312 0060 FFF7FEFF 		bl	Ft_Esd_Dl_COLOR_ARGB
 139:FT_Esd_Framework/FT_Esd_Primitives.c ****         
 140:FT_Esd_Framework/FT_Esd_Primitives.c ****         Ft_Esd_Dl_Bitmap_WidthHeight_BILINEAR(handle, TITLE_SIZE, TITLE_SIZE);//Bitmap_Size command
 1313              		.loc 3 140 0
 1314 0064 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1315 0066 7A69     		ldr	r2, [r7, #20]
 1316 0068 7969     		ldr	r1, [r7, #20]
 1317 006a 1846     		mov	r0, r3
 1318 006c FFF7FEFF 		bl	Ft_Esd_Dl_Bitmap_WidthHeight_BILINEAR
 141:FT_Esd_Framework/FT_Esd_Primitives.c ****         
 142:FT_Esd_Framework/FT_Esd_Primitives.c ****         Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, BEGIN(BITMAPS));
 1319              		.loc 3 142 0
 1320 0070 3E4B     		ldr	r3, .L77
 1321 0072 1B68     		ldr	r3, [r3]
 1322 0074 3E49     		ldr	r1, .L77+4
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 32


 1323 0076 1846     		mov	r0, r3
 1324 0078 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 143:FT_Esd_Framework/FT_Esd_Primitives.c ****         
 144:FT_Esd_Framework/FT_Esd_Primitives.c **** #ifdef FT_81X_ENABLE      
 145:FT_Esd_Framework/FT_Esd_Primitives.c ****         Ft_Esd_Dl_VERTEX_FORMAT(4);
 1325              		.loc 3 145 0
 1326 007c 0420     		movs	r0, #4
 1327 007e FFF7FEFF 		bl	Ft_Esd_Dl_VERTEX_FORMAT
 146:FT_Esd_Framework/FT_Esd_Primitives.c **** #endif        
 147:FT_Esd_Framework/FT_Esd_Primitives.c ****         Ft_Esd_Dl_BITMAP_HANDLE(handle);
 1328              		.loc 3 147 0
 1329 0082 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1330 0084 1846     		mov	r0, r3
 1331 0086 FFF7FEFF 		bl	Ft_Esd_Dl_BITMAP_HANDLE
 1332              	.LBB3:
 148:FT_Esd_Framework/FT_Esd_Primitives.c ****         for (int dx = (x - radius); dx < (x + radius); dx += TITLE_SIZE){
 1333              		.loc 3 148 0
 1334 008a B7F90E20 		ldrsh	r2, [r7, #14]
 1335 008e B7F95430 		ldrsh	r3, [r7, #84]
 1336 0092 D31A     		subs	r3, r2, r3
 1337 0094 3B63     		str	r3, [r7, #48]
 1338 0096 54E0     		b	.L72
 1339              	.L75:
 1340              	.LBB4:
 149:FT_Esd_Framework/FT_Esd_Primitives.c ****             for (int dy = (y - radius); dy < (y + radius); dy += TITLE_SIZE){
 1341              		.loc 3 149 0
 1342 0098 B7F90C20 		ldrsh	r2, [r7, #12]
 1343 009c B7F95430 		ldrsh	r3, [r7, #84]
 1344 00a0 D31A     		subs	r3, r2, r3
 1345 00a2 FB62     		str	r3, [r7, #44]
 1346 00a4 41E0     		b	.L73
 1347              	.L74:
 150:FT_Esd_Framework/FT_Esd_Primitives.c ****                 //printf("draw tile %d\n",tilenumber ++);
 151:FT_Esd_Framework/FT_Esd_Primitives.c ****                 tilenumber ++;
 1348              		.loc 3 151 0 discriminator 3
 1349 00a6 7B6B     		ldr	r3, [r7, #52]
 1350 00a8 0133     		adds	r3, r3, #1
 1351 00aa 7B63     		str	r3, [r7, #52]
 152:FT_Esd_Framework/FT_Esd_Primitives.c ****                 Ft_Gpu_CoCmd_LoadIdentity(Ft_Esd_Host);
 1352              		.loc 3 152 0 discriminator 3
 1353 00ac 2F4B     		ldr	r3, .L77
 1354 00ae 1B68     		ldr	r3, [r3]
 1355 00b0 1846     		mov	r0, r3
 1356 00b2 FFF7FEFF 		bl	Ft_Gpu_CoCmd_LoadIdentity
 153:FT_Esd_Framework/FT_Esd_Primitives.c ****                 Ft_Gpu_CoCmd_Translate(Ft_Esd_Host, (x - dx) << 16, (y - dy) << 16);
 1357              		.loc 3 153 0 discriminator 3
 1358 00b6 2D4B     		ldr	r3, .L77
 1359 00b8 1868     		ldr	r0, [r3]
 1360 00ba B7F90E20 		ldrsh	r2, [r7, #14]
 1361 00be 3B6B     		ldr	r3, [r7, #48]
 1362 00c0 D31A     		subs	r3, r2, r3
 1363 00c2 1904     		lsls	r1, r3, #16
 1364 00c4 B7F90C20 		ldrsh	r2, [r7, #12]
 1365 00c8 FB6A     		ldr	r3, [r7, #44]
 1366 00ca D31A     		subs	r3, r2, r3
 1367 00cc 1B04     		lsls	r3, r3, #16
 1368 00ce 1A46     		mov	r2, r3
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 33


 1369 00d0 FFF7FEFF 		bl	Ft_Gpu_CoCmd_Translate
 154:FT_Esd_Framework/FT_Esd_Primitives.c **** 
 155:FT_Esd_Framework/FT_Esd_Primitives.c ****                 Ft_Gpu_CoCmd_Rotate(Ft_Esd_Host,rotateEffi);
 1370              		.loc 3 155 0 discriminator 3
 1371 00d4 254B     		ldr	r3, .L77
 1372 00d6 1B68     		ldr	r3, [r3]
 1373 00d8 396C     		ldr	r1, [r7, #64]
 1374 00da 1846     		mov	r0, r3
 1375 00dc FFF7FEFF 		bl	Ft_Gpu_CoCmd_Rotate
 156:FT_Esd_Framework/FT_Esd_Primitives.c ****                 //Ft_Gpu_CoCmd_Translate(Ft_Esd_Host, -x_center << 16, -y_center << 16);
 157:FT_Esd_Framework/FT_Esd_Primitives.c ****                 Ft_Gpu_CoCmd_Translate(Ft_Esd_Host, -x_center, -y_center);
 1376              		.loc 3 157 0 discriminator 3
 1377 00e0 224B     		ldr	r3, .L77
 1378 00e2 1868     		ldr	r0, [r3]
 1379 00e4 7B6C     		ldr	r3, [r7, #68]
 1380 00e6 5942     		negs	r1, r3
 1381 00e8 BB6C     		ldr	r3, [r7, #72]
 1382 00ea 5B42     		negs	r3, r3
 1383 00ec 1A46     		mov	r2, r3
 1384 00ee FFF7FEFF 		bl	Ft_Gpu_CoCmd_Translate
 158:FT_Esd_Framework/FT_Esd_Primitives.c ****                 
 159:FT_Esd_Framework/FT_Esd_Primitives.c ****                 Ft_Gpu_CoCmd_SetMatrix(Ft_Esd_Host);
 1385              		.loc 3 159 0 discriminator 3
 1386 00f2 1E4B     		ldr	r3, .L77
 1387 00f4 1B68     		ldr	r3, [r3]
 1388 00f6 1846     		mov	r0, r3
 1389 00f8 FFF7FEFF 		bl	Ft_Gpu_CoCmd_SetMatrix
 160:FT_Esd_Framework/FT_Esd_Primitives.c ****                 Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, VERTEX2F(dx*16, dy*16));
 1390              		.loc 3 160 0 discriminator 3
 1391 00fc 1B4B     		ldr	r3, .L77
 1392 00fe 1868     		ldr	r0, [r3]
 1393 0100 3B6B     		ldr	r3, [r7, #48]
 1394 0102 1B01     		lsls	r3, r3, #4
 1395 0104 DB03     		lsls	r3, r3, #15
 1396 0106 1B4A     		ldr	r2, .L77+8
 1397 0108 1A40     		ands	r2, r2, r3
 1398 010a FB6A     		ldr	r3, [r7, #44]
 1399 010c 1B01     		lsls	r3, r3, #4
 1400 010e 1946     		mov	r1, r3
 1401 0110 47F6F073 		movw	r3, #32752
 1402 0114 0B40     		ands	r3, r3, r1
 1403 0116 1343     		orrs	r3, r3, r2
 1404 0118 43F08043 		orr	r3, r3, #1073741824
 1405 011c 1946     		mov	r1, r3
 1406 011e FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 149:FT_Esd_Framework/FT_Esd_Primitives.c ****                 //printf("draw tile %d\n",tilenumber ++);
 1407              		.loc 3 149 0 discriminator 3
 1408 0122 FA6A     		ldr	r2, [r7, #44]
 1409 0124 7B69     		ldr	r3, [r7, #20]
 1410 0126 1344     		add	r3, r3, r2
 1411 0128 FB62     		str	r3, [r7, #44]
 1412              	.L73:
 149:FT_Esd_Framework/FT_Esd_Primitives.c ****                 //printf("draw tile %d\n",tilenumber ++);
 1413              		.loc 3 149 0 is_stmt 0 discriminator 1
 1414 012a B7F90C20 		ldrsh	r2, [r7, #12]
 1415 012e B7F95430 		ldrsh	r3, [r7, #84]
 1416 0132 1344     		add	r3, r3, r2
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 34


 1417 0134 FA6A     		ldr	r2, [r7, #44]
 1418 0136 9A42     		cmp	r2, r3
 1419 0138 B5DB     		blt	.L74
 1420              	.LBE4:
 148:FT_Esd_Framework/FT_Esd_Primitives.c ****             for (int dy = (y - radius); dy < (y + radius); dy += TITLE_SIZE){
 1421              		.loc 3 148 0 is_stmt 1 discriminator 2
 1422 013a 3A6B     		ldr	r2, [r7, #48]
 1423 013c 7B69     		ldr	r3, [r7, #20]
 1424 013e 1344     		add	r3, r3, r2
 1425 0140 3B63     		str	r3, [r7, #48]
 1426              	.L72:
 148:FT_Esd_Framework/FT_Esd_Primitives.c ****             for (int dy = (y - radius); dy < (y + radius); dy += TITLE_SIZE){
 1427              		.loc 3 148 0 is_stmt 0 discriminator 1
 1428 0142 B7F90E20 		ldrsh	r2, [r7, #14]
 1429 0146 B7F95430 		ldrsh	r3, [r7, #84]
 1430 014a 1344     		add	r3, r3, r2
 1431 014c 3A6B     		ldr	r2, [r7, #48]
 1432 014e 9A42     		cmp	r2, r3
 1433 0150 A2DB     		blt	.L75
 1434              	.LBE3:
 161:FT_Esd_Framework/FT_Esd_Primitives.c ****             }
 162:FT_Esd_Framework/FT_Esd_Primitives.c ****         }
 163:FT_Esd_Framework/FT_Esd_Primitives.c ****         //printf("draw tile %d\n",tilenumber);
 164:FT_Esd_Framework/FT_Esd_Primitives.c ****         Ft_Gpu_CoCmd_LoadIdentity(Ft_Esd_Host);
 1435              		.loc 3 164 0 is_stmt 1
 1436 0152 064B     		ldr	r3, .L77
 1437 0154 1B68     		ldr	r3, [r3]
 1438 0156 1846     		mov	r0, r3
 1439 0158 FFF7FEFF 		bl	Ft_Gpu_CoCmd_LoadIdentity
 165:FT_Esd_Framework/FT_Esd_Primitives.c ****         Ft_Esd_Dl_RESTORE_CONTEXT();    
 1440              		.loc 3 165 0
 1441 015c FFF7FEFF 		bl	Ft_Esd_Dl_RESTORE_CONTEXT
 1442 0160 00E0     		b	.L68
 1443              	.L76:
 1444              	.LBE2:
 121:FT_Esd_Framework/FT_Esd_Primitives.c **** 
 1445              		.loc 3 121 0
 1446 0162 00BF     		nop
 1447              	.L68:
 166:FT_Esd_Framework/FT_Esd_Primitives.c **** 
 167:FT_Esd_Framework/FT_Esd_Primitives.c **** #endif        
 168:FT_Esd_Framework/FT_Esd_Primitives.c **** #if 0        
 169:FT_Esd_Framework/FT_Esd_Primitives.c **** 		Ft_Esd_Dl_Bitmap_WidthHeight_BILINEAR(handle, width, height);//Bitmap_Size command
 170:FT_Esd_Framework/FT_Esd_Primitives.c **** 		Ft_Esd_Dl_COLOR_ARGB(c);
 171:FT_Esd_Framework/FT_Esd_Primitives.c **** 		Ft_Esd_Dl_SAVE_CONTEXT();
 172:FT_Esd_Framework/FT_Esd_Primitives.c ****         
 173:FT_Esd_Framework/FT_Esd_Primitives.c ****         if (bitmapInfo->Width < bitmapInfo->Height)
 174:FT_Esd_Framework/FT_Esd_Primitives.c ****             translate_pixels = 2*bitmapInfo->Height*65536;
 175:FT_Esd_Framework/FT_Esd_Primitives.c ****         
 176:FT_Esd_Framework/FT_Esd_Primitives.c ****                   
 177:FT_Esd_Framework/FT_Esd_Primitives.c ****             
 178:FT_Esd_Framework/FT_Esd_Primitives.c ****         Ft_Gpu_CoCmd_LoadIdentity(Ft_Esd_Host);
 179:FT_Esd_Framework/FT_Esd_Primitives.c **** 		Ft_Gpu_CoCmd_Translate(Ft_Esd_Host, radius << 16, radius << 16);
 180:FT_Esd_Framework/FT_Esd_Primitives.c ****         //printf("xoffset = 0x%x",xoffset);
 181:FT_Esd_Framework/FT_Esd_Primitives.c ****         //printf(" yoffset = 0x%x\n",yoffset);
 182:FT_Esd_Framework/FT_Esd_Primitives.c ****         
 183:FT_Esd_Framework/FT_Esd_Primitives.c **** 		//Ft_Gpu_CoCmd_Scale(Ft_Esd_Host, xscale, yscale);
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 35


 184:FT_Esd_Framework/FT_Esd_Primitives.c ****         Ft_Gpu_CoCmd_Rotate(Ft_Esd_Host,rotateEffi);
 185:FT_Esd_Framework/FT_Esd_Primitives.c ****         
 186:FT_Esd_Framework/FT_Esd_Primitives.c ****         //printf("rotateEffi=%d\n", rotateEffi);
 187:FT_Esd_Framework/FT_Esd_Primitives.c ****         
 188:FT_Esd_Framework/FT_Esd_Primitives.c ****         //printf("-xoffset = 0x%x",-xoffset);
 189:FT_Esd_Framework/FT_Esd_Primitives.c ****         //printf(" -yoffset = 0x%x\n",-yoffset);
 190:FT_Esd_Framework/FT_Esd_Primitives.c ****         
 191:FT_Esd_Framework/FT_Esd_Primitives.c **** 		Ft_Gpu_CoCmd_Translate(Ft_Esd_Host, -x_center, -y_center);
 192:FT_Esd_Framework/FT_Esd_Primitives.c ****         
 193:FT_Esd_Framework/FT_Esd_Primitives.c ****         Ft_Gpu_CoCmd_SetMatrix(Ft_Esd_Host);
 194:FT_Esd_Framework/FT_Esd_Primitives.c ****         
 195:FT_Esd_Framework/FT_Esd_Primitives.c **** 		Ft_Gpu_Hal_WrCmd32(phost, BEGIN(BITMAPS));
 196:FT_Esd_Framework/FT_Esd_Primitives.c **** #ifdef FT_81X_ENABLE
 197:FT_Esd_Framework/FT_Esd_Primitives.c **** 		if (x < 0 || y < 0 || x >= 512 || y >= 512)
 198:FT_Esd_Framework/FT_Esd_Primitives.c **** 		{
 199:FT_Esd_Framework/FT_Esd_Primitives.c **** 			Ft_Esd_Dl_VERTEX_FORMAT(0);
 200:FT_Esd_Framework/FT_Esd_Primitives.c **** 			Ft_Esd_Dl_BITMAP_HANDLE(handle);
 201:FT_Esd_Framework/FT_Esd_Primitives.c **** 			Ft_Esd_Dl_CELL(cell);
 202:FT_Esd_Framework/FT_Esd_Primitives.c **** 			Ft_Gpu_Hal_WrCmd32(phost, VERTEX2F(x, y));
 203:FT_Esd_Framework/FT_Esd_Primitives.c **** 		}
 204:FT_Esd_Framework/FT_Esd_Primitives.c **** 		else
 205:FT_Esd_Framework/FT_Esd_Primitives.c **** #endif
 206:FT_Esd_Framework/FT_Esd_Primitives.c **** 		{
 207:FT_Esd_Framework/FT_Esd_Primitives.c **** 			Ft_Gpu_Hal_WrCmd32(phost, VERTEX2II(x, y, handle, cell));
 208:FT_Esd_Framework/FT_Esd_Primitives.c **** 		}
 209:FT_Esd_Framework/FT_Esd_Primitives.c **** 		Ft_Gpu_CoCmd_LoadIdentity(Ft_Esd_Host);
 210:FT_Esd_Framework/FT_Esd_Primitives.c **** 		Ft_Esd_Dl_RESTORE_CONTEXT();
 211:FT_Esd_Framework/FT_Esd_Primitives.c ****         
 212:FT_Esd_Framework/FT_Esd_Primitives.c **** #endif          
 213:FT_Esd_Framework/FT_Esd_Primitives.c **** 	}  
 214:FT_Esd_Framework/FT_Esd_Primitives.c **** }
 1448              		.loc 3 214 0
 1449 0164 3837     		adds	r7, r7, #56
 1450              	.LCFI71:
 1451              		.cfi_def_cfa_offset 8
 1452 0166 BD46     		mov	sp, r7
 1453              	.LCFI72:
 1454              		.cfi_def_cfa_register 13
 1455              		@ sp needed
 1456 0168 80BD     		pop	{r7, pc}
 1457              	.L78:
 1458 016a 00BF     		.align	2
 1459              	.L77:
 1460 016c 00000000 		.word	Ft_Esd_Host
 1461 0170 0100001F 		.word	520093697
 1462 0174 0000F83F 		.word	1073217536
 1463              		.cfi_endproc
 1464              	.LFE30:
 1466              		.text
 1467              	.Letext0:
 1468              		.file 4 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/lock.h"
 1469              		.file 5 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_types.h"
 1470              		.file 6 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 1471              		.file 7 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/unistd.h"
 1472              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/reent.h"
 1473              		.file 9 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/stdlib.h"
 1474              		.file 10 "FT_Eve_Hal/FT_DataTypes.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 36


 1475              		.file 11 "FT_Eve_Hal/FT_Gpu_Hal.h"
 1476              		.file 12 "FT_Esd_Framework/Ft_Esd.h"
 1477              		.file 13 "FT_Esd_Widgets/Ft_Esd_Theme.h"
 1478              		.file 14 "FT_Esd_Widgets/Ft_Esd_DefaultTheme.h"
 1479              		.file 15 "FT_Esd_Framework/Ft_Esd_GpuAlloc.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 37


DEFINED SYMBOLS
                            *ABS*:0000000000000000 FT_Esd_Primitives.c
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:18     .text.Ft_Esd_BitmapCell_GetInfo:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:24     .text.Ft_Esd_BitmapCell_GetInfo:0000000000000000 Ft_Esd_BitmapCell_GetInfo
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:73     .text.Ft_Esd_Dl_COLOR_RGB:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:79     .text.Ft_Esd_Dl_COLOR_RGB:0000000000000000 Ft_Esd_Dl_COLOR_RGB
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:144    .text.Ft_Esd_Dl_COLOR_RGB:0000000000000050 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:151    .text.Ft_Esd_Dl_COLOR_A:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:157    .text.Ft_Esd_Dl_COLOR_A:0000000000000000 Ft_Esd_Dl_COLOR_A
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:218    .text.Ft_Esd_Dl_COLOR_A:0000000000000048 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:225    .text.Ft_Esd_Dl_COLOR_ARGB:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:231    .text.Ft_Esd_Dl_COLOR_ARGB:0000000000000000 Ft_Esd_Dl_COLOR_ARGB
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:272    .text.Ft_Esd_Dl_BITMAP_HANDLE:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:278    .text.Ft_Esd_Dl_BITMAP_HANDLE:0000000000000000 Ft_Esd_Dl_BITMAP_HANDLE
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:340    .text.Ft_Esd_Dl_BITMAP_HANDLE:000000000000004c $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:347    .text.Ft_Esd_Dl_CELL:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:353    .text.Ft_Esd_Dl_CELL:0000000000000000 Ft_Esd_Dl_CELL
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:415    .text.Ft_Esd_Dl_CELL:000000000000004c $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:422    .text.Ft_Esd_Dl_SAVE_CONTEXT:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:428    .text.Ft_Esd_Dl_SAVE_CONTEXT:0000000000000000 Ft_Esd_Dl_SAVE_CONTEXT
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:493    .text.Ft_Esd_Dl_SAVE_CONTEXT:000000000000004c $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:500    .text.Ft_Esd_Dl_RESTORE_CONTEXT:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:506    .text.Ft_Esd_Dl_RESTORE_CONTEXT:0000000000000000 Ft_Esd_Dl_RESTORE_CONTEXT
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:545    .text.Ft_Esd_Dl_RESTORE_CONTEXT:000000000000002c $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:551    .text.Ft_Esd_Dl_VERTEX_FORMAT:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:557    .text.Ft_Esd_Dl_VERTEX_FORMAT:0000000000000000 Ft_Esd_Dl_VERTEX_FORMAT
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:619    .text.Ft_Esd_Dl_VERTEX_FORMAT:000000000000004c $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:626    .text.Ft_Esd_Dl_LINE_WIDTH:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:632    .text.Ft_Esd_Dl_LINE_WIDTH:0000000000000000 Ft_Esd_Dl_LINE_WIDTH
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:671    .text.Ft_Esd_Dl_LINE_WIDTH:0000000000000028 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:676    .text.Ft_Esd_Render_RectangleF:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:683    .text.Ft_Esd_Render_RectangleF:0000000000000000 Ft_Esd_Render_RectangleF
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:789    .text.Ft_Esd_Render_RectangleF:00000000000000a4 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:796    .text.Ft_Esd_Render_LineF:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:803    .text.Ft_Esd_Render_LineF:0000000000000000 Ft_Esd_Render_LineF
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:878    .text.Ft_Esd_Render_LineF:0000000000000070 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:885    .text.Ft_Esd_Render_Bitmap:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:892    .text.Ft_Esd_Render_Bitmap:0000000000000000 Ft_Esd_Render_Bitmap
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:1036   .text.Ft_Esd_Render_Bitmap:00000000000000ec $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:1045   .text.Ft_Esd_Render_BitmapScaled:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:1052   .text.Ft_Esd_Render_BitmapScaled:0000000000000000 Ft_Esd_Render_BitmapScaled
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:1227   .text.Ft_Esd_Render_BitmapScaled:0000000000000128 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:1236   .text.Ft_Esd_Render_BitmapRotate:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:1243   .text.Ft_Esd_Render_BitmapRotate:0000000000000000 Ft_Esd_Render_BitmapRotate
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s:1460   .text.Ft_Esd_Render_BitmapRotate:000000000000016c $d

UNDEFINED SYMBOLS
Ft_Gpu_Hal_WrCmd32
Ft_Esd_GpuState_I
Ft_Esd_GpuState
Ft_Esd_Host
Ft_Esd_Dl_Bitmap_Setup
Ft_Esd_Dl_Bitmap_WidthHeightReset
Ft_Esd_Dl_Bitmap_WidthHeight
Ft_Gpu_CoCmd_Translate
Ft_Gpu_CoCmd_Scale
Ft_Gpu_CoCmd_SetMatrix
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsgFg4H.s 			page 38


Ft_Gpu_CoCmd_LoadIdentity
Ft_Esd_Dl_Bitmap_WidthHeight_BILINEAR
Ft_Gpu_CoCmd_Rotate
