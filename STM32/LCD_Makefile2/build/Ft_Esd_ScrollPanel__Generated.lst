ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"Ft_Esd_ScrollPanel__Generated.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Ft_Esd_BitmapCell_GetInfo,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	Ft_Esd_BitmapCell_GetInfo:
  25              	.LFB9:
  26              		.file 1 "FT_Esd_Framework/Ft_Esd_BitmapInfo.h"
   1:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** /*
   2:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** Bitmap info structure
   3:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** */
   4:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
   5:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #ifndef FT_ESD_BITMAPINFO_H
   6:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #define FT_ESD_BITMAPINFO_H
   7:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
   8:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "Ft_Esd.h"
   9:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "FT_DataTypes.h"
  10:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "Ft_Esd_GpuAlloc.h"
  11:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  12:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapInfo, Native = Struct) // TODO: Struct support, expose values
  13:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  14:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  15:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Width;
  16:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Height;
  17:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Stride;
  18:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Format;
  19:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Size;
  20:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	const char *File;
  21:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  22:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Handle pointing to the address in RAM_G if it is allocated
  23:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_GpuHandle GpuHandle;
  24:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  25:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Bitmap handle that is being used
  26:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_uint32_t BitmapHandle;
  27:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  28:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	const char *PaletteFile;
  29:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_GpuHandle PaletteGpuHandle;
  30:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  31:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// When this is set, the allocated ram is not free'd automatically
  32:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Use Ft_Esd_GpuAlloc_Free(GpuAlloc, GpuHandle) to free the GPU ram manually
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s 			page 2


  33:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_bool_t Persistent;
  34:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  35:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_BitmapInfo;
  36:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  37:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapInfo *, Native = Pointer, Edit = Library)
  38:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  39:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapCell, Native = Struct) // TODO: Struct support, expose values
  40:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  41:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  42:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapInfo *Info;
  43:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Cell;
  44:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_BitmapCell;
  45:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  46:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapCell *, Native = Pointer, Edit = Library)
  47:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  48:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // Attempts to load the specified bitmap if it has not been loaded into RAM_G yet.
  49:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // Call during the Update cycle of each frame to keep the bitmap flagged as in use, otherwise the m
  50:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_LoadBitmap, Type = ft_uint32_t, Include = "Ft_Esd_BitmapInfo.h", DisplayName = 
  51:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapInfo, Type = Ft_Esd_BitmapInfo *)
  52:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ft_uint32_t Ft_Esd_LoadBitmap(Ft_Esd_BitmapInfo *bitmapInfo);
  53:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  54:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_LoadPalette, Type = ft_uint32_t, Include = "Ft_Esd_BitmapInfo.h", DisplayName =
  55:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapInfo, Type = Ft_Esd_BitmapInfo *)
  56:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ft_uint32_t Ft_Esd_LoadPalette(Ft_Esd_BitmapInfo *bitmapInfo);
  57:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  58:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_ENUM(_BitmapResourceFormat, DisplayName = "Bitmap Format")
  59:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB1555)
  60:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L1)
  61:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L2)
  62:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L4)
  63:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L8)
  64:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(RGB332)
  65:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB2)
  66:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB4)
  67:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(RGB565)
  68:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(PALETTED565)
  69:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(PALETTED4444)
  70:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(PALETTED8)
  71:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(JPEG)
  72:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(PNG)
  73:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_END()
  74:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  75:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_LOGIC(Ft_Esd_SwitchBitmapCell, Callback, Include = "Ft_Esd_BitmapInfo.h", DisplayName = "Switch
  76:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  77:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  78:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Callback
  79:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	void *Parent;
  80:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  81:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  82:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Input
  83:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  84:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  85:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ESD_INPUT(BitmapInfo, Type = Ft_Esd_BitmapInfo *, DisplayName = "Bitmap Info")
  86:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapInfo *(* BitmapInfo)(void *context);
  87:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  88:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ESD_INPUT(Cell, Type = ft_uint8_t, DisplayName = "Cell")
  89:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_uint8_t(* Cell)(void *context);
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s 			page 3


  90:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  91:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  92:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Variables
  93:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  94:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  95:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// BitmapCell object
  96:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapCell BitmapCell;
  97:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  98:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_SwitchBitmapCell;
  99:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 100:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** void Ft_Esd_SwitchBitmapCell__Initializer(Ft_Esd_SwitchBitmapCell *context);
 101:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 102:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_OUTPUT(BitmapCell, Type = Ft_Esd_BitmapCell *, DisplayName = "Bitmap Cell")
 103:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** Ft_Esd_BitmapCell *Ft_Esd_SwitchBitmapCell_BitmapCell(Ft_Esd_SwitchBitmapCell *context);
 104:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 105:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_UPDATE(Ft_Esd_BitmapPersist, DisplayName = "Bitmap Persist", Category = EsdUtilities)
 106:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapCell, Type = Ft_Esd_BitmapCell *)
 107:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** void Ft_Esd_BitmapPersist(Ft_Esd_BitmapCell *bitmapCell);
 108:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 109:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_BitmapCell_GetInfo, Type = Ft_Esd_BitmapInfo *, DisplayName = "ESD BitmapCell G
 110:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapCell, Type = Ft_Esd_BitmapCell *)
 111:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** static Ft_Esd_BitmapInfo *Ft_Esd_BitmapCell_GetInfo(Ft_Esd_BitmapCell *bitmapCell)
 112:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  27              		.loc 1 112 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 113:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	if (!bitmapCell) return 0;
  43              		.loc 1 113 0
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 002B     		cmp	r3, #0
  46 000c 01D1     		bne	.L2
  47              		.loc 1 113 0 is_stmt 0 discriminator 1
  48 000e 0023     		movs	r3, #0
  49 0010 01E0     		b	.L3
  50              	.L2:
 114:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	return bitmapCell->Info;
  51              		.loc 1 114 0 is_stmt 1
  52 0012 7B68     		ldr	r3, [r7, #4]
  53 0014 1B68     		ldr	r3, [r3]
  54              	.L3:
 115:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** }
  55              		.loc 1 115 0
  56 0016 1846     		mov	r0, r3
  57 0018 0C37     		adds	r7, r7, #12
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s 			page 4


  58              	.LCFI3:
  59              		.cfi_def_cfa_offset 4
  60 001a BD46     		mov	sp, r7
  61              	.LCFI4:
  62              		.cfi_def_cfa_register 13
  63              		@ sp needed
  64 001c 5DF8047B 		ldr	r7, [sp], #4
  65              	.LCFI5:
  66              		.cfi_restore 7
  67              		.cfi_def_cfa_offset 0
  68 0020 7047     		bx	lr
  69              		.cfi_endproc
  70              	.LFE9:
  72              		.section	.text.Ft_Esd_Dl_COLOR_A,"ax",%progbits
  73              		.align	1
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  77              		.fpu fpv5-sp-d16
  79              	Ft_Esd_Dl_COLOR_A:
  80              	.LFB14:
  81              		.file 2 "FT_Esd_Framework/FT_Esd_Dl.h"
   1:FT_Esd_Framework/FT_Esd_Dl.h **** 
   2:FT_Esd_Framework/FT_Esd_Dl.h **** #ifndef FT_ESD_DL_H
   3:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_DL_H
   4:FT_Esd_Framework/FT_Esd_Dl.h **** 
   5:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_DataTypes.h"
   6:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_Platform.h"
   7:FT_Esd_Framework/FT_Esd_Dl.h **** #include "Ft_Esd.h"
   8:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_Gpu.h"
   9:FT_Esd_Framework/FT_Esd_Dl.h **** #include "Ft_Esd_BitmapInfo.h"
  10:FT_Esd_Framework/FT_Esd_Dl.h **** 
  11:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_CATEGORY(EsdUtilities, DisplayName = "ESD Utilities")
  12:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_CATEGORY(EveRenderFunctions, DisplayName = "EVE Render Functions")
  13:FT_Esd_Framework/FT_Esd_Dl.h **** 
  14:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_TYPE(Ft_Gpu_Hal_Context_t *, Native = Pointer, Edit = Library)
  15:FT_Esd_Framework/FT_Esd_Dl.h **** 
  16:FT_Esd_Framework/FT_Esd_Dl.h **** // Keep cache of displaylist values that don't often change but are generally set by every widget t
  17:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_OPTIMIZE_DISPLAYLIST 1
  18:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_STATE_STACK_SIZE 5
  19:FT_Esd_Framework/FT_Esd_Dl.h **** 
  20:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_BITMAPHANDLE_INVALID 255
  21:FT_Esd_Framework/FT_Esd_Dl.h **** 
  22:FT_Esd_Framework/FT_Esd_Dl.h **** //
  23:FT_Esd_Framework/FT_Esd_Dl.h **** // Structs
  24:FT_Esd_Framework/FT_Esd_Dl.h **** //
  25:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_ESD_OPTIMIZE_DISPLAYLIST
  26:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_STATE Ft_Esd_GpuState[Ft_Esd_GpuState_I]
  27:FT_Esd_Framework/FT_Esd_Dl.h **** typedef struct
  28:FT_Esd_Framework/FT_Esd_Dl.h **** {
  29:FT_Esd_Framework/FT_Esd_Dl.h **** 	// Keep to a minimum
  30:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_81X_ENABLE
  31:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint32_t PaletteSource;
  32:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  33:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint32_t ColorRGB;
  34:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t ColorA;
  35:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t Handle;         // Current handle
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s 			page 5


  36:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t Cell;           // Current cell
  37:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_bool_t BitmapTransform; // BitmapTransform other than default is set
  38:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_81X_ENABLE
  39:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t VertexFormat;   // Current vertex format
  40:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  41:FT_Esd_Framework/FT_Esd_Dl.h **** } Ft_Esd_GpuState_T;
  42:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  43:FT_Esd_Framework/FT_Esd_Dl.h **** 
  44:FT_Esd_Framework/FT_Esd_Dl.h **** //
  45:FT_Esd_Framework/FT_Esd_Dl.h **** // Globals
  46:FT_Esd_Framework/FT_Esd_Dl.h **** //
  47:FT_Esd_Framework/FT_Esd_Dl.h **** extern Ft_Gpu_Hal_Context_t *Ft_Esd_Host;
  48:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint16_t Ft_Esd_FontHeight[32];
  49:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_ESD_OPTIMIZE_DISPLAYLIST
  50:FT_Esd_Framework/FT_Esd_Dl.h **** extern Ft_Esd_GpuState_T Ft_Esd_GpuState[FT_ESD_STATE_STACK_SIZE];
  51:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint8_t Ft_Esd_GpuState_I;
  52:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint32_t Ft_Esd_CoFgColor;
  53:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint32_t Ft_Esd_CoBgColor;
  54:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  55:FT_Esd_Framework/FT_Esd_Dl.h **** 
  56:FT_Esd_Framework/FT_Esd_Dl.h **** //Get the height of builtin font
  57:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_GetFontHeight, Type = ft_uint16_t ,DisplayName = "Get Font Height", Category = 
  58:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(i, Type = int, DisplayName = "Bitmap Handle", Default = 0, Min = 0, Max = 31)
  59:FT_Esd_Framework/FT_Esd_Dl.h **** // inline static ft_uint16_t Ft_Esd_GetFontHeight(int i) { return Ft_Esd_FontHeight[i]; }
  60:FT_Esd_Framework/FT_Esd_Dl.h **** #define Ft_Esd_GetFontHeight(i) (Ft_Esd_FontHeight[i]);
  61:FT_Esd_Framework/FT_Esd_Dl.h **** 
  62:FT_Esd_Framework/FT_Esd_Dl.h **** // Reset any cached state
  63:FT_Esd_Framework/FT_Esd_Dl.h **** void Ft_Esd_ResetGpuState();
  64:FT_Esd_Framework/FT_Esd_Dl.h **** void Ft_Esd_ResetCoState();
  65:FT_Esd_Framework/FT_Esd_Dl.h **** 
  66:FT_Esd_Framework/FT_Esd_Dl.h **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotalUsed();
  67:FT_Esd_Framework/FT_Esd_Dl.h **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotal();
  68:FT_Esd_Framework/FT_Esd_Dl.h **** 
  69:FT_Esd_Framework/FT_Esd_Dl.h **** /// Set current tag. Must be returned to 255 after usage, to ensure next widgets don't draw with in
  70:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_TAG, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  71:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(s, Type = ft_uint8_t, DisplayName = "Tag", Default = 255, Min = 0, Max = 255)
  72:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_TAG(ft_uint8_t s)
  73:FT_Esd_Framework/FT_Esd_Dl.h **** {
  74:FT_Esd_Framework/FT_Esd_Dl.h **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, TAG(s));
  75:FT_Esd_Framework/FT_Esd_Dl.h **** }
  76:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify color RGB
  77:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_RGB, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  78:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(c, Type = ft_rgb32_t, DisplayName = "Color")
  79:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_RGB(ft_rgb32_t c)
  80:FT_Esd_Framework/FT_Esd_Dl.h **** {
  81:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  82:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_rgb32_t rgb = c & 0xFFFFFF;
  83:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (rgb != FT_ESD_STATE.ColorRGB)
  84:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
  85:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  86:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, (4UL << 24) | (rgb));
  87:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  88:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.ColorRGB = rgb;
  89:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
  90:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  91:FT_Esd_Framework/FT_Esd_Dl.h **** }
  92:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify alpha channel
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s 			page 6


  93:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_A, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  94:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(alpha, Type = ft_uint8_t, Default = 255, Min = 0, Max = 255)
  95:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_A(ft_uint8_t alpha)
  96:FT_Esd_Framework/FT_Esd_Dl.h **** {
  82              		.loc 2 96 0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 8
  85              		@ frame_needed = 1, uses_anonymous_args = 0
  86 0000 80B5     		push	{r7, lr}
  87              	.LCFI6:
  88              		.cfi_def_cfa_offset 8
  89              		.cfi_offset 7, -8
  90              		.cfi_offset 14, -4
  91 0002 82B0     		sub	sp, sp, #8
  92              	.LCFI7:
  93              		.cfi_def_cfa_offset 16
  94 0004 00AF     		add	r7, sp, #0
  95              	.LCFI8:
  96              		.cfi_def_cfa_register 7
  97 0006 0346     		mov	r3, r0
  98 0008 FB71     		strb	r3, [r7, #7]
  97:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  98:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (alpha != FT_ESD_STATE.ColorA)
  99              		.loc 2 98 0
 100 000a 0F4B     		ldr	r3, .L7
 101 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 102 000e 0F4A     		ldr	r2, .L7+4
 103 0010 1B01     		lsls	r3, r3, #4
 104 0012 1344     		add	r3, r3, r2
 105 0014 0833     		adds	r3, r3, #8
 106 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 107 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 108 001a 9A42     		cmp	r2, r3
 109 001c 10D0     		beq	.L6
  99:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
 100:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 101:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, COLOR_A(alpha));
 110              		.loc 2 101 0
 111 001e 0C4B     		ldr	r3, .L7+8
 112 0020 1A68     		ldr	r2, [r3]
 113 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 114 0024 43F08053 		orr	r3, r3, #268435456
 115 0028 1946     		mov	r1, r3
 116 002a 1046     		mov	r0, r2
 117 002c FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 102:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 103:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.ColorA = alpha;
 118              		.loc 2 103 0
 119 0030 054B     		ldr	r3, .L7
 120 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 121 0034 054A     		ldr	r2, .L7+4
 122 0036 1B01     		lsls	r3, r3, #4
 123 0038 1344     		add	r3, r3, r2
 124 003a 0833     		adds	r3, r3, #8
 125 003c FA79     		ldrb	r2, [r7, #7]
 126 003e 1A70     		strb	r2, [r3]
 127              	.L6:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s 			page 7


 104:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
 105:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 106:FT_Esd_Framework/FT_Esd_Dl.h **** }
 128              		.loc 2 106 0
 129 0040 00BF     		nop
 130 0042 0837     		adds	r7, r7, #8
 131              	.LCFI9:
 132              		.cfi_def_cfa_offset 8
 133 0044 BD46     		mov	sp, r7
 134              	.LCFI10:
 135              		.cfi_def_cfa_register 13
 136              		@ sp needed
 137 0046 80BD     		pop	{r7, pc}
 138              	.L8:
 139              		.align	2
 140              	.L7:
 141 0048 00000000 		.word	Ft_Esd_GpuState_I
 142 004c 00000000 		.word	Ft_Esd_GpuState
 143 0050 00000000 		.word	Ft_Esd_Host
 144              		.cfi_endproc
 145              	.LFE14:
 147              		.section	.text.Ft_Esd_ScrollPanel_Theme__Default,"ax",%progbits
 148              		.align	1
 149              		.global	Ft_Esd_ScrollPanel_Theme__Default
 150              		.syntax unified
 151              		.thumb
 152              		.thumb_func
 153              		.fpu fpv5-sp-d16
 155              	Ft_Esd_ScrollPanel_Theme__Default:
 156              	.LFB27:
 157              		.file 3 "FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c"
   1:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** /*
   2:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** This file is automatically generated
   3:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** Ft_Esd_ScrollPanel
   4:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** C Source
   5:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** */
   6:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 
   7:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** #include "Ft_Esd_ScrollPanel.h"
   8:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 
   9:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** #include "FT_Esd_Dl.h"
  10:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** #include "Ft_Esd_Elements.h"
  11:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 
  12:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** extern void Ft_Esd_Noop(void *context);
  13:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** Ft_Esd_Theme * Ft_Esd_ScrollPanel_Theme__Default(void *context) { return Ft_Esd_Theme_GetCurrent();
 158              		.loc 3 13 0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 8
 161              		@ frame_needed = 1, uses_anonymous_args = 0
 162 0000 80B5     		push	{r7, lr}
 163              	.LCFI11:
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 7, -8
 166              		.cfi_offset 14, -4
 167 0002 82B0     		sub	sp, sp, #8
 168              	.LCFI12:
 169              		.cfi_def_cfa_offset 16
 170 0004 00AF     		add	r7, sp, #0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s 			page 8


 171              	.LCFI13:
 172              		.cfi_def_cfa_register 7
 173 0006 7860     		str	r0, [r7, #4]
 174              		.loc 3 13 0
 175 0008 FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
 176 000c 0346     		mov	r3, r0
 177 000e 1846     		mov	r0, r3
 178 0010 0837     		adds	r7, r7, #8
 179              	.LCFI14:
 180              		.cfi_def_cfa_offset 8
 181 0012 BD46     		mov	sp, r7
 182              	.LCFI15:
 183              		.cfi_def_cfa_register 13
 184              		@ sp needed
 185 0014 80BD     		pop	{r7, pc}
 186              		.cfi_endproc
 187              	.LFE27:
 189              		.section	.text.Ft_Esd_ScrollPanel_X__Default,"ax",%progbits
 190              		.align	1
 191              		.global	Ft_Esd_ScrollPanel_X__Default
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 195              		.fpu fpv5-sp-d16
 197              	Ft_Esd_ScrollPanel_X__Default:
 198              	.LFB28:
  14:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** ft_int16_t Ft_Esd_ScrollPanel_X__Default(void *context) { return 0; }
 199              		.loc 3 14 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 8
 202              		@ frame_needed = 1, uses_anonymous_args = 0
 203              		@ link register save eliminated.
 204 0000 80B4     		push	{r7}
 205              	.LCFI16:
 206              		.cfi_def_cfa_offset 4
 207              		.cfi_offset 7, -4
 208 0002 83B0     		sub	sp, sp, #12
 209              	.LCFI17:
 210              		.cfi_def_cfa_offset 16
 211 0004 00AF     		add	r7, sp, #0
 212              	.LCFI18:
 213              		.cfi_def_cfa_register 7
 214 0006 7860     		str	r0, [r7, #4]
 215              		.loc 3 14 0
 216 0008 0023     		movs	r3, #0
 217 000a 1846     		mov	r0, r3
 218 000c 0C37     		adds	r7, r7, #12
 219              	.LCFI19:
 220              		.cfi_def_cfa_offset 4
 221 000e BD46     		mov	sp, r7
 222              	.LCFI20:
 223              		.cfi_def_cfa_register 13
 224              		@ sp needed
 225 0010 5DF8047B 		ldr	r7, [sp], #4
 226              	.LCFI21:
 227              		.cfi_restore 7
 228              		.cfi_def_cfa_offset 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s 			page 9


 229 0014 7047     		bx	lr
 230              		.cfi_endproc
 231              	.LFE28:
 233              		.section	.text.Ft_Esd_ScrollPanel_Y__Default,"ax",%progbits
 234              		.align	1
 235              		.global	Ft_Esd_ScrollPanel_Y__Default
 236              		.syntax unified
 237              		.thumb
 238              		.thumb_func
 239              		.fpu fpv5-sp-d16
 241              	Ft_Esd_ScrollPanel_Y__Default:
 242              	.LFB29:
  15:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** ft_int16_t Ft_Esd_ScrollPanel_Y__Default(void *context) { return 0; }
 243              		.loc 3 15 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 8
 246              		@ frame_needed = 1, uses_anonymous_args = 0
 247              		@ link register save eliminated.
 248 0000 80B4     		push	{r7}
 249              	.LCFI22:
 250              		.cfi_def_cfa_offset 4
 251              		.cfi_offset 7, -4
 252 0002 83B0     		sub	sp, sp, #12
 253              	.LCFI23:
 254              		.cfi_def_cfa_offset 16
 255 0004 00AF     		add	r7, sp, #0
 256              	.LCFI24:
 257              		.cfi_def_cfa_register 7
 258 0006 7860     		str	r0, [r7, #4]
 259              		.loc 3 15 0
 260 0008 0023     		movs	r3, #0
 261 000a 1846     		mov	r0, r3
 262 000c 0C37     		adds	r7, r7, #12
 263              	.LCFI25:
 264              		.cfi_def_cfa_offset 4
 265 000e BD46     		mov	sp, r7
 266              	.LCFI26:
 267              		.cfi_def_cfa_register 13
 268              		@ sp needed
 269 0010 5DF8047B 		ldr	r7, [sp], #4
 270              	.LCFI27:
 271              		.cfi_restore 7
 272              		.cfi_def_cfa_offset 0
 273 0014 7047     		bx	lr
 274              		.cfi_endproc
 275              	.LFE29:
 277              		.section	.text.Ft_Esd_ScrollPanel_Width__Default,"ax",%progbits
 278              		.align	1
 279              		.global	Ft_Esd_ScrollPanel_Width__Default
 280              		.syntax unified
 281              		.thumb
 282              		.thumb_func
 283              		.fpu fpv5-sp-d16
 285              	Ft_Esd_ScrollPanel_Width__Default:
 286              	.LFB30:
  16:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** ft_int16_t Ft_Esd_ScrollPanel_Width__Default(void *context) { return 200; }
 287              		.loc 3 16 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s 			page 10


 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 8
 290              		@ frame_needed = 1, uses_anonymous_args = 0
 291              		@ link register save eliminated.
 292 0000 80B4     		push	{r7}
 293              	.LCFI28:
 294              		.cfi_def_cfa_offset 4
 295              		.cfi_offset 7, -4
 296 0002 83B0     		sub	sp, sp, #12
 297              	.LCFI29:
 298              		.cfi_def_cfa_offset 16
 299 0004 00AF     		add	r7, sp, #0
 300              	.LCFI30:
 301              		.cfi_def_cfa_register 7
 302 0006 7860     		str	r0, [r7, #4]
 303              		.loc 3 16 0
 304 0008 C823     		movs	r3, #200
 305 000a 1846     		mov	r0, r3
 306 000c 0C37     		adds	r7, r7, #12
 307              	.LCFI31:
 308              		.cfi_def_cfa_offset 4
 309 000e BD46     		mov	sp, r7
 310              	.LCFI32:
 311              		.cfi_def_cfa_register 13
 312              		@ sp needed
 313 0010 5DF8047B 		ldr	r7, [sp], #4
 314              	.LCFI33:
 315              		.cfi_restore 7
 316              		.cfi_def_cfa_offset 0
 317 0014 7047     		bx	lr
 318              		.cfi_endproc
 319              	.LFE30:
 321              		.section	.text.Ft_Esd_ScrollPanel_Height__Default,"ax",%progbits
 322              		.align	1
 323              		.global	Ft_Esd_ScrollPanel_Height__Default
 324              		.syntax unified
 325              		.thumb
 326              		.thumb_func
 327              		.fpu fpv5-sp-d16
 329              	Ft_Esd_ScrollPanel_Height__Default:
 330              	.LFB31:
  17:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** ft_int16_t Ft_Esd_ScrollPanel_Height__Default(void *context) { return 150; }
 331              		.loc 3 17 0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 8
 334              		@ frame_needed = 1, uses_anonymous_args = 0
 335              		@ link register save eliminated.
 336 0000 80B4     		push	{r7}
 337              	.LCFI34:
 338              		.cfi_def_cfa_offset 4
 339              		.cfi_offset 7, -4
 340 0002 83B0     		sub	sp, sp, #12
 341              	.LCFI35:
 342              		.cfi_def_cfa_offset 16
 343 0004 00AF     		add	r7, sp, #0
 344              	.LCFI36:
 345              		.cfi_def_cfa_register 7
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s 			page 11


 346 0006 7860     		str	r0, [r7, #4]
 347              		.loc 3 17 0
 348 0008 9623     		movs	r3, #150
 349 000a 1846     		mov	r0, r3
 350 000c 0C37     		adds	r7, r7, #12
 351              	.LCFI37:
 352              		.cfi_def_cfa_offset 4
 353 000e BD46     		mov	sp, r7
 354              	.LCFI38:
 355              		.cfi_def_cfa_register 13
 356              		@ sp needed
 357 0010 5DF8047B 		ldr	r7, [sp], #4
 358              	.LCFI39:
 359              		.cfi_restore 7
 360              		.cfi_def_cfa_offset 0
 361 0014 7047     		bx	lr
 362              		.cfi_endproc
 363              	.LFE31:
 365              		.section	.text.Ft_Esd_ScrollPanel_Columns__Default,"ax",%progbits
 366              		.align	1
 367              		.global	Ft_Esd_ScrollPanel_Columns__Default
 368              		.syntax unified
 369              		.thumb
 370              		.thumb_func
 371              		.fpu fpv5-sp-d16
 373              	Ft_Esd_ScrollPanel_Columns__Default:
 374              	.LFB32:
  18:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** int Ft_Esd_ScrollPanel_Columns__Default(void *context) { return 1L; }
 375              		.loc 3 18 0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 8
 378              		@ frame_needed = 1, uses_anonymous_args = 0
 379              		@ link register save eliminated.
 380 0000 80B4     		push	{r7}
 381              	.LCFI40:
 382              		.cfi_def_cfa_offset 4
 383              		.cfi_offset 7, -4
 384 0002 83B0     		sub	sp, sp, #12
 385              	.LCFI41:
 386              		.cfi_def_cfa_offset 16
 387 0004 00AF     		add	r7, sp, #0
 388              	.LCFI42:
 389              		.cfi_def_cfa_register 7
 390 0006 7860     		str	r0, [r7, #4]
 391              		.loc 3 18 0
 392 0008 0123     		movs	r3, #1
 393 000a 1846     		mov	r0, r3
 394 000c 0C37     		adds	r7, r7, #12
 395              	.LCFI43:
 396              		.cfi_def_cfa_offset 4
 397 000e BD46     		mov	sp, r7
 398              	.LCFI44:
 399              		.cfi_def_cfa_register 13
 400              		@ sp needed
 401 0010 5DF8047B 		ldr	r7, [sp], #4
 402              	.LCFI45:
 403              		.cfi_restore 7
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s 			page 12


 404              		.cfi_def_cfa_offset 0
 405 0014 7047     		bx	lr
 406              		.cfi_endproc
 407              	.LFE32:
 409              		.section	.text.Ft_Esd_ScrollPanel_Margin__Default,"ax",%progbits
 410              		.align	1
 411              		.global	Ft_Esd_ScrollPanel_Margin__Default
 412              		.syntax unified
 413              		.thumb
 414              		.thumb_func
 415              		.fpu fpv5-sp-d16
 417              	Ft_Esd_ScrollPanel_Margin__Default:
 418              	.LFB33:
  19:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** int Ft_Esd_ScrollPanel_Margin__Default(void *context) { return 4L; }
 419              		.loc 3 19 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 8
 422              		@ frame_needed = 1, uses_anonymous_args = 0
 423              		@ link register save eliminated.
 424 0000 80B4     		push	{r7}
 425              	.LCFI46:
 426              		.cfi_def_cfa_offset 4
 427              		.cfi_offset 7, -4
 428 0002 83B0     		sub	sp, sp, #12
 429              	.LCFI47:
 430              		.cfi_def_cfa_offset 16
 431 0004 00AF     		add	r7, sp, #0
 432              	.LCFI48:
 433              		.cfi_def_cfa_register 7
 434 0006 7860     		str	r0, [r7, #4]
 435              		.loc 3 19 0
 436 0008 0423     		movs	r3, #4
 437 000a 1846     		mov	r0, r3
 438 000c 0C37     		adds	r7, r7, #12
 439              	.LCFI49:
 440              		.cfi_def_cfa_offset 4
 441 000e BD46     		mov	sp, r7
 442              	.LCFI50:
 443              		.cfi_def_cfa_register 13
 444              		@ sp needed
 445 0010 5DF8047B 		ldr	r7, [sp], #4
 446              	.LCFI51:
 447              		.cfi_restore 7
 448              		.cfi_def_cfa_offset 0
 449 0014 7047     		bx	lr
 450              		.cfi_endproc
 451              	.LFE33:
 453              		.section	.text.Ft_Esd_ScrollPanel_OffsetYChanged__Noop,"ax",%progbits
 454              		.align	1
 455              		.global	Ft_Esd_ScrollPanel_OffsetYChanged__Noop
 456              		.syntax unified
 457              		.thumb
 458              		.thumb_func
 459              		.fpu fpv5-sp-d16
 461              	Ft_Esd_ScrollPanel_OffsetYChanged__Noop:
 462              	.LFB34:
  20:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** void Ft_Esd_ScrollPanel_OffsetYChanged__Noop(void *context, ft_int16_t value) { }
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s 			page 13


 463              		.loc 3 20 0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 8
 466              		@ frame_needed = 1, uses_anonymous_args = 0
 467              		@ link register save eliminated.
 468 0000 80B4     		push	{r7}
 469              	.LCFI52:
 470              		.cfi_def_cfa_offset 4
 471              		.cfi_offset 7, -4
 472 0002 83B0     		sub	sp, sp, #12
 473              	.LCFI53:
 474              		.cfi_def_cfa_offset 16
 475 0004 00AF     		add	r7, sp, #0
 476              	.LCFI54:
 477              		.cfi_def_cfa_register 7
 478 0006 7860     		str	r0, [r7, #4]
 479 0008 0B46     		mov	r3, r1
 480 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 481              		.loc 3 20 0
 482 000c 00BF     		nop
 483 000e 0C37     		adds	r7, r7, #12
 484              	.LCFI55:
 485              		.cfi_def_cfa_offset 4
 486 0010 BD46     		mov	sp, r7
 487              	.LCFI56:
 488              		.cfi_def_cfa_register 13
 489              		@ sp needed
 490 0012 5DF8047B 		ldr	r7, [sp], #4
 491              	.LCFI57:
 492              		.cfi_restore 7
 493              		.cfi_def_cfa_offset 0
 494 0016 7047     		bx	lr
 495              		.cfi_endproc
 496              	.LFE34:
 498              		.section	.text.Ft_Esd_ScrollPanel__Initializer,"ax",%progbits
 499              		.align	1
 500              		.global	Ft_Esd_ScrollPanel__Initializer
 501              		.syntax unified
 502              		.thumb
 503              		.thumb_func
 504              		.fpu fpv5-sp-d16
 506              	Ft_Esd_ScrollPanel__Initializer:
 507              	.LFB35:
  21:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 
  22:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** Ft_Esd_Theme * Ft_Esd_Theme_GetCurrent();
  23:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** static int Ft_Esd_ScrollPanel_TouchArea_X__Property(void *context);
  24:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** static int Ft_Esd_ScrollPanel_TouchArea_Y__Property(void *context);
  25:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** static int Ft_Esd_ScrollPanel_TouchArea_Width__Property(void *context);
  26:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** static int Ft_Esd_ScrollPanel_TouchArea_Height__Property(void *context);
  27:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 
  28:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** static void Ft_Esd_ScrollPanel_TouchArea_Down__Signal(void *context);
  29:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 
  30:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** void Ft_Esd_ScrollPanel__Initializer(Ft_Esd_ScrollPanel *context)
  31:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** {
 508              		.loc 3 31 0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s 			page 14


 511              		@ frame_needed = 1, uses_anonymous_args = 0
 512 0000 80B5     		push	{r7, lr}
 513              	.LCFI58:
 514              		.cfi_def_cfa_offset 8
 515              		.cfi_offset 7, -8
 516              		.cfi_offset 14, -4
 517 0002 82B0     		sub	sp, sp, #8
 518              	.LCFI59:
 519              		.cfi_def_cfa_offset 16
 520 0004 00AF     		add	r7, sp, #0
 521              	.LCFI60:
 522              		.cfi_def_cfa_register 7
 523 0006 7860     		str	r0, [r7, #4]
  32:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	context->Parent = 0;
 524              		.loc 3 32 0
 525 0008 7B68     		ldr	r3, [r7, #4]
 526 000a 0022     		movs	r2, #0
 527 000c 1A60     		str	r2, [r3]
  33:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	Ft_Esd_TouchArea__Initializer(&context->TouchArea);
 528              		.loc 3 33 0
 529 000e 7B68     		ldr	r3, [r7, #4]
 530 0010 0433     		adds	r3, r3, #4
 531 0012 1846     		mov	r0, r3
 532 0014 FFF7FEFF 		bl	Ft_Esd_TouchArea__Initializer
  34:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	context->TouchArea.Parent = context;
 533              		.loc 3 34 0
 534 0018 7B68     		ldr	r3, [r7, #4]
 535 001a 7A68     		ldr	r2, [r7, #4]
 536 001c 5A60     		str	r2, [r3, #4]
  35:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	context->TouchArea.X = Ft_Esd_ScrollPanel_TouchArea_X__Property;
 537              		.loc 3 35 0
 538 001e 7B68     		ldr	r3, [r7, #4]
 539 0020 214A     		ldr	r2, .L25
 540 0022 9A61     		str	r2, [r3, #24]
  36:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	context->TouchArea.Y = Ft_Esd_ScrollPanel_TouchArea_Y__Property;
 541              		.loc 3 36 0
 542 0024 7B68     		ldr	r3, [r7, #4]
 543 0026 214A     		ldr	r2, .L25+4
 544 0028 DA61     		str	r2, [r3, #28]
  37:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	context->TouchArea.Width = Ft_Esd_ScrollPanel_TouchArea_Width__Property;
 545              		.loc 3 37 0
 546 002a 7B68     		ldr	r3, [r7, #4]
 547 002c 204A     		ldr	r2, .L25+8
 548 002e 1A62     		str	r2, [r3, #32]
  38:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	context->TouchArea.Height = Ft_Esd_ScrollPanel_TouchArea_Height__Property;
 549              		.loc 3 38 0
 550 0030 7B68     		ldr	r3, [r7, #4]
 551 0032 204A     		ldr	r2, .L25+12
 552 0034 5A62     		str	r2, [r3, #36]
  39:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	context->TouchArea.Down = Ft_Esd_ScrollPanel_TouchArea_Down__Signal;
 553              		.loc 3 39 0
 554 0036 7B68     		ldr	r3, [r7, #4]
 555 0038 1F4A     		ldr	r2, .L25+16
 556 003a 1A61     		str	r2, [r3, #16]
  40:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	context->Theme = Ft_Esd_ScrollPanel_Theme__Default;
 557              		.loc 3 40 0
 558 003c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s 			page 15


 559 003e 1F4A     		ldr	r2, .L25+20
 560 0040 9A62     		str	r2, [r3, #40]
  41:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	context->X = Ft_Esd_ScrollPanel_X__Default;
 561              		.loc 3 41 0
 562 0042 7B68     		ldr	r3, [r7, #4]
 563 0044 1E4A     		ldr	r2, .L25+24
 564 0046 DA62     		str	r2, [r3, #44]
  42:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	context->Y = Ft_Esd_ScrollPanel_Y__Default;
 565              		.loc 3 42 0
 566 0048 7B68     		ldr	r3, [r7, #4]
 567 004a 1E4A     		ldr	r2, .L25+28
 568 004c 1A63     		str	r2, [r3, #48]
  43:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	context->Width = Ft_Esd_ScrollPanel_Width__Default;
 569              		.loc 3 43 0
 570 004e 7B68     		ldr	r3, [r7, #4]
 571 0050 1D4A     		ldr	r2, .L25+32
 572 0052 5A63     		str	r2, [r3, #52]
  44:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	context->Height = Ft_Esd_ScrollPanel_Height__Default;
 573              		.loc 3 44 0
 574 0054 7B68     		ldr	r3, [r7, #4]
 575 0056 1D4A     		ldr	r2, .L25+36
 576 0058 9A63     		str	r2, [r3, #56]
  45:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	context->Columns = Ft_Esd_ScrollPanel_Columns__Default;
 577              		.loc 3 45 0
 578 005a 7B68     		ldr	r3, [r7, #4]
 579 005c 1C4A     		ldr	r2, .L25+40
 580 005e DA63     		str	r2, [r3, #60]
  46:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	context->OffsetY = 0L;
 581              		.loc 3 46 0
 582 0060 7B68     		ldr	r3, [r7, #4]
 583 0062 0022     		movs	r2, #0
 584 0064 1A64     		str	r2, [r3, #64]
  47:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	context->Margin = Ft_Esd_ScrollPanel_Margin__Default;
 585              		.loc 3 47 0
 586 0066 7B68     		ldr	r3, [r7, #4]
 587 0068 1A4A     		ldr	r2, .L25+44
 588 006a 5A64     		str	r2, [r3, #68]
  48:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	context->OffsetYRange = 0L;
 589              		.loc 3 48 0
 590 006c 7B68     		ldr	r3, [r7, #4]
 591 006e 0022     		movs	r2, #0
 592 0070 9A64     		str	r2, [r3, #72]
  49:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	context->PreviousTouchY = 0;
 593              		.loc 3 49 0
 594 0072 7B68     		ldr	r3, [r7, #4]
 595 0074 0022     		movs	r2, #0
 596 0076 A3F84C20 		strh	r2, [r3, #76]	@ movhi
  50:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	context->OffsetYChanged = Ft_Esd_ScrollPanel_OffsetYChanged__Noop;
 597              		.loc 3 50 0
 598 007a 7B68     		ldr	r3, [r7, #4]
 599 007c 164A     		ldr	r2, .L25+48
 600 007e 1A65     		str	r2, [r3, #80]
  51:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	context->CurrentX = 0L;
 601              		.loc 3 51 0
 602 0080 7B68     		ldr	r3, [r7, #4]
 603 0082 0022     		movs	r2, #0
 604 0084 5A65     		str	r2, [r3, #84]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s 			page 16


  52:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	context->CurrentY = 0L;
 605              		.loc 3 52 0
 606 0086 7B68     		ldr	r3, [r7, #4]
 607 0088 0022     		movs	r2, #0
 608 008a 9A65     		str	r2, [r3, #88]
  53:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	context->PreviousOffsetY = 0;
 609              		.loc 3 53 0
 610 008c 7B68     		ldr	r3, [r7, #4]
 611 008e 0022     		movs	r2, #0
 612 0090 A3F85C20 		strh	r2, [r3, #92]	@ movhi
  54:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	context->First = 0x0;
 613              		.loc 3 54 0
 614 0094 7B68     		ldr	r3, [r7, #4]
 615 0096 0022     		movs	r2, #0
 616 0098 1A66     		str	r2, [r3, #96]
  55:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	context->Current = 0x0;
 617              		.loc 3 55 0
 618 009a 7B68     		ldr	r3, [r7, #4]
 619 009c 0022     		movs	r2, #0
 620 009e 5A66     		str	r2, [r3, #100]
  56:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** }
 621              		.loc 3 56 0
 622 00a0 00BF     		nop
 623 00a2 0837     		adds	r7, r7, #8
 624              	.LCFI61:
 625              		.cfi_def_cfa_offset 8
 626 00a4 BD46     		mov	sp, r7
 627              	.LCFI62:
 628              		.cfi_def_cfa_register 13
 629              		@ sp needed
 630 00a6 80BD     		pop	{r7, pc}
 631              	.L26:
 632              		.align	2
 633              	.L25:
 634 00a8 00000000 		.word	Ft_Esd_ScrollPanel_TouchArea_X__Property
 635 00ac 00000000 		.word	Ft_Esd_ScrollPanel_TouchArea_Y__Property
 636 00b0 00000000 		.word	Ft_Esd_ScrollPanel_TouchArea_Width__Property
 637 00b4 00000000 		.word	Ft_Esd_ScrollPanel_TouchArea_Height__Property
 638 00b8 00000000 		.word	Ft_Esd_ScrollPanel_TouchArea_Down__Signal
 639 00bc 00000000 		.word	Ft_Esd_ScrollPanel_Theme__Default
 640 00c0 00000000 		.word	Ft_Esd_ScrollPanel_X__Default
 641 00c4 00000000 		.word	Ft_Esd_ScrollPanel_Y__Default
 642 00c8 00000000 		.word	Ft_Esd_ScrollPanel_Width__Default
 643 00cc 00000000 		.word	Ft_Esd_ScrollPanel_Height__Default
 644 00d0 00000000 		.word	Ft_Esd_ScrollPanel_Columns__Default
 645 00d4 00000000 		.word	Ft_Esd_ScrollPanel_Margin__Default
 646 00d8 00000000 		.word	Ft_Esd_ScrollPanel_OffsetYChanged__Noop
 647              		.cfi_endproc
 648              	.LFE35:
 650              		.section	.text.Ft_Esd_ScrollPanel_Render,"ax",%progbits
 651              		.align	1
 652              		.global	Ft_Esd_ScrollPanel_Render
 653              		.syntax unified
 654              		.thumb
 655              		.thumb_func
 656              		.fpu fpv5-sp-d16
 658              	Ft_Esd_ScrollPanel_Render:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s 			page 17


 659              	.LFB36:
  57:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 
  58:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** void Ft_Esd_ScrollPanel_Render_Contents(Ft_Esd_ScrollPanel *context);
  59:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** void Ft_Esd_ScrollPanel_Update_Scroll(Ft_Esd_ScrollPanel *context);
  60:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** void Ft_Esd_ScrollPanel_Update_Contents(Ft_Esd_ScrollPanel *context);
  61:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** void Ft_Esd_Elements_Panel(Ft_Esd_Theme *, ft_int16_t, ft_int16_t, ft_int16_t, ft_int16_t, ft_int16
  62:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 
  63:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** void Ft_Esd_ScrollPanel_Render(Ft_Esd_ScrollPanel *context) {
 660              		.loc 3 63 0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 32
 663              		@ frame_needed = 1, uses_anonymous_args = 0
 664 0000 80B5     		push	{r7, lr}
 665              	.LCFI63:
 666              		.cfi_def_cfa_offset 8
 667              		.cfi_offset 7, -8
 668              		.cfi_offset 14, -4
 669 0002 8CB0     		sub	sp, sp, #48
 670              	.LCFI64:
 671              		.cfi_def_cfa_offset 56
 672 0004 04AF     		add	r7, sp, #16
 673              	.LCFI65:
 674              		.cfi_def_cfa 7, 40
 675 0006 7860     		str	r0, [r7, #4]
  64:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	void *parent = context->Parent;
 676              		.loc 3 64 0
 677 0008 7B68     		ldr	r3, [r7, #4]
 678 000a 1B68     		ldr	r3, [r3]
 679 000c FB61     		str	r3, [r7, #28]
  65:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	ft_uint8_t alpha = 255;
 680              		.loc 3 65 0
 681 000e FF23     		movs	r3, #255
 682 0010 FB76     		strb	r3, [r7, #27]
  66:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	Ft_Esd_Dl_COLOR_A(alpha);
 683              		.loc 3 66 0
 684 0012 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 685 0014 1846     		mov	r0, r3
 686 0016 FFF7FEFF 		bl	Ft_Esd_Dl_COLOR_A
  67:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	Ft_Esd_Theme * theme = context->Theme(parent);
 687              		.loc 3 67 0
 688 001a 7B68     		ldr	r3, [r7, #4]
 689 001c 9B6A     		ldr	r3, [r3, #40]
 690 001e F869     		ldr	r0, [r7, #28]
 691 0020 9847     		blx	r3
 692              	.LVL0:
 693 0022 7861     		str	r0, [r7, #20]
  68:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	ft_int16_t x = context->X(parent);
 694              		.loc 3 68 0
 695 0024 7B68     		ldr	r3, [r7, #4]
 696 0026 DB6A     		ldr	r3, [r3, #44]
 697 0028 F869     		ldr	r0, [r7, #28]
 698 002a 9847     		blx	r3
 699              	.LVL1:
 700 002c 0346     		mov	r3, r0
 701 002e 7B82     		strh	r3, [r7, #18]	@ movhi
  69:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	ft_int16_t y = context->Y(parent);
 702              		.loc 3 69 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s 			page 18


 703 0030 7B68     		ldr	r3, [r7, #4]
 704 0032 1B6B     		ldr	r3, [r3, #48]
 705 0034 F869     		ldr	r0, [r7, #28]
 706 0036 9847     		blx	r3
 707              	.LVL2:
 708 0038 0346     		mov	r3, r0
 709 003a 3B82     		strh	r3, [r7, #16]	@ movhi
  70:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	ft_int16_t width = context->Width(parent);
 710              		.loc 3 70 0
 711 003c 7B68     		ldr	r3, [r7, #4]
 712 003e 5B6B     		ldr	r3, [r3, #52]
 713 0040 F869     		ldr	r0, [r7, #28]
 714 0042 9847     		blx	r3
 715              	.LVL3:
 716 0044 0346     		mov	r3, r0
 717 0046 FB81     		strh	r3, [r7, #14]	@ movhi
  71:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	ft_int16_t height = context->Height(parent);
 718              		.loc 3 71 0
 719 0048 7B68     		ldr	r3, [r7, #4]
 720 004a 9B6B     		ldr	r3, [r3, #56]
 721 004c F869     		ldr	r0, [r7, #28]
 722 004e 9847     		blx	r3
 723              	.LVL4:
 724 0050 0346     		mov	r3, r0
 725 0052 BB81     		strh	r3, [r7, #12]	@ movhi
  72:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	ft_int16_t radius = 4;
 726              		.loc 3 72 0
 727 0054 0423     		movs	r3, #4
 728 0056 7B81     		strh	r3, [r7, #10]	@ movhi
  73:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	ft_bool_t raised = 0;
 729              		.loc 3 73 0
 730 0058 0023     		movs	r3, #0
 731 005a 7B72     		strb	r3, [r7, #9]
  74:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	Ft_Esd_Elements_Panel(theme, x, y, width, height, radius, raised);
 732              		.loc 3 74 0
 733 005c B7F90E00 		ldrsh	r0, [r7, #14]
 734 0060 B7F91020 		ldrsh	r2, [r7, #16]
 735 0064 B7F91210 		ldrsh	r1, [r7, #18]
 736 0068 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 737 006a 0293     		str	r3, [sp, #8]
 738 006c B7F90A30 		ldrsh	r3, [r7, #10]
 739 0070 0193     		str	r3, [sp, #4]
 740 0072 B7F90C30 		ldrsh	r3, [r7, #12]
 741 0076 0093     		str	r3, [sp]
 742 0078 0346     		mov	r3, r0
 743 007a 7869     		ldr	r0, [r7, #20]
 744 007c FFF7FEFF 		bl	Ft_Esd_Elements_Panel
  75:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	Ft_Esd_ScrollPanel_Render_Contents(context);
 745              		.loc 3 75 0
 746 0080 7868     		ldr	r0, [r7, #4]
 747 0082 FFF7FEFF 		bl	Ft_Esd_ScrollPanel_Render_Contents
  76:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** }
 748              		.loc 3 76 0
 749 0086 00BF     		nop
 750 0088 2037     		adds	r7, r7, #32
 751              	.LCFI66:
 752              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s 			page 19


 753 008a BD46     		mov	sp, r7
 754              	.LCFI67:
 755              		.cfi_def_cfa_register 13
 756              		@ sp needed
 757 008c 80BD     		pop	{r7, pc}
 758              		.cfi_endproc
 759              	.LFE36:
 761              		.section	.text.Ft_Esd_ScrollPanel_Update,"ax",%progbits
 762              		.align	1
 763              		.global	Ft_Esd_ScrollPanel_Update
 764              		.syntax unified
 765              		.thumb
 766              		.thumb_func
 767              		.fpu fpv5-sp-d16
 769              	Ft_Esd_ScrollPanel_Update:
 770              	.LFB37:
  77:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 
  78:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** void Ft_Esd_ScrollPanel_Update(Ft_Esd_ScrollPanel *context)
  79:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** {
 771              		.loc 3 79 0
 772              		.cfi_startproc
 773              		@ args = 0, pretend = 0, frame = 16
 774              		@ frame_needed = 1, uses_anonymous_args = 0
 775 0000 80B5     		push	{r7, lr}
 776              	.LCFI68:
 777              		.cfi_def_cfa_offset 8
 778              		.cfi_offset 7, -8
 779              		.cfi_offset 14, -4
 780 0002 84B0     		sub	sp, sp, #16
 781              	.LCFI69:
 782              		.cfi_def_cfa_offset 24
 783 0004 00AF     		add	r7, sp, #0
 784              	.LCFI70:
 785              		.cfi_def_cfa_register 7
 786 0006 7860     		str	r0, [r7, #4]
  80:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	void *parent = context->Parent;
 787              		.loc 3 80 0
 788 0008 7B68     		ldr	r3, [r7, #4]
 789 000a 1B68     		ldr	r3, [r3]
 790 000c FB60     		str	r3, [r7, #12]
  81:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	Ft_Esd_TouchArea_Update(&context->TouchArea);
 791              		.loc 3 81 0
 792 000e 7B68     		ldr	r3, [r7, #4]
 793 0010 0433     		adds	r3, r3, #4
 794 0012 1846     		mov	r0, r3
 795 0014 FFF7FEFF 		bl	Ft_Esd_TouchArea_Update
  82:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	Ft_Esd_ScrollPanel_Update_Scroll(context);
 796              		.loc 3 82 0
 797 0018 7868     		ldr	r0, [r7, #4]
 798 001a FFF7FEFF 		bl	Ft_Esd_ScrollPanel_Update_Scroll
  83:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	Ft_Esd_ScrollPanel_Update_Contents(context);
 799              		.loc 3 83 0
 800 001e 7868     		ldr	r0, [r7, #4]
 801 0020 FFF7FEFF 		bl	Ft_Esd_ScrollPanel_Update_Contents
  84:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** }
 802              		.loc 3 84 0
 803 0024 00BF     		nop
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s 			page 20


 804 0026 1037     		adds	r7, r7, #16
 805              	.LCFI71:
 806              		.cfi_def_cfa_offset 8
 807 0028 BD46     		mov	sp, r7
 808              	.LCFI72:
 809              		.cfi_def_cfa_register 13
 810              		@ sp needed
 811 002a 80BD     		pop	{r7, pc}
 812              		.cfi_endproc
 813              	.LFE37:
 815              		.section	.text.Ft_Esd_ScrollPanel_TouchArea_X__Property,"ax",%progbits
 816              		.align	1
 817              		.syntax unified
 818              		.thumb
 819              		.thumb_func
 820              		.fpu fpv5-sp-d16
 822              	Ft_Esd_ScrollPanel_TouchArea_X__Property:
 823              	.LFB38:
  85:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 
  86:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** int Ft_Esd_ScrollPanel_TouchArea_X__Property(void *c)
  87:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** {
 824              		.loc 3 87 0
 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 16
 827              		@ frame_needed = 1, uses_anonymous_args = 0
 828 0000 80B5     		push	{r7, lr}
 829              	.LCFI73:
 830              		.cfi_def_cfa_offset 8
 831              		.cfi_offset 7, -8
 832              		.cfi_offset 14, -4
 833 0002 84B0     		sub	sp, sp, #16
 834              	.LCFI74:
 835              		.cfi_def_cfa_offset 24
 836 0004 00AF     		add	r7, sp, #0
 837              	.LCFI75:
 838              		.cfi_def_cfa_register 7
 839 0006 7860     		str	r0, [r7, #4]
  88:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	Ft_Esd_ScrollPanel *context = (Ft_Esd_ScrollPanel *)c;
 840              		.loc 3 88 0
 841 0008 7B68     		ldr	r3, [r7, #4]
 842 000a FB60     		str	r3, [r7, #12]
  89:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	void *parent = context->Parent;
 843              		.loc 3 89 0
 844 000c FB68     		ldr	r3, [r7, #12]
 845 000e 1B68     		ldr	r3, [r3]
 846 0010 BB60     		str	r3, [r7, #8]
  90:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	return context->X(parent);
 847              		.loc 3 90 0
 848 0012 FB68     		ldr	r3, [r7, #12]
 849 0014 DB6A     		ldr	r3, [r3, #44]
 850 0016 B868     		ldr	r0, [r7, #8]
 851 0018 9847     		blx	r3
 852              	.LVL5:
 853 001a 0346     		mov	r3, r0
  91:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** }
 854              		.loc 3 91 0
 855 001c 1846     		mov	r0, r3
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s 			page 21


 856 001e 1037     		adds	r7, r7, #16
 857              	.LCFI76:
 858              		.cfi_def_cfa_offset 8
 859 0020 BD46     		mov	sp, r7
 860              	.LCFI77:
 861              		.cfi_def_cfa_register 13
 862              		@ sp needed
 863 0022 80BD     		pop	{r7, pc}
 864              		.cfi_endproc
 865              	.LFE38:
 867              		.section	.text.Ft_Esd_ScrollPanel_TouchArea_Y__Property,"ax",%progbits
 868              		.align	1
 869              		.syntax unified
 870              		.thumb
 871              		.thumb_func
 872              		.fpu fpv5-sp-d16
 874              	Ft_Esd_ScrollPanel_TouchArea_Y__Property:
 875              	.LFB39:
  92:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 
  93:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** int Ft_Esd_ScrollPanel_TouchArea_Y__Property(void *c)
  94:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** {
 876              		.loc 3 94 0
 877              		.cfi_startproc
 878              		@ args = 0, pretend = 0, frame = 16
 879              		@ frame_needed = 1, uses_anonymous_args = 0
 880 0000 80B5     		push	{r7, lr}
 881              	.LCFI78:
 882              		.cfi_def_cfa_offset 8
 883              		.cfi_offset 7, -8
 884              		.cfi_offset 14, -4
 885 0002 84B0     		sub	sp, sp, #16
 886              	.LCFI79:
 887              		.cfi_def_cfa_offset 24
 888 0004 00AF     		add	r7, sp, #0
 889              	.LCFI80:
 890              		.cfi_def_cfa_register 7
 891 0006 7860     		str	r0, [r7, #4]
  95:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	Ft_Esd_ScrollPanel *context = (Ft_Esd_ScrollPanel *)c;
 892              		.loc 3 95 0
 893 0008 7B68     		ldr	r3, [r7, #4]
 894 000a FB60     		str	r3, [r7, #12]
  96:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	void *parent = context->Parent;
 895              		.loc 3 96 0
 896 000c FB68     		ldr	r3, [r7, #12]
 897 000e 1B68     		ldr	r3, [r3]
 898 0010 BB60     		str	r3, [r7, #8]
  97:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	return context->Y(parent);
 899              		.loc 3 97 0
 900 0012 FB68     		ldr	r3, [r7, #12]
 901 0014 1B6B     		ldr	r3, [r3, #48]
 902 0016 B868     		ldr	r0, [r7, #8]
 903 0018 9847     		blx	r3
 904              	.LVL6:
 905 001a 0346     		mov	r3, r0
  98:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** }
 906              		.loc 3 98 0
 907 001c 1846     		mov	r0, r3
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s 			page 22


 908 001e 1037     		adds	r7, r7, #16
 909              	.LCFI81:
 910              		.cfi_def_cfa_offset 8
 911 0020 BD46     		mov	sp, r7
 912              	.LCFI82:
 913              		.cfi_def_cfa_register 13
 914              		@ sp needed
 915 0022 80BD     		pop	{r7, pc}
 916              		.cfi_endproc
 917              	.LFE39:
 919              		.section	.text.Ft_Esd_ScrollPanel_TouchArea_Width__Property,"ax",%progbits
 920              		.align	1
 921              		.syntax unified
 922              		.thumb
 923              		.thumb_func
 924              		.fpu fpv5-sp-d16
 926              	Ft_Esd_ScrollPanel_TouchArea_Width__Property:
 927              	.LFB40:
  99:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 
 100:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** int Ft_Esd_ScrollPanel_TouchArea_Width__Property(void *c)
 101:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** {
 928              		.loc 3 101 0
 929              		.cfi_startproc
 930              		@ args = 0, pretend = 0, frame = 16
 931              		@ frame_needed = 1, uses_anonymous_args = 0
 932 0000 80B5     		push	{r7, lr}
 933              	.LCFI83:
 934              		.cfi_def_cfa_offset 8
 935              		.cfi_offset 7, -8
 936              		.cfi_offset 14, -4
 937 0002 84B0     		sub	sp, sp, #16
 938              	.LCFI84:
 939              		.cfi_def_cfa_offset 24
 940 0004 00AF     		add	r7, sp, #0
 941              	.LCFI85:
 942              		.cfi_def_cfa_register 7
 943 0006 7860     		str	r0, [r7, #4]
 102:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	Ft_Esd_ScrollPanel *context = (Ft_Esd_ScrollPanel *)c;
 944              		.loc 3 102 0
 945 0008 7B68     		ldr	r3, [r7, #4]
 946 000a FB60     		str	r3, [r7, #12]
 103:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	void *parent = context->Parent;
 947              		.loc 3 103 0
 948 000c FB68     		ldr	r3, [r7, #12]
 949 000e 1B68     		ldr	r3, [r3]
 950 0010 BB60     		str	r3, [r7, #8]
 104:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	return context->Width(parent);
 951              		.loc 3 104 0
 952 0012 FB68     		ldr	r3, [r7, #12]
 953 0014 5B6B     		ldr	r3, [r3, #52]
 954 0016 B868     		ldr	r0, [r7, #8]
 955 0018 9847     		blx	r3
 956              	.LVL7:
 957 001a 0346     		mov	r3, r0
 105:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** }
 958              		.loc 3 105 0
 959 001c 1846     		mov	r0, r3
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s 			page 23


 960 001e 1037     		adds	r7, r7, #16
 961              	.LCFI86:
 962              		.cfi_def_cfa_offset 8
 963 0020 BD46     		mov	sp, r7
 964              	.LCFI87:
 965              		.cfi_def_cfa_register 13
 966              		@ sp needed
 967 0022 80BD     		pop	{r7, pc}
 968              		.cfi_endproc
 969              	.LFE40:
 971              		.section	.text.Ft_Esd_ScrollPanel_TouchArea_Height__Property,"ax",%progbits
 972              		.align	1
 973              		.syntax unified
 974              		.thumb
 975              		.thumb_func
 976              		.fpu fpv5-sp-d16
 978              	Ft_Esd_ScrollPanel_TouchArea_Height__Property:
 979              	.LFB41:
 106:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 
 107:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** int Ft_Esd_ScrollPanel_TouchArea_Height__Property(void *c)
 108:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** {
 980              		.loc 3 108 0
 981              		.cfi_startproc
 982              		@ args = 0, pretend = 0, frame = 16
 983              		@ frame_needed = 1, uses_anonymous_args = 0
 984 0000 80B5     		push	{r7, lr}
 985              	.LCFI88:
 986              		.cfi_def_cfa_offset 8
 987              		.cfi_offset 7, -8
 988              		.cfi_offset 14, -4
 989 0002 84B0     		sub	sp, sp, #16
 990              	.LCFI89:
 991              		.cfi_def_cfa_offset 24
 992 0004 00AF     		add	r7, sp, #0
 993              	.LCFI90:
 994              		.cfi_def_cfa_register 7
 995 0006 7860     		str	r0, [r7, #4]
 109:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	Ft_Esd_ScrollPanel *context = (Ft_Esd_ScrollPanel *)c;
 996              		.loc 3 109 0
 997 0008 7B68     		ldr	r3, [r7, #4]
 998 000a FB60     		str	r3, [r7, #12]
 110:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	void *parent = context->Parent;
 999              		.loc 3 110 0
 1000 000c FB68     		ldr	r3, [r7, #12]
 1001 000e 1B68     		ldr	r3, [r3]
 1002 0010 BB60     		str	r3, [r7, #8]
 111:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	return context->Height(parent);
 1003              		.loc 3 111 0
 1004 0012 FB68     		ldr	r3, [r7, #12]
 1005 0014 9B6B     		ldr	r3, [r3, #56]
 1006 0016 B868     		ldr	r0, [r7, #8]
 1007 0018 9847     		blx	r3
 1008              	.LVL8:
 1009 001a 0346     		mov	r3, r0
 112:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** }
 1010              		.loc 3 112 0
 1011 001c 1846     		mov	r0, r3
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s 			page 24


 1012 001e 1037     		adds	r7, r7, #16
 1013              	.LCFI91:
 1014              		.cfi_def_cfa_offset 8
 1015 0020 BD46     		mov	sp, r7
 1016              	.LCFI92:
 1017              		.cfi_def_cfa_register 13
 1018              		@ sp needed
 1019 0022 80BD     		pop	{r7, pc}
 1020              		.cfi_endproc
 1021              	.LFE41:
 1023              		.section	.text.Ft_Esd_ScrollPanel_TouchArea_Down__Signal,"ax",%progbits
 1024              		.align	1
 1025              		.syntax unified
 1026              		.thumb
 1027              		.thumb_func
 1028              		.fpu fpv5-sp-d16
 1030              	Ft_Esd_ScrollPanel_TouchArea_Down__Signal:
 1031              	.LFB42:
 113:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 
 114:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** void Ft_Esd_ScrollPanel_TouchArea_Down__Signal(void *c)
 115:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** {
 1032              		.loc 3 115 0
 1033              		.cfi_startproc
 1034              		@ args = 0, pretend = 0, frame = 24
 1035              		@ frame_needed = 1, uses_anonymous_args = 0
 1036 0000 80B5     		push	{r7, lr}
 1037              	.LCFI93:
 1038              		.cfi_def_cfa_offset 8
 1039              		.cfi_offset 7, -8
 1040              		.cfi_offset 14, -4
 1041 0002 86B0     		sub	sp, sp, #24
 1042              	.LCFI94:
 1043              		.cfi_def_cfa_offset 32
 1044 0004 00AF     		add	r7, sp, #0
 1045              	.LCFI95:
 1046              		.cfi_def_cfa_register 7
 1047 0006 7860     		str	r0, [r7, #4]
 116:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	Ft_Esd_ScrollPanel *context = (Ft_Esd_ScrollPanel *)c;
 1048              		.loc 3 116 0
 1049 0008 7B68     		ldr	r3, [r7, #4]
 1050 000a 7B61     		str	r3, [r7, #20]
 117:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	void *parent = context->Parent;
 1051              		.loc 3 117 0
 1052 000c 7B69     		ldr	r3, [r7, #20]
 1053 000e 1B68     		ldr	r3, [r3]
 1054 0010 3B61     		str	r3, [r7, #16]
 118:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	ft_int16_t set_variable = Ft_Esd_TouchArea_TouchY(&context->TouchArea);
 1055              		.loc 3 118 0
 1056 0012 7B69     		ldr	r3, [r7, #20]
 1057 0014 0433     		adds	r3, r3, #4
 1058 0016 1846     		mov	r0, r3
 1059 0018 FFF7FEFF 		bl	Ft_Esd_TouchArea_TouchY
 1060 001c 0346     		mov	r3, r0
 1061 001e FB81     		strh	r3, [r7, #14]	@ movhi
 119:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	context->PreviousTouchY = set_variable;
 1062              		.loc 3 119 0
 1063 0020 7B69     		ldr	r3, [r7, #20]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s 			page 25


 1064 0022 FA89     		ldrh	r2, [r7, #14]	@ movhi
 1065 0024 A3F84C20 		strh	r2, [r3, #76]	@ movhi
 120:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	int set_variable_1 = context->OffsetY;
 1066              		.loc 3 120 0
 1067 0028 7B69     		ldr	r3, [r7, #20]
 1068 002a 1B6C     		ldr	r3, [r3, #64]
 1069 002c BB60     		str	r3, [r7, #8]
 121:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** 	context->PreviousOffsetY = set_variable_1;
 1070              		.loc 3 121 0
 1071 002e BB68     		ldr	r3, [r7, #8]
 1072 0030 1AB2     		sxth	r2, r3
 1073 0032 7B69     		ldr	r3, [r7, #20]
 1074 0034 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 122:FT_Esd_Widgets/Ft_Esd_ScrollPanel__Generated.c **** }
 1075              		.loc 3 122 0
 1076 0038 00BF     		nop
 1077 003a 1837     		adds	r7, r7, #24
 1078              	.LCFI96:
 1079              		.cfi_def_cfa_offset 8
 1080 003c BD46     		mov	sp, r7
 1081              	.LCFI97:
 1082              		.cfi_def_cfa_register 13
 1083              		@ sp needed
 1084 003e 80BD     		pop	{r7, pc}
 1085              		.cfi_endproc
 1086              	.LFE42:
 1088              		.text
 1089              	.Letext0:
 1090              		.file 4 "FT_Eve_Hal/FT_DataTypes.h"
 1091              		.file 5 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/lock.h"
 1092              		.file 6 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_types.h"
 1093              		.file 7 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 1094              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/unistd.h"
 1095              		.file 9 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/reent.h"
 1096              		.file 10 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/stdlib.h"
 1097              		.file 11 "FT_Eve_Hal/FT_Gpu_Hal.h"
 1098              		.file 12 "FT_Esd_Framework/Ft_Esd.h"
 1099              		.file 13 "FT_Esd_Widgets/Ft_Esd_Layout.h"
 1100              		.file 14 "FT_Esd_Widgets/Ft_Esd_Theme.h"
 1101              		.file 15 "FT_Esd_Widgets/Ft_Esd_TouchArea.h"
 1102              		.file 16 "FT_Esd_Widgets/Ft_Esd_ScrollPanel.h"
 1103              		.file 17 "FT_Esd_Framework/Ft_Esd_GpuAlloc.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s 			page 26


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Ft_Esd_ScrollPanel__Generated.c
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:18     .text.Ft_Esd_BitmapCell_GetInfo:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:24     .text.Ft_Esd_BitmapCell_GetInfo:0000000000000000 Ft_Esd_BitmapCell_GetInfo
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:73     .text.Ft_Esd_Dl_COLOR_A:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:79     .text.Ft_Esd_Dl_COLOR_A:0000000000000000 Ft_Esd_Dl_COLOR_A
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:141    .text.Ft_Esd_Dl_COLOR_A:0000000000000048 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:148    .text.Ft_Esd_ScrollPanel_Theme__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:155    .text.Ft_Esd_ScrollPanel_Theme__Default:0000000000000000 Ft_Esd_ScrollPanel_Theme__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:190    .text.Ft_Esd_ScrollPanel_X__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:197    .text.Ft_Esd_ScrollPanel_X__Default:0000000000000000 Ft_Esd_ScrollPanel_X__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:234    .text.Ft_Esd_ScrollPanel_Y__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:241    .text.Ft_Esd_ScrollPanel_Y__Default:0000000000000000 Ft_Esd_ScrollPanel_Y__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:278    .text.Ft_Esd_ScrollPanel_Width__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:285    .text.Ft_Esd_ScrollPanel_Width__Default:0000000000000000 Ft_Esd_ScrollPanel_Width__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:322    .text.Ft_Esd_ScrollPanel_Height__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:329    .text.Ft_Esd_ScrollPanel_Height__Default:0000000000000000 Ft_Esd_ScrollPanel_Height__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:366    .text.Ft_Esd_ScrollPanel_Columns__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:373    .text.Ft_Esd_ScrollPanel_Columns__Default:0000000000000000 Ft_Esd_ScrollPanel_Columns__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:410    .text.Ft_Esd_ScrollPanel_Margin__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:417    .text.Ft_Esd_ScrollPanel_Margin__Default:0000000000000000 Ft_Esd_ScrollPanel_Margin__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:454    .text.Ft_Esd_ScrollPanel_OffsetYChanged__Noop:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:461    .text.Ft_Esd_ScrollPanel_OffsetYChanged__Noop:0000000000000000 Ft_Esd_ScrollPanel_OffsetYChanged__Noop
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:499    .text.Ft_Esd_ScrollPanel__Initializer:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:506    .text.Ft_Esd_ScrollPanel__Initializer:0000000000000000 Ft_Esd_ScrollPanel__Initializer
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:634    .text.Ft_Esd_ScrollPanel__Initializer:00000000000000a8 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:822    .text.Ft_Esd_ScrollPanel_TouchArea_X__Property:0000000000000000 Ft_Esd_ScrollPanel_TouchArea_X__Property
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:874    .text.Ft_Esd_ScrollPanel_TouchArea_Y__Property:0000000000000000 Ft_Esd_ScrollPanel_TouchArea_Y__Property
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:926    .text.Ft_Esd_ScrollPanel_TouchArea_Width__Property:0000000000000000 Ft_Esd_ScrollPanel_TouchArea_Width__Property
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:978    .text.Ft_Esd_ScrollPanel_TouchArea_Height__Property:0000000000000000 Ft_Esd_ScrollPanel_TouchArea_Height__Property
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:1030   .text.Ft_Esd_ScrollPanel_TouchArea_Down__Signal:0000000000000000 Ft_Esd_ScrollPanel_TouchArea_Down__Signal
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:651    .text.Ft_Esd_ScrollPanel_Render:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:658    .text.Ft_Esd_ScrollPanel_Render:0000000000000000 Ft_Esd_ScrollPanel_Render
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:762    .text.Ft_Esd_ScrollPanel_Update:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:769    .text.Ft_Esd_ScrollPanel_Update:0000000000000000 Ft_Esd_ScrollPanel_Update
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:816    .text.Ft_Esd_ScrollPanel_TouchArea_X__Property:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:868    .text.Ft_Esd_ScrollPanel_TouchArea_Y__Property:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:920    .text.Ft_Esd_ScrollPanel_TouchArea_Width__Property:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:972    .text.Ft_Esd_ScrollPanel_TouchArea_Height__Property:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckqQsjI.s:1024   .text.Ft_Esd_ScrollPanel_TouchArea_Down__Signal:0000000000000000 $t

UNDEFINED SYMBOLS
Ft_Gpu_Hal_WrCmd32
Ft_Esd_GpuState_I
Ft_Esd_GpuState
Ft_Esd_Host
Ft_Esd_Theme_GetCurrent
Ft_Esd_TouchArea__Initializer
Ft_Esd_Elements_Panel
Ft_Esd_ScrollPanel_Render_Contents
Ft_Esd_TouchArea_Update
Ft_Esd_ScrollPanel_Update_Scroll
Ft_Esd_ScrollPanel_Update_Contents
Ft_Esd_TouchArea_TouchY
