ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_UART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_UART_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-sp-d16
  25              	HAL_UART_Init:
  26              	.LFB138:
  27              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @file    stm32f7xx_hal_uart.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter (UART) peripheral:
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ==============================================================================
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ==============================================================================
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   [..]
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure.
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (##) UART pins configuration:
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 2


  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx stream.
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                   Tx/Rx parameters.
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx Stream.
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx Stream.
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the Init structure.
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         the HAL_UART_Init() API.
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt,
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             and receive process.
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customized
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             HAL_UART_MspInit() API.
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         Three operation modes are available within this driver :
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      *** Polling mode IO operation ***
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      =================================
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit()
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      *** Interrupt mode IO operation ***
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      ===================================
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT()
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT()
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      *** DMA mode IO operation ***
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 3


  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      ==============================
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA()
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA()
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      *** UART HAL driver macros list ***
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      =============================================
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_IT : Clears the specified UART ISR flag
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   @endverbatim
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ******************************************************************************
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @attention
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *      without specific prior written permission.
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 4


 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ******************************************************************************
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #include "stm32f7xx_hal.h"
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @addtogroup STM32F7xx_HAL_Driver
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART UART
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief HAL UART module driver
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #define UART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                                      USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8))
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @}
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @}
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 5


 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @verbatim
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** ===============================================================================
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     [..]
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     in asynchronous mode.
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured:
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Baud Rate
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Word Length
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Stop Bit
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****              please refer to Reference manual for possible UART frame formats.
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Hardware flow control
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Receiver/transmitter modes
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Over Sampling Method
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     [..]
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     configuration procedures (details for the procedures are available in reference manual (RM0329)
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @endverbatim
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Initializes the UART mode according to the specified
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and creates the associated handle .
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
  28              		.loc 1 242 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 82B0     		sub	sp, sp, #8
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 6


 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
  44              		.loc 1 244 0
  45 0008 7B68     		ldr	r3, [r7, #4]
  46 000a 002B     		cmp	r3, #0
  47 000c 01D1     		bne	.L2
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
  48              		.loc 1 246 0
  49 000e 0123     		movs	r3, #1
  50 0010 43E0     		b	.L3
  51              	.L2:
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Check the parameters */
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Check the parameters */
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
  52              		.loc 1 260 0
  53 0012 7B68     		ldr	r3, [r7, #4]
  54 0014 93F86930 		ldrb	r3, [r3, #105]
  55 0018 DBB2     		uxtb	r3, r3
  56 001a 002B     		cmp	r3, #0
  57 001c 06D1     		bne	.L4
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
  58              		.loc 1 263 0
  59 001e 7B68     		ldr	r3, [r7, #4]
  60 0020 0022     		movs	r2, #0
  61 0022 83F86820 		strb	r2, [r3, #104]
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
  62              		.loc 1 266 0
  63 0026 7868     		ldr	r0, [r7, #4]
  64 0028 FFF7FEFF 		bl	HAL_UART_MspInit
  65              	.L4:
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
  66              		.loc 1 269 0
  67 002c 7B68     		ldr	r3, [r7, #4]
  68 002e 2422     		movs	r2, #36
  69 0030 83F86920 		strb	r2, [r3, #105]
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
  70              		.loc 1 272 0
  71 0034 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 7


  72 0036 1B68     		ldr	r3, [r3]
  73 0038 1A68     		ldr	r2, [r3]
  74 003a 7B68     		ldr	r3, [r7, #4]
  75 003c 1B68     		ldr	r3, [r3]
  76 003e 22F00102 		bic	r2, r2, #1
  77 0042 1A60     		str	r2, [r3]
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
  78              		.loc 1 275 0
  79 0044 7868     		ldr	r0, [r7, #4]
  80 0046 FFF7FEFF 		bl	UART_SetConfig
  81 004a 0346     		mov	r3, r0
  82 004c 012B     		cmp	r3, #1
  83 004e 01D1     		bne	.L5
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
  84              		.loc 1 277 0
  85 0050 0123     		movs	r3, #1
  86 0052 22E0     		b	.L3
  87              	.L5:
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
  88              		.loc 1 280 0
  89 0054 7B68     		ldr	r3, [r7, #4]
  90 0056 5B6A     		ldr	r3, [r3, #36]
  91 0058 002B     		cmp	r3, #0
  92 005a 02D0     		beq	.L6
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
  93              		.loc 1 282 0
  94 005c 7868     		ldr	r0, [r7, #4]
  95 005e FFF7FEFF 		bl	UART_AdvFeatureConfig
  96              	.L6:
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
  97              		.loc 1 288 0
  98 0062 7B68     		ldr	r3, [r7, #4]
  99 0064 1B68     		ldr	r3, [r3]
 100 0066 5A68     		ldr	r2, [r3, #4]
 101 0068 7B68     		ldr	r3, [r7, #4]
 102 006a 1B68     		ldr	r3, [r3]
 103 006c 22F49042 		bic	r2, r2, #18432
 104 0070 5A60     		str	r2, [r3, #4]
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 105              		.loc 1 289 0
 106 0072 7B68     		ldr	r3, [r7, #4]
 107 0074 1B68     		ldr	r3, [r3]
 108 0076 9A68     		ldr	r2, [r3, #8]
 109 0078 7B68     		ldr	r3, [r7, #4]
 110 007a 1B68     		ldr	r3, [r3]
 111 007c 22F02A02 		bic	r2, r2, #42
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 8


 112 0080 9A60     		str	r2, [r3, #8]
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Peripheral */
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 113              		.loc 1 292 0
 114 0082 7B68     		ldr	r3, [r7, #4]
 115 0084 1B68     		ldr	r3, [r3]
 116 0086 1A68     		ldr	r2, [r3]
 117 0088 7B68     		ldr	r3, [r7, #4]
 118 008a 1B68     		ldr	r3, [r3]
 119 008c 42F00102 		orr	r2, r2, #1
 120 0090 1A60     		str	r2, [r3]
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 121              		.loc 1 295 0
 122 0092 7868     		ldr	r0, [r7, #4]
 123 0094 FFF7FEFF 		bl	UART_CheckIdleState
 124 0098 0346     		mov	r3, r0
 125              	.L3:
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 126              		.loc 1 296 0
 127 009a 1846     		mov	r0, r3
 128 009c 0837     		adds	r7, r7, #8
 129              	.LCFI3:
 130              		.cfi_def_cfa_offset 8
 131 009e BD46     		mov	sp, r7
 132              	.LCFI4:
 133              		.cfi_def_cfa_register 13
 134              		@ sp needed
 135 00a0 80BD     		pop	{r7, pc}
 136              		.cfi_endproc
 137              	.LFE138:
 139              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 140              		.align	1
 141              		.global	HAL_HalfDuplex_Init
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv5-sp-d16
 147              	HAL_HalfDuplex_Init:
 148              	.LFB139:
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Initializes the half-duplex mode according to the specified
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and creates the associated handle .
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 149              		.loc 1 305 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 8
 152              		@ frame_needed = 1, uses_anonymous_args = 0
 153 0000 80B5     		push	{r7, lr}
 154              	.LCFI5:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 9


 155              		.cfi_def_cfa_offset 8
 156              		.cfi_offset 7, -8
 157              		.cfi_offset 14, -4
 158 0002 82B0     		sub	sp, sp, #8
 159              	.LCFI6:
 160              		.cfi_def_cfa_offset 16
 161 0004 00AF     		add	r7, sp, #0
 162              	.LCFI7:
 163              		.cfi_def_cfa_register 7
 164 0006 7860     		str	r0, [r7, #4]
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 165              		.loc 1 307 0
 166 0008 7B68     		ldr	r3, [r7, #4]
 167 000a 002B     		cmp	r3, #0
 168 000c 01D1     		bne	.L8
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 169              		.loc 1 309 0
 170 000e 0123     		movs	r3, #1
 171 0010 4BE0     		b	.L9
 172              	.L8:
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 173              		.loc 1 312 0
 174 0012 7B68     		ldr	r3, [r7, #4]
 175 0014 93F86930 		ldrb	r3, [r3, #105]
 176 0018 DBB2     		uxtb	r3, r3
 177 001a 002B     		cmp	r3, #0
 178 001c 06D1     		bne	.L10
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 179              		.loc 1 315 0
 180 001e 7B68     		ldr	r3, [r7, #4]
 181 0020 0022     		movs	r2, #0
 182 0022 83F86820 		strb	r2, [r3, #104]
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 183              		.loc 1 318 0
 184 0026 7868     		ldr	r0, [r7, #4]
 185 0028 FFF7FEFF 		bl	HAL_UART_MspInit
 186              	.L10:
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 187              		.loc 1 321 0
 188 002c 7B68     		ldr	r3, [r7, #4]
 189 002e 2422     		movs	r2, #36
 190 0030 83F86920 		strb	r2, [r3, #105]
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 191              		.loc 1 324 0
 192 0034 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 10


 193 0036 1B68     		ldr	r3, [r3]
 194 0038 1A68     		ldr	r2, [r3]
 195 003a 7B68     		ldr	r3, [r7, #4]
 196 003c 1B68     		ldr	r3, [r3]
 197 003e 22F00102 		bic	r2, r2, #1
 198 0042 1A60     		str	r2, [r3]
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 199              		.loc 1 327 0
 200 0044 7868     		ldr	r0, [r7, #4]
 201 0046 FFF7FEFF 		bl	UART_SetConfig
 202 004a 0346     		mov	r3, r0
 203 004c 012B     		cmp	r3, #1
 204 004e 01D1     		bne	.L11
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 205              		.loc 1 329 0
 206 0050 0123     		movs	r3, #1
 207 0052 2AE0     		b	.L9
 208              	.L11:
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 209              		.loc 1 332 0
 210 0054 7B68     		ldr	r3, [r7, #4]
 211 0056 5B6A     		ldr	r3, [r3, #36]
 212 0058 002B     		cmp	r3, #0
 213 005a 02D0     		beq	.L12
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 214              		.loc 1 334 0
 215 005c 7868     		ldr	r0, [r7, #4]
 216 005e FFF7FEFF 		bl	UART_AdvFeatureConfig
 217              	.L12:
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 218              		.loc 1 340 0
 219 0062 7B68     		ldr	r3, [r7, #4]
 220 0064 1B68     		ldr	r3, [r3]
 221 0066 5A68     		ldr	r2, [r3, #4]
 222 0068 7B68     		ldr	r3, [r7, #4]
 223 006a 1B68     		ldr	r3, [r3]
 224 006c 22F49042 		bic	r2, r2, #18432
 225 0070 5A60     		str	r2, [r3, #4]
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 226              		.loc 1 341 0
 227 0072 7B68     		ldr	r3, [r7, #4]
 228 0074 1B68     		ldr	r3, [r3]
 229 0076 9A68     		ldr	r2, [r3, #8]
 230 0078 7B68     		ldr	r3, [r7, #4]
 231 007a 1B68     		ldr	r3, [r3]
 232 007c 22F02202 		bic	r2, r2, #34
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 11


 233 0080 9A60     		str	r2, [r3, #8]
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 234              		.loc 1 344 0
 235 0082 7B68     		ldr	r3, [r7, #4]
 236 0084 1B68     		ldr	r3, [r3]
 237 0086 9A68     		ldr	r2, [r3, #8]
 238 0088 7B68     		ldr	r3, [r7, #4]
 239 008a 1B68     		ldr	r3, [r3]
 240 008c 42F00802 		orr	r2, r2, #8
 241 0090 9A60     		str	r2, [r3, #8]
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Peripheral */
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 242              		.loc 1 347 0
 243 0092 7B68     		ldr	r3, [r7, #4]
 244 0094 1B68     		ldr	r3, [r3]
 245 0096 1A68     		ldr	r2, [r3]
 246 0098 7B68     		ldr	r3, [r7, #4]
 247 009a 1B68     		ldr	r3, [r3]
 248 009c 42F00102 		orr	r2, r2, #1
 249 00a0 1A60     		str	r2, [r3]
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 250              		.loc 1 350 0
 251 00a2 7868     		ldr	r0, [r7, #4]
 252 00a4 FFF7FEFF 		bl	UART_CheckIdleState
 253 00a8 0346     		mov	r3, r0
 254              	.L9:
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 255              		.loc 1 351 0
 256 00aa 1846     		mov	r0, r3
 257 00ac 0837     		adds	r7, r7, #8
 258              	.LCFI8:
 259              		.cfi_def_cfa_offset 8
 260 00ae BD46     		mov	sp, r7
 261              	.LCFI9:
 262              		.cfi_def_cfa_register 13
 263              		@ sp needed
 264 00b0 80BD     		pop	{r7, pc}
 265              		.cfi_endproc
 266              	.LFE139:
 268              		.section	.text.HAL_LIN_Init,"ax",%progbits
 269              		.align	1
 270              		.global	HAL_LIN_Init
 271              		.syntax unified
 272              		.thumb
 273              		.thumb_func
 274              		.fpu fpv5-sp-d16
 276              	HAL_LIN_Init:
 277              	.LFB140:
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 12


 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle .
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param BreakDetectLength specifies the LIN break detection length.
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        This parameter can be one of the following values:
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 278              		.loc 1 365 0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 8
 281              		@ frame_needed = 1, uses_anonymous_args = 0
 282 0000 80B5     		push	{r7, lr}
 283              	.LCFI10:
 284              		.cfi_def_cfa_offset 8
 285              		.cfi_offset 7, -8
 286              		.cfi_offset 14, -4
 287 0002 82B0     		sub	sp, sp, #8
 288              	.LCFI11:
 289              		.cfi_def_cfa_offset 16
 290 0004 00AF     		add	r7, sp, #0
 291              	.LCFI12:
 292              		.cfi_def_cfa_register 7
 293 0006 7860     		str	r0, [r7, #4]
 294 0008 3960     		str	r1, [r7]
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 295              		.loc 1 367 0
 296 000a 7B68     		ldr	r3, [r7, #4]
 297 000c 002B     		cmp	r3, #0
 298 000e 01D1     		bne	.L14
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 299              		.loc 1 369 0
 300 0010 0123     		movs	r3, #1
 301 0012 55E0     		b	.L15
 302              	.L14:
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the parameters */
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_LIN_WORD_LENGTH(huart->Init.WordLength));
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 303              		.loc 1 377 0
 304 0014 7B68     		ldr	r3, [r7, #4]
 305 0016 93F86930 		ldrb	r3, [r3, #105]
 306 001a DBB2     		uxtb	r3, r3
 307 001c 002B     		cmp	r3, #0
 308 001e 06D1     		bne	.L16
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 309              		.loc 1 380 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 13


 310 0020 7B68     		ldr	r3, [r7, #4]
 311 0022 0022     		movs	r2, #0
 312 0024 83F86820 		strb	r2, [r3, #104]
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 313              		.loc 1 383 0
 314 0028 7868     		ldr	r0, [r7, #4]
 315 002a FFF7FEFF 		bl	HAL_UART_MspInit
 316              	.L16:
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 317              		.loc 1 386 0
 318 002e 7B68     		ldr	r3, [r7, #4]
 319 0030 2422     		movs	r2, #36
 320 0032 83F86920 		strb	r2, [r3, #105]
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 321              		.loc 1 389 0
 322 0036 7B68     		ldr	r3, [r7, #4]
 323 0038 1B68     		ldr	r3, [r3]
 324 003a 1A68     		ldr	r2, [r3]
 325 003c 7B68     		ldr	r3, [r7, #4]
 326 003e 1B68     		ldr	r3, [r3]
 327 0040 22F00102 		bic	r2, r2, #1
 328 0044 1A60     		str	r2, [r3]
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 329              		.loc 1 392 0
 330 0046 7868     		ldr	r0, [r7, #4]
 331 0048 FFF7FEFF 		bl	UART_SetConfig
 332 004c 0346     		mov	r3, r0
 333 004e 012B     		cmp	r3, #1
 334 0050 01D1     		bne	.L17
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 335              		.loc 1 394 0
 336 0052 0123     		movs	r3, #1
 337 0054 34E0     		b	.L15
 338              	.L17:
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 339              		.loc 1 397 0
 340 0056 7B68     		ldr	r3, [r7, #4]
 341 0058 5B6A     		ldr	r3, [r3, #36]
 342 005a 002B     		cmp	r3, #0
 343 005c 02D0     		beq	.L18
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 344              		.loc 1 399 0
 345 005e 7868     		ldr	r0, [r7, #4]
 346 0060 FFF7FEFF 		bl	UART_AdvFeatureConfig
 347              	.L18:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 14


 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 348              		.loc 1 405 0
 349 0064 7B68     		ldr	r3, [r7, #4]
 350 0066 1B68     		ldr	r3, [r3]
 351 0068 5A68     		ldr	r2, [r3, #4]
 352 006a 7B68     		ldr	r3, [r7, #4]
 353 006c 1B68     		ldr	r3, [r3]
 354 006e 22F40062 		bic	r2, r2, #2048
 355 0072 5A60     		str	r2, [r3, #4]
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 356              		.loc 1 406 0
 357 0074 7B68     		ldr	r3, [r7, #4]
 358 0076 1B68     		ldr	r3, [r3]
 359 0078 9A68     		ldr	r2, [r3, #8]
 360 007a 7B68     		ldr	r3, [r7, #4]
 361 007c 1B68     		ldr	r3, [r3]
 362 007e 22F02A02 		bic	r2, r2, #42
 363 0082 9A60     		str	r2, [r3, #8]
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 364              		.loc 1 409 0
 365 0084 7B68     		ldr	r3, [r7, #4]
 366 0086 1B68     		ldr	r3, [r3]
 367 0088 5A68     		ldr	r2, [r3, #4]
 368 008a 7B68     		ldr	r3, [r7, #4]
 369 008c 1B68     		ldr	r3, [r3]
 370 008e 42F48042 		orr	r2, r2, #16384
 371 0092 5A60     		str	r2, [r3, #4]
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 372              		.loc 1 412 0
 373 0094 7B68     		ldr	r3, [r7, #4]
 374 0096 1B68     		ldr	r3, [r3]
 375 0098 5B68     		ldr	r3, [r3, #4]
 376 009a 23F02001 		bic	r1, r3, #32
 377 009e 7B68     		ldr	r3, [r7, #4]
 378 00a0 1B68     		ldr	r3, [r3]
 379 00a2 3A68     		ldr	r2, [r7]
 380 00a4 0A43     		orrs	r2, r2, r1
 381 00a6 5A60     		str	r2, [r3, #4]
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Peripheral */
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 382              		.loc 1 415 0
 383 00a8 7B68     		ldr	r3, [r7, #4]
 384 00aa 1B68     		ldr	r3, [r3]
 385 00ac 1A68     		ldr	r2, [r3]
 386 00ae 7B68     		ldr	r3, [r7, #4]
 387 00b0 1B68     		ldr	r3, [r3]
 388 00b2 42F00102 		orr	r2, r2, #1
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 15


 389 00b6 1A60     		str	r2, [r3]
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 390              		.loc 1 418 0
 391 00b8 7868     		ldr	r0, [r7, #4]
 392 00ba FFF7FEFF 		bl	UART_CheckIdleState
 393 00be 0346     		mov	r3, r0
 394              	.L15:
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 395              		.loc 1 419 0
 396 00c0 1846     		mov	r0, r3
 397 00c2 0837     		adds	r7, r7, #8
 398              	.LCFI13:
 399              		.cfi_def_cfa_offset 8
 400 00c4 BD46     		mov	sp, r7
 401              	.LCFI14:
 402              		.cfi_def_cfa_register 13
 403              		@ sp needed
 404 00c6 80BD     		pop	{r7, pc}
 405              		.cfi_endproc
 406              	.LFE140:
 408              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 409              		.align	1
 410              		.global	HAL_MultiProcessor_Init
 411              		.syntax unified
 412              		.thumb
 413              		.thumb_func
 414              		.fpu fpv5-sp-d16
 416              	HAL_MultiProcessor_Init:
 417              	.LFB141:
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Address UART node address (4-, 6-, 7- or 8-bit long).
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param WakeUpMethod specifies the UART wakeup method.
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        This parameter can be one of the following values:
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 418              		.loc 1 439 0
 419              		.cfi_startproc
 420              		@ args = 0, pretend = 0, frame = 16
 421              		@ frame_needed = 1, uses_anonymous_args = 0
 422 0000 80B5     		push	{r7, lr}
 423              	.LCFI15:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 16


 424              		.cfi_def_cfa_offset 8
 425              		.cfi_offset 7, -8
 426              		.cfi_offset 14, -4
 427 0002 84B0     		sub	sp, sp, #16
 428              	.LCFI16:
 429              		.cfi_def_cfa_offset 24
 430 0004 00AF     		add	r7, sp, #0
 431              	.LCFI17:
 432              		.cfi_def_cfa_register 7
 433 0006 F860     		str	r0, [r7, #12]
 434 0008 0B46     		mov	r3, r1
 435 000a 7A60     		str	r2, [r7, #4]
 436 000c FB72     		strb	r3, [r7, #11]
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 437              		.loc 1 441 0
 438 000e FB68     		ldr	r3, [r7, #12]
 439 0010 002B     		cmp	r3, #0
 440 0012 01D1     		bne	.L20
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 441              		.loc 1 443 0
 442 0014 0123     		movs	r3, #1
 443 0016 5CE0     		b	.L21
 444              	.L20:
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the wake up method parameter */
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 445              		.loc 1 449 0
 446 0018 FB68     		ldr	r3, [r7, #12]
 447 001a 93F86930 		ldrb	r3, [r3, #105]
 448 001e DBB2     		uxtb	r3, r3
 449 0020 002B     		cmp	r3, #0
 450 0022 06D1     		bne	.L22
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 451              		.loc 1 452 0
 452 0024 FB68     		ldr	r3, [r7, #12]
 453 0026 0022     		movs	r2, #0
 454 0028 83F86820 		strb	r2, [r3, #104]
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 455              		.loc 1 455 0
 456 002c F868     		ldr	r0, [r7, #12]
 457 002e FFF7FEFF 		bl	HAL_UART_MspInit
 458              	.L22:
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 459              		.loc 1 458 0
 460 0032 FB68     		ldr	r3, [r7, #12]
 461 0034 2422     		movs	r2, #36
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 17


 462 0036 83F86920 		strb	r2, [r3, #105]
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 463              		.loc 1 461 0
 464 003a FB68     		ldr	r3, [r7, #12]
 465 003c 1B68     		ldr	r3, [r3]
 466 003e 1A68     		ldr	r2, [r3]
 467 0040 FB68     		ldr	r3, [r7, #12]
 468 0042 1B68     		ldr	r3, [r3]
 469 0044 22F00102 		bic	r2, r2, #1
 470 0048 1A60     		str	r2, [r3]
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 471              		.loc 1 464 0
 472 004a F868     		ldr	r0, [r7, #12]
 473 004c FFF7FEFF 		bl	UART_SetConfig
 474 0050 0346     		mov	r3, r0
 475 0052 012B     		cmp	r3, #1
 476 0054 01D1     		bne	.L23
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 477              		.loc 1 466 0
 478 0056 0123     		movs	r3, #1
 479 0058 3BE0     		b	.L21
 480              	.L23:
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 481              		.loc 1 469 0
 482 005a FB68     		ldr	r3, [r7, #12]
 483 005c 5B6A     		ldr	r3, [r3, #36]
 484 005e 002B     		cmp	r3, #0
 485 0060 02D0     		beq	.L24
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 486              		.loc 1 471 0
 487 0062 F868     		ldr	r0, [r7, #12]
 488 0064 FFF7FEFF 		bl	UART_AdvFeatureConfig
 489              	.L24:
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 490              		.loc 1 477 0
 491 0068 FB68     		ldr	r3, [r7, #12]
 492 006a 1B68     		ldr	r3, [r3]
 493 006c 5A68     		ldr	r2, [r3, #4]
 494 006e FB68     		ldr	r3, [r7, #12]
 495 0070 1B68     		ldr	r3, [r3]
 496 0072 22F49042 		bic	r2, r2, #18432
 497 0076 5A60     		str	r2, [r3, #4]
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 498              		.loc 1 478 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 18


 499 0078 FB68     		ldr	r3, [r7, #12]
 500 007a 1B68     		ldr	r3, [r3]
 501 007c 9A68     		ldr	r2, [r3, #8]
 502 007e FB68     		ldr	r3, [r7, #12]
 503 0080 1B68     		ldr	r3, [r3]
 504 0082 22F02A02 		bic	r2, r2, #42
 505 0086 9A60     		str	r2, [r3, #8]
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 506              		.loc 1 480 0
 507 0088 7B68     		ldr	r3, [r7, #4]
 508 008a B3F5006F 		cmp	r3, #2048
 509 008e 0AD1     		bne	.L25
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 510              		.loc 1 483 0
 511 0090 FB68     		ldr	r3, [r7, #12]
 512 0092 1B68     		ldr	r3, [r3]
 513 0094 5B68     		ldr	r3, [r3, #4]
 514 0096 23F07F41 		bic	r1, r3, #-16777216
 515 009a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 516 009c 1A06     		lsls	r2, r3, #24
 517 009e FB68     		ldr	r3, [r7, #12]
 518 00a0 1B68     		ldr	r3, [r3]
 519 00a2 0A43     		orrs	r2, r2, r1
 520 00a4 5A60     		str	r2, [r3, #4]
 521              	.L25:
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 522              		.loc 1 487 0
 523 00a6 FB68     		ldr	r3, [r7, #12]
 524 00a8 1B68     		ldr	r3, [r3]
 525 00aa 1B68     		ldr	r3, [r3]
 526 00ac 23F40061 		bic	r1, r3, #2048
 527 00b0 FB68     		ldr	r3, [r7, #12]
 528 00b2 1B68     		ldr	r3, [r3]
 529 00b4 7A68     		ldr	r2, [r7, #4]
 530 00b6 0A43     		orrs	r2, r2, r1
 531 00b8 1A60     		str	r2, [r3]
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Peripheral */
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 532              		.loc 1 490 0
 533 00ba FB68     		ldr	r3, [r7, #12]
 534 00bc 1B68     		ldr	r3, [r3]
 535 00be 1A68     		ldr	r2, [r3]
 536 00c0 FB68     		ldr	r3, [r7, #12]
 537 00c2 1B68     		ldr	r3, [r3]
 538 00c4 42F00102 		orr	r2, r2, #1
 539 00c8 1A60     		str	r2, [r3]
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 540              		.loc 1 493 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 19


 541 00ca F868     		ldr	r0, [r7, #12]
 542 00cc FFF7FEFF 		bl	UART_CheckIdleState
 543 00d0 0346     		mov	r3, r0
 544              	.L21:
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 545              		.loc 1 494 0
 546 00d2 1846     		mov	r0, r3
 547 00d4 1037     		adds	r7, r7, #16
 548              	.LCFI18:
 549              		.cfi_def_cfa_offset 8
 550 00d6 BD46     		mov	sp, r7
 551              	.LCFI19:
 552              		.cfi_def_cfa_register 13
 553              		@ sp needed
 554 00d8 80BD     		pop	{r7, pc}
 555              		.cfi_endproc
 556              	.LFE141:
 558              		.section	.text.HAL_RS485Ex_Init,"ax",%progbits
 559              		.align	1
 560              		.global	HAL_RS485Ex_Init
 561              		.syntax unified
 562              		.thumb
 563              		.thumb_func
 564              		.fpu fpv5-sp-d16
 566              	HAL_RS485Ex_Init:
 567              	.LFB142:
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Initialize the RS485 Driver enable feature according to the specified
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and creates the associated handle.
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Polarity select the driver enable polarity.
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        This parameter can be one of the following values:
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_DE_POLARITY_HIGH DE signal is active high
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_DE_POLARITY_LOW  DE signal is active low
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param AssertionTime Driver Enable assertion time:
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         5-bit value defining the time between the activation of the DE (Driver 
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         signal and the beginning of the start bit. It is expressed in sample ti
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         units (1/8 or 1/16 bit time, depending on the oversampling rate)
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param DeassertionTime Driver Enable deassertion time:
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         5-bit value defining the time between the end of the last stop bit, in 
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         transmitted message, and the de-activation of the DE (Driver Enable) si
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         It is expressed in sample time units (1/8 or 1/16 bit time, depending o
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         oversampling rate).
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_RS485Ex_Init(UART_HandleTypeDef *huart, uint32_t Polarity, uint32_t Assertion
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 568              		.loc 1 517 0
 569              		.cfi_startproc
 570              		@ args = 0, pretend = 0, frame = 24
 571              		@ frame_needed = 1, uses_anonymous_args = 0
 572 0000 80B5     		push	{r7, lr}
 573              	.LCFI20:
 574              		.cfi_def_cfa_offset 8
 575              		.cfi_offset 7, -8
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 20


 576              		.cfi_offset 14, -4
 577 0002 86B0     		sub	sp, sp, #24
 578              	.LCFI21:
 579              		.cfi_def_cfa_offset 32
 580 0004 00AF     		add	r7, sp, #0
 581              	.LCFI22:
 582              		.cfi_def_cfa_register 7
 583 0006 F860     		str	r0, [r7, #12]
 584 0008 B960     		str	r1, [r7, #8]
 585 000a 7A60     		str	r2, [r7, #4]
 586 000c 3B60     		str	r3, [r7]
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t temp = 0x0;
 587              		.loc 1 518 0
 588 000e 0023     		movs	r3, #0
 589 0010 7B61     		str	r3, [r7, #20]
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 590              		.loc 1 521 0
 591 0012 FB68     		ldr	r3, [r7, #12]
 592 0014 002B     		cmp	r3, #0
 593 0016 01D1     		bne	.L27
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 594              		.loc 1 523 0
 595 0018 0123     		movs	r3, #1
 596 001a 57E0     		b	.L28
 597              	.L27:
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the Driver Enable UART instance */
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_DRIVER_ENABLE_INSTANCE(huart->Instance));
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the Driver Enable polarity */
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_DE_POLARITY(Polarity));
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the Driver Enable assertion time */
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_ASSERTIONTIME(AssertionTime));
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the Driver Enable deassertion time */
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_DEASSERTIONTIME(DeassertionTime));
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 598              		.loc 1 537 0
 599 001c FB68     		ldr	r3, [r7, #12]
 600 001e 93F86930 		ldrb	r3, [r3, #105]
 601 0022 DBB2     		uxtb	r3, r3
 602 0024 002B     		cmp	r3, #0
 603 0026 06D1     		bne	.L29
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 604              		.loc 1 540 0
 605 0028 FB68     		ldr	r3, [r7, #12]
 606 002a 0022     		movs	r2, #0
 607 002c 83F86820 		strb	r2, [r3, #104]
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK, CORTEX */
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 21


 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 608              		.loc 1 543 0
 609 0030 F868     		ldr	r0, [r7, #12]
 610 0032 FFF7FEFF 		bl	HAL_UART_MspInit
 611              	.L29:
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 612              		.loc 1 546 0
 613 0036 FB68     		ldr	r3, [r7, #12]
 614 0038 2422     		movs	r2, #36
 615 003a 83F86920 		strb	r2, [r3, #105]
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 616              		.loc 1 549 0
 617 003e FB68     		ldr	r3, [r7, #12]
 618 0040 1B68     		ldr	r3, [r3]
 619 0042 1A68     		ldr	r2, [r3]
 620 0044 FB68     		ldr	r3, [r7, #12]
 621 0046 1B68     		ldr	r3, [r3]
 622 0048 22F00102 		bic	r2, r2, #1
 623 004c 1A60     		str	r2, [r3]
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 624              		.loc 1 552 0
 625 004e F868     		ldr	r0, [r7, #12]
 626 0050 FFF7FEFF 		bl	UART_SetConfig
 627 0054 0346     		mov	r3, r0
 628 0056 012B     		cmp	r3, #1
 629 0058 01D1     		bne	.L30
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 630              		.loc 1 554 0
 631 005a 0123     		movs	r3, #1
 632 005c 36E0     		b	.L28
 633              	.L30:
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 634              		.loc 1 557 0
 635 005e FB68     		ldr	r3, [r7, #12]
 636 0060 5B6A     		ldr	r3, [r3, #36]
 637 0062 002B     		cmp	r3, #0
 638 0064 02D0     		beq	.L31
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 639              		.loc 1 559 0
 640 0066 F868     		ldr	r0, [r7, #12]
 641 0068 FFF7FEFF 		bl	UART_AdvFeatureConfig
 642              	.L31:
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Driver Enable mode by setting the DEM bit in the CR3 register */
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_DEM);
 643              		.loc 1 563 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 22


 644 006c FB68     		ldr	r3, [r7, #12]
 645 006e 1B68     		ldr	r3, [r3]
 646 0070 9A68     		ldr	r2, [r3, #8]
 647 0072 FB68     		ldr	r3, [r7, #12]
 648 0074 1B68     		ldr	r3, [r3]
 649 0076 42F48042 		orr	r2, r2, #16384
 650 007a 9A60     		str	r2, [r3, #8]
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the Driver Enable polarity */
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_DEP, Polarity);
 651              		.loc 1 566 0
 652 007c FB68     		ldr	r3, [r7, #12]
 653 007e 1B68     		ldr	r3, [r3]
 654 0080 9B68     		ldr	r3, [r3, #8]
 655 0082 23F40041 		bic	r1, r3, #32768
 656 0086 FB68     		ldr	r3, [r7, #12]
 657 0088 1B68     		ldr	r3, [r3]
 658 008a BA68     		ldr	r2, [r7, #8]
 659 008c 0A43     		orrs	r2, r2, r1
 660 008e 9A60     		str	r2, [r3, #8]
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the Driver Enable assertion and deassertion times */
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   temp = (AssertionTime << UART_CR1_DEAT_ADDRESS_LSB_POS);
 661              		.loc 1 569 0
 662 0090 7B68     		ldr	r3, [r7, #4]
 663 0092 5B05     		lsls	r3, r3, #21
 664 0094 7B61     		str	r3, [r7, #20]
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   temp |= (DeassertionTime << UART_CR1_DEDT_ADDRESS_LSB_POS);
 665              		.loc 1 570 0
 666 0096 3B68     		ldr	r3, [r7]
 667 0098 1B04     		lsls	r3, r3, #16
 668 009a 7A69     		ldr	r2, [r7, #20]
 669 009c 1343     		orrs	r3, r3, r2
 670 009e 7B61     		str	r3, [r7, #20]
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, (USART_CR1_DEDT|USART_CR1_DEAT), temp);
 671              		.loc 1 571 0
 672 00a0 FB68     		ldr	r3, [r7, #12]
 673 00a2 1B68     		ldr	r3, [r3]
 674 00a4 1A68     		ldr	r2, [r3]
 675 00a6 0B4B     		ldr	r3, .L32
 676 00a8 1340     		ands	r3, r3, r2
 677 00aa FA68     		ldr	r2, [r7, #12]
 678 00ac 1268     		ldr	r2, [r2]
 679 00ae 7969     		ldr	r1, [r7, #20]
 680 00b0 0B43     		orrs	r3, r3, r1
 681 00b2 1360     		str	r3, [r2]
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Peripheral */
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 682              		.loc 1 574 0
 683 00b4 FB68     		ldr	r3, [r7, #12]
 684 00b6 1B68     		ldr	r3, [r3]
 685 00b8 1A68     		ldr	r2, [r3]
 686 00ba FB68     		ldr	r3, [r7, #12]
 687 00bc 1B68     		ldr	r3, [r3]
 688 00be 42F00102 		orr	r2, r2, #1
 689 00c2 1A60     		str	r2, [r3]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 23


 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 690              		.loc 1 577 0
 691 00c4 F868     		ldr	r0, [r7, #12]
 692 00c6 FFF7FEFF 		bl	UART_CheckIdleState
 693 00ca 0346     		mov	r3, r0
 694              	.L28:
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 695              		.loc 1 578 0
 696 00cc 1846     		mov	r0, r3
 697 00ce 1837     		adds	r7, r7, #24
 698              	.LCFI23:
 699              		.cfi_def_cfa_offset 8
 700 00d0 BD46     		mov	sp, r7
 701              	.LCFI24:
 702              		.cfi_def_cfa_register 13
 703              		@ sp needed
 704 00d2 80BD     		pop	{r7, pc}
 705              	.L33:
 706              		.align	2
 707              	.L32:
 708 00d4 FFFF00FC 		.word	-67043329
 709              		.cfi_endproc
 710              	.LFE142:
 712              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 713              		.align	1
 714              		.global	HAL_UART_DeInit
 715              		.syntax unified
 716              		.thumb
 717              		.thumb_func
 718              		.fpu fpv5-sp-d16
 720              	HAL_UART_DeInit:
 721              	.LFB143:
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DeInitializes the UART peripheral
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 722              		.loc 1 586 0
 723              		.cfi_startproc
 724              		@ args = 0, pretend = 0, frame = 8
 725              		@ frame_needed = 1, uses_anonymous_args = 0
 726 0000 80B5     		push	{r7, lr}
 727              	.LCFI25:
 728              		.cfi_def_cfa_offset 8
 729              		.cfi_offset 7, -8
 730              		.cfi_offset 14, -4
 731 0002 82B0     		sub	sp, sp, #8
 732              	.LCFI26:
 733              		.cfi_def_cfa_offset 16
 734 0004 00AF     		add	r7, sp, #0
 735              	.LCFI27:
 736              		.cfi_def_cfa_register 7
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 24


 737 0006 7860     		str	r0, [r7, #4]
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 738              		.loc 1 588 0
 739 0008 7B68     		ldr	r3, [r7, #4]
 740 000a 002B     		cmp	r3, #0
 741 000c 01D1     		bne	.L35
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 742              		.loc 1 590 0
 743 000e 0123     		movs	r3, #1
 744 0010 2AE0     		b	.L36
 745              	.L35:
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the parameters */
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 746              		.loc 1 596 0
 747 0012 7B68     		ldr	r3, [r7, #4]
 748 0014 2422     		movs	r2, #36
 749 0016 83F86920 		strb	r2, [r3, #105]
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 750              		.loc 1 599 0
 751 001a 7B68     		ldr	r3, [r7, #4]
 752 001c 1B68     		ldr	r3, [r3]
 753 001e 1A68     		ldr	r2, [r3]
 754 0020 7B68     		ldr	r3, [r7, #4]
 755 0022 1B68     		ldr	r3, [r3]
 756 0024 22F00102 		bic	r2, r2, #1
 757 0028 1A60     		str	r2, [r3]
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 758              		.loc 1 601 0
 759 002a 7B68     		ldr	r3, [r7, #4]
 760 002c 1B68     		ldr	r3, [r3]
 761 002e 0022     		movs	r2, #0
 762 0030 1A60     		str	r2, [r3]
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 763              		.loc 1 602 0
 764 0032 7B68     		ldr	r3, [r7, #4]
 765 0034 1B68     		ldr	r3, [r3]
 766 0036 0022     		movs	r2, #0
 767 0038 5A60     		str	r2, [r3, #4]
 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 768              		.loc 1 603 0
 769 003a 7B68     		ldr	r3, [r7, #4]
 770 003c 1B68     		ldr	r3, [r3]
 771 003e 0022     		movs	r2, #0
 772 0040 9A60     		str	r2, [r3, #8]
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* DeInit the low level hardware */
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 773              		.loc 1 606 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 25


 774 0042 7868     		ldr	r0, [r7, #4]
 775 0044 FFF7FEFF 		bl	HAL_UART_MspDeInit
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 776              		.loc 1 608 0
 777 0048 7B68     		ldr	r3, [r7, #4]
 778 004a 0022     		movs	r2, #0
 779 004c DA66     		str	r2, [r3, #108]
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState    = HAL_UART_STATE_RESET;
 780              		.loc 1 609 0
 781 004e 7B68     		ldr	r3, [r7, #4]
 782 0050 0022     		movs	r2, #0
 783 0052 83F86920 		strb	r2, [r3, #105]
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxState   = HAL_UART_STATE_RESET;
 784              		.loc 1 610 0
 785 0056 7B68     		ldr	r3, [r7, #4]
 786 0058 0022     		movs	r2, #0
 787 005a 83F86A20 		strb	r2, [r3, #106]
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Unlock */
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 788              		.loc 1 613 0
 789 005e 7B68     		ldr	r3, [r7, #4]
 790 0060 0022     		movs	r2, #0
 791 0062 83F86820 		strb	r2, [r3, #104]
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 792              		.loc 1 615 0
 793 0066 0023     		movs	r3, #0
 794              	.L36:
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 795              		.loc 1 616 0
 796 0068 1846     		mov	r0, r3
 797 006a 0837     		adds	r7, r7, #8
 798              	.LCFI28:
 799              		.cfi_def_cfa_offset 8
 800 006c BD46     		mov	sp, r7
 801              	.LCFI29:
 802              		.cfi_def_cfa_register 13
 803              		@ sp needed
 804 006e 80BD     		pop	{r7, pc}
 805              		.cfi_endproc
 806              	.LFE143:
 808              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 809              		.align	1
 810              		.weak	HAL_UART_MspInit
 811              		.syntax unified
 812              		.thumb
 813              		.thumb_func
 814              		.fpu fpv5-sp-d16
 816              	HAL_UART_MspInit:
 817              	.LFB144:
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief UART MSP Init
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 26


 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 818              		.loc 1 624 0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 8
 821              		@ frame_needed = 1, uses_anonymous_args = 0
 822              		@ link register save eliminated.
 823 0000 80B4     		push	{r7}
 824              	.LCFI30:
 825              		.cfi_def_cfa_offset 4
 826              		.cfi_offset 7, -4
 827 0002 83B0     		sub	sp, sp, #12
 828              	.LCFI31:
 829              		.cfi_def_cfa_offset 16
 830 0004 00AF     		add	r7, sp, #0
 831              	.LCFI32:
 832              		.cfi_def_cfa_register 7
 833 0006 7860     		str	r0, [r7, #4]
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 834              		.loc 1 631 0
 835 0008 00BF     		nop
 836 000a 0C37     		adds	r7, r7, #12
 837              	.LCFI33:
 838              		.cfi_def_cfa_offset 4
 839 000c BD46     		mov	sp, r7
 840              	.LCFI34:
 841              		.cfi_def_cfa_register 13
 842              		@ sp needed
 843 000e 5DF8047B 		ldr	r7, [sp], #4
 844              	.LCFI35:
 845              		.cfi_restore 7
 846              		.cfi_def_cfa_offset 0
 847 0012 7047     		bx	lr
 848              		.cfi_endproc
 849              	.LFE144:
 851              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 852              		.align	1
 853              		.weak	HAL_UART_MspDeInit
 854              		.syntax unified
 855              		.thumb
 856              		.thumb_func
 857              		.fpu fpv5-sp-d16
 859              	HAL_UART_MspDeInit:
 860              	.LFB145:
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief UART MSP DeInit
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 27


 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 861              		.loc 1 639 0
 862              		.cfi_startproc
 863              		@ args = 0, pretend = 0, frame = 8
 864              		@ frame_needed = 1, uses_anonymous_args = 0
 865              		@ link register save eliminated.
 866 0000 80B4     		push	{r7}
 867              	.LCFI36:
 868              		.cfi_def_cfa_offset 4
 869              		.cfi_offset 7, -4
 870 0002 83B0     		sub	sp, sp, #12
 871              	.LCFI37:
 872              		.cfi_def_cfa_offset 16
 873 0004 00AF     		add	r7, sp, #0
 874              	.LCFI38:
 875              		.cfi_def_cfa_register 7
 876 0006 7860     		str	r0, [r7, #4]
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 877              		.loc 1 646 0
 878 0008 00BF     		nop
 879 000a 0C37     		adds	r7, r7, #12
 880              	.LCFI39:
 881              		.cfi_def_cfa_offset 4
 882 000c BD46     		mov	sp, r7
 883              	.LCFI40:
 884              		.cfi_def_cfa_register 13
 885              		@ sp needed
 886 000e 5DF8047B 		ldr	r7, [sp], #4
 887              	.LCFI41:
 888              		.cfi_restore 7
 889              		.cfi_def_cfa_offset 0
 890 0012 7047     		bx	lr
 891              		.cfi_endproc
 892              	.LFE145:
 894              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 895              		.align	1
 896              		.global	HAL_UART_Transmit
 897              		.syntax unified
 898              		.thumb
 899              		.thumb_func
 900              		.fpu fpv5-sp-d16
 902              	HAL_UART_Transmit:
 903              	.LFB146:
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @}
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 28


 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @verbatim
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                       ##### IO operation functions #####
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     and Half duplex data transfers.
 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) There are two mode of transfer:
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            after finishing transfer.
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            The end of the data processing will be indicated through the
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            using DMA mode.
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Blocking mode API's are :
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Transmit()
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Receive()
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) UART_Transmit_IT()
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) UART_Receive_IT()
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @endverbatim
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 29


 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData Pointer to data buffer.
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size Amount of data to be sent.
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Timeout Timeout duration.
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 904              		.loc 1 717 0
 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 24
 907              		@ frame_needed = 1, uses_anonymous_args = 0
 908 0000 80B5     		push	{r7, lr}
 909              	.LCFI42:
 910              		.cfi_def_cfa_offset 8
 911              		.cfi_offset 7, -8
 912              		.cfi_offset 14, -4
 913 0002 88B0     		sub	sp, sp, #32
 914              	.LCFI43:
 915              		.cfi_def_cfa_offset 40
 916 0004 02AF     		add	r7, sp, #8
 917              	.LCFI44:
 918              		.cfi_def_cfa 7, 32
 919 0006 F860     		str	r0, [r7, #12]
 920 0008 B960     		str	r1, [r7, #8]
 921 000a 3B60     		str	r3, [r7]
 922 000c 1346     		mov	r3, r2	@ movhi
 923 000e FB80     		strh	r3, [r7, #6]	@ movhi
 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t* tmp;
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t tickstart = 0U;
 924              		.loc 1 719 0
 925 0010 0023     		movs	r3, #0
 926 0012 7B61     		str	r3, [r7, #20]
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 927              		.loc 1 722 0
 928 0014 FB68     		ldr	r3, [r7, #12]
 929 0016 93F86930 		ldrb	r3, [r3, #105]
 930 001a DBB2     		uxtb	r3, r3
 931 001c 202B     		cmp	r3, #32
 932 001e 76D1     		bne	.L40
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 933              		.loc 1 724 0
 934 0020 BB68     		ldr	r3, [r7, #8]
 935 0022 002B     		cmp	r3, #0
 936 0024 02D0     		beq	.L41
 937              		.loc 1 724 0 is_stmt 0 discriminator 1
 938 0026 FB88     		ldrh	r3, [r7, #6]
 939 0028 002B     		cmp	r3, #0
 940 002a 01D1     		bne	.L42
 941              	.L41:
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return  HAL_ERROR;
 942              		.loc 1 726 0 is_stmt 1
 943 002c 0123     		movs	r3, #1
 944 002e 6FE0     		b	.L43
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 30


 945              	.L42:
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
 946              		.loc 1 730 0
 947 0030 FB68     		ldr	r3, [r7, #12]
 948 0032 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 949 0036 012B     		cmp	r3, #1
 950 0038 01D1     		bne	.L44
 951              		.loc 1 730 0 is_stmt 0 discriminator 1
 952 003a 0223     		movs	r3, #2
 953 003c 68E0     		b	.L43
 954              	.L44:
 955              		.loc 1 730 0 discriminator 2
 956 003e FB68     		ldr	r3, [r7, #12]
 957 0040 0122     		movs	r2, #1
 958 0042 83F86820 		strb	r2, [r3, #104]
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 959              		.loc 1 732 0 is_stmt 1 discriminator 2
 960 0046 FB68     		ldr	r3, [r7, #12]
 961 0048 0022     		movs	r2, #0
 962 004a DA66     		str	r2, [r3, #108]
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 963              		.loc 1 733 0 discriminator 2
 964 004c FB68     		ldr	r3, [r7, #12]
 965 004e 2122     		movs	r2, #33
 966 0050 83F86920 		strb	r2, [r3, #105]
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     tickstart = HAL_GetTick();
 967              		.loc 1 736 0 discriminator 2
 968 0054 FFF7FEFF 		bl	HAL_GetTick
 969 0058 7861     		str	r0, [r7, #20]
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferSize = Size;
 970              		.loc 1 738 0 discriminator 2
 971 005a FB68     		ldr	r3, [r7, #12]
 972 005c FA88     		ldrh	r2, [r7, #6]	@ movhi
 973 005e A3F85020 		strh	r2, [r3, #80]	@ movhi
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = Size;
 974              		.loc 1 739 0 discriminator 2
 975 0062 FB68     		ldr	r3, [r7, #12]
 976 0064 FA88     		ldrh	r2, [r7, #6]	@ movhi
 977 0066 A3F85220 		strh	r2, [r3, #82]	@ movhi
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 978              		.loc 1 740 0 discriminator 2
 979 006a 33E0     		b	.L45
 980              	.L48:
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->TxXferCount--;
 981              		.loc 1 742 0
 982 006c FB68     		ldr	r3, [r7, #12]
 983 006e B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 984 0072 9BB2     		uxth	r3, r3
 985 0074 013B     		subs	r3, r3, #1
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 31


 986 0076 9AB2     		uxth	r2, r3
 987 0078 FB68     		ldr	r3, [r7, #12]
 988 007a A3F85220 		strh	r2, [r3, #82]	@ movhi
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 989              		.loc 1 743 0
 990 007e 3B68     		ldr	r3, [r7]
 991 0080 0093     		str	r3, [sp]
 992 0082 7B69     		ldr	r3, [r7, #20]
 993 0084 0022     		movs	r2, #0
 994 0086 8021     		movs	r1, #128
 995 0088 F868     		ldr	r0, [r7, #12]
 996 008a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 997 008e 0346     		mov	r3, r0
 998 0090 002B     		cmp	r3, #0
 999 0092 01D0     		beq	.L46
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         return HAL_TIMEOUT;
 1000              		.loc 1 745 0
 1001 0094 0323     		movs	r3, #3
 1002 0096 3BE0     		b	.L43
 1003              	.L46:
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 1004              		.loc 1 747 0
 1005 0098 FB68     		ldr	r3, [r7, #12]
 1006 009a 9B68     		ldr	r3, [r3, #8]
 1007 009c B3F5805F 		cmp	r3, #4096
 1008 00a0 11D1     		bne	.L47
 1009              		.loc 1 747 0 is_stmt 0 discriminator 1
 1010 00a2 FB68     		ldr	r3, [r7, #12]
 1011 00a4 1B69     		ldr	r3, [r3, #16]
 1012 00a6 002B     		cmp	r3, #0
 1013 00a8 0DD1     		bne	.L47
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 1014              		.loc 1 749 0 is_stmt 1
 1015 00aa BB68     		ldr	r3, [r7, #8]
 1016 00ac 3B61     		str	r3, [r7, #16]
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 1017              		.loc 1 750 0
 1018 00ae 3B69     		ldr	r3, [r7, #16]
 1019 00b0 1B88     		ldrh	r3, [r3]
 1020 00b2 1A46     		mov	r2, r3
 1021 00b4 FB68     		ldr	r3, [r7, #12]
 1022 00b6 1B68     		ldr	r3, [r3]
 1023 00b8 C2F30802 		ubfx	r2, r2, #0, #9
 1024 00bc 9A62     		str	r2, [r3, #40]
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         pData += 2;
 1025              		.loc 1 751 0
 1026 00be BB68     		ldr	r3, [r7, #8]
 1027 00c0 0233     		adds	r3, r3, #2
 1028 00c2 BB60     		str	r3, [r7, #8]
 1029 00c4 06E0     		b	.L45
 1030              	.L47:
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       else
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 32


 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->TDR = (*pData++ & (uint8_t)0xFFU);
 1031              		.loc 1 755 0
 1032 00c6 BB68     		ldr	r3, [r7, #8]
 1033 00c8 5A1C     		adds	r2, r3, #1
 1034 00ca BA60     		str	r2, [r7, #8]
 1035 00cc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1036 00ce FB68     		ldr	r3, [r7, #12]
 1037 00d0 1B68     		ldr	r3, [r3]
 1038 00d2 9A62     		str	r2, [r3, #40]
 1039              	.L45:
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1040              		.loc 1 740 0
 1041 00d4 FB68     		ldr	r3, [r7, #12]
 1042 00d6 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 1043 00da 9BB2     		uxth	r3, r3
 1044 00dc 002B     		cmp	r3, #0
 1045 00de C5D1     		bne	.L48
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 1046              		.loc 1 758 0
 1047 00e0 3B68     		ldr	r3, [r7]
 1048 00e2 0093     		str	r3, [sp]
 1049 00e4 7B69     		ldr	r3, [r7, #20]
 1050 00e6 0022     		movs	r2, #0
 1051 00e8 4021     		movs	r1, #64
 1052 00ea F868     		ldr	r0, [r7, #12]
 1053 00ec FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1054 00f0 0346     		mov	r3, r0
 1055 00f2 002B     		cmp	r3, #0
 1056 00f4 01D0     		beq	.L49
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_TIMEOUT;
 1057              		.loc 1 760 0
 1058 00f6 0323     		movs	r3, #3
 1059 00f8 0AE0     		b	.L43
 1060              	.L49:
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 1061              		.loc 1 764 0
 1062 00fa FB68     		ldr	r3, [r7, #12]
 1063 00fc 2022     		movs	r2, #32
 1064 00fe 83F86920 		strb	r2, [r3, #105]
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1065              		.loc 1 767 0
 1066 0102 FB68     		ldr	r3, [r7, #12]
 1067 0104 0022     		movs	r2, #0
 1068 0106 83F86820 		strb	r2, [r3, #104]
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 1069              		.loc 1 769 0
 1070 010a 0023     		movs	r3, #0
 1071 010c 00E0     		b	.L43
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 33


 1072              	.L40:
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 1073              		.loc 1 773 0
 1074 010e 0223     		movs	r3, #2
 1075              	.L43:
 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1076              		.loc 1 775 0
 1077 0110 1846     		mov	r0, r3
 1078 0112 1837     		adds	r7, r7, #24
 1079              	.LCFI45:
 1080              		.cfi_def_cfa_offset 8
 1081 0114 BD46     		mov	sp, r7
 1082              	.LCFI46:
 1083              		.cfi_def_cfa_register 13
 1084              		@ sp needed
 1085 0116 80BD     		pop	{r7, pc}
 1086              		.cfi_endproc
 1087              	.LFE146:
 1089              		.section	.text.HAL_UART_Receive,"ax",%progbits
 1090              		.align	1
 1091              		.global	HAL_UART_Receive
 1092              		.syntax unified
 1093              		.thumb
 1094              		.thumb_func
 1095              		.fpu fpv5-sp-d16
 1097              	HAL_UART_Receive:
 1098              	.LFB147:
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData pointer to data buffer.
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size amount of data to be received.
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Timeout Timeout duration.
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 1099              		.loc 1 786 0
 1100              		.cfi_startproc
 1101              		@ args = 0, pretend = 0, frame = 32
 1102              		@ frame_needed = 1, uses_anonymous_args = 0
 1103 0000 80B5     		push	{r7, lr}
 1104              	.LCFI47:
 1105              		.cfi_def_cfa_offset 8
 1106              		.cfi_offset 7, -8
 1107              		.cfi_offset 14, -4
 1108 0002 8AB0     		sub	sp, sp, #40
 1109              	.LCFI48:
 1110              		.cfi_def_cfa_offset 48
 1111 0004 02AF     		add	r7, sp, #8
 1112              	.LCFI49:
 1113              		.cfi_def_cfa 7, 40
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 34


 1114 0006 F860     		str	r0, [r7, #12]
 1115 0008 B960     		str	r1, [r7, #8]
 1116 000a 3B60     		str	r3, [r7]
 1117 000c 1346     		mov	r3, r2	@ movhi
 1118 000e FB80     		strh	r3, [r7, #6]	@ movhi
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t* tmp;
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t uhMask;
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t tickstart = 0U;
 1119              		.loc 1 789 0
 1120 0010 0023     		movs	r3, #0
 1121 0012 FB61     		str	r3, [r7, #28]
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 1122              		.loc 1 792 0
 1123 0014 FB68     		ldr	r3, [r7, #12]
 1124 0016 93F86A30 		ldrb	r3, [r3, #106]
 1125 001a DBB2     		uxtb	r3, r3
 1126 001c 202B     		cmp	r3, #32
 1127 001e 40F0AC80 		bne	.L51
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 1128              		.loc 1 794 0
 1129 0022 BB68     		ldr	r3, [r7, #8]
 1130 0024 002B     		cmp	r3, #0
 1131 0026 02D0     		beq	.L52
 1132              		.loc 1 794 0 is_stmt 0 discriminator 1
 1133 0028 FB88     		ldrh	r3, [r7, #6]
 1134 002a 002B     		cmp	r3, #0
 1135 002c 01D1     		bne	.L53
 1136              	.L52:
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return  HAL_ERROR;
 1137              		.loc 1 796 0 is_stmt 1
 1138 002e 0123     		movs	r3, #1
 1139 0030 A4E0     		b	.L54
 1140              	.L53:
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
 1141              		.loc 1 800 0
 1142 0032 FB68     		ldr	r3, [r7, #12]
 1143 0034 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 1144 0038 012B     		cmp	r3, #1
 1145 003a 01D1     		bne	.L55
 1146              		.loc 1 800 0 is_stmt 0 discriminator 1
 1147 003c 0223     		movs	r3, #2
 1148 003e 9DE0     		b	.L54
 1149              	.L55:
 1150              		.loc 1 800 0 discriminator 2
 1151 0040 FB68     		ldr	r3, [r7, #12]
 1152 0042 0122     		movs	r2, #1
 1153 0044 83F86820 		strb	r2, [r3, #104]
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1154              		.loc 1 802 0 is_stmt 1 discriminator 2
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 35


 1155 0048 FB68     		ldr	r3, [r7, #12]
 1156 004a 0022     		movs	r2, #0
 1157 004c DA66     		str	r2, [r3, #108]
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1158              		.loc 1 803 0 discriminator 2
 1159 004e FB68     		ldr	r3, [r7, #12]
 1160 0050 2222     		movs	r2, #34
 1161 0052 83F86A20 		strb	r2, [r3, #106]
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     tickstart = HAL_GetTick();
 1162              		.loc 1 806 0 discriminator 2
 1163 0056 FFF7FEFF 		bl	HAL_GetTick
 1164 005a F861     		str	r0, [r7, #28]
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferSize = Size;
 1165              		.loc 1 808 0 discriminator 2
 1166 005c FB68     		ldr	r3, [r7, #12]
 1167 005e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1168 0060 A3F85820 		strh	r2, [r3, #88]	@ movhi
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferCount = Size;
 1169              		.loc 1 809 0 discriminator 2
 1170 0064 FB68     		ldr	r3, [r7, #12]
 1171 0066 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1172 0068 A3F85A20 		strh	r2, [r3, #90]	@ movhi
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 1173              		.loc 1 812 0 discriminator 2
 1174 006c FB68     		ldr	r3, [r7, #12]
 1175 006e 9B68     		ldr	r3, [r3, #8]
 1176 0070 B3F5805F 		cmp	r3, #4096
 1177 0074 0ED1     		bne	.L56
 1178              		.loc 1 812 0 is_stmt 0 discriminator 1
 1179 0076 FB68     		ldr	r3, [r7, #12]
 1180 0078 1B69     		ldr	r3, [r3, #16]
 1181 007a 002B     		cmp	r3, #0
 1182 007c 05D1     		bne	.L57
 1183              		.loc 1 812 0 discriminator 3
 1184 007e FB68     		ldr	r3, [r7, #12]
 1185 0080 40F2FF12 		movw	r2, #511
 1186 0084 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1187 0088 28E0     		b	.L59
 1188              	.L57:
 1189              		.loc 1 812 0 discriminator 4
 1190 008a FB68     		ldr	r3, [r7, #12]
 1191 008c FF22     		movs	r2, #255
 1192 008e A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1193 0092 23E0     		b	.L59
 1194              	.L56:
 1195              		.loc 1 812 0 discriminator 2
 1196 0094 FB68     		ldr	r3, [r7, #12]
 1197 0096 9B68     		ldr	r3, [r3, #8]
 1198 0098 002B     		cmp	r3, #0
 1199 009a 0DD1     		bne	.L60
 1200              		.loc 1 812 0 discriminator 5
 1201 009c FB68     		ldr	r3, [r7, #12]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 36


 1202 009e 1B69     		ldr	r3, [r3, #16]
 1203 00a0 002B     		cmp	r3, #0
 1204 00a2 04D1     		bne	.L61
 1205              		.loc 1 812 0 discriminator 7
 1206 00a4 FB68     		ldr	r3, [r7, #12]
 1207 00a6 FF22     		movs	r2, #255
 1208 00a8 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1209 00ac 16E0     		b	.L59
 1210              	.L61:
 1211              		.loc 1 812 0 discriminator 8
 1212 00ae FB68     		ldr	r3, [r7, #12]
 1213 00b0 7F22     		movs	r2, #127
 1214 00b2 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1215 00b6 11E0     		b	.L59
 1216              	.L60:
 1217              		.loc 1 812 0 discriminator 6
 1218 00b8 FB68     		ldr	r3, [r7, #12]
 1219 00ba 9B68     		ldr	r3, [r3, #8]
 1220 00bc B3F1805F 		cmp	r3, #268435456
 1221 00c0 0CD1     		bne	.L59
 1222              		.loc 1 812 0 discriminator 9
 1223 00c2 FB68     		ldr	r3, [r7, #12]
 1224 00c4 1B69     		ldr	r3, [r3, #16]
 1225 00c6 002B     		cmp	r3, #0
 1226 00c8 04D1     		bne	.L63
 1227              		.loc 1 812 0 discriminator 10
 1228 00ca FB68     		ldr	r3, [r7, #12]
 1229 00cc 7F22     		movs	r2, #127
 1230 00ce A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1231 00d2 03E0     		b	.L59
 1232              	.L63:
 1233              		.loc 1 812 0 discriminator 11
 1234 00d4 FB68     		ldr	r3, [r7, #12]
 1235 00d6 3F22     		movs	r2, #63
 1236 00d8 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1237              	.L59:
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1238              		.loc 1 813 0 is_stmt 1
 1239 00dc FB68     		ldr	r3, [r7, #12]
 1240 00de B3F85C30 		ldrh	r3, [r3, #92]	@ movhi
 1241 00e2 7B83     		strh	r3, [r7, #26]	@ movhi
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* as long as data have to be received */
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     while(huart->RxXferCount > 0U)
 1242              		.loc 1 816 0
 1243 00e4 39E0     		b	.L64
 1244              	.L67:
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->RxXferCount--;
 1245              		.loc 1 818 0
 1246 00e6 FB68     		ldr	r3, [r7, #12]
 1247 00e8 B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 1248 00ec 9BB2     		uxth	r3, r3
 1249 00ee 013B     		subs	r3, r3, #1
 1250 00f0 9AB2     		uxth	r2, r3
 1251 00f2 FB68     		ldr	r3, [r7, #12]
 1252 00f4 A3F85A20 		strh	r2, [r3, #90]	@ movhi
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 37


 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 1253              		.loc 1 819 0
 1254 00f8 3B68     		ldr	r3, [r7]
 1255 00fa 0093     		str	r3, [sp]
 1256 00fc FB69     		ldr	r3, [r7, #28]
 1257 00fe 0022     		movs	r2, #0
 1258 0100 2021     		movs	r1, #32
 1259 0102 F868     		ldr	r0, [r7, #12]
 1260 0104 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1261 0108 0346     		mov	r3, r0
 1262 010a 002B     		cmp	r3, #0
 1263 010c 01D0     		beq	.L65
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         return HAL_TIMEOUT;
 1264              		.loc 1 821 0
 1265 010e 0323     		movs	r3, #3
 1266 0110 34E0     		b	.L54
 1267              	.L65:
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 1268              		.loc 1 823 0
 1269 0112 FB68     		ldr	r3, [r7, #12]
 1270 0114 9B68     		ldr	r3, [r3, #8]
 1271 0116 B3F5805F 		cmp	r3, #4096
 1272 011a 12D1     		bne	.L66
 1273              		.loc 1 823 0 is_stmt 0 discriminator 1
 1274 011c FB68     		ldr	r3, [r7, #12]
 1275 011e 1B69     		ldr	r3, [r3, #16]
 1276 0120 002B     		cmp	r3, #0
 1277 0122 0ED1     		bne	.L66
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         tmp = (uint16_t*) pData ;
 1278              		.loc 1 825 0 is_stmt 1
 1279 0124 BB68     		ldr	r3, [r7, #8]
 1280 0126 7B61     		str	r3, [r7, #20]
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 1281              		.loc 1 826 0
 1282 0128 FB68     		ldr	r3, [r7, #12]
 1283 012a 1B68     		ldr	r3, [r3]
 1284 012c 5B6A     		ldr	r3, [r3, #36]
 1285 012e 9AB2     		uxth	r2, r3
 1286 0130 7B8B     		ldrh	r3, [r7, #26]	@ movhi
 1287 0132 1340     		ands	r3, r3, r2
 1288 0134 9AB2     		uxth	r2, r3
 1289 0136 7B69     		ldr	r3, [r7, #20]
 1290 0138 1A80     		strh	r2, [r3]	@ movhi
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         pData +=2U;
 1291              		.loc 1 827 0
 1292 013a BB68     		ldr	r3, [r7, #8]
 1293 013c 0233     		adds	r3, r3, #2
 1294 013e BB60     		str	r3, [r7, #8]
 1295 0140 0BE0     		b	.L64
 1296              	.L66:
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       else
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         *pData++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 38


 1297              		.loc 1 831 0
 1298 0142 FB68     		ldr	r3, [r7, #12]
 1299 0144 1B68     		ldr	r3, [r3]
 1300 0146 5B6A     		ldr	r3, [r3, #36]
 1301 0148 D9B2     		uxtb	r1, r3
 1302 014a 7B8B     		ldrh	r3, [r7, #26]	@ movhi
 1303 014c DAB2     		uxtb	r2, r3
 1304 014e BB68     		ldr	r3, [r7, #8]
 1305 0150 581C     		adds	r0, r3, #1
 1306 0152 B860     		str	r0, [r7, #8]
 1307 0154 0A40     		ands	r2, r2, r1
 1308 0156 D2B2     		uxtb	r2, r2
 1309 0158 1A70     		strb	r2, [r3]
 1310              	.L64:
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1311              		.loc 1 816 0
 1312 015a FB68     		ldr	r3, [r7, #12]
 1313 015c B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 1314 0160 9BB2     		uxth	r3, r3
 1315 0162 002B     		cmp	r3, #0
 1316 0164 BFD1     		bne	.L67
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1317              		.loc 1 836 0
 1318 0166 FB68     		ldr	r3, [r7, #12]
 1319 0168 2022     		movs	r2, #32
 1320 016a 83F86A20 		strb	r2, [r3, #106]
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1321              		.loc 1 839 0
 1322 016e FB68     		ldr	r3, [r7, #12]
 1323 0170 0022     		movs	r2, #0
 1324 0172 83F86820 		strb	r2, [r3, #104]
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 1325              		.loc 1 841 0
 1326 0176 0023     		movs	r3, #0
 1327 0178 00E0     		b	.L54
 1328              	.L51:
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 1329              		.loc 1 845 0
 1330 017a 0223     		movs	r3, #2
 1331              	.L54:
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1332              		.loc 1 847 0
 1333 017c 1846     		mov	r0, r3
 1334 017e 2037     		adds	r7, r7, #32
 1335              	.LCFI50:
 1336              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 39


 1337 0180 BD46     		mov	sp, r7
 1338              	.LCFI51:
 1339              		.cfi_def_cfa_register 13
 1340              		@ sp needed
 1341 0182 80BD     		pop	{r7, pc}
 1342              		.cfi_endproc
 1343              	.LFE147:
 1345              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1346              		.align	1
 1347              		.global	HAL_UART_Transmit_IT
 1348              		.syntax unified
 1349              		.thumb
 1350              		.thumb_func
 1351              		.fpu fpv5-sp-d16
 1353              	HAL_UART_Transmit_IT:
 1354              	.LFB148:
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData pointer to data buffer.
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size amount of data to be sent.
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 1355              		.loc 1 857 0
 1356              		.cfi_startproc
 1357              		@ args = 0, pretend = 0, frame = 16
 1358              		@ frame_needed = 1, uses_anonymous_args = 0
 1359              		@ link register save eliminated.
 1360 0000 80B4     		push	{r7}
 1361              	.LCFI52:
 1362              		.cfi_def_cfa_offset 4
 1363              		.cfi_offset 7, -4
 1364 0002 85B0     		sub	sp, sp, #20
 1365              	.LCFI53:
 1366              		.cfi_def_cfa_offset 24
 1367 0004 00AF     		add	r7, sp, #0
 1368              	.LCFI54:
 1369              		.cfi_def_cfa_register 7
 1370 0006 F860     		str	r0, [r7, #12]
 1371 0008 B960     		str	r1, [r7, #8]
 1372 000a 1346     		mov	r3, r2
 1373 000c FB80     		strh	r3, [r7, #6]	@ movhi
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 1374              		.loc 1 859 0
 1375 000e FB68     		ldr	r3, [r7, #12]
 1376 0010 93F86930 		ldrb	r3, [r3, #105]
 1377 0014 DBB2     		uxtb	r3, r3
 1378 0016 202B     		cmp	r3, #32
 1379 0018 32D1     		bne	.L69
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 1380              		.loc 1 861 0
 1381 001a BB68     		ldr	r3, [r7, #8]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 40


 1382 001c 002B     		cmp	r3, #0
 1383 001e 02D0     		beq	.L70
 1384              		.loc 1 861 0 is_stmt 0 discriminator 1
 1385 0020 FB88     		ldrh	r3, [r7, #6]
 1386 0022 002B     		cmp	r3, #0
 1387 0024 01D1     		bne	.L71
 1388              	.L70:
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_ERROR;
 1389              		.loc 1 863 0 is_stmt 1
 1390 0026 0123     		movs	r3, #1
 1391 0028 2BE0     		b	.L72
 1392              	.L71:
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
 1393              		.loc 1 867 0
 1394 002a FB68     		ldr	r3, [r7, #12]
 1395 002c 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 1396 0030 012B     		cmp	r3, #1
 1397 0032 01D1     		bne	.L73
 1398              		.loc 1 867 0 is_stmt 0 discriminator 1
 1399 0034 0223     		movs	r3, #2
 1400 0036 24E0     		b	.L72
 1401              	.L73:
 1402              		.loc 1 867 0 discriminator 2
 1403 0038 FB68     		ldr	r3, [r7, #12]
 1404 003a 0122     		movs	r2, #1
 1405 003c 83F86820 		strb	r2, [r3, #104]
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1406              		.loc 1 869 0 is_stmt 1 discriminator 2
 1407 0040 FB68     		ldr	r3, [r7, #12]
 1408 0042 BA68     		ldr	r2, [r7, #8]
 1409 0044 DA64     		str	r2, [r3, #76]
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferSize = Size;
 1410              		.loc 1 870 0 discriminator 2
 1411 0046 FB68     		ldr	r3, [r7, #12]
 1412 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1413 004a A3F85020 		strh	r2, [r3, #80]	@ movhi
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = Size;
 1414              		.loc 1 871 0 discriminator 2
 1415 004e FB68     		ldr	r3, [r7, #12]
 1416 0050 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1417 0052 A3F85220 		strh	r2, [r3, #82]	@ movhi
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1418              		.loc 1 873 0 discriminator 2
 1419 0056 FB68     		ldr	r3, [r7, #12]
 1420 0058 0022     		movs	r2, #0
 1421 005a DA66     		str	r2, [r3, #108]
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1422              		.loc 1 874 0 discriminator 2
 1423 005c FB68     		ldr	r3, [r7, #12]
 1424 005e 2122     		movs	r2, #33
 1425 0060 83F86920 		strb	r2, [r3, #105]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 41


 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1426              		.loc 1 877 0 discriminator 2
 1427 0064 FB68     		ldr	r3, [r7, #12]
 1428 0066 0022     		movs	r2, #0
 1429 0068 83F86820 		strb	r2, [r3, #104]
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Transmit Data Register Empty Interrupt */
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 1430              		.loc 1 880 0 discriminator 2
 1431 006c FB68     		ldr	r3, [r7, #12]
 1432 006e 1B68     		ldr	r3, [r3]
 1433 0070 1A68     		ldr	r2, [r3]
 1434 0072 FB68     		ldr	r3, [r7, #12]
 1435 0074 1B68     		ldr	r3, [r3]
 1436 0076 42F08002 		orr	r2, r2, #128
 1437 007a 1A60     		str	r2, [r3]
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 1438              		.loc 1 882 0 discriminator 2
 1439 007c 0023     		movs	r3, #0
 1440 007e 00E0     		b	.L72
 1441              	.L69:
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 1442              		.loc 1 886 0
 1443 0080 0223     		movs	r3, #2
 1444              	.L72:
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1445              		.loc 1 888 0
 1446 0082 1846     		mov	r0, r3
 1447 0084 1437     		adds	r7, r7, #20
 1448              	.LCFI55:
 1449              		.cfi_def_cfa_offset 4
 1450 0086 BD46     		mov	sp, r7
 1451              	.LCFI56:
 1452              		.cfi_def_cfa_register 13
 1453              		@ sp needed
 1454 0088 5DF8047B 		ldr	r7, [sp], #4
 1455              	.LCFI57:
 1456              		.cfi_restore 7
 1457              		.cfi_def_cfa_offset 0
 1458 008c 7047     		bx	lr
 1459              		.cfi_endproc
 1460              	.LFE148:
 1462              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1463              		.align	1
 1464              		.global	HAL_UART_Receive_IT
 1465              		.syntax unified
 1466              		.thumb
 1467              		.thumb_func
 1468              		.fpu fpv5-sp-d16
 1470              	HAL_UART_Receive_IT:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 42


 1471              	.LFB149:
 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData pointer to data buffer.
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size amount of data to be received.
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 1472              		.loc 1 898 0
 1473              		.cfi_startproc
 1474              		@ args = 0, pretend = 0, frame = 16
 1475              		@ frame_needed = 1, uses_anonymous_args = 0
 1476              		@ link register save eliminated.
 1477 0000 80B4     		push	{r7}
 1478              	.LCFI58:
 1479              		.cfi_def_cfa_offset 4
 1480              		.cfi_offset 7, -4
 1481 0002 85B0     		sub	sp, sp, #20
 1482              	.LCFI59:
 1483              		.cfi_def_cfa_offset 24
 1484 0004 00AF     		add	r7, sp, #0
 1485              	.LCFI60:
 1486              		.cfi_def_cfa_register 7
 1487 0006 F860     		str	r0, [r7, #12]
 1488 0008 B960     		str	r1, [r7, #8]
 1489 000a 1346     		mov	r3, r2
 1490 000c FB80     		strh	r3, [r7, #6]	@ movhi
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 1491              		.loc 1 900 0
 1492 000e FB68     		ldr	r3, [r7, #12]
 1493 0010 93F86A30 		ldrb	r3, [r3, #106]
 1494 0014 DBB2     		uxtb	r3, r3
 1495 0016 202B     		cmp	r3, #32
 1496 0018 72D1     		bne	.L75
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 1497              		.loc 1 902 0
 1498 001a BB68     		ldr	r3, [r7, #8]
 1499 001c 002B     		cmp	r3, #0
 1500 001e 02D0     		beq	.L76
 1501              		.loc 1 902 0 is_stmt 0 discriminator 1
 1502 0020 FB88     		ldrh	r3, [r7, #6]
 1503 0022 002B     		cmp	r3, #0
 1504 0024 01D1     		bne	.L77
 1505              	.L76:
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_ERROR;
 1506              		.loc 1 904 0 is_stmt 1
 1507 0026 0123     		movs	r3, #1
 1508 0028 6BE0     		b	.L78
 1509              	.L77:
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 43


 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
 1510              		.loc 1 908 0
 1511 002a FB68     		ldr	r3, [r7, #12]
 1512 002c 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 1513 0030 012B     		cmp	r3, #1
 1514 0032 01D1     		bne	.L79
 1515              		.loc 1 908 0 is_stmt 0 discriminator 1
 1516 0034 0223     		movs	r3, #2
 1517 0036 64E0     		b	.L78
 1518              	.L79:
 1519              		.loc 1 908 0 discriminator 2
 1520 0038 FB68     		ldr	r3, [r7, #12]
 1521 003a 0122     		movs	r2, #1
 1522 003c 83F86820 		strb	r2, [r3, #104]
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 1523              		.loc 1 910 0 is_stmt 1 discriminator 2
 1524 0040 FB68     		ldr	r3, [r7, #12]
 1525 0042 BA68     		ldr	r2, [r7, #8]
 1526 0044 5A65     		str	r2, [r3, #84]
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferSize = Size;
 1527              		.loc 1 911 0 discriminator 2
 1528 0046 FB68     		ldr	r3, [r7, #12]
 1529 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1530 004a A3F85820 		strh	r2, [r3, #88]	@ movhi
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferCount = Size;
 1531              		.loc 1 912 0 discriminator 2
 1532 004e FB68     		ldr	r3, [r7, #12]
 1533 0050 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1534 0052 A3F85A20 		strh	r2, [r3, #90]	@ movhi
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 1535              		.loc 1 915 0 discriminator 2
 1536 0056 FB68     		ldr	r3, [r7, #12]
 1537 0058 9B68     		ldr	r3, [r3, #8]
 1538 005a B3F5805F 		cmp	r3, #4096
 1539 005e 0ED1     		bne	.L80
 1540              		.loc 1 915 0 is_stmt 0 discriminator 1
 1541 0060 FB68     		ldr	r3, [r7, #12]
 1542 0062 1B69     		ldr	r3, [r3, #16]
 1543 0064 002B     		cmp	r3, #0
 1544 0066 05D1     		bne	.L81
 1545              		.loc 1 915 0 discriminator 3
 1546 0068 FB68     		ldr	r3, [r7, #12]
 1547 006a 40F2FF12 		movw	r2, #511
 1548 006e A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1549 0072 28E0     		b	.L83
 1550              	.L81:
 1551              		.loc 1 915 0 discriminator 4
 1552 0074 FB68     		ldr	r3, [r7, #12]
 1553 0076 FF22     		movs	r2, #255
 1554 0078 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1555 007c 23E0     		b	.L83
 1556              	.L80:
 1557              		.loc 1 915 0 discriminator 2
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 44


 1558 007e FB68     		ldr	r3, [r7, #12]
 1559 0080 9B68     		ldr	r3, [r3, #8]
 1560 0082 002B     		cmp	r3, #0
 1561 0084 0DD1     		bne	.L84
 1562              		.loc 1 915 0 discriminator 5
 1563 0086 FB68     		ldr	r3, [r7, #12]
 1564 0088 1B69     		ldr	r3, [r3, #16]
 1565 008a 002B     		cmp	r3, #0
 1566 008c 04D1     		bne	.L85
 1567              		.loc 1 915 0 discriminator 7
 1568 008e FB68     		ldr	r3, [r7, #12]
 1569 0090 FF22     		movs	r2, #255
 1570 0092 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1571 0096 16E0     		b	.L83
 1572              	.L85:
 1573              		.loc 1 915 0 discriminator 8
 1574 0098 FB68     		ldr	r3, [r7, #12]
 1575 009a 7F22     		movs	r2, #127
 1576 009c A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1577 00a0 11E0     		b	.L83
 1578              	.L84:
 1579              		.loc 1 915 0 discriminator 6
 1580 00a2 FB68     		ldr	r3, [r7, #12]
 1581 00a4 9B68     		ldr	r3, [r3, #8]
 1582 00a6 B3F1805F 		cmp	r3, #268435456
 1583 00aa 0CD1     		bne	.L83
 1584              		.loc 1 915 0 discriminator 9
 1585 00ac FB68     		ldr	r3, [r7, #12]
 1586 00ae 1B69     		ldr	r3, [r3, #16]
 1587 00b0 002B     		cmp	r3, #0
 1588 00b2 04D1     		bne	.L87
 1589              		.loc 1 915 0 discriminator 10
 1590 00b4 FB68     		ldr	r3, [r7, #12]
 1591 00b6 7F22     		movs	r2, #127
 1592 00b8 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1593 00bc 03E0     		b	.L83
 1594              	.L87:
 1595              		.loc 1 915 0 discriminator 11
 1596 00be FB68     		ldr	r3, [r7, #12]
 1597 00c0 3F22     		movs	r2, #63
 1598 00c2 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1599              	.L83:
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1600              		.loc 1 917 0 is_stmt 1
 1601 00c6 FB68     		ldr	r3, [r7, #12]
 1602 00c8 0022     		movs	r2, #0
 1603 00ca DA66     		str	r2, [r3, #108]
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1604              		.loc 1 918 0
 1605 00cc FB68     		ldr	r3, [r7, #12]
 1606 00ce 2222     		movs	r2, #34
 1607 00d0 83F86A20 		strb	r2, [r3, #106]
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1608              		.loc 1 921 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 45


 1609 00d4 FB68     		ldr	r3, [r7, #12]
 1610 00d6 0022     		movs	r2, #0
 1611 00d8 83F86820 		strb	r2, [r3, #104]
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1612              		.loc 1 924 0
 1613 00dc FB68     		ldr	r3, [r7, #12]
 1614 00de 1B68     		ldr	r3, [r3]
 1615 00e0 9A68     		ldr	r2, [r3, #8]
 1616 00e2 FB68     		ldr	r3, [r7, #12]
 1617 00e4 1B68     		ldr	r3, [r3]
 1618 00e6 42F00102 		orr	r2, r2, #1
 1619 00ea 9A60     		str	r2, [r3, #8]
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Parity Error and Data Register not empty Interrupts */
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 1620              		.loc 1 927 0
 1621 00ec FB68     		ldr	r3, [r7, #12]
 1622 00ee 1B68     		ldr	r3, [r3]
 1623 00f0 1A68     		ldr	r2, [r3]
 1624 00f2 FB68     		ldr	r3, [r7, #12]
 1625 00f4 1B68     		ldr	r3, [r3]
 1626 00f6 42F49072 		orr	r2, r2, #288
 1627 00fa 1A60     		str	r2, [r3]
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 1628              		.loc 1 929 0
 1629 00fc 0023     		movs	r3, #0
 1630 00fe 00E0     		b	.L78
 1631              	.L75:
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 1632              		.loc 1 933 0
 1633 0100 0223     		movs	r3, #2
 1634              	.L78:
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1635              		.loc 1 935 0
 1636 0102 1846     		mov	r0, r3
 1637 0104 1437     		adds	r7, r7, #20
 1638              	.LCFI61:
 1639              		.cfi_def_cfa_offset 4
 1640 0106 BD46     		mov	sp, r7
 1641              	.LCFI62:
 1642              		.cfi_def_cfa_register 13
 1643              		@ sp needed
 1644 0108 5DF8047B 		ldr	r7, [sp], #4
 1645              	.LCFI63:
 1646              		.cfi_restore 7
 1647              		.cfi_def_cfa_offset 0
 1648 010c 7047     		bx	lr
 1649              		.cfi_endproc
 1650              	.LFE149:
 1652              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 46


 1653              		.align	1
 1654              		.global	HAL_UART_Transmit_DMA
 1655              		.syntax unified
 1656              		.thumb
 1657              		.thumb_func
 1658              		.fpu fpv5-sp-d16
 1660              	HAL_UART_Transmit_DMA:
 1661              	.LFB150:
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData pointer to data buffer.
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size amount of data to be sent.
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 1662              		.loc 1 945 0
 1663              		.cfi_startproc
 1664              		@ args = 0, pretend = 0, frame = 24
 1665              		@ frame_needed = 1, uses_anonymous_args = 0
 1666 0000 80B5     		push	{r7, lr}
 1667              	.LCFI64:
 1668              		.cfi_def_cfa_offset 8
 1669              		.cfi_offset 7, -8
 1670              		.cfi_offset 14, -4
 1671 0002 86B0     		sub	sp, sp, #24
 1672              	.LCFI65:
 1673              		.cfi_def_cfa_offset 32
 1674 0004 00AF     		add	r7, sp, #0
 1675              	.LCFI66:
 1676              		.cfi_def_cfa_register 7
 1677 0006 F860     		str	r0, [r7, #12]
 1678 0008 B960     		str	r1, [r7, #8]
 1679 000a 1346     		mov	r3, r2
 1680 000c FB80     		strh	r3, [r7, #6]	@ movhi
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t *tmp;
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 1681              		.loc 1 949 0
 1682 000e FB68     		ldr	r3, [r7, #12]
 1683 0010 93F86930 		ldrb	r3, [r3, #105]
 1684 0014 DBB2     		uxtb	r3, r3
 1685 0016 202B     		cmp	r3, #32
 1686 0018 54D1     		bne	.L89
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 1687              		.loc 1 951 0
 1688 001a BB68     		ldr	r3, [r7, #8]
 1689 001c 002B     		cmp	r3, #0
 1690 001e 02D0     		beq	.L90
 1691              		.loc 1 951 0 is_stmt 0 discriminator 1
 1692 0020 FB88     		ldrh	r3, [r7, #6]
 1693 0022 002B     		cmp	r3, #0
 1694 0024 01D1     		bne	.L91
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 47


 1695              	.L90:
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_ERROR;
 1696              		.loc 1 953 0 is_stmt 1
 1697 0026 0123     		movs	r3, #1
 1698 0028 4DE0     		b	.L92
 1699              	.L91:
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
 1700              		.loc 1 957 0
 1701 002a FB68     		ldr	r3, [r7, #12]
 1702 002c 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 1703 0030 012B     		cmp	r3, #1
 1704 0032 01D1     		bne	.L93
 1705              		.loc 1 957 0 is_stmt 0 discriminator 1
 1706 0034 0223     		movs	r3, #2
 1707 0036 46E0     		b	.L92
 1708              	.L93:
 1709              		.loc 1 957 0 discriminator 2
 1710 0038 FB68     		ldr	r3, [r7, #12]
 1711 003a 0122     		movs	r2, #1
 1712 003c 83F86820 		strb	r2, [r3, #104]
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1713              		.loc 1 959 0 is_stmt 1 discriminator 2
 1714 0040 BA68     		ldr	r2, [r7, #8]
 1715 0042 FB68     		ldr	r3, [r7, #12]
 1716 0044 DA64     		str	r2, [r3, #76]
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferSize = Size;
 1717              		.loc 1 960 0 discriminator 2
 1718 0046 FB68     		ldr	r3, [r7, #12]
 1719 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1720 004a A3F85020 		strh	r2, [r3, #80]	@ movhi
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = Size;
 1721              		.loc 1 961 0 discriminator 2
 1722 004e FB68     		ldr	r3, [r7, #12]
 1723 0050 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1724 0052 A3F85220 		strh	r2, [r3, #82]	@ movhi
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1725              		.loc 1 963 0 discriminator 2
 1726 0056 FB68     		ldr	r3, [r7, #12]
 1727 0058 0022     		movs	r2, #0
 1728 005a DA66     		str	r2, [r3, #108]
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1729              		.loc 1 964 0 discriminator 2
 1730 005c FB68     		ldr	r3, [r7, #12]
 1731 005e 2122     		movs	r2, #33
 1732 0060 83F86920 		strb	r2, [r3, #105]
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 1733              		.loc 1 967 0 discriminator 2
 1734 0064 FB68     		ldr	r3, [r7, #12]
 1735 0066 1B6E     		ldr	r3, [r3, #96]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 48


 1736 0068 194A     		ldr	r2, .L94
 1737 006a DA63     		str	r2, [r3, #60]
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 1738              		.loc 1 970 0 discriminator 2
 1739 006c FB68     		ldr	r3, [r7, #12]
 1740 006e 1B6E     		ldr	r3, [r3, #96]
 1741 0070 184A     		ldr	r2, .L94+4
 1742 0072 1A64     		str	r2, [r3, #64]
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the DMA error callback */
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 1743              		.loc 1 973 0 discriminator 2
 1744 0074 FB68     		ldr	r3, [r7, #12]
 1745 0076 1B6E     		ldr	r3, [r3, #96]
 1746 0078 174A     		ldr	r2, .L94+8
 1747 007a DA64     		str	r2, [r3, #76]
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the DMA abort callback */
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 1748              		.loc 1 976 0 discriminator 2
 1749 007c FB68     		ldr	r3, [r7, #12]
 1750 007e 1B6E     		ldr	r3, [r3, #96]
 1751 0080 0022     		movs	r2, #0
 1752 0082 1A65     		str	r2, [r3, #80]
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 1753              		.loc 1 979 0 discriminator 2
 1754 0084 07F10803 		add	r3, r7, #8
 1755 0088 7B61     		str	r3, [r7, #20]
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(uint32_t*)tmp, (uint32_t)&huart->Instance->TDR, Size);
 1756              		.loc 1 980 0 discriminator 2
 1757 008a FB68     		ldr	r3, [r7, #12]
 1758 008c 186E     		ldr	r0, [r3, #96]
 1759 008e 7B69     		ldr	r3, [r7, #20]
 1760 0090 1968     		ldr	r1, [r3]
 1761 0092 FB68     		ldr	r3, [r7, #12]
 1762 0094 1B68     		ldr	r3, [r3]
 1763 0096 2833     		adds	r3, r3, #40
 1764 0098 1A46     		mov	r2, r3
 1765 009a FB88     		ldrh	r3, [r7, #6]
 1766 009c FFF7FEFF 		bl	HAL_DMA_Start_IT
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_FLAG_TC);
 1767              		.loc 1 983 0 discriminator 2
 1768 00a0 FB68     		ldr	r3, [r7, #12]
 1769 00a2 1B68     		ldr	r3, [r3]
 1770 00a4 4022     		movs	r2, #64
 1771 00a6 1A62     		str	r2, [r3, #32]
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1772              		.loc 1 986 0 discriminator 2
 1773 00a8 FB68     		ldr	r3, [r7, #12]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 49


 1774 00aa 0022     		movs	r2, #0
 1775 00ac 83F86820 		strb	r2, [r3, #104]
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        in the UART CR3 register */
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1776              		.loc 1 990 0 discriminator 2
 1777 00b0 FB68     		ldr	r3, [r7, #12]
 1778 00b2 1B68     		ldr	r3, [r3]
 1779 00b4 9A68     		ldr	r2, [r3, #8]
 1780 00b6 FB68     		ldr	r3, [r7, #12]
 1781 00b8 1B68     		ldr	r3, [r3]
 1782 00ba 42F08002 		orr	r2, r2, #128
 1783 00be 9A60     		str	r2, [r3, #8]
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 1784              		.loc 1 992 0 discriminator 2
 1785 00c0 0023     		movs	r3, #0
 1786 00c2 00E0     		b	.L92
 1787              	.L89:
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 1788              		.loc 1 996 0
 1789 00c4 0223     		movs	r3, #2
 1790              	.L92:
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1791              		.loc 1 998 0
 1792 00c6 1846     		mov	r0, r3
 1793 00c8 1837     		adds	r7, r7, #24
 1794              	.LCFI67:
 1795              		.cfi_def_cfa_offset 8
 1796 00ca BD46     		mov	sp, r7
 1797              	.LCFI68:
 1798              		.cfi_def_cfa_register 13
 1799              		@ sp needed
 1800 00cc 80BD     		pop	{r7, pc}
 1801              	.L95:
 1802 00ce 00BF     		.align	2
 1803              	.L94:
 1804 00d0 00000000 		.word	UART_DMATransmitCplt
 1805 00d4 00000000 		.word	UART_DMATxHalfCplt
 1806 00d8 00000000 		.word	UART_DMAError
 1807              		.cfi_endproc
 1808              	.LFE150:
 1810              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1811              		.align	1
 1812              		.global	HAL_UART_Receive_DMA
 1813              		.syntax unified
 1814              		.thumb
 1815              		.thumb_func
 1816              		.fpu fpv5-sp-d16
 1818              	HAL_UART_Receive_DMA:
 1819              	.LFB151:
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 50


1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData pointer to data buffer.
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size amount of data to be received.
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         the parity bit (MSB position).
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 1820              		.loc 1 1010 0
 1821              		.cfi_startproc
 1822              		@ args = 0, pretend = 0, frame = 24
 1823              		@ frame_needed = 1, uses_anonymous_args = 0
 1824 0000 80B5     		push	{r7, lr}
 1825              	.LCFI69:
 1826              		.cfi_def_cfa_offset 8
 1827              		.cfi_offset 7, -8
 1828              		.cfi_offset 14, -4
 1829 0002 86B0     		sub	sp, sp, #24
 1830              	.LCFI70:
 1831              		.cfi_def_cfa_offset 32
 1832 0004 00AF     		add	r7, sp, #0
 1833              	.LCFI71:
 1834              		.cfi_def_cfa_register 7
 1835 0006 F860     		str	r0, [r7, #12]
 1836 0008 B960     		str	r1, [r7, #8]
 1837 000a 1346     		mov	r3, r2
 1838 000c FB80     		strh	r3, [r7, #6]	@ movhi
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t *tmp;
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 1839              		.loc 1 1014 0
 1840 000e FB68     		ldr	r3, [r7, #12]
 1841 0010 93F86A30 		ldrb	r3, [r3, #106]
 1842 0014 DBB2     		uxtb	r3, r3
 1843 0016 202B     		cmp	r3, #32
 1844 0018 5CD1     		bne	.L97
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 1845              		.loc 1 1016 0
 1846 001a BB68     		ldr	r3, [r7, #8]
 1847 001c 002B     		cmp	r3, #0
 1848 001e 02D0     		beq	.L98
 1849              		.loc 1 1016 0 is_stmt 0 discriminator 1
 1850 0020 FB88     		ldrh	r3, [r7, #6]
 1851 0022 002B     		cmp	r3, #0
 1852 0024 01D1     		bne	.L99
 1853              	.L98:
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_ERROR;
 1854              		.loc 1 1018 0 is_stmt 1
 1855 0026 0123     		movs	r3, #1
 1856 0028 55E0     		b	.L100
 1857              	.L99:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 51


1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
 1858              		.loc 1 1022 0
 1859 002a FB68     		ldr	r3, [r7, #12]
 1860 002c 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 1861 0030 012B     		cmp	r3, #1
 1862 0032 01D1     		bne	.L101
 1863              		.loc 1 1022 0 is_stmt 0 discriminator 1
 1864 0034 0223     		movs	r3, #2
 1865 0036 4EE0     		b	.L100
 1866              	.L101:
 1867              		.loc 1 1022 0 discriminator 2
 1868 0038 FB68     		ldr	r3, [r7, #12]
 1869 003a 0122     		movs	r2, #1
 1870 003c 83F86820 		strb	r2, [r3, #104]
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 1871              		.loc 1 1024 0 is_stmt 1 discriminator 2
 1872 0040 BA68     		ldr	r2, [r7, #8]
 1873 0042 FB68     		ldr	r3, [r7, #12]
 1874 0044 5A65     		str	r2, [r3, #84]
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferSize = Size;
 1875              		.loc 1 1025 0 discriminator 2
 1876 0046 FB68     		ldr	r3, [r7, #12]
 1877 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1878 004a A3F85820 		strh	r2, [r3, #88]	@ movhi
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1879              		.loc 1 1027 0 discriminator 2
 1880 004e FB68     		ldr	r3, [r7, #12]
 1881 0050 0022     		movs	r2, #0
 1882 0052 DA66     		str	r2, [r3, #108]
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1883              		.loc 1 1028 0 discriminator 2
 1884 0054 FB68     		ldr	r3, [r7, #12]
 1885 0056 2222     		movs	r2, #34
 1886 0058 83F86A20 		strb	r2, [r3, #106]
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 1887              		.loc 1 1031 0 discriminator 2
 1888 005c FB68     		ldr	r3, [r7, #12]
 1889 005e 5B6E     		ldr	r3, [r3, #100]
 1890 0060 1F4A     		ldr	r2, .L102
 1891 0062 DA63     		str	r2, [r3, #60]
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 1892              		.loc 1 1034 0 discriminator 2
 1893 0064 FB68     		ldr	r3, [r7, #12]
 1894 0066 5B6E     		ldr	r3, [r3, #100]
 1895 0068 1E4A     		ldr	r2, .L102+4
 1896 006a 1A64     		str	r2, [r3, #64]
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the DMA error callback */
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 52


1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
 1897              		.loc 1 1037 0 discriminator 2
 1898 006c FB68     		ldr	r3, [r7, #12]
 1899 006e 5B6E     		ldr	r3, [r3, #100]
 1900 0070 1D4A     		ldr	r2, .L102+8
 1901 0072 DA64     		str	r2, [r3, #76]
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the DMA abort callback */
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
 1902              		.loc 1 1040 0 discriminator 2
 1903 0074 FB68     		ldr	r3, [r7, #12]
 1904 0076 5B6E     		ldr	r3, [r3, #100]
 1905 0078 0022     		movs	r2, #0
 1906 007a 1A65     		str	r2, [r3, #80]
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the DMA channel */
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 1907              		.loc 1 1043 0 discriminator 2
 1908 007c 07F10803 		add	r3, r7, #8
 1909 0080 7B61     		str	r3, [r7, #20]
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, *(uint32_t*)tmp, Size);
 1910              		.loc 1 1044 0 discriminator 2
 1911 0082 FB68     		ldr	r3, [r7, #12]
 1912 0084 586E     		ldr	r0, [r3, #100]
 1913 0086 FB68     		ldr	r3, [r7, #12]
 1914 0088 1B68     		ldr	r3, [r3]
 1915 008a 2433     		adds	r3, r3, #36
 1916 008c 1946     		mov	r1, r3
 1917 008e 7B69     		ldr	r3, [r7, #20]
 1918 0090 1A68     		ldr	r2, [r3]
 1919 0092 FB88     		ldrh	r3, [r7, #6]
 1920 0094 FFF7FEFF 		bl	HAL_DMA_Start_IT
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1921              		.loc 1 1047 0 discriminator 2
 1922 0098 FB68     		ldr	r3, [r7, #12]
 1923 009a 0022     		movs	r2, #0
 1924 009c 83F86820 		strb	r2, [r3, #104]
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1925              		.loc 1 1050 0 discriminator 2
 1926 00a0 FB68     		ldr	r3, [r7, #12]
 1927 00a2 1B68     		ldr	r3, [r3]
 1928 00a4 1A68     		ldr	r2, [r3]
 1929 00a6 FB68     		ldr	r3, [r7, #12]
 1930 00a8 1B68     		ldr	r3, [r3]
 1931 00aa 42F48072 		orr	r2, r2, #256
 1932 00ae 1A60     		str	r2, [r3]
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1933              		.loc 1 1053 0 discriminator 2
 1934 00b0 FB68     		ldr	r3, [r7, #12]
 1935 00b2 1B68     		ldr	r3, [r3]
 1936 00b4 9A68     		ldr	r2, [r3, #8]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 53


 1937 00b6 FB68     		ldr	r3, [r7, #12]
 1938 00b8 1B68     		ldr	r3, [r3]
 1939 00ba 42F00102 		orr	r2, r2, #1
 1940 00be 9A60     		str	r2, [r3, #8]
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     in the UART CR3 register */
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1941              		.loc 1 1057 0 discriminator 2
 1942 00c0 FB68     		ldr	r3, [r7, #12]
 1943 00c2 1B68     		ldr	r3, [r3]
 1944 00c4 9A68     		ldr	r2, [r3, #8]
 1945 00c6 FB68     		ldr	r3, [r7, #12]
 1946 00c8 1B68     		ldr	r3, [r3]
 1947 00ca 42F04002 		orr	r2, r2, #64
 1948 00ce 9A60     		str	r2, [r3, #8]
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 1949              		.loc 1 1059 0 discriminator 2
 1950 00d0 0023     		movs	r3, #0
 1951 00d2 00E0     		b	.L100
 1952              	.L97:
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 1953              		.loc 1 1063 0
 1954 00d4 0223     		movs	r3, #2
 1955              	.L100:
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1956              		.loc 1 1065 0
 1957 00d6 1846     		mov	r0, r3
 1958 00d8 1837     		adds	r7, r7, #24
 1959              	.LCFI72:
 1960              		.cfi_def_cfa_offset 8
 1961 00da BD46     		mov	sp, r7
 1962              	.LCFI73:
 1963              		.cfi_def_cfa_register 13
 1964              		@ sp needed
 1965 00dc 80BD     		pop	{r7, pc}
 1966              	.L103:
 1967 00de 00BF     		.align	2
 1968              	.L102:
 1969 00e0 00000000 		.word	UART_DMAReceiveCplt
 1970 00e4 00000000 		.word	UART_DMARxHalfCplt
 1971 00e8 00000000 		.word	UART_DMAError
 1972              		.cfi_endproc
 1973              	.LFE151:
 1975              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1976              		.align	1
 1977              		.global	HAL_UART_DMAPause
 1978              		.syntax unified
 1979              		.thumb
 1980              		.thumb_func
 1981              		.fpu fpv5-sp-d16
 1983              	HAL_UART_DMAPause:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 54


 1984              	.LFB152:
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 1985              		.loc 1 1073 0
 1986              		.cfi_startproc
 1987              		@ args = 0, pretend = 0, frame = 8
 1988              		@ frame_needed = 1, uses_anonymous_args = 0
 1989              		@ link register save eliminated.
 1990 0000 80B4     		push	{r7}
 1991              	.LCFI74:
 1992              		.cfi_def_cfa_offset 4
 1993              		.cfi_offset 7, -4
 1994 0002 83B0     		sub	sp, sp, #12
 1995              	.LCFI75:
 1996              		.cfi_def_cfa_offset 16
 1997 0004 00AF     		add	r7, sp, #0
 1998              	.LCFI76:
 1999              		.cfi_def_cfa_register 7
 2000 0006 7860     		str	r0, [r7, #4]
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 2001              		.loc 1 1075 0
 2002 0008 7B68     		ldr	r3, [r7, #4]
 2003 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 2004 000e 012B     		cmp	r3, #1
 2005 0010 01D1     		bne	.L105
 2006              		.loc 1 1075 0 is_stmt 0 discriminator 1
 2007 0012 0223     		movs	r3, #2
 2008 0014 42E0     		b	.L106
 2009              	.L105:
 2010              		.loc 1 1075 0 discriminator 2
 2011 0016 7B68     		ldr	r3, [r7, #4]
 2012 0018 0122     		movs	r2, #1
 2013 001a 83F86820 		strb	r2, [r3, #104]
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
 2014              		.loc 1 1077 0 is_stmt 1 discriminator 2
 2015 001e 7B68     		ldr	r3, [r7, #4]
 2016 0020 93F86930 		ldrb	r3, [r3, #105]
 2017 0024 DBB2     		uxtb	r3, r3
 2018 0026 212B     		cmp	r3, #33
 2019 0028 0ED1     		bne	.L107
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 2020              		.loc 1 1078 0 discriminator 1
 2021 002a 7B68     		ldr	r3, [r7, #4]
 2022 002c 1B68     		ldr	r3, [r3]
 2023 002e 9B68     		ldr	r3, [r3, #8]
 2024 0030 03F08003 		and	r3, r3, #128
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 2025              		.loc 1 1077 0 discriminator 1
 2026 0034 002B     		cmp	r3, #0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 55


 2027 0036 07D0     		beq	.L107
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2028              		.loc 1 1081 0
 2029 0038 7B68     		ldr	r3, [r7, #4]
 2030 003a 1B68     		ldr	r3, [r3]
 2031 003c 9A68     		ldr	r2, [r3, #8]
 2032 003e 7B68     		ldr	r3, [r7, #4]
 2033 0040 1B68     		ldr	r3, [r3]
 2034 0042 22F08002 		bic	r2, r2, #128
 2035 0046 9A60     		str	r2, [r3, #8]
 2036              	.L107:
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
 2037              		.loc 1 1083 0
 2038 0048 7B68     		ldr	r3, [r7, #4]
 2039 004a 93F86A30 		ldrb	r3, [r3, #106]
 2040 004e DBB2     		uxtb	r3, r3
 2041 0050 222B     		cmp	r3, #34
 2042 0052 1ED1     		bne	.L108
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2043              		.loc 1 1084 0 discriminator 1
 2044 0054 7B68     		ldr	r3, [r7, #4]
 2045 0056 1B68     		ldr	r3, [r3]
 2046 0058 9B68     		ldr	r3, [r3, #8]
 2047 005a 03F04003 		and	r3, r3, #64
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2048              		.loc 1 1083 0 discriminator 1
 2049 005e 002B     		cmp	r3, #0
 2050 0060 17D0     		beq	.L108
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2051              		.loc 1 1087 0
 2052 0062 7B68     		ldr	r3, [r7, #4]
 2053 0064 1B68     		ldr	r3, [r3]
 2054 0066 1A68     		ldr	r2, [r3]
 2055 0068 7B68     		ldr	r3, [r7, #4]
 2056 006a 1B68     		ldr	r3, [r3]
 2057 006c 22F48072 		bic	r2, r2, #256
 2058 0070 1A60     		str	r2, [r3]
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2059              		.loc 1 1088 0
 2060 0072 7B68     		ldr	r3, [r7, #4]
 2061 0074 1B68     		ldr	r3, [r3]
 2062 0076 9A68     		ldr	r2, [r3, #8]
 2063 0078 7B68     		ldr	r3, [r7, #4]
 2064 007a 1B68     		ldr	r3, [r3]
 2065 007c 22F00102 		bic	r2, r2, #1
 2066 0080 9A60     		str	r2, [r3, #8]
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2067              		.loc 1 1091 0
 2068 0082 7B68     		ldr	r3, [r7, #4]
 2069 0084 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 56


 2070 0086 9A68     		ldr	r2, [r3, #8]
 2071 0088 7B68     		ldr	r3, [r7, #4]
 2072 008a 1B68     		ldr	r3, [r3]
 2073 008c 22F04002 		bic	r2, r2, #64
 2074 0090 9A60     		str	r2, [r3, #8]
 2075              	.L108:
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Unlocked */
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2076              		.loc 1 1095 0
 2077 0092 7B68     		ldr	r3, [r7, #4]
 2078 0094 0022     		movs	r2, #0
 2079 0096 83F86820 		strb	r2, [r3, #104]
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 2080              		.loc 1 1097 0
 2081 009a 0023     		movs	r3, #0
 2082              	.L106:
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2083              		.loc 1 1098 0
 2084 009c 1846     		mov	r0, r3
 2085 009e 0C37     		adds	r7, r7, #12
 2086              	.LCFI77:
 2087              		.cfi_def_cfa_offset 4
 2088 00a0 BD46     		mov	sp, r7
 2089              	.LCFI78:
 2090              		.cfi_def_cfa_register 13
 2091              		@ sp needed
 2092 00a2 5DF8047B 		ldr	r7, [sp], #4
 2093              	.LCFI79:
 2094              		.cfi_restore 7
 2095              		.cfi_def_cfa_offset 0
 2096 00a6 7047     		bx	lr
 2097              		.cfi_endproc
 2098              	.LFE152:
 2100              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 2101              		.align	1
 2102              		.global	HAL_UART_DMAResume
 2103              		.syntax unified
 2104              		.thumb
 2105              		.thumb_func
 2106              		.fpu fpv5-sp-d16
 2108              	HAL_UART_DMAResume:
 2109              	.LFB153:
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 2110              		.loc 1 1106 0
 2111              		.cfi_startproc
 2112              		@ args = 0, pretend = 0, frame = 8
 2113              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 57


 2114              		@ link register save eliminated.
 2115 0000 80B4     		push	{r7}
 2116              	.LCFI80:
 2117              		.cfi_def_cfa_offset 4
 2118              		.cfi_offset 7, -4
 2119 0002 83B0     		sub	sp, sp, #12
 2120              	.LCFI81:
 2121              		.cfi_def_cfa_offset 16
 2122 0004 00AF     		add	r7, sp, #0
 2123              	.LCFI82:
 2124              		.cfi_def_cfa_register 7
 2125 0006 7860     		str	r0, [r7, #4]
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 2126              		.loc 1 1108 0
 2127 0008 7B68     		ldr	r3, [r7, #4]
 2128 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 2129 000e 012B     		cmp	r3, #1
 2130 0010 01D1     		bne	.L110
 2131              		.loc 1 1108 0 is_stmt 0 discriminator 1
 2132 0012 0223     		movs	r3, #2
 2133 0014 43E0     		b	.L111
 2134              	.L110:
 2135              		.loc 1 1108 0 discriminator 2
 2136 0016 7B68     		ldr	r3, [r7, #4]
 2137 0018 0122     		movs	r2, #1
 2138 001a 83F86820 		strb	r2, [r3, #104]
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
 2139              		.loc 1 1110 0 is_stmt 1 discriminator 2
 2140 001e 7B68     		ldr	r3, [r7, #4]
 2141 0020 93F86930 		ldrb	r3, [r3, #105]
 2142 0024 DBB2     		uxtb	r3, r3
 2143 0026 212B     		cmp	r3, #33
 2144 0028 07D1     		bne	.L112
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2145              		.loc 1 1113 0
 2146 002a 7B68     		ldr	r3, [r7, #4]
 2147 002c 1B68     		ldr	r3, [r3]
 2148 002e 9A68     		ldr	r2, [r3, #8]
 2149 0030 7B68     		ldr	r3, [r7, #4]
 2150 0032 1B68     		ldr	r3, [r3]
 2151 0034 42F08002 		orr	r2, r2, #128
 2152 0038 9A60     		str	r2, [r3, #8]
 2153              	.L112:
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
 2154              		.loc 1 1115 0
 2155 003a 7B68     		ldr	r3, [r7, #4]
 2156 003c 93F86A30 		ldrb	r3, [r3, #106]
 2157 0040 DBB2     		uxtb	r3, r3
 2158 0042 222B     		cmp	r3, #34
 2159 0044 1BD1     		bne	.L113
1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 58


1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_CLEAR_OREF);
 2160              		.loc 1 1118 0
 2161 0046 7B68     		ldr	r3, [r7, #4]
 2162 0048 1B68     		ldr	r3, [r3]
 2163 004a 0822     		movs	r2, #8
 2164 004c 1A62     		str	r2, [r3, #32]
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2165              		.loc 1 1121 0
 2166 004e 7B68     		ldr	r3, [r7, #4]
 2167 0050 1B68     		ldr	r3, [r3]
 2168 0052 1A68     		ldr	r2, [r3]
 2169 0054 7B68     		ldr	r3, [r7, #4]
 2170 0056 1B68     		ldr	r3, [r3]
 2171 0058 42F48072 		orr	r2, r2, #256
 2172 005c 1A60     		str	r2, [r3]
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2173              		.loc 1 1122 0
 2174 005e 7B68     		ldr	r3, [r7, #4]
 2175 0060 1B68     		ldr	r3, [r3]
 2176 0062 9A68     		ldr	r2, [r3, #8]
 2177 0064 7B68     		ldr	r3, [r7, #4]
 2178 0066 1B68     		ldr	r3, [r3]
 2179 0068 42F00102 		orr	r2, r2, #1
 2180 006c 9A60     		str	r2, [r3, #8]
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2181              		.loc 1 1125 0
 2182 006e 7B68     		ldr	r3, [r7, #4]
 2183 0070 1B68     		ldr	r3, [r3]
 2184 0072 9A68     		ldr	r2, [r3, #8]
 2185 0074 7B68     		ldr	r3, [r7, #4]
 2186 0076 1B68     		ldr	r3, [r3]
 2187 0078 42F04002 		orr	r2, r2, #64
 2188 007c 9A60     		str	r2, [r3, #8]
 2189              	.L113:
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* If the UART peripheral is still not enabled, enable it */
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_UE) == 0U)
 2190              		.loc 1 1129 0
 2191 007e 7B68     		ldr	r3, [r7, #4]
 2192 0080 1B68     		ldr	r3, [r3]
 2193 0082 1B68     		ldr	r3, [r3]
 2194 0084 03F00103 		and	r3, r3, #1
 2195 0088 002B     		cmp	r3, #0
 2196 008a 07D1     		bne	.L114
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable UART peripheral */
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UART_ENABLE(huart);
 2197              		.loc 1 1132 0
 2198 008c 7B68     		ldr	r3, [r7, #4]
 2199 008e 1B68     		ldr	r3, [r3]
 2200 0090 1A68     		ldr	r2, [r3]
 2201 0092 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 59


 2202 0094 1B68     		ldr	r3, [r3]
 2203 0096 42F00102 		orr	r2, r2, #1
 2204 009a 1A60     		str	r2, [r3]
 2205              	.L114:
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 2206              		.loc 1 1135 0
 2207 009c 0023     		movs	r3, #0
 2208              	.L111:
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2209              		.loc 1 1136 0
 2210 009e 1846     		mov	r0, r3
 2211 00a0 0C37     		adds	r7, r7, #12
 2212              	.LCFI83:
 2213              		.cfi_def_cfa_offset 4
 2214 00a2 BD46     		mov	sp, r7
 2215              	.LCFI84:
 2216              		.cfi_def_cfa_register 13
 2217              		@ sp needed
 2218 00a4 5DF8047B 		ldr	r7, [sp], #4
 2219              	.LCFI85:
 2220              		.cfi_restore 7
 2221              		.cfi_def_cfa_offset 0
 2222 00a8 7047     		bx	lr
 2223              		.cfi_endproc
 2224              	.LFE153:
 2226              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2227              		.align	1
 2228              		.global	HAL_UART_DMAStop
 2229              		.syntax unified
 2230              		.thumb
 2231              		.thumb_func
 2232              		.fpu fpv5-sp-d16
 2234              	HAL_UART_DMAStop:
 2235              	.LFB154:
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 2236              		.loc 1 1144 0
 2237              		.cfi_startproc
 2238              		@ args = 0, pretend = 0, frame = 8
 2239              		@ frame_needed = 1, uses_anonymous_args = 0
 2240 0000 80B5     		push	{r7, lr}
 2241              	.LCFI86:
 2242              		.cfi_def_cfa_offset 8
 2243              		.cfi_offset 7, -8
 2244              		.cfi_offset 14, -4
 2245 0002 82B0     		sub	sp, sp, #8
 2246              	.LCFI87:
 2247              		.cfi_def_cfa_offset 16
 2248 0004 00AF     		add	r7, sp, #0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 60


 2249              	.LCFI88:
 2250              		.cfi_def_cfa_register 7
 2251 0006 7860     		str	r0, [r7, #4]
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
 2252              		.loc 1 1153 0
 2253 0008 7B68     		ldr	r3, [r7, #4]
 2254 000a 93F86930 		ldrb	r3, [r3, #105]
 2255 000e DBB2     		uxtb	r3, r3
 2256 0010 212B     		cmp	r3, #33
 2257 0012 1AD1     		bne	.L116
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 2258              		.loc 1 1154 0 discriminator 1
 2259 0014 7B68     		ldr	r3, [r7, #4]
 2260 0016 1B68     		ldr	r3, [r3]
 2261 0018 9B68     		ldr	r3, [r3, #8]
 2262 001a 03F08003 		and	r3, r3, #128
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 2263              		.loc 1 1153 0 discriminator 1
 2264 001e 002B     		cmp	r3, #0
 2265 0020 13D0     		beq	.L116
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2266              		.loc 1 1156 0
 2267 0022 7B68     		ldr	r3, [r7, #4]
 2268 0024 1B68     		ldr	r3, [r3]
 2269 0026 9A68     		ldr	r2, [r3, #8]
 2270 0028 7B68     		ldr	r3, [r7, #4]
 2271 002a 1B68     		ldr	r3, [r3]
 2272 002c 22F08002 		bic	r2, r2, #128
 2273 0030 9A60     		str	r2, [r3, #8]
1157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(huart->hdmatx != NULL)
 2274              		.loc 1 1159 0
 2275 0032 7B68     		ldr	r3, [r7, #4]
 2276 0034 1B6E     		ldr	r3, [r3, #96]
 2277 0036 002B     		cmp	r3, #0
 2278 0038 04D0     		beq	.L117
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
 2279              		.loc 1 1161 0
 2280 003a 7B68     		ldr	r3, [r7, #4]
 2281 003c 1B6E     		ldr	r3, [r3, #96]
 2282 003e 1846     		mov	r0, r3
 2283 0040 FFF7FEFF 		bl	HAL_DMA_Abort
 2284              	.L117:
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_EndTxTransfer(huart);
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 61


 2285              		.loc 1 1164 0
 2286 0044 7868     		ldr	r0, [r7, #4]
 2287 0046 FFF7FEFF 		bl	UART_EndTxTransfer
 2288              	.L116:
1165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
 2289              		.loc 1 1168 0
 2290 004a 7B68     		ldr	r3, [r7, #4]
 2291 004c 93F86A30 		ldrb	r3, [r3, #106]
 2292 0050 DBB2     		uxtb	r3, r3
 2293 0052 222B     		cmp	r3, #34
 2294 0054 1AD1     		bne	.L118
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2295              		.loc 1 1169 0 discriminator 1
 2296 0056 7B68     		ldr	r3, [r7, #4]
 2297 0058 1B68     		ldr	r3, [r3]
 2298 005a 9B68     		ldr	r3, [r3, #8]
 2299 005c 03F04003 		and	r3, r3, #64
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2300              		.loc 1 1168 0 discriminator 1
 2301 0060 002B     		cmp	r3, #0
 2302 0062 13D0     		beq	.L118
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2303              		.loc 1 1171 0
 2304 0064 7B68     		ldr	r3, [r7, #4]
 2305 0066 1B68     		ldr	r3, [r3]
 2306 0068 9A68     		ldr	r2, [r3, #8]
 2307 006a 7B68     		ldr	r3, [r7, #4]
 2308 006c 1B68     		ldr	r3, [r3]
 2309 006e 22F04002 		bic	r2, r2, #64
 2310 0072 9A60     		str	r2, [r3, #8]
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(huart->hdmarx != NULL)
 2311              		.loc 1 1174 0
 2312 0074 7B68     		ldr	r3, [r7, #4]
 2313 0076 5B6E     		ldr	r3, [r3, #100]
 2314 0078 002B     		cmp	r3, #0
 2315 007a 04D0     		beq	.L119
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
 2316              		.loc 1 1176 0
 2317 007c 7B68     		ldr	r3, [r7, #4]
 2318 007e 5B6E     		ldr	r3, [r3, #100]
 2319 0080 1846     		mov	r0, r3
 2320 0082 FFF7FEFF 		bl	HAL_DMA_Abort
 2321              	.L119:
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2322              		.loc 1 1179 0
 2323 0086 7868     		ldr	r0, [r7, #4]
 2324 0088 FFF7FEFF 		bl	UART_EndRxTransfer
 2325              	.L118:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 62


1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 2326              		.loc 1 1182 0
 2327 008c 0023     		movs	r3, #0
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2328              		.loc 1 1183 0
 2329 008e 1846     		mov	r0, r3
 2330 0090 0837     		adds	r7, r7, #8
 2331              	.LCFI89:
 2332              		.cfi_def_cfa_offset 8
 2333 0092 BD46     		mov	sp, r7
 2334              	.LCFI90:
 2335              		.cfi_def_cfa_register 13
 2336              		@ sp needed
 2337 0094 80BD     		pop	{r7, pc}
 2338              		.cfi_endproc
 2339              	.LFE154:
 2341              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 2342              		.align	1
 2343              		.global	HAL_UART_IRQHandler
 2344              		.syntax unified
 2345              		.thumb
 2346              		.thumb_func
 2347              		.fpu fpv5-sp-d16
 2349              	HAL_UART_IRQHandler:
 2350              	.LFB155:
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief This function handles UART interrupt request.
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 2351              		.loc 1 1191 0
 2352              		.cfi_startproc
 2353              		@ args = 0, pretend = 0, frame = 24
 2354              		@ frame_needed = 1, uses_anonymous_args = 0
 2355 0000 80B5     		push	{r7, lr}
 2356              	.LCFI91:
 2357              		.cfi_def_cfa_offset 8
 2358              		.cfi_offset 7, -8
 2359              		.cfi_offset 14, -4
 2360 0002 86B0     		sub	sp, sp, #24
 2361              	.LCFI92:
 2362              		.cfi_def_cfa_offset 32
 2363 0004 00AF     		add	r7, sp, #0
 2364              	.LCFI93:
 2365              		.cfi_def_cfa_register 7
 2366 0006 7860     		str	r0, [r7, #4]
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 2367              		.loc 1 1192 0
 2368 0008 7B68     		ldr	r3, [r7, #4]
 2369 000a 1B68     		ldr	r3, [r3]
 2370 000c DB69     		ldr	r3, [r3, #28]
 2371 000e 7B61     		str	r3, [r7, #20]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 63


1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 2372              		.loc 1 1193 0
 2373 0010 7B68     		ldr	r3, [r7, #4]
 2374 0012 1B68     		ldr	r3, [r3]
 2375 0014 1B68     		ldr	r3, [r3]
 2376 0016 3B61     		str	r3, [r7, #16]
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 2377              		.loc 1 1194 0
 2378 0018 7B68     		ldr	r3, [r7, #4]
 2379 001a 1B68     		ldr	r3, [r3]
 2380 001c 9B68     		ldr	r3, [r3, #8]
 2381 001e FB60     		str	r3, [r7, #12]
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t errorflags;
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* If no error occurs */
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE));
 2382              		.loc 1 1198 0
 2383 0020 7B69     		ldr	r3, [r7, #20]
 2384 0022 03F00F03 		and	r3, r3, #15
 2385 0026 BB60     		str	r3, [r7, #8]
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (errorflags == RESET)
 2386              		.loc 1 1199 0
 2387 0028 BB68     		ldr	r3, [r7, #8]
 2388 002a 002B     		cmp	r3, #0
 2389 002c 0DD1     		bne	.L122
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 2390              		.loc 1 1202 0
 2391 002e 7B69     		ldr	r3, [r7, #20]
 2392 0030 03F02003 		and	r3, r3, #32
 2393 0034 002B     		cmp	r3, #0
 2394 0036 08D0     		beq	.L122
 2395              		.loc 1 1202 0 is_stmt 0 discriminator 1
 2396 0038 3B69     		ldr	r3, [r7, #16]
 2397 003a 03F02003 		and	r3, r3, #32
 2398 003e 002B     		cmp	r3, #0
 2399 0040 03D0     		beq	.L122
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       UART_Receive_IT(huart);
 2400              		.loc 1 1204 0 is_stmt 1
 2401 0042 7868     		ldr	r0, [r7, #4]
 2402 0044 FFF7FEFF 		bl	UART_Receive_IT
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return;
 2403              		.loc 1 1205 0
 2404 0048 DAE0     		b	.L121
 2405              	.L122:
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* If some errors occur */
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(   (errorflags != RESET)
 2406              		.loc 1 1210 0
 2407 004a BB68     		ldr	r3, [r7, #8]
 2408 004c 002B     		cmp	r3, #0
 2409 004e 00F0B980 		beq	.L124
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 64


 2410              		.loc 1 1211 0
 2411 0052 FB68     		ldr	r3, [r7, #12]
 2412 0054 03F00103 		and	r3, r3, #1
 2413 0058 002B     		cmp	r3, #0
 2414 005a 05D1     		bne	.L125
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
 2415              		.loc 1 1212 0
 2416 005c 3B69     		ldr	r3, [r7, #16]
 2417 005e 03F49073 		and	r3, r3, #288
 2418 0062 002B     		cmp	r3, #0
 2419 0064 00F0AE80 		beq	.L124
 2420              	.L125:
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(((isrflags & USART_ISR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 2421              		.loc 1 1216 0
 2422 0068 7B69     		ldr	r3, [r7, #20]
 2423 006a 03F00103 		and	r3, r3, #1
 2424 006e 002B     		cmp	r3, #0
 2425 0070 0ED0     		beq	.L126
 2426              		.loc 1 1216 0 is_stmt 0 discriminator 1
 2427 0072 3B69     		ldr	r3, [r7, #16]
 2428 0074 03F48073 		and	r3, r3, #256
 2429 0078 002B     		cmp	r3, #0
 2430 007a 09D0     		beq	.L126
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_PEF);
 2431              		.loc 1 1218 0 is_stmt 1
 2432 007c 7B68     		ldr	r3, [r7, #4]
 2433 007e 1B68     		ldr	r3, [r3]
 2434 0080 0122     		movs	r2, #1
 2435 0082 1A62     		str	r2, [r3, #32]
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
 2436              		.loc 1 1220 0
 2437 0084 7B68     		ldr	r3, [r7, #4]
 2438 0086 DB6E     		ldr	r3, [r3, #108]
 2439 0088 43F00102 		orr	r2, r3, #1
 2440 008c 7B68     		ldr	r3, [r7, #4]
 2441 008e DA66     		str	r2, [r3, #108]
 2442              	.L126:
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(((isrflags & USART_ISR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 2443              		.loc 1 1224 0
 2444 0090 7B69     		ldr	r3, [r7, #20]
 2445 0092 03F00203 		and	r3, r3, #2
 2446 0096 002B     		cmp	r3, #0
 2447 0098 0ED0     		beq	.L127
 2448              		.loc 1 1224 0 is_stmt 0 discriminator 1
 2449 009a FB68     		ldr	r3, [r7, #12]
 2450 009c 03F00103 		and	r3, r3, #1
 2451 00a0 002B     		cmp	r3, #0
 2452 00a2 09D0     		beq	.L127
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 65


1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_FEF);
 2453              		.loc 1 1226 0 is_stmt 1
 2454 00a4 7B68     		ldr	r3, [r7, #4]
 2455 00a6 1B68     		ldr	r3, [r3]
 2456 00a8 0222     		movs	r2, #2
 2457 00aa 1A62     		str	r2, [r3, #32]
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
 2458              		.loc 1 1228 0
 2459 00ac 7B68     		ldr	r3, [r7, #4]
 2460 00ae DB6E     		ldr	r3, [r3, #108]
 2461 00b0 43F00402 		orr	r2, r3, #4
 2462 00b4 7B68     		ldr	r3, [r7, #4]
 2463 00b6 DA66     		str	r2, [r3, #108]
 2464              	.L127:
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(((isrflags & USART_ISR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 2465              		.loc 1 1232 0
 2466 00b8 7B69     		ldr	r3, [r7, #20]
 2467 00ba 03F00403 		and	r3, r3, #4
 2468 00be 002B     		cmp	r3, #0
 2469 00c0 0ED0     		beq	.L128
 2470              		.loc 1 1232 0 is_stmt 0 discriminator 1
 2471 00c2 FB68     		ldr	r3, [r7, #12]
 2472 00c4 03F00103 		and	r3, r3, #1
 2473 00c8 002B     		cmp	r3, #0
 2474 00ca 09D0     		beq	.L128
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_NEF);
 2475              		.loc 1 1234 0 is_stmt 1
 2476 00cc 7B68     		ldr	r3, [r7, #4]
 2477 00ce 1B68     		ldr	r3, [r3]
 2478 00d0 0422     		movs	r2, #4
 2479 00d2 1A62     		str	r2, [r3, #32]
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
 2480              		.loc 1 1236 0
 2481 00d4 7B68     		ldr	r3, [r7, #4]
 2482 00d6 DB6E     		ldr	r3, [r3, #108]
 2483 00d8 43F00202 		orr	r2, r3, #2
 2484 00dc 7B68     		ldr	r3, [r7, #4]
 2485 00de DA66     		str	r2, [r3, #108]
 2486              	.L128:
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     
1239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(((isrflags & USART_ISR_ORE) != RESET) &&
 2487              		.loc 1 1240 0
 2488 00e0 7B69     		ldr	r3, [r7, #20]
 2489 00e2 03F00803 		and	r3, r3, #8
 2490 00e6 002B     		cmp	r3, #0
 2491 00e8 13D0     		beq	.L129
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 2492              		.loc 1 1241 0 discriminator 1
 2493 00ea 3B69     		ldr	r3, [r7, #16]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 66


 2494 00ec 03F02003 		and	r3, r3, #32
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 2495              		.loc 1 1240 0 discriminator 1
 2496 00f0 002B     		cmp	r3, #0
 2497 00f2 04D1     		bne	.L130
 2498              		.loc 1 1241 0
 2499 00f4 FB68     		ldr	r3, [r7, #12]
 2500 00f6 03F00103 		and	r3, r3, #1
 2501 00fa 002B     		cmp	r3, #0
 2502 00fc 09D0     		beq	.L129
 2503              	.L130:
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_OREF);
 2504              		.loc 1 1243 0
 2505 00fe 7B68     		ldr	r3, [r7, #4]
 2506 0100 1B68     		ldr	r3, [r3]
 2507 0102 0822     		movs	r2, #8
 2508 0104 1A62     		str	r2, [r3, #32]
1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
 2509              		.loc 1 1245 0
 2510 0106 7B68     		ldr	r3, [r7, #4]
 2511 0108 DB6E     		ldr	r3, [r3, #108]
 2512 010a 43F00802 		orr	r2, r3, #8
 2513 010e 7B68     		ldr	r3, [r7, #4]
 2514 0110 DA66     		str	r2, [r3, #108]
 2515              	.L129:
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(huart->ErrorCode != HAL_UART_ERROR_NONE)
 2516              		.loc 1 1249 0
 2517 0112 7B68     		ldr	r3, [r7, #4]
 2518 0114 DB6E     		ldr	r3, [r3, #108]
 2519 0116 002B     		cmp	r3, #0
 2520 0118 71D0     		beq	.L141
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* UART in mode Receiver ---------------------------------------------------*/
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 2521              		.loc 1 1252 0
 2522 011a 7B69     		ldr	r3, [r7, #20]
 2523 011c 03F02003 		and	r3, r3, #32
 2524 0120 002B     		cmp	r3, #0
 2525 0122 07D0     		beq	.L132
 2526              		.loc 1 1252 0 is_stmt 0 discriminator 1
 2527 0124 3B69     		ldr	r3, [r7, #16]
 2528 0126 03F02003 		and	r3, r3, #32
 2529 012a 002B     		cmp	r3, #0
 2530 012c 02D0     		beq	.L132
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         UART_Receive_IT(huart);
 2531              		.loc 1 1254 0 is_stmt 1
 2532 012e 7868     		ldr	r0, [r7, #4]
 2533 0130 FFF7FEFF 		bl	UART_Receive_IT
 2534              	.L132:
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 67


1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****          consider error as blocking */
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) ||
 2535              		.loc 1 1259 0
 2536 0134 7B68     		ldr	r3, [r7, #4]
 2537 0136 DB6E     		ldr	r3, [r3, #108]
 2538 0138 03F00803 		and	r3, r3, #8
 2539 013c 002B     		cmp	r3, #0
 2540 013e 06D1     		bne	.L133
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2541              		.loc 1 1260 0 discriminator 1
 2542 0140 7B68     		ldr	r3, [r7, #4]
 2543 0142 1B68     		ldr	r3, [r3]
 2544 0144 9B68     		ldr	r3, [r3, #8]
 2545 0146 03F04003 		and	r3, r3, #64
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2546              		.loc 1 1259 0 discriminator 1
 2547 014a 002B     		cmp	r3, #0
 2548 014c 31D0     		beq	.L134
 2549              	.L133:
1261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Blocking error : transfer is aborted
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         UART_EndRxTransfer(huart);
 2550              		.loc 1 1265 0
 2551 014e 7868     		ldr	r0, [r7, #4]
 2552 0150 FFF7FEFF 		bl	UART_EndRxTransfer
1266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2553              		.loc 1 1268 0
 2554 0154 7B68     		ldr	r3, [r7, #4]
 2555 0156 1B68     		ldr	r3, [r3]
 2556 0158 9B68     		ldr	r3, [r3, #8]
 2557 015a 03F04003 		and	r3, r3, #64
 2558 015e 002B     		cmp	r3, #0
 2559 0160 23D0     		beq	.L135
1269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2560              		.loc 1 1270 0
 2561 0162 7B68     		ldr	r3, [r7, #4]
 2562 0164 1B68     		ldr	r3, [r3]
 2563 0166 9A68     		ldr	r2, [r3, #8]
 2564 0168 7B68     		ldr	r3, [r7, #4]
 2565 016a 1B68     		ldr	r3, [r3]
 2566 016c 22F04002 		bic	r2, r2, #64
 2567 0170 9A60     		str	r2, [r3, #8]
1271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           if(huart->hdmarx != NULL)
 2568              		.loc 1 1273 0
 2569 0172 7B68     		ldr	r3, [r7, #4]
 2570 0174 5B6E     		ldr	r3, [r3, #100]
 2571 0176 002B     		cmp	r3, #0
 2572 0178 13D0     		beq	.L136
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           {
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 68


1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 2573              		.loc 1 1277 0
 2574 017a 7B68     		ldr	r3, [r7, #4]
 2575 017c 5B6E     		ldr	r3, [r3, #100]
 2576 017e 224A     		ldr	r2, .L143
 2577 0180 1A65     		str	r2, [r3, #80]
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             /* Abort DMA RX */
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 2578              		.loc 1 1280 0
 2579 0182 7B68     		ldr	r3, [r7, #4]
 2580 0184 5B6E     		ldr	r3, [r3, #100]
 2581 0186 1846     		mov	r0, r3
 2582 0188 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2583 018c 0346     		mov	r3, r0
 2584 018e 002B     		cmp	r3, #0
 2585 0190 16D0     		beq	.L142
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             {
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
 2586              		.loc 1 1283 0
 2587 0192 7B68     		ldr	r3, [r7, #4]
 2588 0194 5B6E     		ldr	r3, [r3, #100]
 2589 0196 1B6D     		ldr	r3, [r3, #80]
 2590 0198 7A68     		ldr	r2, [r7, #4]
 2591 019a 526E     		ldr	r2, [r2, #100]
 2592 019c 1046     		mov	r0, r2
 2593 019e 9847     		blx	r3
 2594              	.LVL0:
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
 2595              		.loc 1 1268 0
 2596 01a0 0EE0     		b	.L142
 2597              	.L136:
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             }
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           }
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           else
1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           {
1288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             /* Call user error callback */
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
 2598              		.loc 1 1289 0
 2599 01a2 7868     		ldr	r0, [r7, #4]
 2600 01a4 FFF7FEFF 		bl	HAL_UART_ErrorCallback
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
 2601              		.loc 1 1268 0
 2602 01a8 0AE0     		b	.L142
 2603              	.L135:
1290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           }
1291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         }
1292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         else
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           /* Call user error callback */
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 2604              		.loc 1 1295 0
 2605 01aa 7868     		ldr	r0, [r7, #4]
 2606 01ac FFF7FEFF 		bl	HAL_UART_ErrorCallback
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 69


1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
 2607              		.loc 1 1268 0
 2608 01b0 06E0     		b	.L142
 2609              	.L134:
1296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         }
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       else
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            Error is notified to user through user error callback */
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
 2610              		.loc 1 1302 0
 2611 01b2 7868     		ldr	r0, [r7, #4]
 2612 01b4 FFF7FEFF 		bl	HAL_UART_ErrorCallback
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 2613              		.loc 1 1303 0
 2614 01b8 7B68     		ldr	r3, [r7, #4]
 2615 01ba 0022     		movs	r2, #0
 2616 01bc DA66     		str	r2, [r3, #108]
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return;
 2617              		.loc 1 1306 0
 2618 01be 1EE0     		b	.L141
 2619              	.L142:
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
 2620              		.loc 1 1268 0
 2621 01c0 00BF     		nop
 2622              		.loc 1 1306 0
 2623 01c2 1CE0     		b	.L141
 2624              	.L124:
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   } /* End if some error occurs */
1309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(((isrflags & USART_ISR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 2625              		.loc 1 1311 0
 2626 01c4 7B69     		ldr	r3, [r7, #20]
 2627 01c6 03F08003 		and	r3, r3, #128
 2628 01ca 002B     		cmp	r3, #0
 2629 01cc 08D0     		beq	.L140
 2630              		.loc 1 1311 0 is_stmt 0 discriminator 1
 2631 01ce 3B69     		ldr	r3, [r7, #16]
 2632 01d0 03F08003 		and	r3, r3, #128
 2633 01d4 002B     		cmp	r3, #0
 2634 01d6 03D0     		beq	.L140
1312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_Transmit_IT(huart);
 2635              		.loc 1 1313 0 is_stmt 1
 2636 01d8 7868     		ldr	r0, [r7, #4]
 2637 01da FFF7FEFF 		bl	UART_Transmit_IT
1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return;
 2638              		.loc 1 1314 0
 2639 01de 0FE0     		b	.L121
 2640              	.L140:
1315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 70


1317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
1318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(((isrflags & USART_ISR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 2641              		.loc 1 1318 0
 2642 01e0 7B69     		ldr	r3, [r7, #20]
 2643 01e2 03F04003 		and	r3, r3, #64
 2644 01e6 002B     		cmp	r3, #0
 2645 01e8 0AD0     		beq	.L121
 2646              		.loc 1 1318 0 is_stmt 0 discriminator 1
 2647 01ea 3B69     		ldr	r3, [r7, #16]
 2648 01ec 03F04003 		and	r3, r3, #64
 2649 01f0 002B     		cmp	r3, #0
 2650 01f2 05D0     		beq	.L121
1319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
 2651              		.loc 1 1320 0 is_stmt 1
 2652 01f4 7868     		ldr	r0, [r7, #4]
 2653 01f6 FFF7FEFF 		bl	UART_EndTransmit_IT
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return;
 2654              		.loc 1 1321 0
 2655 01fa 00BF     		nop
 2656 01fc 00E0     		b	.L121
 2657              	.L141:
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2658              		.loc 1 1306 0
 2659 01fe 00BF     		nop
 2660              	.L121:
1322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2661              		.loc 1 1324 0
 2662 0200 1837     		adds	r7, r7, #24
 2663              	.LCFI94:
 2664              		.cfi_def_cfa_offset 8
 2665 0202 BD46     		mov	sp, r7
 2666              	.LCFI95:
 2667              		.cfi_def_cfa_register 13
 2668              		@ sp needed
 2669 0204 80BD     		pop	{r7, pc}
 2670              	.L144:
 2671 0206 00BF     		.align	2
 2672              	.L143:
 2673 0208 00000000 		.word	UART_DMAAbortOnError
 2674              		.cfi_endproc
 2675              	.LFE155:
 2677              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 2678              		.align	1
 2679              		.global	UART_WaitOnFlagUntilTimeout
 2680              		.syntax unified
 2681              		.thumb
 2682              		.thumb_func
 2683              		.fpu fpv5-sp-d16
 2685              	UART_WaitOnFlagUntilTimeout:
 2686              	.LFB156:
1325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout.
1328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 71


1329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  Flag specifies the UART flag to check.
1330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  Status The new Flag status (SET or RESET).
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  Tickstart Tick start value
1332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  Timeout Timeout duration
1333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
1336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 2687              		.loc 1 1336 0
 2688              		.cfi_startproc
 2689              		@ args = 4, pretend = 0, frame = 16
 2690              		@ frame_needed = 1, uses_anonymous_args = 0
 2691 0000 80B5     		push	{r7, lr}
 2692              	.LCFI96:
 2693              		.cfi_def_cfa_offset 8
 2694              		.cfi_offset 7, -8
 2695              		.cfi_offset 14, -4
 2696 0002 84B0     		sub	sp, sp, #16
 2697              	.LCFI97:
 2698              		.cfi_def_cfa_offset 24
 2699 0004 00AF     		add	r7, sp, #0
 2700              	.LCFI98:
 2701              		.cfi_def_cfa_register 7
 2702 0006 F860     		str	r0, [r7, #12]
 2703 0008 B960     		str	r1, [r7, #8]
 2704 000a 3B60     		str	r3, [r7]
 2705 000c 1346     		mov	r3, r2
 2706 000e FB71     		strb	r3, [r7, #7]
1337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Wait until flag is set */
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 2707              		.loc 1 1338 0
 2708 0010 2CE0     		b	.L146
 2709              	.L149:
1339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Check for the Timeout */
1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(Timeout != HAL_MAX_DELAY)
 2710              		.loc 1 1341 0
 2711 0012 BB69     		ldr	r3, [r7, #24]
 2712 0014 B3F1FF3F 		cmp	r3, #-1
 2713 0018 28D0     		beq	.L146
1342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if((Timeout == 0U)||((HAL_GetTick()-Tickstart) >=  Timeout))
 2714              		.loc 1 1343 0
 2715 001a BB69     		ldr	r3, [r7, #24]
 2716 001c 002B     		cmp	r3, #0
 2717 001e 07D0     		beq	.L147
 2718              		.loc 1 1343 0 is_stmt 0 discriminator 1
 2719 0020 FFF7FEFF 		bl	HAL_GetTick
 2720 0024 0246     		mov	r2, r0
 2721 0026 3B68     		ldr	r3, [r7]
 2722 0028 D31A     		subs	r3, r2, r3
 2723 002a BA69     		ldr	r2, [r7, #24]
 2724 002c 9A42     		cmp	r2, r3
 2725 002e 1DD8     		bhi	.L146
 2726              	.L147:
1344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 72


1346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 2727              		.loc 1 1346 0 is_stmt 1
 2728 0030 FB68     		ldr	r3, [r7, #12]
 2729 0032 1B68     		ldr	r3, [r3]
 2730 0034 1A68     		ldr	r2, [r3]
 2731 0036 FB68     		ldr	r3, [r7, #12]
 2732 0038 1B68     		ldr	r3, [r3]
 2733 003a 22F4D072 		bic	r2, r2, #416
 2734 003e 1A60     		str	r2, [r3]
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2735              		.loc 1 1347 0
 2736 0040 FB68     		ldr	r3, [r7, #12]
 2737 0042 1B68     		ldr	r3, [r3]
 2738 0044 9A68     		ldr	r2, [r3, #8]
 2739 0046 FB68     		ldr	r3, [r7, #12]
 2740 0048 1B68     		ldr	r3, [r3]
 2741 004a 22F00102 		bic	r2, r2, #1
 2742 004e 9A60     		str	r2, [r3, #8]
1348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
 2743              		.loc 1 1349 0
 2744 0050 FB68     		ldr	r3, [r7, #12]
 2745 0052 2022     		movs	r2, #32
 2746 0054 83F86920 		strb	r2, [r3, #105]
1350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 2747              		.loc 1 1350 0
 2748 0058 FB68     		ldr	r3, [r7, #12]
 2749 005a 2022     		movs	r2, #32
 2750 005c 83F86A20 		strb	r2, [r3, #106]
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Process Unlocked */
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 2751              		.loc 1 1353 0
 2752 0060 FB68     		ldr	r3, [r7, #12]
 2753 0062 0022     		movs	r2, #0
 2754 0064 83F86820 		strb	r2, [r3, #104]
1354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         return HAL_TIMEOUT;
 2755              		.loc 1 1354 0
 2756 0068 0323     		movs	r3, #3
 2757 006a 0FE0     		b	.L148
 2758              	.L146:
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 2759              		.loc 1 1338 0
 2760 006c FB68     		ldr	r3, [r7, #12]
 2761 006e 1B68     		ldr	r3, [r3]
 2762 0070 DA69     		ldr	r2, [r3, #28]
 2763 0072 BB68     		ldr	r3, [r7, #8]
 2764 0074 1340     		ands	r3, r3, r2
 2765 0076 BA68     		ldr	r2, [r7, #8]
 2766 0078 9A42     		cmp	r2, r3
 2767 007a 0CBF     		ite	eq
 2768 007c 0123     		moveq	r3, #1
 2769 007e 0023     		movne	r3, #0
 2770 0080 DBB2     		uxtb	r3, r3
 2771 0082 1A46     		mov	r2, r3
 2772 0084 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2773 0086 9A42     		cmp	r2, r3
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 73


 2774 0088 C3D0     		beq	.L149
1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 2775              		.loc 1 1358 0
 2776 008a 0023     		movs	r3, #0
 2777              	.L148:
1359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2778              		.loc 1 1359 0
 2779 008c 1846     		mov	r0, r3
 2780 008e 1037     		adds	r7, r7, #16
 2781              	.LCFI99:
 2782              		.cfi_def_cfa_offset 8
 2783 0090 BD46     		mov	sp, r7
 2784              	.LCFI100:
 2785              		.cfi_def_cfa_register 13
 2786              		@ sp needed
 2787 0092 80BD     		pop	{r7, pc}
 2788              		.cfi_endproc
 2789              	.LFE156:
 2791              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 2792              		.align	1
 2793              		.syntax unified
 2794              		.thumb
 2795              		.thumb_func
 2796              		.fpu fpv5-sp-d16
 2798              	UART_DMATransmitCplt:
 2799              	.LFB157:
1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma DMA handle
1364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 2800              		.loc 1 1367 0
 2801              		.cfi_startproc
 2802              		@ args = 0, pretend = 0, frame = 16
 2803              		@ frame_needed = 1, uses_anonymous_args = 0
 2804 0000 80B5     		push	{r7, lr}
 2805              	.LCFI101:
 2806              		.cfi_def_cfa_offset 8
 2807              		.cfi_offset 7, -8
 2808              		.cfi_offset 14, -4
 2809 0002 84B0     		sub	sp, sp, #16
 2810              	.LCFI102:
 2811              		.cfi_def_cfa_offset 24
 2812 0004 00AF     		add	r7, sp, #0
 2813              	.LCFI103:
 2814              		.cfi_def_cfa_register 7
 2815 0006 7860     		str	r0, [r7, #4]
1368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2816              		.loc 1 1368 0
 2817 0008 7B68     		ldr	r3, [r7, #4]
 2818 000a 9B6B     		ldr	r3, [r3, #56]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 74


 2819 000c FB60     		str	r3, [r7, #12]
1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* DMA Normal mode*/
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
 2820              		.loc 1 1371 0
 2821 000e 7B68     		ldr	r3, [r7, #4]
 2822 0010 1B68     		ldr	r3, [r3]
 2823 0012 1B68     		ldr	r3, [r3]
 2824 0014 03F48073 		and	r3, r3, #256
 2825 0018 002B     		cmp	r3, #0
 2826 001a 14D1     		bne	.L151
1372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = 0U;
 2827              		.loc 1 1373 0
 2828 001c FB68     		ldr	r3, [r7, #12]
 2829 001e 0022     		movs	r2, #0
 2830 0020 A3F85220 		strh	r2, [r3, #82]	@ movhi
1374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        in the UART CR3 register */
1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2831              		.loc 1 1377 0
 2832 0024 FB68     		ldr	r3, [r7, #12]
 2833 0026 1B68     		ldr	r3, [r3]
 2834 0028 9A68     		ldr	r2, [r3, #8]
 2835 002a FB68     		ldr	r3, [r7, #12]
 2836 002c 1B68     		ldr	r3, [r3]
 2837 002e 22F08002 		bic	r2, r2, #128
 2838 0032 9A60     		str	r2, [r3, #8]
1378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
1380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 2839              		.loc 1 1380 0
 2840 0034 FB68     		ldr	r3, [r7, #12]
 2841 0036 1B68     		ldr	r3, [r3]
 2842 0038 1A68     		ldr	r2, [r3]
 2843 003a FB68     		ldr	r3, [r7, #12]
 2844 003c 1B68     		ldr	r3, [r3]
 2845 003e 42F04002 		orr	r2, r2, #64
 2846 0042 1A60     		str	r2, [r3]
1381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* DMA Circular mode */
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
1386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2847              		.loc 1 1387 0
 2848 0044 02E0     		b	.L153
 2849              	.L151:
1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 2850              		.loc 1 1385 0
 2851 0046 F868     		ldr	r0, [r7, #12]
 2852 0048 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 2853              	.L153:
 2854              		.loc 1 1387 0
 2855 004c 00BF     		nop
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 75


 2856 004e 1037     		adds	r7, r7, #16
 2857              	.LCFI104:
 2858              		.cfi_def_cfa_offset 8
 2859 0050 BD46     		mov	sp, r7
 2860              	.LCFI105:
 2861              		.cfi_def_cfa_register 13
 2862              		@ sp needed
 2863 0052 80BD     		pop	{r7, pc}
 2864              		.cfi_endproc
 2865              	.LFE157:
 2867              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 2868              		.align	1
 2869              		.syntax unified
 2870              		.thumb
 2871              		.thumb_func
 2872              		.fpu fpv5-sp-d16
 2874              	UART_DMATxHalfCplt:
 2875              	.LFB158:
1388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback
1391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma  DMA handle
1392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 2876              		.loc 1 1395 0
 2877              		.cfi_startproc
 2878              		@ args = 0, pretend = 0, frame = 16
 2879              		@ frame_needed = 1, uses_anonymous_args = 0
 2880 0000 80B5     		push	{r7, lr}
 2881              	.LCFI106:
 2882              		.cfi_def_cfa_offset 8
 2883              		.cfi_offset 7, -8
 2884              		.cfi_offset 14, -4
 2885 0002 84B0     		sub	sp, sp, #16
 2886              	.LCFI107:
 2887              		.cfi_def_cfa_offset 24
 2888 0004 00AF     		add	r7, sp, #0
 2889              	.LCFI108:
 2890              		.cfi_def_cfa_register 7
 2891 0006 7860     		str	r0, [r7, #4]
1396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 2892              		.loc 1 1396 0
 2893 0008 7B68     		ldr	r3, [r7, #4]
 2894 000a 9B6B     		ldr	r3, [r3, #56]
 2895 000c FB60     		str	r3, [r7, #12]
1397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 2896              		.loc 1 1398 0
 2897 000e F868     		ldr	r0, [r7, #12]
 2898 0010 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
1399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2899              		.loc 1 1399 0
 2900 0014 00BF     		nop
 2901 0016 1037     		adds	r7, r7, #16
 2902              	.LCFI109:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 76


 2903              		.cfi_def_cfa_offset 8
 2904 0018 BD46     		mov	sp, r7
 2905              	.LCFI110:
 2906              		.cfi_def_cfa_register 13
 2907              		@ sp needed
 2908 001a 80BD     		pop	{r7, pc}
 2909              		.cfi_endproc
 2910              	.LFE158:
 2912              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 2913              		.align	1
 2914              		.syntax unified
 2915              		.thumb
 2916              		.thumb_func
 2917              		.fpu fpv5-sp-d16
 2919              	UART_DMAReceiveCplt:
 2920              	.LFB159:
1400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART receive process complete callback
1403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma DMA handle
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 2921              		.loc 1 1407 0
 2922              		.cfi_startproc
 2923              		@ args = 0, pretend = 0, frame = 16
 2924              		@ frame_needed = 1, uses_anonymous_args = 0
 2925 0000 80B5     		push	{r7, lr}
 2926              	.LCFI111:
 2927              		.cfi_def_cfa_offset 8
 2928              		.cfi_offset 7, -8
 2929              		.cfi_offset 14, -4
 2930 0002 84B0     		sub	sp, sp, #16
 2931              	.LCFI112:
 2932              		.cfi_def_cfa_offset 24
 2933 0004 00AF     		add	r7, sp, #0
 2934              	.LCFI113:
 2935              		.cfi_def_cfa_register 7
 2936 0006 7860     		str	r0, [r7, #4]
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2937              		.loc 1 1408 0
 2938 0008 7B68     		ldr	r3, [r7, #4]
 2939 000a 9B6B     		ldr	r3, [r3, #56]
 2940 000c FB60     		str	r3, [r7, #12]
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* DMA Normal mode */
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
 2941              		.loc 1 1411 0
 2942 000e 7B68     		ldr	r3, [r7, #4]
 2943 0010 1B68     		ldr	r3, [r3]
 2944 0012 1B68     		ldr	r3, [r3]
 2945 0014 03F48073 		and	r3, r3, #256
 2946 0018 002B     		cmp	r3, #0
 2947 001a 1FD1     		bne	.L156
1412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferCount = 0U;
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 77


 2948              		.loc 1 1413 0
 2949 001c FB68     		ldr	r3, [r7, #12]
 2950 001e 0022     		movs	r2, #0
 2951 0020 A3F85A20 		strh	r2, [r3, #90]	@ movhi
1414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2952              		.loc 1 1416 0
 2953 0024 FB68     		ldr	r3, [r7, #12]
 2954 0026 1B68     		ldr	r3, [r3]
 2955 0028 1A68     		ldr	r2, [r3]
 2956 002a FB68     		ldr	r3, [r7, #12]
 2957 002c 1B68     		ldr	r3, [r3]
 2958 002e 22F48072 		bic	r2, r2, #256
 2959 0032 1A60     		str	r2, [r3]
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2960              		.loc 1 1417 0
 2961 0034 FB68     		ldr	r3, [r7, #12]
 2962 0036 1B68     		ldr	r3, [r3]
 2963 0038 9A68     		ldr	r2, [r3, #8]
 2964 003a FB68     		ldr	r3, [r7, #12]
 2965 003c 1B68     		ldr	r3, [r3]
 2966 003e 22F00102 		bic	r2, r2, #1
 2967 0042 9A60     		str	r2, [r3, #8]
1418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit
1420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     in the UART CR3 register */
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2968              		.loc 1 1421 0
 2969 0044 FB68     		ldr	r3, [r7, #12]
 2970 0046 1B68     		ldr	r3, [r3]
 2971 0048 9A68     		ldr	r2, [r3, #8]
 2972 004a FB68     		ldr	r3, [r7, #12]
 2973 004c 1B68     		ldr	r3, [r3]
 2974 004e 22F04002 		bic	r2, r2, #64
 2975 0052 9A60     		str	r2, [r3, #8]
1422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 	/* At end of Rx process, restore huart->RxState to Ready */
1424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2976              		.loc 1 1424 0
 2977 0054 FB68     		ldr	r3, [r7, #12]
 2978 0056 2022     		movs	r2, #32
 2979 0058 83F86A20 		strb	r2, [r3, #106]
 2980              	.L156:
1425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
 2981              		.loc 1 1426 0
 2982 005c F868     		ldr	r0, [r7, #12]
 2983 005e FFF7FEFF 		bl	HAL_UART_RxCpltCallback
1427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2984              		.loc 1 1427 0
 2985 0062 00BF     		nop
 2986 0064 1037     		adds	r7, r7, #16
 2987              	.LCFI114:
 2988              		.cfi_def_cfa_offset 8
 2989 0066 BD46     		mov	sp, r7
 2990              	.LCFI115:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 78


 2991              		.cfi_def_cfa_register 13
 2992              		@ sp needed
 2993 0068 80BD     		pop	{r7, pc}
 2994              		.cfi_endproc
 2995              	.LFE159:
 2997              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 2998              		.align	1
 2999              		.syntax unified
 3000              		.thumb
 3001              		.thumb_func
 3002              		.fpu fpv5-sp-d16
 3004              	UART_DMARxHalfCplt:
 3005              	.LFB160:
1428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback
1431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma  DMA handle
1432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3006              		.loc 1 1435 0
 3007              		.cfi_startproc
 3008              		@ args = 0, pretend = 0, frame = 16
 3009              		@ frame_needed = 1, uses_anonymous_args = 0
 3010 0000 80B5     		push	{r7, lr}
 3011              	.LCFI116:
 3012              		.cfi_def_cfa_offset 8
 3013              		.cfi_offset 7, -8
 3014              		.cfi_offset 14, -4
 3015 0002 84B0     		sub	sp, sp, #16
 3016              	.LCFI117:
 3017              		.cfi_def_cfa_offset 24
 3018 0004 00AF     		add	r7, sp, #0
 3019              	.LCFI118:
 3020              		.cfi_def_cfa_register 7
 3021 0006 7860     		str	r0, [r7, #4]
1436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 3022              		.loc 1 1436 0
 3023 0008 7B68     		ldr	r3, [r7, #4]
 3024 000a 9B6B     		ldr	r3, [r3, #56]
 3025 000c FB60     		str	r3, [r7, #12]
1437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
 3026              		.loc 1 1438 0
 3027 000e F868     		ldr	r0, [r7, #12]
 3028 0010 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
1439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3029              		.loc 1 1439 0
 3030 0014 00BF     		nop
 3031 0016 1037     		adds	r7, r7, #16
 3032              	.LCFI119:
 3033              		.cfi_def_cfa_offset 8
 3034 0018 BD46     		mov	sp, r7
 3035              	.LCFI120:
 3036              		.cfi_def_cfa_register 13
 3037              		@ sp needed
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 79


 3038 001a 80BD     		pop	{r7, pc}
 3039              		.cfi_endproc
 3040              	.LFE160:
 3042              		.section	.text.UART_DMAError,"ax",%progbits
 3043              		.align	1
 3044              		.syntax unified
 3045              		.thumb
 3046              		.thumb_func
 3047              		.fpu fpv5-sp-d16
 3049              	UART_DMAError:
 3050              	.LFB161:
1440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART communication error callback
1443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma DMA handle
1444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
1447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3051              		.loc 1 1447 0
 3052              		.cfi_startproc
 3053              		@ args = 0, pretend = 0, frame = 16
 3054              		@ frame_needed = 1, uses_anonymous_args = 0
 3055 0000 80B5     		push	{r7, lr}
 3056              	.LCFI121:
 3057              		.cfi_def_cfa_offset 8
 3058              		.cfi_offset 7, -8
 3059              		.cfi_offset 14, -4
 3060 0002 84B0     		sub	sp, sp, #16
 3061              	.LCFI122:
 3062              		.cfi_def_cfa_offset 24
 3063 0004 00AF     		add	r7, sp, #0
 3064              	.LCFI123:
 3065              		.cfi_def_cfa_register 7
 3066 0006 7860     		str	r0, [r7, #4]
1448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3067              		.loc 1 1448 0
 3068 0008 7B68     		ldr	r3, [r7, #4]
 3069 000a 9B6B     		ldr	r3, [r3, #56]
 3070 000c FB60     		str	r3, [r7, #12]
1449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3071              		.loc 1 1449 0
 3072 000e FB68     		ldr	r3, [r7, #12]
 3073 0010 0022     		movs	r2, #0
 3074 0012 A3F85A20 		strh	r2, [r3, #90]	@ movhi
1450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->TxXferCount = 0U;
 3075              		.loc 1 1450 0
 3076 0016 FB68     		ldr	r3, [r7, #12]
 3077 0018 0022     		movs	r2, #0
 3078 001a A3F85220 		strh	r2, [r3, #82]	@ movhi
1451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (  (huart->gState == HAL_UART_STATE_BUSY_TX)
 3079              		.loc 1 1452 0
 3080 001e FB68     		ldr	r3, [r7, #12]
 3081 0020 93F86930 		ldrb	r3, [r3, #105]
 3082 0024 DBB2     		uxtb	r3, r3
 3083 0026 212B     		cmp	r3, #33
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 80


 3084 0028 09D1     		bne	.L159
1453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) )
 3085              		.loc 1 1453 0
 3086 002a FB68     		ldr	r3, [r7, #12]
 3087 002c 1B68     		ldr	r3, [r3]
 3088 002e 9B68     		ldr	r3, [r3, #8]
 3089 0030 03F08003 		and	r3, r3, #128
 3090 0034 002B     		cmp	r3, #0
 3091 0036 02D0     		beq	.L159
1454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 3092              		.loc 1 1455 0
 3093 0038 F868     		ldr	r0, [r7, #12]
 3094 003a FFF7FEFF 		bl	UART_EndTxTransfer
 3095              	.L159:
1456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (  (huart->RxState == HAL_UART_STATE_BUSY_RX)
 3096              		.loc 1 1459 0
 3097 003e FB68     		ldr	r3, [r7, #12]
 3098 0040 93F86A30 		ldrb	r3, [r3, #106]
 3099 0044 DBB2     		uxtb	r3, r3
 3100 0046 222B     		cmp	r3, #34
 3101 0048 09D1     		bne	.L160
1460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) )
 3102              		.loc 1 1460 0
 3103 004a FB68     		ldr	r3, [r7, #12]
 3104 004c 1B68     		ldr	r3, [r3]
 3105 004e 9B68     		ldr	r3, [r3, #8]
 3106 0050 03F04003 		and	r3, r3, #64
 3107 0054 002B     		cmp	r3, #0
 3108 0056 02D0     		beq	.L160
1461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 3109              		.loc 1 1462 0
 3110 0058 F868     		ldr	r0, [r7, #12]
 3111 005a FFF7FEFF 		bl	UART_EndRxTransfer
 3112              	.L160:
1463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->ErrorCode, HAL_UART_ERROR_DMA);
 3113              		.loc 1 1464 0
 3114 005e FB68     		ldr	r3, [r7, #12]
 3115 0060 DB6E     		ldr	r3, [r3, #108]
 3116 0062 43F01002 		orr	r2, r3, #16
 3117 0066 FB68     		ldr	r3, [r7, #12]
 3118 0068 DA66     		str	r2, [r3, #108]
1465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 3119              		.loc 1 1465 0
 3120 006a F868     		ldr	r0, [r7, #12]
 3121 006c FFF7FEFF 		bl	HAL_UART_ErrorCallback
1466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3122              		.loc 1 1466 0
 3123 0070 00BF     		nop
 3124 0072 1037     		adds	r7, r7, #16
 3125              	.LCFI124:
 3126              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 81


 3127 0074 BD46     		mov	sp, r7
 3128              	.LCFI125:
 3129              		.cfi_def_cfa_register 13
 3130              		@ sp needed
 3131 0076 80BD     		pop	{r7, pc}
 3132              		.cfi_endproc
 3133              	.LFE161:
 3135              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 3136              		.align	1
 3137              		.syntax unified
 3138              		.thumb
 3139              		.thumb_func
 3140              		.fpu fpv5-sp-d16
 3142              	UART_DMAAbortOnError:
 3143              	.LFB162:
1467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART communication abort callback, when call by HAL services on Error
1470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        (To be called at end of DMA Abort procedure following error occurrence).
1471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma DMA handle.
1472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3144              		.loc 1 1475 0
 3145              		.cfi_startproc
 3146              		@ args = 0, pretend = 0, frame = 16
 3147              		@ frame_needed = 1, uses_anonymous_args = 0
 3148 0000 80B5     		push	{r7, lr}
 3149              	.LCFI126:
 3150              		.cfi_def_cfa_offset 8
 3151              		.cfi_offset 7, -8
 3152              		.cfi_offset 14, -4
 3153 0002 84B0     		sub	sp, sp, #16
 3154              	.LCFI127:
 3155              		.cfi_def_cfa_offset 24
 3156 0004 00AF     		add	r7, sp, #0
 3157              	.LCFI128:
 3158              		.cfi_def_cfa_register 7
 3159 0006 7860     		str	r0, [r7, #4]
1476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 3160              		.loc 1 1476 0
 3161 0008 7B68     		ldr	r3, [r7, #4]
 3162 000a 9B6B     		ldr	r3, [r3, #56]
 3163 000c FB60     		str	r3, [r7, #12]
1477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3164              		.loc 1 1477 0
 3165 000e FB68     		ldr	r3, [r7, #12]
 3166 0010 0022     		movs	r2, #0
 3167 0012 A3F85A20 		strh	r2, [r3, #90]	@ movhi
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->TxXferCount = 0U;
 3168              		.loc 1 1478 0
 3169 0016 FB68     		ldr	r3, [r7, #12]
 3170 0018 0022     		movs	r2, #0
 3171 001a A3F85220 		strh	r2, [r3, #82]	@ movhi
1479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 82


 3172              		.loc 1 1480 0
 3173 001e F868     		ldr	r0, [r7, #12]
 3174 0020 FFF7FEFF 		bl	HAL_UART_ErrorCallback
1481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3175              		.loc 1 1481 0
 3176 0024 00BF     		nop
 3177 0026 1037     		adds	r7, r7, #16
 3178              	.LCFI129:
 3179              		.cfi_def_cfa_offset 8
 3180 0028 BD46     		mov	sp, r7
 3181              	.LCFI130:
 3182              		.cfi_def_cfa_register 13
 3183              		@ sp needed
 3184 002a 80BD     		pop	{r7, pc}
 3185              		.cfi_endproc
 3186              	.LFE162:
 3188              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 3189              		.align	1
 3190              		.weak	HAL_UART_TxCpltCallback
 3191              		.syntax unified
 3192              		.thumb
 3193              		.thumb_func
 3194              		.fpu fpv5-sp-d16
 3196              	HAL_UART_TxCpltCallback:
 3197              	.LFB163:
1482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Tx Transfer completed callbacks
1485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3198              		.loc 1 1489 0
 3199              		.cfi_startproc
 3200              		@ args = 0, pretend = 0, frame = 8
 3201              		@ frame_needed = 1, uses_anonymous_args = 0
 3202              		@ link register save eliminated.
 3203 0000 80B4     		push	{r7}
 3204              	.LCFI131:
 3205              		.cfi_def_cfa_offset 4
 3206              		.cfi_offset 7, -4
 3207 0002 83B0     		sub	sp, sp, #12
 3208              	.LCFI132:
 3209              		.cfi_def_cfa_offset 16
 3210 0004 00AF     		add	r7, sp, #0
 3211              	.LCFI133:
 3212              		.cfi_def_cfa_register 7
 3213 0006 7860     		str	r0, [r7, #4]
1490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
1492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file
1495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
1496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3214              		.loc 1 1496 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 83


 3215 0008 00BF     		nop
 3216 000a 0C37     		adds	r7, r7, #12
 3217              	.LCFI134:
 3218              		.cfi_def_cfa_offset 4
 3219 000c BD46     		mov	sp, r7
 3220              	.LCFI135:
 3221              		.cfi_def_cfa_register 13
 3222              		@ sp needed
 3223 000e 5DF8047B 		ldr	r7, [sp], #4
 3224              	.LCFI136:
 3225              		.cfi_restore 7
 3226              		.cfi_def_cfa_offset 0
 3227 0012 7047     		bx	lr
 3228              		.cfi_endproc
 3229              	.LFE163:
 3231              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 3232              		.align	1
 3233              		.weak	HAL_UART_TxHalfCpltCallback
 3234              		.syntax unified
 3235              		.thumb
 3236              		.thumb_func
 3237              		.fpu fpv5-sp-d16
 3239              	HAL_UART_TxHalfCpltCallback:
 3240              	.LFB164:
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
1500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
1501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3241              		.loc 1 1504 0
 3242              		.cfi_startproc
 3243              		@ args = 0, pretend = 0, frame = 8
 3244              		@ frame_needed = 1, uses_anonymous_args = 0
 3245              		@ link register save eliminated.
 3246 0000 80B4     		push	{r7}
 3247              	.LCFI137:
 3248              		.cfi_def_cfa_offset 4
 3249              		.cfi_offset 7, -4
 3250 0002 83B0     		sub	sp, sp, #12
 3251              	.LCFI138:
 3252              		.cfi_def_cfa_offset 16
 3253 0004 00AF     		add	r7, sp, #0
 3254              	.LCFI139:
 3255              		.cfi_def_cfa_register 7
 3256 0006 7860     		str	r0, [r7, #4]
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
1507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file
1510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3257              		.loc 1 1511 0
 3258 0008 00BF     		nop
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 84


 3259 000a 0C37     		adds	r7, r7, #12
 3260              	.LCFI140:
 3261              		.cfi_def_cfa_offset 4
 3262 000c BD46     		mov	sp, r7
 3263              	.LCFI141:
 3264              		.cfi_def_cfa_register 13
 3265              		@ sp needed
 3266 000e 5DF8047B 		ldr	r7, [sp], #4
 3267              	.LCFI142:
 3268              		.cfi_restore 7
 3269              		.cfi_def_cfa_offset 0
 3270 0012 7047     		bx	lr
 3271              		.cfi_endproc
 3272              	.LFE164:
 3274              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 3275              		.align	1
 3276              		.weak	HAL_UART_RxCpltCallback
 3277              		.syntax unified
 3278              		.thumb
 3279              		.thumb_func
 3280              		.fpu fpv5-sp-d16
 3282              	HAL_UART_RxCpltCallback:
 3283              	.LFB165:
1512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Rx Transfer completed callbacks
1515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3284              		.loc 1 1519 0
 3285              		.cfi_startproc
 3286              		@ args = 0, pretend = 0, frame = 8
 3287              		@ frame_needed = 1, uses_anonymous_args = 0
 3288              		@ link register save eliminated.
 3289 0000 80B4     		push	{r7}
 3290              	.LCFI143:
 3291              		.cfi_def_cfa_offset 4
 3292              		.cfi_offset 7, -4
 3293 0002 83B0     		sub	sp, sp, #12
 3294              	.LCFI144:
 3295              		.cfi_def_cfa_offset 16
 3296 0004 00AF     		add	r7, sp, #0
 3297              	.LCFI145:
 3298              		.cfi_def_cfa_register 7
 3299 0006 7860     		str	r0, [r7, #4]
1520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3300              		.loc 1 1526 0
 3301 0008 00BF     		nop
 3302 000a 0C37     		adds	r7, r7, #12
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 85


 3303              	.LCFI146:
 3304              		.cfi_def_cfa_offset 4
 3305 000c BD46     		mov	sp, r7
 3306              	.LCFI147:
 3307              		.cfi_def_cfa_register 13
 3308              		@ sp needed
 3309 000e 5DF8047B 		ldr	r7, [sp], #4
 3310              	.LCFI148:
 3311              		.cfi_restore 7
 3312              		.cfi_def_cfa_offset 0
 3313 0012 7047     		bx	lr
 3314              		.cfi_endproc
 3315              	.LFE165:
 3317              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 3318              		.align	1
 3319              		.weak	HAL_UART_RxHalfCpltCallback
 3320              		.syntax unified
 3321              		.thumb
 3322              		.thumb_func
 3323              		.fpu fpv5-sp-d16
 3325              	HAL_UART_RxHalfCpltCallback:
 3326              	.LFB166:
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
1530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
1531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3327              		.loc 1 1534 0
 3328              		.cfi_startproc
 3329              		@ args = 0, pretend = 0, frame = 8
 3330              		@ frame_needed = 1, uses_anonymous_args = 0
 3331              		@ link register save eliminated.
 3332 0000 80B4     		push	{r7}
 3333              	.LCFI149:
 3334              		.cfi_def_cfa_offset 4
 3335              		.cfi_offset 7, -4
 3336 0002 83B0     		sub	sp, sp, #12
 3337              	.LCFI150:
 3338              		.cfi_def_cfa_offset 16
 3339 0004 00AF     		add	r7, sp, #0
 3340              	.LCFI151:
 3341              		.cfi_def_cfa_register 7
 3342 0006 7860     		str	r0, [r7, #4]
1535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
1537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file
1540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
1541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3343              		.loc 1 1541 0
 3344 0008 00BF     		nop
 3345 000a 0C37     		adds	r7, r7, #12
 3346              	.LCFI152:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 86


 3347              		.cfi_def_cfa_offset 4
 3348 000c BD46     		mov	sp, r7
 3349              	.LCFI153:
 3350              		.cfi_def_cfa_register 13
 3351              		@ sp needed
 3352 000e 5DF8047B 		ldr	r7, [sp], #4
 3353              	.LCFI154:
 3354              		.cfi_restore 7
 3355              		.cfi_def_cfa_offset 0
 3356 0012 7047     		bx	lr
 3357              		.cfi_endproc
 3358              	.LFE166:
 3360              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 3361              		.align	1
 3362              		.weak	HAL_UART_ErrorCallback
 3363              		.syntax unified
 3364              		.thumb
 3365              		.thumb_func
 3366              		.fpu fpv5-sp-d16
 3368              	HAL_UART_ErrorCallback:
 3369              	.LFB167:
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief UART error callbacks
1545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3370              		.loc 1 1549 0
 3371              		.cfi_startproc
 3372              		@ args = 0, pretend = 0, frame = 8
 3373              		@ frame_needed = 1, uses_anonymous_args = 0
 3374              		@ link register save eliminated.
 3375 0000 80B4     		push	{r7}
 3376              	.LCFI155:
 3377              		.cfi_def_cfa_offset 4
 3378              		.cfi_offset 7, -4
 3379 0002 83B0     		sub	sp, sp, #12
 3380              	.LCFI156:
 3381              		.cfi_def_cfa_offset 16
 3382 0004 00AF     		add	r7, sp, #0
 3383              	.LCFI157:
 3384              		.cfi_def_cfa_register 7
 3385 0006 7860     		str	r0, [r7, #4]
1550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
1552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file
1555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
1556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3386              		.loc 1 1556 0
 3387 0008 00BF     		nop
 3388 000a 0C37     		adds	r7, r7, #12
 3389              	.LCFI158:
 3390              		.cfi_def_cfa_offset 4
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 87


 3391 000c BD46     		mov	sp, r7
 3392              	.LCFI159:
 3393              		.cfi_def_cfa_register 13
 3394              		@ sp needed
 3395 000e 5DF8047B 		ldr	r7, [sp], #4
 3396              	.LCFI160:
 3397              		.cfi_restore 7
 3398              		.cfi_def_cfa_offset 0
 3399 0012 7047     		bx	lr
 3400              		.cfi_endproc
 3401              	.LFE167:
 3403              		.section	.text.UART_Transmit_IT,"ax",%progbits
 3404              		.align	1
 3405              		.syntax unified
 3406              		.thumb
 3407              		.thumb_func
 3408              		.fpu fpv5-sp-d16
 3410              	UART_Transmit_IT:
 3411              	.LFB168:
1557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode
1560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         Function called under interruption only, once
1561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT()
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
1563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
1566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3412              		.loc 1 1566 0
 3413              		.cfi_startproc
 3414              		@ args = 0, pretend = 0, frame = 16
 3415              		@ frame_needed = 1, uses_anonymous_args = 0
 3416              		@ link register save eliminated.
 3417 0000 80B4     		push	{r7}
 3418              	.LCFI161:
 3419              		.cfi_def_cfa_offset 4
 3420              		.cfi_offset 7, -4
 3421 0002 85B0     		sub	sp, sp, #20
 3422              	.LCFI162:
 3423              		.cfi_def_cfa_offset 24
 3424 0004 00AF     		add	r7, sp, #0
 3425              	.LCFI163:
 3426              		.cfi_def_cfa_register 7
 3427 0006 7860     		str	r0, [r7, #4]
1567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t* tmp;
1568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
1570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 3428              		.loc 1 1570 0
 3429 0008 7B68     		ldr	r3, [r7, #4]
 3430 000a 93F86930 		ldrb	r3, [r3, #105]
 3431 000e DBB2     		uxtb	r3, r3
 3432 0010 212B     		cmp	r3, #33
 3433 0012 45D1     		bne	.L168
1571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 88


1573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(huart->TxXferCount == 0U)
 3434              		.loc 1 1573 0
 3435 0014 7B68     		ldr	r3, [r7, #4]
 3436 0016 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 3437 001a 9BB2     		uxth	r3, r3
 3438 001c 002B     		cmp	r3, #0
 3439 001e 11D1     		bne	.L169
1574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
1576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 3440              		.loc 1 1576 0
 3441 0020 7B68     		ldr	r3, [r7, #4]
 3442 0022 1B68     		ldr	r3, [r3]
 3443 0024 1A68     		ldr	r2, [r3]
 3444 0026 7B68     		ldr	r3, [r7, #4]
 3445 0028 1B68     		ldr	r3, [r3]
 3446 002a 22F08002 		bic	r2, r2, #128
 3447 002e 1A60     		str	r2, [r3]
1577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
1579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 3448              		.loc 1 1579 0
 3449 0030 7B68     		ldr	r3, [r7, #4]
 3450 0032 1B68     		ldr	r3, [r3]
 3451 0034 1A68     		ldr	r2, [r3]
 3452 0036 7B68     		ldr	r3, [r7, #4]
 3453 0038 1B68     		ldr	r3, [r3]
 3454 003a 42F04002 		orr	r2, r2, #64
 3455 003e 1A60     		str	r2, [r3]
1580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_OK;
 3456              		.loc 1 1581 0
 3457 0040 0023     		movs	r3, #0
 3458 0042 2EE0     		b	.L170
 3459              	.L169:
1582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     else
1584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 3460              		.loc 1 1585 0
 3461 0044 7B68     		ldr	r3, [r7, #4]
 3462 0046 9B68     		ldr	r3, [r3, #8]
 3463 0048 B3F5805F 		cmp	r3, #4096
 3464 004c 14D1     		bne	.L171
 3465              		.loc 1 1585 0 is_stmt 0 discriminator 1
 3466 004e 7B68     		ldr	r3, [r7, #4]
 3467 0050 1B69     		ldr	r3, [r3, #16]
 3468 0052 002B     		cmp	r3, #0
 3469 0054 10D1     		bne	.L171
1586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         tmp = (uint16_t*) huart->pTxBuffPtr;
 3470              		.loc 1 1587 0 is_stmt 1
 3471 0056 7B68     		ldr	r3, [r7, #4]
 3472 0058 DB6C     		ldr	r3, [r3, #76]
 3473 005a FB60     		str	r3, [r7, #12]
1588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 3474              		.loc 1 1588 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 89


 3475 005c FB68     		ldr	r3, [r7, #12]
 3476 005e 1B88     		ldrh	r3, [r3]
 3477 0060 1A46     		mov	r2, r3
 3478 0062 7B68     		ldr	r3, [r7, #4]
 3479 0064 1B68     		ldr	r3, [r3]
 3480 0066 C2F30802 		ubfx	r2, r2, #0, #9
 3481 006a 9A62     		str	r2, [r3, #40]
1589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 3482              		.loc 1 1589 0
 3483 006c 7B68     		ldr	r3, [r7, #4]
 3484 006e DB6C     		ldr	r3, [r3, #76]
 3485 0070 9A1C     		adds	r2, r3, #2
 3486 0072 7B68     		ldr	r3, [r7, #4]
 3487 0074 DA64     		str	r2, [r3, #76]
 3488 0076 08E0     		b	.L172
 3489              	.L171:
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       else
1592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0xFFU);
 3490              		.loc 1 1593 0
 3491 0078 7B68     		ldr	r3, [r7, #4]
 3492 007a DB6C     		ldr	r3, [r3, #76]
 3493 007c 591C     		adds	r1, r3, #1
 3494 007e 7A68     		ldr	r2, [r7, #4]
 3495 0080 D164     		str	r1, [r2, #76]
 3496 0082 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3497 0084 7B68     		ldr	r3, [r7, #4]
 3498 0086 1B68     		ldr	r3, [r3]
 3499 0088 9A62     		str	r2, [r3, #40]
 3500              	.L172:
1594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->TxXferCount--;
 3501              		.loc 1 1596 0
 3502 008a 7B68     		ldr	r3, [r7, #4]
 3503 008c B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 3504 0090 9BB2     		uxth	r3, r3
 3505 0092 013B     		subs	r3, r3, #1
 3506 0094 9AB2     		uxth	r2, r3
 3507 0096 7B68     		ldr	r3, [r7, #4]
 3508 0098 A3F85220 		strh	r2, [r3, #82]	@ movhi
1597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_OK;
 3509              		.loc 1 1598 0
 3510 009c 0023     		movs	r3, #0
 3511 009e 00E0     		b	.L170
 3512              	.L168:
1599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 3513              		.loc 1 1603 0
 3514 00a0 0223     		movs	r3, #2
 3515              	.L170:
1604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 90


1605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3516              		.loc 1 1605 0
 3517 00a2 1846     		mov	r0, r3
 3518 00a4 1437     		adds	r7, r7, #20
 3519              	.LCFI164:
 3520              		.cfi_def_cfa_offset 4
 3521 00a6 BD46     		mov	sp, r7
 3522              	.LCFI165:
 3523              		.cfi_def_cfa_register 13
 3524              		@ sp needed
 3525 00a8 5DF8047B 		ldr	r7, [sp], #4
 3526              	.LCFI166:
 3527              		.cfi_restore 7
 3528              		.cfi_def_cfa_offset 0
 3529 00ac 7047     		bx	lr
 3530              		.cfi_endproc
 3531              	.LFE168:
 3533              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 3534              		.align	1
 3535              		.syntax unified
 3536              		.thumb
 3537              		.thumb_func
 3538              		.fpu fpv5-sp-d16
 3540              	UART_EndTransmit_IT:
 3541              	.LFB169:
1606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
1609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3542              		.loc 1 1614 0
 3543              		.cfi_startproc
 3544              		@ args = 0, pretend = 0, frame = 8
 3545              		@ frame_needed = 1, uses_anonymous_args = 0
 3546 0000 80B5     		push	{r7, lr}
 3547              	.LCFI167:
 3548              		.cfi_def_cfa_offset 8
 3549              		.cfi_offset 7, -8
 3550              		.cfi_offset 14, -4
 3551 0002 82B0     		sub	sp, sp, #8
 3552              	.LCFI168:
 3553              		.cfi_def_cfa_offset 16
 3554 0004 00AF     		add	r7, sp, #0
 3555              	.LCFI169:
 3556              		.cfi_def_cfa_register 7
 3557 0006 7860     		str	r0, [r7, #4]
1615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
1616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 3558              		.loc 1 1616 0
 3559 0008 7B68     		ldr	r3, [r7, #4]
 3560 000a 1B68     		ldr	r3, [r3]
 3561 000c 1A68     		ldr	r2, [r3]
 3562 000e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 91


 3563 0010 1B68     		ldr	r3, [r3]
 3564 0012 22F04002 		bic	r2, r2, #64
 3565 0016 1A60     		str	r2, [r3]
1617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
1619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3566              		.loc 1 1619 0
 3567 0018 7B68     		ldr	r3, [r7, #4]
 3568 001a 2022     		movs	r2, #32
 3569 001c 83F86920 		strb	r2, [r3, #105]
1620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 3570              		.loc 1 1621 0
 3571 0020 7868     		ldr	r0, [r7, #4]
 3572 0022 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
1622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 3573              		.loc 1 1623 0
 3574 0026 0023     		movs	r3, #0
1624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3575              		.loc 1 1624 0
 3576 0028 1846     		mov	r0, r3
 3577 002a 0837     		adds	r7, r7, #8
 3578              	.LCFI170:
 3579              		.cfi_def_cfa_offset 8
 3580 002c BD46     		mov	sp, r7
 3581              	.LCFI171:
 3582              		.cfi_def_cfa_register 13
 3583              		@ sp needed
 3584 002e 80BD     		pop	{r7, pc}
 3585              		.cfi_endproc
 3586              	.LFE169:
 3588              		.section	.text.UART_Receive_IT,"ax",%progbits
 3589              		.align	1
 3590              		.syntax unified
 3591              		.thumb
 3592              		.thumb_func
 3593              		.fpu fpv5-sp-d16
 3595              	UART_Receive_IT:
 3596              	.LFB170:
1625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode
1628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         Function called under interruption only, once
1629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
1630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3597              		.loc 1 1634 0
 3598              		.cfi_startproc
 3599              		@ args = 0, pretend = 0, frame = 16
 3600              		@ frame_needed = 1, uses_anonymous_args = 0
 3601 0000 90B5     		push	{r4, r7, lr}
 3602              	.LCFI172:
 3603              		.cfi_def_cfa_offset 12
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 92


 3604              		.cfi_offset 4, -12
 3605              		.cfi_offset 7, -8
 3606              		.cfi_offset 14, -4
 3607 0002 85B0     		sub	sp, sp, #20
 3608              	.LCFI173:
 3609              		.cfi_def_cfa_offset 32
 3610 0004 00AF     		add	r7, sp, #0
 3611              	.LCFI174:
 3612              		.cfi_def_cfa_register 7
 3613 0006 7860     		str	r0, [r7, #4]
1635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t* tmp;
1636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 3614              		.loc 1 1636 0
 3615 0008 7B68     		ldr	r3, [r7, #4]
 3616 000a B3F85C30 		ldrh	r3, [r3, #92]	@ movhi
 3617 000e FB81     		strh	r3, [r7, #14]	@ movhi
1637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
1639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
 3618              		.loc 1 1639 0
 3619 0010 7B68     		ldr	r3, [r7, #4]
 3620 0012 93F86A30 		ldrb	r3, [r3, #106]
 3621 0016 DBB2     		uxtb	r3, r3
 3622 0018 222B     		cmp	r3, #34
 3623 001a 4FD1     		bne	.L176
1640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 3624              		.loc 1 1642 0
 3625 001c 7B68     		ldr	r3, [r7, #4]
 3626 001e 9B68     		ldr	r3, [r3, #8]
 3627 0020 B3F5805F 		cmp	r3, #4096
 3628 0024 15D1     		bne	.L177
 3629              		.loc 1 1642 0 is_stmt 0 discriminator 1
 3630 0026 7B68     		ldr	r3, [r7, #4]
 3631 0028 1B69     		ldr	r3, [r3, #16]
 3632 002a 002B     		cmp	r3, #0
 3633 002c 11D1     		bne	.L177
1643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr ;
 3634              		.loc 1 1644 0 is_stmt 1
 3635 002e 7B68     		ldr	r3, [r7, #4]
 3636 0030 5B6D     		ldr	r3, [r3, #84]
 3637 0032 BB60     		str	r3, [r7, #8]
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 3638              		.loc 1 1645 0
 3639 0034 7B68     		ldr	r3, [r7, #4]
 3640 0036 1B68     		ldr	r3, [r3]
 3641 0038 5B6A     		ldr	r3, [r3, #36]
 3642 003a 9AB2     		uxth	r2, r3
 3643 003c FB89     		ldrh	r3, [r7, #14]	@ movhi
 3644 003e 1340     		ands	r3, r3, r2
 3645 0040 9AB2     		uxth	r2, r3
 3646 0042 BB68     		ldr	r3, [r7, #8]
 3647 0044 1A80     		strh	r2, [r3]	@ movhi
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->pRxBuffPtr +=2;
 3648              		.loc 1 1646 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 93


 3649 0046 7B68     		ldr	r3, [r7, #4]
 3650 0048 5B6D     		ldr	r3, [r3, #84]
 3651 004a 9A1C     		adds	r2, r3, #2
 3652 004c 7B68     		ldr	r3, [r7, #4]
 3653 004e 5A65     		str	r2, [r3, #84]
 3654 0050 0DE0     		b	.L178
 3655              	.L177:
1647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     else
1649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 3656              		.loc 1 1650 0
 3657 0052 7B68     		ldr	r3, [r7, #4]
 3658 0054 1B68     		ldr	r3, [r3]
 3659 0056 5B6A     		ldr	r3, [r3, #36]
 3660 0058 D9B2     		uxtb	r1, r3
 3661 005a FB89     		ldrh	r3, [r7, #14]	@ movhi
 3662 005c DAB2     		uxtb	r2, r3
 3663 005e 7B68     		ldr	r3, [r7, #4]
 3664 0060 5B6D     		ldr	r3, [r3, #84]
 3665 0062 5C1C     		adds	r4, r3, #1
 3666 0064 7868     		ldr	r0, [r7, #4]
 3667 0066 4465     		str	r4, [r0, #84]
 3668 0068 0A40     		ands	r2, r2, r1
 3669 006a D2B2     		uxtb	r2, r2
 3670 006c 1A70     		strb	r2, [r3]
 3671              	.L178:
1651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(--huart->RxXferCount == 0)
 3672              		.loc 1 1653 0
 3673 006e 7B68     		ldr	r3, [r7, #4]
 3674 0070 B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 3675 0074 9BB2     		uxth	r3, r3
 3676 0076 013B     		subs	r3, r3, #1
 3677 0078 9BB2     		uxth	r3, r3
 3678 007a 7A68     		ldr	r2, [r7, #4]
 3679 007c 1946     		mov	r1, r3	@ movhi
 3680 007e A2F85A10 		strh	r1, [r2, #90]	@ movhi
 3681 0082 002B     		cmp	r3, #0
 3682 0084 18D1     		bne	.L179
1654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
1656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 3683              		.loc 1 1656 0
 3684 0086 7B68     		ldr	r3, [r7, #4]
 3685 0088 1B68     		ldr	r3, [r3]
 3686 008a 1A68     		ldr	r2, [r3]
 3687 008c 7B68     		ldr	r3, [r7, #4]
 3688 008e 1B68     		ldr	r3, [r3]
 3689 0090 22F49072 		bic	r2, r2, #288
 3690 0094 1A60     		str	r2, [r3]
1657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3691              		.loc 1 1659 0
 3692 0096 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 94


 3693 0098 1B68     		ldr	r3, [r3]
 3694 009a 9A68     		ldr	r2, [r3, #8]
 3695 009c 7B68     		ldr	r3, [r7, #4]
 3696 009e 1B68     		ldr	r3, [r3]
 3697 00a0 22F00102 		bic	r2, r2, #1
 3698 00a4 9A60     		str	r2, [r3, #8]
1660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
1662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 3699              		.loc 1 1662 0
 3700 00a6 7B68     		ldr	r3, [r7, #4]
 3701 00a8 2022     		movs	r2, #32
 3702 00aa 83F86A20 		strb	r2, [r3, #106]
1663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 3703              		.loc 1 1664 0
 3704 00ae 7868     		ldr	r0, [r7, #4]
 3705 00b0 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
1665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_OK;
 3706              		.loc 1 1666 0
 3707 00b4 0023     		movs	r3, #0
 3708 00b6 0AE0     		b	.L180
 3709              	.L179:
1667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 3710              		.loc 1 1669 0
 3711 00b8 0023     		movs	r3, #0
 3712 00ba 08E0     		b	.L180
 3713              	.L176:
1670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
1674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 3714              		.loc 1 1674 0
 3715 00bc 7B68     		ldr	r3, [r7, #4]
 3716 00be 1B68     		ldr	r3, [r3]
 3717 00c0 9A69     		ldr	r2, [r3, #24]
 3718 00c2 7B68     		ldr	r3, [r7, #4]
 3719 00c4 1B68     		ldr	r3, [r3]
 3720 00c6 42F00802 		orr	r2, r2, #8
 3721 00ca 9A61     		str	r2, [r3, #24]
1675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 3722              		.loc 1 1676 0
 3723 00cc 0223     		movs	r3, #2
 3724              	.L180:
1677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3725              		.loc 1 1678 0
 3726 00ce 1846     		mov	r0, r3
 3727 00d0 1437     		adds	r7, r7, #20
 3728              	.LCFI175:
 3729              		.cfi_def_cfa_offset 12
 3730 00d2 BD46     		mov	sp, r7
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 95


 3731              	.LCFI176:
 3732              		.cfi_def_cfa_register 13
 3733              		@ sp needed
 3734 00d4 90BD     		pop	{r4, r7, pc}
 3735              		.cfi_endproc
 3736              	.LFE170:
 3738              		.section	.text.UART_EndTxTransfer,"ax",%progbits
 3739              		.align	1
 3740              		.syntax unified
 3741              		.thumb
 3742              		.thumb_func
 3743              		.fpu fpv5-sp-d16
 3745              	UART_EndTxTransfer:
 3746              	.LFB171:
1679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
1682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle.
1683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
1686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3747              		.loc 1 1686 0
 3748              		.cfi_startproc
 3749              		@ args = 0, pretend = 0, frame = 8
 3750              		@ frame_needed = 1, uses_anonymous_args = 0
 3751              		@ link register save eliminated.
 3752 0000 80B4     		push	{r7}
 3753              	.LCFI177:
 3754              		.cfi_def_cfa_offset 4
 3755              		.cfi_offset 7, -4
 3756 0002 83B0     		sub	sp, sp, #12
 3757              	.LCFI178:
 3758              		.cfi_def_cfa_offset 16
 3759 0004 00AF     		add	r7, sp, #0
 3760              	.LCFI179:
 3761              		.cfi_def_cfa_register 7
 3762 0006 7860     		str	r0, [r7, #4]
1687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 3763              		.loc 1 1688 0
 3764 0008 7B68     		ldr	r3, [r7, #4]
 3765 000a 1B68     		ldr	r3, [r3]
 3766 000c 1A68     		ldr	r2, [r3]
 3767 000e 7B68     		ldr	r3, [r7, #4]
 3768 0010 1B68     		ldr	r3, [r3]
 3769 0012 22F0C002 		bic	r2, r2, #192
 3770 0016 1A60     		str	r2, [r3]
1689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
1691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3771              		.loc 1 1691 0
 3772 0018 7B68     		ldr	r3, [r7, #4]
 3773 001a 2022     		movs	r2, #32
 3774 001c 83F86920 		strb	r2, [r3, #105]
1692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3775              		.loc 1 1692 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 96


 3776 0020 00BF     		nop
 3777 0022 0C37     		adds	r7, r7, #12
 3778              	.LCFI180:
 3779              		.cfi_def_cfa_offset 4
 3780 0024 BD46     		mov	sp, r7
 3781              	.LCFI181:
 3782              		.cfi_def_cfa_register 13
 3783              		@ sp needed
 3784 0026 5DF8047B 		ldr	r7, [sp], #4
 3785              	.LCFI182:
 3786              		.cfi_restore 7
 3787              		.cfi_def_cfa_offset 0
 3788 002a 7047     		bx	lr
 3789              		.cfi_endproc
 3790              	.LFE171:
 3792              		.section	.text.UART_EndRxTransfer,"ax",%progbits
 3793              		.align	1
 3794              		.syntax unified
 3795              		.thumb
 3796              		.thumb_func
 3797              		.fpu fpv5-sp-d16
 3799              	UART_EndRxTransfer:
 3800              	.LFB172:
1693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
1697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle.
1698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
1701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3801              		.loc 1 1701 0
 3802              		.cfi_startproc
 3803              		@ args = 0, pretend = 0, frame = 8
 3804              		@ frame_needed = 1, uses_anonymous_args = 0
 3805              		@ link register save eliminated.
 3806 0000 80B4     		push	{r7}
 3807              	.LCFI183:
 3808              		.cfi_def_cfa_offset 4
 3809              		.cfi_offset 7, -4
 3810 0002 83B0     		sub	sp, sp, #12
 3811              	.LCFI184:
 3812              		.cfi_def_cfa_offset 16
 3813 0004 00AF     		add	r7, sp, #0
 3814              	.LCFI185:
 3815              		.cfi_def_cfa_register 7
 3816 0006 7860     		str	r0, [r7, #4]
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 3817              		.loc 1 1703 0
 3818 0008 7B68     		ldr	r3, [r7, #4]
 3819 000a 1B68     		ldr	r3, [r3]
 3820 000c 1A68     		ldr	r2, [r3]
 3821 000e 7B68     		ldr	r3, [r7, #4]
 3822 0010 1B68     		ldr	r3, [r3]
 3823 0012 22F49072 		bic	r2, r2, #288
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 97


 3824 0016 1A60     		str	r2, [r3]
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3825              		.loc 1 1704 0
 3826 0018 7B68     		ldr	r3, [r7, #4]
 3827 001a 1B68     		ldr	r3, [r3]
 3828 001c 9A68     		ldr	r2, [r3, #8]
 3829 001e 7B68     		ldr	r3, [r7, #4]
 3830 0020 1B68     		ldr	r3, [r3]
 3831 0022 22F00102 		bic	r2, r2, #1
 3832 0026 9A60     		str	r2, [r3, #8]
1705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
1707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3833              		.loc 1 1707 0
 3834 0028 7B68     		ldr	r3, [r7, #4]
 3835 002a 2022     		movs	r2, #32
 3836 002c 83F86A20 		strb	r2, [r3, #106]
1708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3837              		.loc 1 1708 0
 3838 0030 00BF     		nop
 3839 0032 0C37     		adds	r7, r7, #12
 3840              	.LCFI186:
 3841              		.cfi_def_cfa_offset 4
 3842 0034 BD46     		mov	sp, r7
 3843              	.LCFI187:
 3844              		.cfi_def_cfa_register 13
 3845              		@ sp needed
 3846 0036 5DF8047B 		ldr	r7, [sp], #4
 3847              	.LCFI188:
 3848              		.cfi_restore 7
 3849              		.cfi_def_cfa_offset 0
 3850 003a 7047     		bx	lr
 3851              		.cfi_endproc
 3852              	.LFE172:
 3854              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 3855              		.align	1
 3856              		.global	HAL_MultiProcessor_EnableMuteMode
 3857              		.syntax unified
 3858              		.thumb
 3859              		.thumb_func
 3860              		.fpu fpv5-sp-d16
 3862              	HAL_MultiProcessor_EnableMuteMode:
 3863              	.LFB173:
1709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @}
1712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
1715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *  @brief   UART control functions
1716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
1717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @verbatim
1718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
1719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
1721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     [..]
1722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 98


1723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_UART_GetState() API is helpful to check in run-time the state of the UART peripheral.
1724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
1725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
1726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
1727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
1728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
1729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
1730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
1731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
1732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
1733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
1734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 	 (+) HAL_MultiProcessorEx_AddressLength_Set() API optionally sets the UART node address
1735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****          detection length to more than 4 bits for multiprocessor address mark wake up.
1736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @endverbatim
1737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
1738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Enable UART in mute mode (doesn't mean UART enters mute mode;
1742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called)
1743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle
1744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
1747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3864              		.loc 1 1747 0
 3865              		.cfi_startproc
 3866              		@ args = 0, pretend = 0, frame = 8
 3867              		@ frame_needed = 1, uses_anonymous_args = 0
 3868 0000 80B5     		push	{r7, lr}
 3869              	.LCFI189:
 3870              		.cfi_def_cfa_offset 8
 3871              		.cfi_offset 7, -8
 3872              		.cfi_offset 14, -4
 3873 0002 82B0     		sub	sp, sp, #8
 3874              	.LCFI190:
 3875              		.cfi_def_cfa_offset 16
 3876 0004 00AF     		add	r7, sp, #0
 3877              	.LCFI191:
 3878              		.cfi_def_cfa_register 7
 3879 0006 7860     		str	r0, [r7, #4]
1748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
1749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 3880              		.loc 1 1749 0
 3881 0008 7B68     		ldr	r3, [r7, #4]
 3882 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 3883 000e 012B     		cmp	r3, #1
 3884 0010 01D1     		bne	.L184
 3885              		.loc 1 1749 0 is_stmt 0 discriminator 1
 3886 0012 0223     		movs	r3, #2
 3887 0014 17E0     		b	.L185
 3888              	.L184:
 3889              		.loc 1 1749 0 discriminator 2
 3890 0016 7B68     		ldr	r3, [r7, #4]
 3891 0018 0122     		movs	r2, #1
 3892 001a 83F86820 		strb	r2, [r3, #104]
1750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 99


1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3893              		.loc 1 1751 0 is_stmt 1 discriminator 2
 3894 001e 7B68     		ldr	r3, [r7, #4]
 3895 0020 2422     		movs	r2, #36
 3896 0022 83F86920 		strb	r2, [r3, #105]
1752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
1754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
 3897              		.loc 1 1754 0 discriminator 2
 3898 0026 7B68     		ldr	r3, [r7, #4]
 3899 0028 1B68     		ldr	r3, [r3]
 3900 002a 1A68     		ldr	r2, [r3]
 3901 002c 7B68     		ldr	r3, [r7, #4]
 3902 002e 1B68     		ldr	r3, [r3]
 3903 0030 42F40052 		orr	r2, r2, #8192
 3904 0034 1A60     		str	r2, [r3]
1755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3905              		.loc 1 1756 0 discriminator 2
 3906 0036 7B68     		ldr	r3, [r7, #4]
 3907 0038 2022     		movs	r2, #32
 3908 003a 83F86920 		strb	r2, [r3, #105]
1757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 3909              		.loc 1 1758 0 discriminator 2
 3910 003e 7868     		ldr	r0, [r7, #4]
 3911 0040 FFF7FEFF 		bl	UART_CheckIdleState
 3912 0044 0346     		mov	r3, r0
 3913              	.L185:
1759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3914              		.loc 1 1759 0
 3915 0046 1846     		mov	r0, r3
 3916 0048 0837     		adds	r7, r7, #8
 3917              	.LCFI192:
 3918              		.cfi_def_cfa_offset 8
 3919 004a BD46     		mov	sp, r7
 3920              	.LCFI193:
 3921              		.cfi_def_cfa_register 13
 3922              		@ sp needed
 3923 004c 80BD     		pop	{r7, pc}
 3924              		.cfi_endproc
 3925              	.LFE173:
 3927              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 3928              		.align	1
 3929              		.global	HAL_MultiProcessor_DisableMuteMode
 3930              		.syntax unified
 3931              		.thumb
 3932              		.thumb_func
 3933              		.fpu fpv5-sp-d16
 3935              	HAL_MultiProcessor_DisableMuteMode:
 3936              	.LFB174:
1760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Disable UART mute mode (doesn't mean it actually wakes up the software,
1763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * as it may not have been in mute mode at this very moment).
1764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 100


1766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
1768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3937              		.loc 1 1768 0
 3938              		.cfi_startproc
 3939              		@ args = 0, pretend = 0, frame = 8
 3940              		@ frame_needed = 1, uses_anonymous_args = 0
 3941 0000 80B5     		push	{r7, lr}
 3942              	.LCFI194:
 3943              		.cfi_def_cfa_offset 8
 3944              		.cfi_offset 7, -8
 3945              		.cfi_offset 14, -4
 3946 0002 82B0     		sub	sp, sp, #8
 3947              	.LCFI195:
 3948              		.cfi_def_cfa_offset 16
 3949 0004 00AF     		add	r7, sp, #0
 3950              	.LCFI196:
 3951              		.cfi_def_cfa_register 7
 3952 0006 7860     		str	r0, [r7, #4]
1769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
1770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 3953              		.loc 1 1770 0
 3954 0008 7B68     		ldr	r3, [r7, #4]
 3955 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 3956 000e 012B     		cmp	r3, #1
 3957 0010 01D1     		bne	.L187
 3958              		.loc 1 1770 0 is_stmt 0 discriminator 1
 3959 0012 0223     		movs	r3, #2
 3960 0014 17E0     		b	.L188
 3961              	.L187:
 3962              		.loc 1 1770 0 discriminator 2
 3963 0016 7B68     		ldr	r3, [r7, #4]
 3964 0018 0122     		movs	r2, #1
 3965 001a 83F86820 		strb	r2, [r3, #104]
1771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3966              		.loc 1 1772 0 is_stmt 1 discriminator 2
 3967 001e 7B68     		ldr	r3, [r7, #4]
 3968 0020 2422     		movs	r2, #36
 3969 0022 83F86920 		strb	r2, [r3, #105]
1773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    /* Disable USART mute mode by clearing the MME bit in the CR1 register */
1775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
 3970              		.loc 1 1775 0 discriminator 2
 3971 0026 7B68     		ldr	r3, [r7, #4]
 3972 0028 1B68     		ldr	r3, [r3]
 3973 002a 1A68     		ldr	r2, [r3]
 3974 002c 7B68     		ldr	r3, [r7, #4]
 3975 002e 1B68     		ldr	r3, [r3]
 3976 0030 22F40052 		bic	r2, r2, #8192
 3977 0034 1A60     		str	r2, [r3]
1776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3978              		.loc 1 1777 0 discriminator 2
 3979 0036 7B68     		ldr	r3, [r7, #4]
 3980 0038 2022     		movs	r2, #32
 3981 003a 83F86920 		strb	r2, [r3, #105]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 101


1778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 3982              		.loc 1 1779 0 discriminator 2
 3983 003e 7868     		ldr	r0, [r7, #4]
 3984 0040 FFF7FEFF 		bl	UART_CheckIdleState
 3985 0044 0346     		mov	r3, r0
 3986              	.L188:
1780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3987              		.loc 1 1780 0
 3988 0046 1846     		mov	r0, r3
 3989 0048 0837     		adds	r7, r7, #8
 3990              	.LCFI197:
 3991              		.cfi_def_cfa_offset 8
 3992 004a BD46     		mov	sp, r7
 3993              	.LCFI198:
 3994              		.cfi_def_cfa_register 13
 3995              		@ sp needed
 3996 004c 80BD     		pop	{r7, pc}
 3997              		.cfi_endproc
 3998              	.LFE174:
 4000              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 4001              		.align	1
 4002              		.global	HAL_MultiProcessor_EnterMuteMode
 4003              		.syntax unified
 4004              		.thumb
 4005              		.thumb_func
 4006              		.fpu fpv5-sp-d16
 4008              	HAL_MultiProcessor_EnterMuteMode:
 4009              	.LFB175:
1781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
1784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
1785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 4010              		.loc 1 1789 0
 4011              		.cfi_startproc
 4012              		@ args = 0, pretend = 0, frame = 8
 4013              		@ frame_needed = 1, uses_anonymous_args = 0
 4014              		@ link register save eliminated.
 4015 0000 80B4     		push	{r7}
 4016              	.LCFI199:
 4017              		.cfi_def_cfa_offset 4
 4018              		.cfi_offset 7, -4
 4019 0002 83B0     		sub	sp, sp, #12
 4020              	.LCFI200:
 4021              		.cfi_def_cfa_offset 16
 4022 0004 00AF     		add	r7, sp, #0
 4023              	.LCFI201:
 4024              		.cfi_def_cfa_register 7
 4025 0006 7860     		str	r0, [r7, #4]
1790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 4026              		.loc 1 1790 0
 4027 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 102


 4028 000a 1B68     		ldr	r3, [r3]
 4029 000c 9A69     		ldr	r2, [r3, #24]
 4030 000e 7B68     		ldr	r3, [r7, #4]
 4031 0010 1B68     		ldr	r3, [r3]
 4032 0012 42F00402 		orr	r2, r2, #4
 4033 0016 9A61     		str	r2, [r3, #24]
1791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 4034              		.loc 1 1791 0
 4035 0018 00BF     		nop
 4036 001a 0C37     		adds	r7, r7, #12
 4037              	.LCFI202:
 4038              		.cfi_def_cfa_offset 4
 4039 001c BD46     		mov	sp, r7
 4040              	.LCFI203:
 4041              		.cfi_def_cfa_register 13
 4042              		@ sp needed
 4043 001e 5DF8047B 		ldr	r7, [sp], #4
 4044              	.LCFI204:
 4045              		.cfi_restore 7
 4046              		.cfi_def_cfa_offset 0
 4047 0022 7047     		bx	lr
 4048              		.cfi_endproc
 4049              	.LFE175:
 4051              		.section	.text.HAL_UART_GetState,"ax",%progbits
 4052              		.align	1
 4053              		.global	HAL_UART_GetState
 4054              		.syntax unified
 4055              		.thumb
 4056              		.thumb_func
 4057              		.fpu fpv5-sp-d16
 4059              	HAL_UART_GetState:
 4060              	.LFB176:
1792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief return the UART state
1797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL state
1799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
1801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 4061              		.loc 1 1801 0
 4062              		.cfi_startproc
 4063              		@ args = 0, pretend = 0, frame = 16
 4064              		@ frame_needed = 1, uses_anonymous_args = 0
 4065              		@ link register save eliminated.
 4066 0000 80B4     		push	{r7}
 4067              	.LCFI205:
 4068              		.cfi_def_cfa_offset 4
 4069              		.cfi_offset 7, -4
 4070 0002 85B0     		sub	sp, sp, #20
 4071              	.LCFI206:
 4072              		.cfi_def_cfa_offset 24
 4073 0004 00AF     		add	r7, sp, #0
 4074              	.LCFI207:
 4075              		.cfi_def_cfa_register 7
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 103


 4076 0006 7860     		str	r0, [r7, #4]
1802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
 4077              		.loc 1 1802 0
 4078 0008 0023     		movs	r3, #0
 4079 000a FB60     		str	r3, [r7, #12]
 4080 000c 0023     		movs	r3, #0
 4081 000e BB60     		str	r3, [r7, #8]
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   temp1 = huart->gState;
 4082              		.loc 1 1803 0
 4083 0010 7B68     		ldr	r3, [r7, #4]
 4084 0012 93F86930 		ldrb	r3, [r3, #105]
 4085 0016 DBB2     		uxtb	r3, r3
 4086 0018 FB60     		str	r3, [r7, #12]
1804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   temp2 = huart->RxState;
 4087              		.loc 1 1804 0
 4088 001a 7B68     		ldr	r3, [r7, #4]
 4089 001c 93F86A30 		ldrb	r3, [r3, #106]
 4090 0020 DBB2     		uxtb	r3, r3
 4091 0022 BB60     		str	r3, [r7, #8]
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
 4092              		.loc 1 1806 0
 4093 0024 FB68     		ldr	r3, [r7, #12]
 4094 0026 DAB2     		uxtb	r2, r3
 4095 0028 BB68     		ldr	r3, [r7, #8]
 4096 002a DBB2     		uxtb	r3, r3
 4097 002c 1343     		orrs	r3, r3, r2
 4098 002e DBB2     		uxtb	r3, r3
1807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 4099              		.loc 1 1807 0
 4100 0030 1846     		mov	r0, r3
 4101 0032 1437     		adds	r7, r7, #20
 4102              	.LCFI208:
 4103              		.cfi_def_cfa_offset 4
 4104 0034 BD46     		mov	sp, r7
 4105              	.LCFI209:
 4106              		.cfi_def_cfa_register 13
 4107              		@ sp needed
 4108 0036 5DF8047B 		ldr	r7, [sp], #4
 4109              	.LCFI210:
 4110              		.cfi_restore 7
 4111              		.cfi_def_cfa_offset 0
 4112 003a 7047     		bx	lr
 4113              		.cfi_endproc
 4114              	.LFE176:
 4116              		.section	.text.HAL_UART_GetError,"ax",%progbits
 4117              		.align	1
 4118              		.global	HAL_UART_GetError
 4119              		.syntax unified
 4120              		.thumb
 4121              		.thumb_func
 4122              		.fpu fpv5-sp-d16
 4124              	HAL_UART_GetError:
 4125              	.LFB177:
1808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** * @brief  Return the UART error code
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 104


1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** * @param  huart  pointer to a UART_HandleTypeDef structure that contains
1812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *              the configuration information for the specified UART.
1813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** * @retval UART Error Code
1814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** */
1815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
1816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 4126              		.loc 1 1816 0
 4127              		.cfi_startproc
 4128              		@ args = 0, pretend = 0, frame = 8
 4129              		@ frame_needed = 1, uses_anonymous_args = 0
 4130              		@ link register save eliminated.
 4131 0000 80B4     		push	{r7}
 4132              	.LCFI211:
 4133              		.cfi_def_cfa_offset 4
 4134              		.cfi_offset 7, -4
 4135 0002 83B0     		sub	sp, sp, #12
 4136              	.LCFI212:
 4137              		.cfi_def_cfa_offset 16
 4138 0004 00AF     		add	r7, sp, #0
 4139              	.LCFI213:
 4140              		.cfi_def_cfa_register 7
 4141 0006 7860     		str	r0, [r7, #4]
1817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return huart->ErrorCode;
 4142              		.loc 1 1817 0
 4143 0008 7B68     		ldr	r3, [r7, #4]
 4144 000a DB6E     		ldr	r3, [r3, #108]
1818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 4145              		.loc 1 1818 0
 4146 000c 1846     		mov	r0, r3
 4147 000e 0C37     		adds	r7, r7, #12
 4148              	.LCFI214:
 4149              		.cfi_def_cfa_offset 4
 4150 0010 BD46     		mov	sp, r7
 4151              	.LCFI215:
 4152              		.cfi_def_cfa_register 13
 4153              		@ sp needed
 4154 0012 5DF8047B 		ldr	r7, [sp], #4
 4155              	.LCFI216:
 4156              		.cfi_restore 7
 4157              		.cfi_def_cfa_offset 0
 4158 0016 7047     		bx	lr
 4159              		.cfi_endproc
 4160              	.LFE177:
 4162              		.section	.text.UART_SetConfig,"ax",%progbits
 4163              		.align	1
 4164              		.global	UART_SetConfig
 4165              		.syntax unified
 4166              		.thumb
 4167              		.thumb_func
 4168              		.fpu fpv5-sp-d16
 4170              	UART_SetConfig:
 4171              	.LFB178:
1819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Configure the UART peripheral
1822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 105


1824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
1826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 4172              		.loc 1 1826 0
 4173              		.cfi_startproc
 4174              		@ args = 0, pretend = 0, frame = 24
 4175              		@ frame_needed = 1, uses_anonymous_args = 0
 4176 0000 80B5     		push	{r7, lr}
 4177              	.LCFI217:
 4178              		.cfi_def_cfa_offset 8
 4179              		.cfi_offset 7, -8
 4180              		.cfi_offset 14, -4
 4181 0002 86B0     		sub	sp, sp, #24
 4182              	.LCFI218:
 4183              		.cfi_def_cfa_offset 32
 4184 0004 00AF     		add	r7, sp, #0
 4185              	.LCFI219:
 4186              		.cfi_def_cfa_register 7
 4187 0006 7860     		str	r0, [r7, #4]
1827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
 4188              		.loc 1 1827 0
 4189 0008 0023     		movs	r3, #0
 4190 000a FB60     		str	r3, [r7, #12]
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
 4191              		.loc 1 1828 0
 4192 000c 1023     		movs	r3, #16
 4193 000e FB75     		strb	r3, [r7, #23]
1829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 4194              		.loc 1 1829 0
 4195 0010 0023     		movs	r3, #0
 4196 0012 7B81     		strh	r3, [r7, #10]	@ movhi
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t usartdiv                   = 0x0000U;
 4197              		.loc 1 1830 0
 4198 0014 0023     		movs	r3, #0
 4199 0016 BB82     		strh	r3, [r7, #20]	@ movhi
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 4200              		.loc 1 1831 0
 4201 0018 0023     		movs	r3, #0
 4202 001a FB74     		strb	r3, [r7, #19]
1832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the parameters */
1834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
1835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
1836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
1837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
1838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
1839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
1840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
1841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
1845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *  the UART Word Length, Parity, Mode and oversampling:
1846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *  set the M bits according to huart->Init.WordLength value
1847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *  set PCE and PS bits according to huart->Init.Parity value
1848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *  set TE and RE bits according to huart->Init.Mode value
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *  set OVER8 bit according to huart->Init.OverSampling value */
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 106


1850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 4203              		.loc 1 1850 0
 4204 001c 7B68     		ldr	r3, [r7, #4]
 4205 001e 9A68     		ldr	r2, [r3, #8]
 4206 0020 7B68     		ldr	r3, [r7, #4]
 4207 0022 1B69     		ldr	r3, [r3, #16]
 4208 0024 1A43     		orrs	r2, r2, r3
 4209 0026 7B68     		ldr	r3, [r7, #4]
 4210 0028 5B69     		ldr	r3, [r3, #20]
 4211 002a 1A43     		orrs	r2, r2, r3
 4212 002c 7B68     		ldr	r3, [r7, #4]
 4213 002e DB69     		ldr	r3, [r3, #28]
 4214 0030 1343     		orrs	r3, r3, r2
 4215 0032 FB60     		str	r3, [r7, #12]
1851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 4216              		.loc 1 1851 0
 4217 0034 7B68     		ldr	r3, [r7, #4]
 4218 0036 1B68     		ldr	r3, [r3]
 4219 0038 1A68     		ldr	r2, [r3]
 4220 003a AD4B     		ldr	r3, .L278
 4221 003c 1340     		ands	r3, r3, r2
 4222 003e 7A68     		ldr	r2, [r7, #4]
 4223 0040 1268     		ldr	r2, [r2]
 4224 0042 F968     		ldr	r1, [r7, #12]
 4225 0044 0B43     		orrs	r3, r3, r1
 4226 0046 1360     		str	r3, [r2]
1852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
1854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
1855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    * to huart->Init.StopBits value */
1856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 4227              		.loc 1 1856 0
 4228 0048 7B68     		ldr	r3, [r7, #4]
 4229 004a 1B68     		ldr	r3, [r3]
 4230 004c 5B68     		ldr	r3, [r3, #4]
 4231 004e 23F44051 		bic	r1, r3, #12288
 4232 0052 7B68     		ldr	r3, [r7, #4]
 4233 0054 DA68     		ldr	r2, [r3, #12]
 4234 0056 7B68     		ldr	r3, [r7, #4]
 4235 0058 1B68     		ldr	r3, [r3]
 4236 005a 0A43     		orrs	r2, r2, r1
 4237 005c 5A60     		str	r2, [r3, #4]
1857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
1859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Configure
1860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    * - UART HardWare Flow Control: set CTSE and RTSE bits according
1861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *   to huart->Init.HwFlowCtl value
1862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    * - one-bit sampling method versus three samples' majority rule according
1863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *   to huart->Init.OneBitSampling */
1864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl | huart->Init.OneBitSampling ;
 4238              		.loc 1 1864 0
 4239 005e 7B68     		ldr	r3, [r7, #4]
 4240 0060 9A69     		ldr	r2, [r3, #24]
 4241 0062 7B68     		ldr	r3, [r7, #4]
 4242 0064 1B6A     		ldr	r3, [r3, #32]
 4243 0066 1343     		orrs	r3, r3, r2
 4244 0068 FB60     		str	r3, [r7, #12]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 107


1865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 4245              		.loc 1 1865 0
 4246 006a 7B68     		ldr	r3, [r7, #4]
 4247 006c 1B68     		ldr	r3, [r3]
 4248 006e 9B68     		ldr	r3, [r3, #8]
 4249 0070 23F43061 		bic	r1, r3, #2816
 4250 0074 7B68     		ldr	r3, [r7, #4]
 4251 0076 1B68     		ldr	r3, [r3]
 4252 0078 FA68     		ldr	r2, [r7, #12]
 4253 007a 0A43     		orrs	r2, r2, r1
 4254 007c 9A60     		str	r2, [r3, #8]
1866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
1868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
 4255              		.loc 1 1868 0
 4256 007e 7B68     		ldr	r3, [r7, #4]
 4257 0080 1B68     		ldr	r3, [r3]
 4258 0082 9C4A     		ldr	r2, .L278+4
 4259 0084 9342     		cmp	r3, r2
 4260 0086 1FD1     		bne	.L195
 4261              		.loc 1 1868 0 is_stmt 0 discriminator 1
 4262 0088 9B4B     		ldr	r3, .L278+8
 4263 008a D3F89030 		ldr	r3, [r3, #144]
 4264 008e 03F00303 		and	r3, r3, #3
 4265 0092 032B     		cmp	r3, #3
 4266 0094 00F22981 		bhi	.L276
 4267 0098 01A2     		adr	r2, .L198
 4268 009a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4269 009e 00BF     		.p2align 2
 4270              	.L198:
 4271 00a0 B1000000 		.word	.L197+1
 4272 00a4 BD000000 		.word	.L199+1
 4273 00a8 B7000000 		.word	.L200+1
 4274 00ac C3000000 		.word	.L201+1
 4275              		.p2align 1
 4276              	.L197:
 4277              		.loc 1 1868 0 discriminator 4
 4278 00b0 0123     		movs	r3, #1
 4279 00b2 FB75     		strb	r3, [r7, #23]
 4280 00b4 19E1     		b	.L276
 4281              	.L200:
 4282              		.loc 1 1868 0 discriminator 6
 4283 00b6 0223     		movs	r3, #2
 4284 00b8 FB75     		strb	r3, [r7, #23]
 4285 00ba 16E1     		b	.L276
 4286              	.L199:
 4287              		.loc 1 1868 0 discriminator 5
 4288 00bc 0423     		movs	r3, #4
 4289 00be FB75     		strb	r3, [r7, #23]
 4290 00c0 13E1     		b	.L276
 4291              	.L201:
 4292              		.loc 1 1868 0 discriminator 7
 4293 00c2 0823     		movs	r3, #8
 4294 00c4 FB75     		strb	r3, [r7, #23]
 4295 00c6 10E1     		b	.L276
 4296              	.L195:
 4297              		.loc 1 1868 0 discriminator 2
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 108


 4298 00c8 7B68     		ldr	r3, [r7, #4]
 4299 00ca 1B68     		ldr	r3, [r3]
 4300 00cc 8B4A     		ldr	r2, .L278+12
 4301 00ce 9342     		cmp	r3, r2
 4302 00d0 30D1     		bne	.L204
 4303              		.loc 1 1868 0 discriminator 13
 4304 00d2 894B     		ldr	r3, .L278+8
 4305 00d4 D3F89030 		ldr	r3, [r3, #144]
 4306 00d8 03F00C03 		and	r3, r3, #12
 4307 00dc 0C2B     		cmp	r3, #12
 4308 00de 00F20481 		bhi	.L276
 4309 00e2 01A2     		adr	r2, .L207
 4310 00e4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4311              		.p2align 2
 4312              	.L207:
 4313 00e8 1D010000 		.word	.L206+1
 4314 00ec EB020000 		.word	.L276+1
 4315 00f0 EB020000 		.word	.L276+1
 4316 00f4 EB020000 		.word	.L276+1
 4317 00f8 29010000 		.word	.L208+1
 4318 00fc EB020000 		.word	.L276+1
 4319 0100 EB020000 		.word	.L276+1
 4320 0104 EB020000 		.word	.L276+1
 4321 0108 23010000 		.word	.L209+1
 4322 010c EB020000 		.word	.L276+1
 4323 0110 EB020000 		.word	.L276+1
 4324 0114 EB020000 		.word	.L276+1
 4325 0118 2F010000 		.word	.L210+1
 4326              		.p2align 1
 4327              	.L206:
 4328              		.loc 1 1868 0 discriminator 16
 4329 011c 0023     		movs	r3, #0
 4330 011e FB75     		strb	r3, [r7, #23]
 4331 0120 E3E0     		b	.L276
 4332              	.L209:
 4333              		.loc 1 1868 0 discriminator 18
 4334 0122 0223     		movs	r3, #2
 4335 0124 FB75     		strb	r3, [r7, #23]
 4336 0126 E0E0     		b	.L276
 4337              	.L208:
 4338              		.loc 1 1868 0 discriminator 17
 4339 0128 0423     		movs	r3, #4
 4340 012a FB75     		strb	r3, [r7, #23]
 4341 012c DDE0     		b	.L276
 4342              	.L210:
 4343              		.loc 1 1868 0 discriminator 19
 4344 012e 0823     		movs	r3, #8
 4345 0130 FB75     		strb	r3, [r7, #23]
 4346 0132 DAE0     		b	.L276
 4347              	.L204:
 4348              		.loc 1 1868 0 discriminator 14
 4349 0134 7B68     		ldr	r3, [r7, #4]
 4350 0136 1B68     		ldr	r3, [r3]
 4351 0138 714A     		ldr	r2, .L278+16
 4352 013a 9342     		cmp	r3, r2
 4353 013c 1CD1     		bne	.L212
 4354              		.loc 1 1868 0 discriminator 25
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 109


 4355 013e 6E4B     		ldr	r3, .L278+8
 4356 0140 D3F89030 		ldr	r3, [r3, #144]
 4357 0144 03F03003 		and	r3, r3, #48
 4358 0148 102B     		cmp	r3, #16
 4359 014a 0FD0     		beq	.L214
 4360 014c 102B     		cmp	r3, #16
 4361 014e 02D8     		bhi	.L215
 4362 0150 002B     		cmp	r3, #0
 4363 0152 05D0     		beq	.L216
 4364 0154 C9E0     		b	.L276
 4365              	.L215:
 4366 0156 202B     		cmp	r3, #32
 4367 0158 05D0     		beq	.L217
 4368 015a 302B     		cmp	r3, #48
 4369 015c 09D0     		beq	.L218
 4370 015e C4E0     		b	.L276
 4371              	.L216:
 4372              		.loc 1 1868 0 discriminator 28
 4373 0160 0023     		movs	r3, #0
 4374 0162 FB75     		strb	r3, [r7, #23]
 4375 0164 C1E0     		b	.L276
 4376              	.L217:
 4377              		.loc 1 1868 0 discriminator 30
 4378 0166 0223     		movs	r3, #2
 4379 0168 FB75     		strb	r3, [r7, #23]
 4380 016a BEE0     		b	.L276
 4381              	.L214:
 4382              		.loc 1 1868 0 discriminator 29
 4383 016c 0423     		movs	r3, #4
 4384 016e FB75     		strb	r3, [r7, #23]
 4385 0170 BBE0     		b	.L276
 4386              	.L218:
 4387              		.loc 1 1868 0 discriminator 31
 4388 0172 0823     		movs	r3, #8
 4389 0174 FB75     		strb	r3, [r7, #23]
 4390 0176 B8E0     		b	.L276
 4391              	.L212:
 4392              		.loc 1 1868 0 discriminator 26
 4393 0178 7B68     		ldr	r3, [r7, #4]
 4394 017a 1B68     		ldr	r3, [r3]
 4395 017c 614A     		ldr	r2, .L278+20
 4396 017e 9342     		cmp	r3, r2
 4397 0180 1CD1     		bne	.L220
 4398              		.loc 1 1868 0 discriminator 37
 4399 0182 5D4B     		ldr	r3, .L278+8
 4400 0184 D3F89030 		ldr	r3, [r3, #144]
 4401 0188 03F0C003 		and	r3, r3, #192
 4402 018c 402B     		cmp	r3, #64
 4403 018e 0FD0     		beq	.L222
 4404 0190 402B     		cmp	r3, #64
 4405 0192 02D8     		bhi	.L223
 4406 0194 002B     		cmp	r3, #0
 4407 0196 05D0     		beq	.L224
 4408 0198 A7E0     		b	.L276
 4409              	.L223:
 4410 019a 802B     		cmp	r3, #128
 4411 019c 05D0     		beq	.L225
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 110


 4412 019e C02B     		cmp	r3, #192
 4413 01a0 09D0     		beq	.L226
 4414 01a2 A2E0     		b	.L276
 4415              	.L224:
 4416              		.loc 1 1868 0 discriminator 40
 4417 01a4 0023     		movs	r3, #0
 4418 01a6 FB75     		strb	r3, [r7, #23]
 4419 01a8 9FE0     		b	.L276
 4420              	.L225:
 4421              		.loc 1 1868 0 discriminator 42
 4422 01aa 0223     		movs	r3, #2
 4423 01ac FB75     		strb	r3, [r7, #23]
 4424 01ae 9CE0     		b	.L276
 4425              	.L222:
 4426              		.loc 1 1868 0 discriminator 41
 4427 01b0 0423     		movs	r3, #4
 4428 01b2 FB75     		strb	r3, [r7, #23]
 4429 01b4 99E0     		b	.L276
 4430              	.L226:
 4431              		.loc 1 1868 0 discriminator 43
 4432 01b6 0823     		movs	r3, #8
 4433 01b8 FB75     		strb	r3, [r7, #23]
 4434 01ba 96E0     		b	.L276
 4435              	.L220:
 4436              		.loc 1 1868 0 discriminator 38
 4437 01bc 7B68     		ldr	r3, [r7, #4]
 4438 01be 1B68     		ldr	r3, [r3]
 4439 01c0 514A     		ldr	r2, .L278+24
 4440 01c2 9342     		cmp	r3, r2
 4441 01c4 20D1     		bne	.L228
 4442              		.loc 1 1868 0 discriminator 49
 4443 01c6 4C4B     		ldr	r3, .L278+8
 4444 01c8 D3F89030 		ldr	r3, [r3, #144]
 4445 01cc 03F44073 		and	r3, r3, #768
 4446 01d0 B3F5807F 		cmp	r3, #256
 4447 01d4 12D0     		beq	.L230
 4448 01d6 B3F5807F 		cmp	r3, #256
 4449 01da 02D8     		bhi	.L231
 4450 01dc 002B     		cmp	r3, #0
 4451 01de 07D0     		beq	.L232
 4452 01e0 83E0     		b	.L276
 4453              	.L231:
 4454 01e2 B3F5007F 		cmp	r3, #512
 4455 01e6 06D0     		beq	.L233
 4456 01e8 B3F5407F 		cmp	r3, #768
 4457 01ec 09D0     		beq	.L234
 4458 01ee 7CE0     		b	.L276
 4459              	.L232:
 4460              		.loc 1 1868 0 discriminator 52
 4461 01f0 0023     		movs	r3, #0
 4462 01f2 FB75     		strb	r3, [r7, #23]
 4463 01f4 79E0     		b	.L276
 4464              	.L233:
 4465              		.loc 1 1868 0 discriminator 54
 4466 01f6 0223     		movs	r3, #2
 4467 01f8 FB75     		strb	r3, [r7, #23]
 4468 01fa 76E0     		b	.L276
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 111


 4469              	.L230:
 4470              		.loc 1 1868 0 discriminator 53
 4471 01fc 0423     		movs	r3, #4
 4472 01fe FB75     		strb	r3, [r7, #23]
 4473 0200 73E0     		b	.L276
 4474              	.L234:
 4475              		.loc 1 1868 0 discriminator 55
 4476 0202 0823     		movs	r3, #8
 4477 0204 FB75     		strb	r3, [r7, #23]
 4478 0206 70E0     		b	.L276
 4479              	.L228:
 4480              		.loc 1 1868 0 discriminator 50
 4481 0208 7B68     		ldr	r3, [r7, #4]
 4482 020a 1B68     		ldr	r3, [r3]
 4483 020c 3F4A     		ldr	r2, .L278+28
 4484 020e 9342     		cmp	r3, r2
 4485 0210 20D1     		bne	.L236
 4486              		.loc 1 1868 0 discriminator 61
 4487 0212 394B     		ldr	r3, .L278+8
 4488 0214 D3F89030 		ldr	r3, [r3, #144]
 4489 0218 03F44063 		and	r3, r3, #3072
 4490 021c B3F5806F 		cmp	r3, #1024
 4491 0220 12D0     		beq	.L238
 4492 0222 B3F5806F 		cmp	r3, #1024
 4493 0226 02D8     		bhi	.L239
 4494 0228 002B     		cmp	r3, #0
 4495 022a 07D0     		beq	.L240
 4496 022c 5DE0     		b	.L276
 4497              	.L239:
 4498 022e B3F5006F 		cmp	r3, #2048
 4499 0232 06D0     		beq	.L241
 4500 0234 B3F5406F 		cmp	r3, #3072
 4501 0238 09D0     		beq	.L242
 4502 023a 56E0     		b	.L276
 4503              	.L240:
 4504              		.loc 1 1868 0 discriminator 64
 4505 023c 0123     		movs	r3, #1
 4506 023e FB75     		strb	r3, [r7, #23]
 4507 0240 53E0     		b	.L276
 4508              	.L241:
 4509              		.loc 1 1868 0 discriminator 66
 4510 0242 0223     		movs	r3, #2
 4511 0244 FB75     		strb	r3, [r7, #23]
 4512 0246 50E0     		b	.L276
 4513              	.L238:
 4514              		.loc 1 1868 0 discriminator 65
 4515 0248 0423     		movs	r3, #4
 4516 024a FB75     		strb	r3, [r7, #23]
 4517 024c 4DE0     		b	.L276
 4518              	.L242:
 4519              		.loc 1 1868 0 discriminator 67
 4520 024e 0823     		movs	r3, #8
 4521 0250 FB75     		strb	r3, [r7, #23]
 4522 0252 4AE0     		b	.L276
 4523              	.L236:
 4524              		.loc 1 1868 0 discriminator 62
 4525 0254 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 112


 4526 0256 1B68     		ldr	r3, [r3]
 4527 0258 2D4A     		ldr	r2, .L278+32
 4528 025a 9342     		cmp	r3, r2
 4529 025c 20D1     		bne	.L244
 4530              		.loc 1 1868 0 discriminator 73
 4531 025e 264B     		ldr	r3, .L278+8
 4532 0260 D3F89030 		ldr	r3, [r3, #144]
 4533 0264 03F44053 		and	r3, r3, #12288
 4534 0268 B3F5805F 		cmp	r3, #4096
 4535 026c 12D0     		beq	.L246
 4536 026e B3F5805F 		cmp	r3, #4096
 4537 0272 02D8     		bhi	.L247
 4538 0274 002B     		cmp	r3, #0
 4539 0276 07D0     		beq	.L248
 4540 0278 37E0     		b	.L276
 4541              	.L247:
 4542 027a B3F5005F 		cmp	r3, #8192
 4543 027e 06D0     		beq	.L249
 4544 0280 B3F5405F 		cmp	r3, #12288
 4545 0284 09D0     		beq	.L250
 4546 0286 30E0     		b	.L276
 4547              	.L248:
 4548              		.loc 1 1868 0 discriminator 76
 4549 0288 0023     		movs	r3, #0
 4550 028a FB75     		strb	r3, [r7, #23]
 4551 028c 2DE0     		b	.L276
 4552              	.L249:
 4553              		.loc 1 1868 0 discriminator 78
 4554 028e 0223     		movs	r3, #2
 4555 0290 FB75     		strb	r3, [r7, #23]
 4556 0292 2AE0     		b	.L276
 4557              	.L246:
 4558              		.loc 1 1868 0 discriminator 77
 4559 0294 0423     		movs	r3, #4
 4560 0296 FB75     		strb	r3, [r7, #23]
 4561 0298 27E0     		b	.L276
 4562              	.L250:
 4563              		.loc 1 1868 0 discriminator 79
 4564 029a 0823     		movs	r3, #8
 4565 029c FB75     		strb	r3, [r7, #23]
 4566 029e 24E0     		b	.L276
 4567              	.L244:
 4568              		.loc 1 1868 0 discriminator 74
 4569 02a0 7B68     		ldr	r3, [r7, #4]
 4570 02a2 1B68     		ldr	r3, [r3]
 4571 02a4 1B4A     		ldr	r2, .L278+36
 4572 02a6 9342     		cmp	r3, r2
 4573 02a8 36D1     		bne	.L277
 4574              		.loc 1 1868 0 discriminator 85
 4575 02aa 134B     		ldr	r3, .L278+8
 4576 02ac D3F89030 		ldr	r3, [r3, #144]
 4577 02b0 03F44043 		and	r3, r3, #49152
 4578 02b4 B3F5804F 		cmp	r3, #16384
 4579 02b8 12D0     		beq	.L253
 4580 02ba B3F5804F 		cmp	r3, #16384
 4581 02be 02D8     		bhi	.L254
 4582 02c0 002B     		cmp	r3, #0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 113


 4583 02c2 07D0     		beq	.L255
 4584 02c4 11E0     		b	.L276
 4585              	.L254:
 4586 02c6 B3F5004F 		cmp	r3, #32768
 4587 02ca 06D0     		beq	.L256
 4588 02cc B3F5404F 		cmp	r3, #49152
 4589 02d0 09D0     		beq	.L257
 4590 02d2 0AE0     		b	.L276
 4591              	.L255:
 4592              		.loc 1 1868 0 discriminator 87
 4593 02d4 0023     		movs	r3, #0
 4594 02d6 FB75     		strb	r3, [r7, #23]
 4595 02d8 07E0     		b	.L276
 4596              	.L256:
 4597              		.loc 1 1868 0 discriminator 89
 4598 02da 0223     		movs	r3, #2
 4599 02dc FB75     		strb	r3, [r7, #23]
 4600 02de 04E0     		b	.L276
 4601              	.L253:
 4602              		.loc 1 1868 0 discriminator 88
 4603 02e0 0423     		movs	r3, #4
 4604 02e2 FB75     		strb	r3, [r7, #23]
 4605 02e4 01E0     		b	.L276
 4606              	.L257:
 4607              		.loc 1 1868 0 discriminator 90
 4608 02e6 0823     		movs	r3, #8
 4609 02e8 FB75     		strb	r3, [r7, #23]
 4610              	.L276:
 4611              		.loc 1 1868 0
 4612 02ea 00BF     		nop
 4613 02ec 15E0     		b	.L203
 4614              	.L279:
 4615 02ee 00BF     		.align	2
 4616              	.L278:
 4617 02f0 F369FFEF 		.word	-268473869
 4618 02f4 00100140 		.word	1073811456
 4619 02f8 00380240 		.word	1073887232
 4620 02fc 00440040 		.word	1073759232
 4621 0300 00480040 		.word	1073760256
 4622 0304 004C0040 		.word	1073761280
 4623 0308 00500040 		.word	1073762304
 4624 030c 00140140 		.word	1073812480
 4625 0310 00780040 		.word	1073772544
 4626 0314 007C0040 		.word	1073773568
 4627              	.L277:
 4628 0318 00BF     		nop
 4629              	.L203:
1869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
1871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 4630              		.loc 1 1871 0 is_stmt 1
 4631 031a 7B68     		ldr	r3, [r7, #4]
 4632 031c DB69     		ldr	r3, [r3, #28]
 4633 031e B3F5004F 		cmp	r3, #32768
 4634 0322 6CD1     		bne	.L258
1872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     switch (clocksource)
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 114


 4635              		.loc 1 1873 0
 4636 0324 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4637 0326 082B     		cmp	r3, #8
 4638 0328 54D8     		bhi	.L259
 4639 032a 01A2     		adr	r2, .L261
 4640 032c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4641              		.p2align 2
 4642              	.L261:
 4643 0330 55030000 		.word	.L260+1
 4644 0334 71030000 		.word	.L262+1
 4645 0338 8D030000 		.word	.L263+1
 4646 033c D5030000 		.word	.L259+1
 4647 0340 A3030000 		.word	.L264+1
 4648 0344 D5030000 		.word	.L259+1
 4649 0348 D5030000 		.word	.L259+1
 4650 034c D5030000 		.word	.L259+1
 4651 0350 BF030000 		.word	.L265+1
 4652              		.p2align 1
 4653              	.L260:
1874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK1:
1876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
 4654              		.loc 1 1876 0
 4655 0354 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4656 0358 0346     		mov	r3, r0
 4657 035a 5A00     		lsls	r2, r3, #1
 4658 035c 7B68     		ldr	r3, [r7, #4]
 4659 035e 5B68     		ldr	r3, [r3, #4]
 4660 0360 5B08     		lsrs	r3, r3, #1
 4661 0362 1A44     		add	r2, r2, r3
 4662 0364 7B68     		ldr	r3, [r7, #4]
 4663 0366 5B68     		ldr	r3, [r3, #4]
 4664 0368 B2FBF3F3 		udiv	r3, r2, r3
 4665 036c BB82     		strh	r3, [r7, #20]	@ movhi
1877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 4666              		.loc 1 1877 0
 4667 036e 34E0     		b	.L266
 4668              	.L262:
1878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK2:
1879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
 4669              		.loc 1 1879 0
 4670 0370 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4671 0374 0346     		mov	r3, r0
 4672 0376 5A00     		lsls	r2, r3, #1
 4673 0378 7B68     		ldr	r3, [r7, #4]
 4674 037a 5B68     		ldr	r3, [r3, #4]
 4675 037c 5B08     		lsrs	r3, r3, #1
 4676 037e 1A44     		add	r2, r2, r3
 4677 0380 7B68     		ldr	r3, [r7, #4]
 4678 0382 5B68     		ldr	r3, [r3, #4]
 4679 0384 B2FBF3F3 		udiv	r3, r2, r3
 4680 0388 BB82     		strh	r3, [r7, #20]	@ movhi
1880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 4681              		.loc 1 1880 0
 4682 038a 26E0     		b	.L266
 4683              	.L263:
1881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 115


1882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
 4684              		.loc 1 1882 0
 4685 038c 7B68     		ldr	r3, [r7, #4]
 4686 038e 5B68     		ldr	r3, [r3, #4]
 4687 0390 5A08     		lsrs	r2, r3, #1
 4688 0392 514B     		ldr	r3, .L280
 4689 0394 1344     		add	r3, r3, r2
 4690 0396 7A68     		ldr	r2, [r7, #4]
 4691 0398 5268     		ldr	r2, [r2, #4]
 4692 039a B3FBF2F3 		udiv	r3, r3, r2
 4693 039e BB82     		strh	r3, [r7, #20]	@ movhi
1883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 4694              		.loc 1 1883 0
 4695 03a0 1BE0     		b	.L266
 4696              	.L264:
1884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_SYSCLK:
1885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
 4697              		.loc 1 1885 0
 4698 03a2 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 4699 03a6 0346     		mov	r3, r0
 4700 03a8 5A00     		lsls	r2, r3, #1
 4701 03aa 7B68     		ldr	r3, [r7, #4]
 4702 03ac 5B68     		ldr	r3, [r3, #4]
 4703 03ae 5B08     		lsrs	r3, r3, #1
 4704 03b0 1A44     		add	r2, r2, r3
 4705 03b2 7B68     		ldr	r3, [r7, #4]
 4706 03b4 5B68     		ldr	r3, [r3, #4]
 4707 03b6 B2FBF3F3 		udiv	r3, r2, r3
 4708 03ba BB82     		strh	r3, [r7, #20]	@ movhi
1886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 4709              		.loc 1 1886 0
 4710 03bc 0DE0     		b	.L266
 4711              	.L265:
1887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_LSE:
1888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
 4712              		.loc 1 1888 0
 4713 03be 7B68     		ldr	r3, [r7, #4]
 4714 03c0 5B68     		ldr	r3, [r3, #4]
 4715 03c2 5B08     		lsrs	r3, r3, #1
 4716 03c4 03F58032 		add	r2, r3, #65536
 4717 03c8 7B68     		ldr	r3, [r7, #4]
 4718 03ca 5B68     		ldr	r3, [r3, #4]
 4719 03cc B2FBF3F3 		udiv	r3, r2, r3
 4720 03d0 BB82     		strh	r3, [r7, #20]	@ movhi
1889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 4721              		.loc 1 1889 0
 4722 03d2 02E0     		b	.L266
 4723              	.L259:
1890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
1891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     default:
1892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         ret = HAL_ERROR;
 4724              		.loc 1 1892 0
 4725 03d4 0123     		movs	r3, #1
 4726 03d6 FB74     		strb	r3, [r7, #19]
1893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 4727              		.loc 1 1893 0
 4728 03d8 00BF     		nop
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 116


 4729              	.L266:
1894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     brrtemp = usartdiv & 0xFFF0U;
 4730              		.loc 1 1896 0
 4731 03da BB8A     		ldrh	r3, [r7, #20]	@ movhi
 4732 03dc 23F00F03 		bic	r3, r3, #15
 4733 03e0 7B81     		strh	r3, [r7, #10]	@ movhi
1897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 4734              		.loc 1 1897 0
 4735 03e2 BB8A     		ldrh	r3, [r7, #20]
 4736 03e4 5B10     		asrs	r3, r3, #1
 4737 03e6 9BB2     		uxth	r3, r3
 4738 03e8 03F00703 		and	r3, r3, #7
 4739 03ec 9AB2     		uxth	r2, r3
 4740 03ee 7B89     		ldrh	r3, [r7, #10]	@ movhi
 4741 03f0 1343     		orrs	r3, r3, r2
 4742 03f2 7B81     		strh	r3, [r7, #10]	@ movhi
1898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
 4743              		.loc 1 1898 0
 4744 03f4 7B68     		ldr	r3, [r7, #4]
 4745 03f6 1B68     		ldr	r3, [r3]
 4746 03f8 7A89     		ldrh	r2, [r7, #10]
 4747 03fa DA60     		str	r2, [r3, #12]
 4748 03fc 67E0     		b	.L267
 4749              	.L258:
1899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     switch (clocksource)
 4750              		.loc 1 1902 0
 4751 03fe FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4752 0400 082B     		cmp	r3, #8
 4753 0402 61D8     		bhi	.L268
 4754 0404 01A2     		adr	r2, .L270
 4755 0406 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4756 040a 00BF     		.p2align 2
 4757              	.L270:
 4758 040c 31040000 		.word	.L269+1
 4759 0410 51040000 		.word	.L271+1
 4760 0414 71040000 		.word	.L272+1
 4761 0418 C9040000 		.word	.L268+1
 4762 041c 8D040000 		.word	.L273+1
 4763 0420 C9040000 		.word	.L268+1
 4764 0424 C9040000 		.word	.L268+1
 4765 0428 C9040000 		.word	.L268+1
 4766 042c AD040000 		.word	.L274+1
 4767              		.p2align 1
 4768              	.L269:
1903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK1:
1905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.B
 4769              		.loc 1 1905 0
 4770 0430 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4771 0434 0246     		mov	r2, r0
 4772 0436 7B68     		ldr	r3, [r7, #4]
 4773 0438 5B68     		ldr	r3, [r3, #4]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 117


 4774 043a 5B08     		lsrs	r3, r3, #1
 4775 043c 1A44     		add	r2, r2, r3
 4776 043e 7B68     		ldr	r3, [r7, #4]
 4777 0440 5B68     		ldr	r3, [r3, #4]
 4778 0442 B2FBF3F3 		udiv	r3, r2, r3
 4779 0446 9AB2     		uxth	r2, r3
 4780 0448 7B68     		ldr	r3, [r7, #4]
 4781 044a 1B68     		ldr	r3, [r3]
 4782 044c DA60     		str	r2, [r3, #12]
1906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 4783              		.loc 1 1906 0
 4784 044e 3EE0     		b	.L267
 4785              	.L271:
1907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK2:
1908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.B
 4786              		.loc 1 1908 0
 4787 0450 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4788 0454 0246     		mov	r2, r0
 4789 0456 7B68     		ldr	r3, [r7, #4]
 4790 0458 5B68     		ldr	r3, [r3, #4]
 4791 045a 5B08     		lsrs	r3, r3, #1
 4792 045c 1A44     		add	r2, r2, r3
 4793 045e 7B68     		ldr	r3, [r7, #4]
 4794 0460 5B68     		ldr	r3, [r3, #4]
 4795 0462 B2FBF3F3 		udiv	r3, r2, r3
 4796 0466 9AB2     		uxth	r2, r3
 4797 0468 7B68     		ldr	r3, [r7, #4]
 4798 046a 1B68     		ldr	r3, [r3]
 4799 046c DA60     		str	r2, [r3, #12]
1909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 4800              		.loc 1 1909 0
 4801 046e 2EE0     		b	.L267
 4802              	.L272:
1910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
1911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
 4803              		.loc 1 1911 0
 4804 0470 7B68     		ldr	r3, [r7, #4]
 4805 0472 5B68     		ldr	r3, [r3, #4]
 4806 0474 5A08     		lsrs	r2, r3, #1
 4807 0476 194B     		ldr	r3, .L280+4
 4808 0478 1344     		add	r3, r3, r2
 4809 047a 7A68     		ldr	r2, [r7, #4]
 4810 047c 5268     		ldr	r2, [r2, #4]
 4811 047e B3FBF2F3 		udiv	r3, r3, r2
 4812 0482 9AB2     		uxth	r2, r3
 4813 0484 7B68     		ldr	r3, [r7, #4]
 4814 0486 1B68     		ldr	r3, [r3]
 4815 0488 DA60     		str	r2, [r3, #12]
1912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 4816              		.loc 1 1912 0
 4817 048a 20E0     		b	.L267
 4818              	.L273:
1913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_SYSCLK:
1914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Ini
 4819              		.loc 1 1914 0
 4820 048c FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 4821 0490 0246     		mov	r2, r0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 118


 4822 0492 7B68     		ldr	r3, [r7, #4]
 4823 0494 5B68     		ldr	r3, [r3, #4]
 4824 0496 5B08     		lsrs	r3, r3, #1
 4825 0498 1A44     		add	r2, r2, r3
 4826 049a 7B68     		ldr	r3, [r7, #4]
 4827 049c 5B68     		ldr	r3, [r3, #4]
 4828 049e B2FBF3F3 		udiv	r3, r2, r3
 4829 04a2 9AB2     		uxth	r2, r3
 4830 04a4 7B68     		ldr	r3, [r7, #4]
 4831 04a6 1B68     		ldr	r3, [r3]
 4832 04a8 DA60     		str	r2, [r3, #12]
1915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 4833              		.loc 1 1915 0
 4834 04aa 10E0     		b	.L267
 4835              	.L274:
1916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_LSE:
1917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
 4836              		.loc 1 1917 0
 4837 04ac 7B68     		ldr	r3, [r7, #4]
 4838 04ae 5B68     		ldr	r3, [r3, #4]
 4839 04b0 5B08     		lsrs	r3, r3, #1
 4840 04b2 03F50042 		add	r2, r3, #32768
 4841 04b6 7B68     		ldr	r3, [r7, #4]
 4842 04b8 5B68     		ldr	r3, [r3, #4]
 4843 04ba B2FBF3F3 		udiv	r3, r2, r3
 4844 04be 9AB2     		uxth	r2, r3
 4845 04c0 7B68     		ldr	r3, [r7, #4]
 4846 04c2 1B68     		ldr	r3, [r3]
 4847 04c4 DA60     		str	r2, [r3, #12]
1918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 4848              		.loc 1 1918 0
 4849 04c6 02E0     		b	.L267
 4850              	.L268:
1919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
1920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     default:
1921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         ret = HAL_ERROR;
 4851              		.loc 1 1921 0
 4852 04c8 0123     		movs	r3, #1
 4853 04ca FB74     		strb	r3, [r7, #19]
1922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 4854              		.loc 1 1922 0
 4855 04cc 00BF     		nop
 4856              	.L267:
1923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return ret;
 4857              		.loc 1 1926 0
 4858 04ce FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
1927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 4859              		.loc 1 1928 0
 4860 04d0 1846     		mov	r0, r3
 4861 04d2 1837     		adds	r7, r7, #24
 4862              	.LCFI220:
 4863              		.cfi_def_cfa_offset 8
 4864 04d4 BD46     		mov	sp, r7
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 119


 4865              	.LCFI221:
 4866              		.cfi_def_cfa_register 13
 4867              		@ sp needed
 4868 04d6 80BD     		pop	{r7, pc}
 4869              	.L281:
 4870              		.align	2
 4871              	.L280:
 4872 04d8 0048E801 		.word	32000000
 4873 04dc 0024F400 		.word	16000000
 4874              		.cfi_endproc
 4875              	.LFE178:
 4877              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 4878              		.align	1
 4879              		.global	UART_AdvFeatureConfig
 4880              		.syntax unified
 4881              		.thumb
 4882              		.thumb_func
 4883              		.fpu fpv5-sp-d16
 4885              	UART_AdvFeatureConfig:
 4886              	.LFB179:
1929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features
1933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
1937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 4887              		.loc 1 1937 0
 4888              		.cfi_startproc
 4889              		@ args = 0, pretend = 0, frame = 8
 4890              		@ frame_needed = 1, uses_anonymous_args = 0
 4891              		@ link register save eliminated.
 4892 0000 80B4     		push	{r7}
 4893              	.LCFI222:
 4894              		.cfi_def_cfa_offset 4
 4895              		.cfi_offset 7, -4
 4896 0002 83B0     		sub	sp, sp, #12
 4897              	.LCFI223:
 4898              		.cfi_def_cfa_offset 16
 4899 0004 00AF     		add	r7, sp, #0
 4900              	.LCFI224:
 4901              		.cfi_def_cfa_register 7
 4902 0006 7860     		str	r0, [r7, #4]
1938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
1939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
1940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
1942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 4903              		.loc 1 1942 0
 4904 0008 7B68     		ldr	r3, [r7, #4]
 4905 000a 5B6A     		ldr	r3, [r3, #36]
 4906 000c 03F00103 		and	r3, r3, #1
 4907 0010 002B     		cmp	r3, #0
 4908 0012 0AD0     		beq	.L283
1943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 120


1944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
1945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 4909              		.loc 1 1945 0
 4910 0014 7B68     		ldr	r3, [r7, #4]
 4911 0016 1B68     		ldr	r3, [r3]
 4912 0018 5B68     		ldr	r3, [r3, #4]
 4913 001a 23F40031 		bic	r1, r3, #131072
 4914 001e 7B68     		ldr	r3, [r7, #4]
 4915 0020 9A6A     		ldr	r2, [r3, #40]
 4916 0022 7B68     		ldr	r3, [r7, #4]
 4917 0024 1B68     		ldr	r3, [r3]
 4918 0026 0A43     		orrs	r2, r2, r1
 4919 0028 5A60     		str	r2, [r3, #4]
 4920              	.L283:
1946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
1949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 4921              		.loc 1 1949 0
 4922 002a 7B68     		ldr	r3, [r7, #4]
 4923 002c 5B6A     		ldr	r3, [r3, #36]
 4924 002e 03F00203 		and	r3, r3, #2
 4925 0032 002B     		cmp	r3, #0
 4926 0034 0AD0     		beq	.L284
1950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
1952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 4927              		.loc 1 1952 0
 4928 0036 7B68     		ldr	r3, [r7, #4]
 4929 0038 1B68     		ldr	r3, [r3]
 4930 003a 5B68     		ldr	r3, [r3, #4]
 4931 003c 23F48031 		bic	r1, r3, #65536
 4932 0040 7B68     		ldr	r3, [r7, #4]
 4933 0042 DA6A     		ldr	r2, [r3, #44]
 4934 0044 7B68     		ldr	r3, [r7, #4]
 4935 0046 1B68     		ldr	r3, [r3]
 4936 0048 0A43     		orrs	r2, r2, r1
 4937 004a 5A60     		str	r2, [r3, #4]
 4938              	.L284:
1953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure data inversion */
1956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 4939              		.loc 1 1956 0
 4940 004c 7B68     		ldr	r3, [r7, #4]
 4941 004e 5B6A     		ldr	r3, [r3, #36]
 4942 0050 03F00403 		and	r3, r3, #4
 4943 0054 002B     		cmp	r3, #0
 4944 0056 0AD0     		beq	.L285
1957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
1959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 4945              		.loc 1 1959 0
 4946 0058 7B68     		ldr	r3, [r7, #4]
 4947 005a 1B68     		ldr	r3, [r3]
 4948 005c 5B68     		ldr	r3, [r3, #4]
 4949 005e 23F48021 		bic	r1, r3, #262144
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 121


 4950 0062 7B68     		ldr	r3, [r7, #4]
 4951 0064 1A6B     		ldr	r2, [r3, #48]
 4952 0066 7B68     		ldr	r3, [r7, #4]
 4953 0068 1B68     		ldr	r3, [r3]
 4954 006a 0A43     		orrs	r2, r2, r1
 4955 006c 5A60     		str	r2, [r3, #4]
 4956              	.L285:
1960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
1963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 4957              		.loc 1 1963 0
 4958 006e 7B68     		ldr	r3, [r7, #4]
 4959 0070 5B6A     		ldr	r3, [r3, #36]
 4960 0072 03F00803 		and	r3, r3, #8
 4961 0076 002B     		cmp	r3, #0
 4962 0078 0AD0     		beq	.L286
1964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
1966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 4963              		.loc 1 1966 0
 4964 007a 7B68     		ldr	r3, [r7, #4]
 4965 007c 1B68     		ldr	r3, [r3]
 4966 007e 5B68     		ldr	r3, [r3, #4]
 4967 0080 23F40041 		bic	r1, r3, #32768
 4968 0084 7B68     		ldr	r3, [r7, #4]
 4969 0086 5A6B     		ldr	r2, [r3, #52]
 4970 0088 7B68     		ldr	r3, [r7, #4]
 4971 008a 1B68     		ldr	r3, [r3]
 4972 008c 0A43     		orrs	r2, r2, r1
 4973 008e 5A60     		str	r2, [r3, #4]
 4974              	.L286:
1967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
1970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 4975              		.loc 1 1970 0
 4976 0090 7B68     		ldr	r3, [r7, #4]
 4977 0092 5B6A     		ldr	r3, [r3, #36]
 4978 0094 03F01003 		and	r3, r3, #16
 4979 0098 002B     		cmp	r3, #0
 4980 009a 0AD0     		beq	.L287
1971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
1973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 4981              		.loc 1 1973 0
 4982 009c 7B68     		ldr	r3, [r7, #4]
 4983 009e 1B68     		ldr	r3, [r3]
 4984 00a0 9B68     		ldr	r3, [r3, #8]
 4985 00a2 23F48051 		bic	r1, r3, #4096
 4986 00a6 7B68     		ldr	r3, [r7, #4]
 4987 00a8 9A6B     		ldr	r2, [r3, #56]
 4988 00aa 7B68     		ldr	r3, [r7, #4]
 4989 00ac 1B68     		ldr	r3, [r3]
 4990 00ae 0A43     		orrs	r2, r2, r1
 4991 00b0 9A60     		str	r2, [r3, #8]
 4992              	.L287:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 122


1974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
1977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 4993              		.loc 1 1977 0
 4994 00b2 7B68     		ldr	r3, [r7, #4]
 4995 00b4 5B6A     		ldr	r3, [r3, #36]
 4996 00b6 03F02003 		and	r3, r3, #32
 4997 00ba 002B     		cmp	r3, #0
 4998 00bc 0AD0     		beq	.L288
1978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
1980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 4999              		.loc 1 1980 0
 5000 00be 7B68     		ldr	r3, [r7, #4]
 5001 00c0 1B68     		ldr	r3, [r3]
 5002 00c2 9B68     		ldr	r3, [r3, #8]
 5003 00c4 23F40051 		bic	r1, r3, #8192
 5004 00c8 7B68     		ldr	r3, [r7, #4]
 5005 00ca DA6B     		ldr	r2, [r3, #60]
 5006 00cc 7B68     		ldr	r3, [r7, #4]
 5007 00ce 1B68     		ldr	r3, [r3]
 5008 00d0 0A43     		orrs	r2, r2, r1
 5009 00d2 9A60     		str	r2, [r3, #8]
 5010              	.L288:
1981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
1984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 5011              		.loc 1 1984 0
 5012 00d4 7B68     		ldr	r3, [r7, #4]
 5013 00d6 5B6A     		ldr	r3, [r3, #36]
 5014 00d8 03F04003 		and	r3, r3, #64
 5015 00dc 002B     		cmp	r3, #0
 5016 00de 1AD0     		beq	.L289
1985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
1987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 5017              		.loc 1 1987 0
 5018 00e0 7B68     		ldr	r3, [r7, #4]
 5019 00e2 1B68     		ldr	r3, [r3]
 5020 00e4 5B68     		ldr	r3, [r3, #4]
 5021 00e6 23F48011 		bic	r1, r3, #1048576
 5022 00ea 7B68     		ldr	r3, [r7, #4]
 5023 00ec 1A6C     		ldr	r2, [r3, #64]
 5024 00ee 7B68     		ldr	r3, [r7, #4]
 5025 00f0 1B68     		ldr	r3, [r3]
 5026 00f2 0A43     		orrs	r2, r2, r1
 5027 00f4 5A60     		str	r2, [r3, #4]
1988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
1989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 5028              		.loc 1 1989 0
 5029 00f6 7B68     		ldr	r3, [r7, #4]
 5030 00f8 1B6C     		ldr	r3, [r3, #64]
 5031 00fa B3F5801F 		cmp	r3, #1048576
 5032 00fe 0AD1     		bne	.L289
1990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 123


1991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
1992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 5033              		.loc 1 1992 0
 5034 0100 7B68     		ldr	r3, [r7, #4]
 5035 0102 1B68     		ldr	r3, [r3]
 5036 0104 5B68     		ldr	r3, [r3, #4]
 5037 0106 23F4C001 		bic	r1, r3, #6291456
 5038 010a 7B68     		ldr	r3, [r7, #4]
 5039 010c 5A6C     		ldr	r2, [r3, #68]
 5040 010e 7B68     		ldr	r3, [r7, #4]
 5041 0110 1B68     		ldr	r3, [r3]
 5042 0112 0A43     		orrs	r2, r2, r1
 5043 0114 5A60     		str	r2, [r3, #4]
 5044              	.L289:
1993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
1997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 5045              		.loc 1 1997 0
 5046 0116 7B68     		ldr	r3, [r7, #4]
 5047 0118 5B6A     		ldr	r3, [r3, #36]
 5048 011a 03F08003 		and	r3, r3, #128
 5049 011e 002B     		cmp	r3, #0
 5050 0120 0AD0     		beq	.L291
1998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
2000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 5051              		.loc 1 2000 0
 5052 0122 7B68     		ldr	r3, [r7, #4]
 5053 0124 1B68     		ldr	r3, [r3]
 5054 0126 5B68     		ldr	r3, [r3, #4]
 5055 0128 23F40021 		bic	r1, r3, #524288
 5056 012c 7B68     		ldr	r3, [r7, #4]
 5057 012e 9A6C     		ldr	r2, [r3, #72]
 5058 0130 7B68     		ldr	r3, [r7, #4]
 5059 0132 1B68     		ldr	r3, [r3]
 5060 0134 0A43     		orrs	r2, r2, r1
 5061 0136 5A60     		str	r2, [r3, #4]
 5062              	.L291:
2001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
2002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 5063              		.loc 1 2002 0
 5064 0138 00BF     		nop
 5065 013a 0C37     		adds	r7, r7, #12
 5066              	.LCFI225:
 5067              		.cfi_def_cfa_offset 4
 5068 013c BD46     		mov	sp, r7
 5069              	.LCFI226:
 5070              		.cfi_def_cfa_register 13
 5071              		@ sp needed
 5072 013e 5DF8047B 		ldr	r7, [sp], #4
 5073              	.LCFI227:
 5074              		.cfi_restore 7
 5075              		.cfi_def_cfa_offset 0
 5076 0142 7047     		bx	lr
 5077              		.cfi_endproc
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 124


 5078              	.LFE179:
 5080              		.section	.text.UART_CheckIdleState,"ax",%progbits
 5081              		.align	1
 5082              		.global	UART_CheckIdleState
 5083              		.syntax unified
 5084              		.thumb
 5085              		.thumb_func
 5086              		.fpu fpv5-sp-d16
 5088              	UART_CheckIdleState:
 5089              	.LFB180:
2003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Check the UART Idle State
2008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
2009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
2012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 5090              		.loc 1 2012 0
 5091              		.cfi_startproc
 5092              		@ args = 0, pretend = 0, frame = 16
 5093              		@ frame_needed = 1, uses_anonymous_args = 0
 5094 0000 80B5     		push	{r7, lr}
 5095              	.LCFI228:
 5096              		.cfi_def_cfa_offset 8
 5097              		.cfi_offset 7, -8
 5098              		.cfi_offset 14, -4
 5099 0002 86B0     		sub	sp, sp, #24
 5100              	.LCFI229:
 5101              		.cfi_def_cfa_offset 32
 5102 0004 02AF     		add	r7, sp, #8
 5103              	.LCFI230:
 5104              		.cfi_def_cfa 7, 24
 5105 0006 7860     		str	r0, [r7, #4]
2013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t tickstart = 0U;
 5106              		.loc 1 2013 0
 5107 0008 0023     		movs	r3, #0
 5108 000a FB60     		str	r3, [r7, #12]
2014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
2016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 5109              		.loc 1 2016 0
 5110 000c 7B68     		ldr	r3, [r7, #4]
 5111 000e 0022     		movs	r2, #0
 5112 0010 DA66     		str	r2, [r3, #108]
2017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
2019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   tickstart = HAL_GetTick();
 5113              		.loc 1 2019 0
 5114 0012 FFF7FEFF 		bl	HAL_GetTick
 5115 0016 F860     		str	r0, [r7, #12]
2020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
2022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 5116              		.loc 1 2022 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 125


 5117 0018 7B68     		ldr	r3, [r7, #4]
 5118 001a 1B68     		ldr	r3, [r3]
 5119 001c 1B68     		ldr	r3, [r3]
 5120 001e 03F00803 		and	r3, r3, #8
 5121 0022 082B     		cmp	r3, #8
 5122 0024 0ED1     		bne	.L293
2023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
2024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Wait until TEACK flag is set */
2025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE
 5123              		.loc 1 2025 0
 5124 0026 6FF07E43 		mvn	r3, #-33554432
 5125 002a 0093     		str	r3, [sp]
 5126 002c FB68     		ldr	r3, [r7, #12]
 5127 002e 0022     		movs	r2, #0
 5128 0030 4FF40011 		mov	r1, #2097152
 5129 0034 7868     		ldr	r0, [r7, #4]
 5130 0036 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 5131 003a 0346     		mov	r3, r0
 5132 003c 002B     		cmp	r3, #0
 5133 003e 01D0     		beq	.L293
2026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
2027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Timeout Occurred */
2028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_TIMEOUT;
 5134              		.loc 1 2028 0
 5135 0040 0323     		movs	r3, #3
 5136 0042 0CE0     		b	.L294
 5137              	.L293:
2029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
2030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
2031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Initialize the UART State */
2033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 5138              		.loc 1 2033 0
 5139 0044 7B68     		ldr	r3, [r7, #4]
 5140 0046 2022     		movs	r2, #32
 5141 0048 83F86920 		strb	r2, [r3, #105]
2034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 5142              		.loc 1 2034 0
 5143 004c 7B68     		ldr	r3, [r7, #4]
 5144 004e 2022     		movs	r2, #32
 5145 0050 83F86A20 		strb	r2, [r3, #106]
2035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Unlocked */
2037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 5146              		.loc 1 2037 0
 5147 0054 7B68     		ldr	r3, [r7, #4]
 5148 0056 0022     		movs	r2, #0
 5149 0058 83F86820 		strb	r2, [r3, #104]
2038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 5150              		.loc 1 2039 0
 5151 005c 0023     		movs	r3, #0
 5152              	.L294:
2040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 5153              		.loc 1 2040 0
 5154 005e 1846     		mov	r0, r3
 5155 0060 1037     		adds	r7, r7, #16
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 126


 5156              	.LCFI231:
 5157              		.cfi_def_cfa_offset 8
 5158 0062 BD46     		mov	sp, r7
 5159              	.LCFI232:
 5160              		.cfi_def_cfa_register 13
 5161              		@ sp needed
 5162 0064 80BD     		pop	{r7, pc}
 5163              		.cfi_endproc
 5164              	.LFE180:
 5166              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 5167              		.align	1
 5168              		.global	HAL_HalfDuplex_EnableTransmitter
 5169              		.syntax unified
 5170              		.thumb
 5171              		.thumb_func
 5172              		.fpu fpv5-sp-d16
 5174              	HAL_HalfDuplex_EnableTransmitter:
 5175              	.LFB181:
2041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
2044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
2045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
2047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 5176              		.loc 1 2049 0
 5177              		.cfi_startproc
 5178              		@ args = 0, pretend = 0, frame = 8
 5179              		@ frame_needed = 1, uses_anonymous_args = 0
 5180              		@ link register save eliminated.
 5181 0000 80B4     		push	{r7}
 5182              	.LCFI233:
 5183              		.cfi_def_cfa_offset 4
 5184              		.cfi_offset 7, -4
 5185 0002 83B0     		sub	sp, sp, #12
 5186              	.LCFI234:
 5187              		.cfi_def_cfa_offset 16
 5188 0004 00AF     		add	r7, sp, #0
 5189              	.LCFI235:
 5190              		.cfi_def_cfa_register 7
 5191 0006 7860     		str	r0, [r7, #4]
2050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
2051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 5192              		.loc 1 2051 0
 5193 0008 7B68     		ldr	r3, [r7, #4]
 5194 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 5195 000e 012B     		cmp	r3, #1
 5196 0010 01D1     		bne	.L296
 5197              		.loc 1 2051 0 is_stmt 0 discriminator 1
 5198 0012 0223     		movs	r3, #2
 5199 0014 20E0     		b	.L297
 5200              	.L296:
 5201              		.loc 1 2051 0 discriminator 2
 5202 0016 7B68     		ldr	r3, [r7, #4]
 5203 0018 0122     		movs	r2, #1
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 127


 5204 001a 83F86820 		strb	r2, [r3, #104]
2052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 5205              		.loc 1 2052 0 is_stmt 1 discriminator 2
 5206 001e 7B68     		ldr	r3, [r7, #4]
 5207 0020 2422     		movs	r2, #36
 5208 0022 83F86920 		strb	r2, [r3, #105]
2053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Clear TE and RE bits */
2055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 5209              		.loc 1 2055 0 discriminator 2
 5210 0026 7B68     		ldr	r3, [r7, #4]
 5211 0028 1B68     		ldr	r3, [r3]
 5212 002a 1A68     		ldr	r2, [r3]
 5213 002c 7B68     		ldr	r3, [r7, #4]
 5214 002e 1B68     		ldr	r3, [r3]
 5215 0030 22F00C02 		bic	r2, r2, #12
 5216 0034 1A60     		str	r2, [r3]
2056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
 5217              		.loc 1 2057 0 discriminator 2
 5218 0036 7B68     		ldr	r3, [r7, #4]
 5219 0038 1B68     		ldr	r3, [r3]
 5220 003a 1A68     		ldr	r2, [r3]
 5221 003c 7B68     		ldr	r3, [r7, #4]
 5222 003e 1B68     		ldr	r3, [r3]
 5223 0040 42F00802 		orr	r2, r2, #8
 5224 0044 1A60     		str	r2, [r3]
2058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 5225              		.loc 1 2059 0 discriminator 2
 5226 0046 7B68     		ldr	r3, [r7, #4]
 5227 0048 2022     		movs	r2, #32
 5228 004a 83F86920 		strb	r2, [r3, #105]
2060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Unlocked */
2061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 5229              		.loc 1 2061 0 discriminator 2
 5230 004e 7B68     		ldr	r3, [r7, #4]
 5231 0050 0022     		movs	r2, #0
 5232 0052 83F86820 		strb	r2, [r3, #104]
2062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 5233              		.loc 1 2063 0 discriminator 2
 5234 0056 0023     		movs	r3, #0
 5235              	.L297:
2064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 5236              		.loc 1 2064 0
 5237 0058 1846     		mov	r0, r3
 5238 005a 0C37     		adds	r7, r7, #12
 5239              	.LCFI236:
 5240              		.cfi_def_cfa_offset 4
 5241 005c BD46     		mov	sp, r7
 5242              	.LCFI237:
 5243              		.cfi_def_cfa_register 13
 5244              		@ sp needed
 5245 005e 5DF8047B 		ldr	r7, [sp], #4
 5246              	.LCFI238:
 5247              		.cfi_restore 7
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 128


 5248              		.cfi_def_cfa_offset 0
 5249 0062 7047     		bx	lr
 5250              		.cfi_endproc
 5251              	.LFE181:
 5253              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 5254              		.align	1
 5255              		.global	HAL_HalfDuplex_EnableReceiver
 5256              		.syntax unified
 5257              		.thumb
 5258              		.thumb_func
 5259              		.fpu fpv5-sp-d16
 5261              	HAL_HalfDuplex_EnableReceiver:
 5262              	.LFB182:
2065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
2068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
2069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 5263              		.loc 1 2072 0
 5264              		.cfi_startproc
 5265              		@ args = 0, pretend = 0, frame = 8
 5266              		@ frame_needed = 1, uses_anonymous_args = 0
 5267              		@ link register save eliminated.
 5268 0000 80B4     		push	{r7}
 5269              	.LCFI239:
 5270              		.cfi_def_cfa_offset 4
 5271              		.cfi_offset 7, -4
 5272 0002 83B0     		sub	sp, sp, #12
 5273              	.LCFI240:
 5274              		.cfi_def_cfa_offset 16
 5275 0004 00AF     		add	r7, sp, #0
 5276              	.LCFI241:
 5277              		.cfi_def_cfa_register 7
 5278 0006 7860     		str	r0, [r7, #4]
2073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
2074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 5279              		.loc 1 2074 0
 5280 0008 7B68     		ldr	r3, [r7, #4]
 5281 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 5282 000e 012B     		cmp	r3, #1
 5283 0010 01D1     		bne	.L299
 5284              		.loc 1 2074 0 is_stmt 0 discriminator 1
 5285 0012 0223     		movs	r3, #2
 5286 0014 20E0     		b	.L300
 5287              	.L299:
 5288              		.loc 1 2074 0 discriminator 2
 5289 0016 7B68     		ldr	r3, [r7, #4]
 5290 0018 0122     		movs	r2, #1
 5291 001a 83F86820 		strb	r2, [r3, #104]
2075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 5292              		.loc 1 2075 0 is_stmt 1 discriminator 2
 5293 001e 7B68     		ldr	r3, [r7, #4]
 5294 0020 2422     		movs	r2, #36
 5295 0022 83F86920 		strb	r2, [r3, #105]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 129


2076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Clear TE and RE bits */
2078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 5296              		.loc 1 2078 0 discriminator 2
 5297 0026 7B68     		ldr	r3, [r7, #4]
 5298 0028 1B68     		ldr	r3, [r3]
 5299 002a 1A68     		ldr	r2, [r3]
 5300 002c 7B68     		ldr	r3, [r7, #4]
 5301 002e 1B68     		ldr	r3, [r3]
 5302 0030 22F00C02 		bic	r2, r2, #12
 5303 0034 1A60     		str	r2, [r3]
2079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
 5304              		.loc 1 2080 0 discriminator 2
 5305 0036 7B68     		ldr	r3, [r7, #4]
 5306 0038 1B68     		ldr	r3, [r3]
 5307 003a 1A68     		ldr	r2, [r3]
 5308 003c 7B68     		ldr	r3, [r7, #4]
 5309 003e 1B68     		ldr	r3, [r3]
 5310 0040 42F00402 		orr	r2, r2, #4
 5311 0044 1A60     		str	r2, [r3]
2081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5312              		.loc 1 2082 0 discriminator 2
 5313 0046 7B68     		ldr	r3, [r7, #4]
 5314 0048 2022     		movs	r2, #32
 5315 004a 83F86920 		strb	r2, [r3, #105]
2083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Unlocked */
2084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 5316              		.loc 1 2084 0 discriminator 2
 5317 004e 7B68     		ldr	r3, [r7, #4]
 5318 0050 0022     		movs	r2, #0
 5319 0052 83F86820 		strb	r2, [r3, #104]
2085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 5320              		.loc 1 2086 0 discriminator 2
 5321 0056 0023     		movs	r3, #0
 5322              	.L300:
2087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 5323              		.loc 1 2087 0
 5324 0058 1846     		mov	r0, r3
 5325 005a 0C37     		adds	r7, r7, #12
 5326              	.LCFI242:
 5327              		.cfi_def_cfa_offset 4
 5328 005c BD46     		mov	sp, r7
 5329              	.LCFI243:
 5330              		.cfi_def_cfa_register 13
 5331              		@ sp needed
 5332 005e 5DF8047B 		ldr	r7, [sp], #4
 5333              	.LCFI244:
 5334              		.cfi_restore 7
 5335              		.cfi_def_cfa_offset 0
 5336 0062 7047     		bx	lr
 5337              		.cfi_endproc
 5338              	.LFE182:
 5340              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 5341              		.align	1
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 130


 5342              		.global	HAL_LIN_SendBreak
 5343              		.syntax unified
 5344              		.thumb
 5345              		.thumb_func
 5346              		.fpu fpv5-sp-d16
 5348              	HAL_LIN_SendBreak:
 5349              	.LFB183:
2088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Transmits break characters.
2092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
2093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 5350              		.loc 1 2096 0
 5351              		.cfi_startproc
 5352              		@ args = 0, pretend = 0, frame = 8
 5353              		@ frame_needed = 1, uses_anonymous_args = 0
 5354              		@ link register save eliminated.
 5355 0000 80B4     		push	{r7}
 5356              	.LCFI245:
 5357              		.cfi_def_cfa_offset 4
 5358              		.cfi_offset 7, -4
 5359 0002 83B0     		sub	sp, sp, #12
 5360              	.LCFI246:
 5361              		.cfi_def_cfa_offset 16
 5362 0004 00AF     		add	r7, sp, #0
 5363              	.LCFI247:
 5364              		.cfi_def_cfa_register 7
 5365 0006 7860     		str	r0, [r7, #4]
2097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the parameters */
2098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
2101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 5366              		.loc 1 2101 0
 5367 0008 7B68     		ldr	r3, [r7, #4]
 5368 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 5369 000e 012B     		cmp	r3, #1
 5370 0010 01D1     		bne	.L302
 5371              		.loc 1 2101 0 is_stmt 0 discriminator 1
 5372 0012 0223     		movs	r3, #2
 5373 0014 18E0     		b	.L303
 5374              	.L302:
 5375              		.loc 1 2101 0 discriminator 2
 5376 0016 7B68     		ldr	r3, [r7, #4]
 5377 0018 0122     		movs	r2, #1
 5378 001a 83F86820 		strb	r2, [r3, #104]
2102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 5379              		.loc 1 2103 0 is_stmt 1 discriminator 2
 5380 001e 7B68     		ldr	r3, [r7, #4]
 5381 0020 2422     		movs	r2, #36
 5382 0022 83F86920 		strb	r2, [r3, #105]
2104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 131


2105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Send break characters */
2106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->RQR, UART_SENDBREAK_REQUEST);
 5383              		.loc 1 2106 0 discriminator 2
 5384 0026 7B68     		ldr	r3, [r7, #4]
 5385 0028 1B68     		ldr	r3, [r3]
 5386 002a 9A69     		ldr	r2, [r3, #24]
 5387 002c 7B68     		ldr	r3, [r7, #4]
 5388 002e 1B68     		ldr	r3, [r3]
 5389 0030 42F00202 		orr	r2, r2, #2
 5390 0034 9A61     		str	r2, [r3, #24]
2107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5391              		.loc 1 2108 0 discriminator 2
 5392 0036 7B68     		ldr	r3, [r7, #4]
 5393 0038 2022     		movs	r2, #32
 5394 003a 83F86920 		strb	r2, [r3, #105]
2109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Unlocked */
2111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 5395              		.loc 1 2111 0 discriminator 2
 5396 003e 7B68     		ldr	r3, [r7, #4]
 5397 0040 0022     		movs	r2, #0
 5398 0042 83F86820 		strb	r2, [r3, #104]
2112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 5399              		.loc 1 2113 0 discriminator 2
 5400 0046 0023     		movs	r3, #0
 5401              	.L303:
2114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 5402              		.loc 1 2114 0
 5403 0048 1846     		mov	r0, r3
 5404 004a 0C37     		adds	r7, r7, #12
 5405              	.LCFI248:
 5406              		.cfi_def_cfa_offset 4
 5407 004c BD46     		mov	sp, r7
 5408              	.LCFI249:
 5409              		.cfi_def_cfa_register 13
 5410              		@ sp needed
 5411 004e 5DF8047B 		ldr	r7, [sp], #4
 5412              	.LCFI250:
 5413              		.cfi_restore 7
 5414              		.cfi_def_cfa_offset 0
 5415 0052 7047     		bx	lr
 5416              		.cfi_endproc
 5417              	.LFE183:
 5419              		.section	.text.HAL_MultiProcessorEx_AddressLength_Set,"ax",%progbits
 5420              		.align	1
 5421              		.global	HAL_MultiProcessorEx_AddressLength_Set
 5422              		.syntax unified
 5423              		.thumb
 5424              		.thumb_func
 5425              		.fpu fpv5-sp-d16
 5427              	HAL_MultiProcessorEx_AddressLength_Set:
 5428              	.LFB184:
2115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief By default in multiprocessor mode, when the wake up method is set
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 132


2118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        to address mark, the UART handles only 4-bit long addresses detection;
2119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        this API allows to enable longer addresses detection (6-, 7- or 8-bit
2120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        long).
2121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note  Addresses detection lengths are: 6-bit address detection in 7-bit data mode,
2122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        7-bit address detection in 8-bit data mode, 8-bit address detection in 9-bit data mode.
2123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
2124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param AddressLength this parameter can be one of the following values:
2125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_ADDRESS_DETECT_4B 4-bit long address
2126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_ADDRESS_DETECT_7B 6-, 7- or 8-bit long address
2127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessorEx_AddressLength_Set(UART_HandleTypeDef *huart, uint32_t Addres
2130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 5429              		.loc 1 2130 0
 5430              		.cfi_startproc
 5431              		@ args = 0, pretend = 0, frame = 8
 5432              		@ frame_needed = 1, uses_anonymous_args = 0
 5433 0000 80B5     		push	{r7, lr}
 5434              	.LCFI251:
 5435              		.cfi_def_cfa_offset 8
 5436              		.cfi_offset 7, -8
 5437              		.cfi_offset 14, -4
 5438 0002 82B0     		sub	sp, sp, #8
 5439              	.LCFI252:
 5440              		.cfi_def_cfa_offset 16
 5441 0004 00AF     		add	r7, sp, #0
 5442              	.LCFI253:
 5443              		.cfi_def_cfa_register 7
 5444 0006 7860     		str	r0, [r7, #4]
 5445 0008 3960     		str	r1, [r7]
2131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
2132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 5446              		.loc 1 2132 0
 5447 000a 7B68     		ldr	r3, [r7, #4]
 5448 000c 002B     		cmp	r3, #0
 5449 000e 01D1     		bne	.L305
2133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
2134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 5450              		.loc 1 2134 0
 5451 0010 0123     		movs	r3, #1
 5452 0012 21E0     		b	.L306
 5453              	.L305:
2135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
2136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the address length parameter */
2138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_ADDRESSLENGTH_DETECT(AddressLength));
2139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 5454              		.loc 1 2140 0
 5455 0014 7B68     		ldr	r3, [r7, #4]
 5456 0016 2422     		movs	r2, #36
 5457 0018 83F86920 		strb	r2, [r3, #105]
2141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
2143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 5458              		.loc 1 2143 0
 5459 001c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 133


 5460 001e 1B68     		ldr	r3, [r3]
 5461 0020 1A68     		ldr	r2, [r3]
 5462 0022 7B68     		ldr	r3, [r7, #4]
 5463 0024 1B68     		ldr	r3, [r3]
 5464 0026 22F00102 		bic	r2, r2, #1
 5465 002a 1A60     		str	r2, [r3]
2144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the address length */
2146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADDM7, AddressLength);
 5466              		.loc 1 2146 0
 5467 002c 7B68     		ldr	r3, [r7, #4]
 5468 002e 1B68     		ldr	r3, [r3]
 5469 0030 5B68     		ldr	r3, [r3, #4]
 5470 0032 23F01001 		bic	r1, r3, #16
 5471 0036 7B68     		ldr	r3, [r7, #4]
 5472 0038 1B68     		ldr	r3, [r3]
 5473 003a 3A68     		ldr	r2, [r7]
 5474 003c 0A43     		orrs	r2, r2, r1
 5475 003e 5A60     		str	r2, [r3, #4]
2147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Peripheral */
2149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 5476              		.loc 1 2149 0
 5477 0040 7B68     		ldr	r3, [r7, #4]
 5478 0042 1B68     		ldr	r3, [r3]
 5479 0044 1A68     		ldr	r2, [r3]
 5480 0046 7B68     		ldr	r3, [r7, #4]
 5481 0048 1B68     		ldr	r3, [r3]
 5482 004a 42F00102 		orr	r2, r2, #1
 5483 004e 1A60     		str	r2, [r3]
2150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState to Ready */
2152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 5484              		.loc 1 2152 0
 5485 0050 7868     		ldr	r0, [r7, #4]
 5486 0052 FFF7FEFF 		bl	UART_CheckIdleState
 5487 0056 0346     		mov	r3, r0
 5488              	.L306:
2153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 5489              		.loc 1 2153 0
 5490 0058 1846     		mov	r0, r3
 5491 005a 0837     		adds	r7, r7, #8
 5492              	.LCFI254:
 5493              		.cfi_def_cfa_offset 8
 5494 005c BD46     		mov	sp, r7
 5495              	.LCFI255:
 5496              		.cfi_def_cfa_register 13
 5497              		@ sp needed
 5498 005e 80BD     		pop	{r7, pc}
 5499              		.cfi_endproc
 5500              	.LFE184:
 5502              		.text
 5503              	.Letext0:
 5504              		.file 2 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/machine/_default_types
 5505              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_stdint.h"
 5506              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 5507              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 134


 5508              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 5509              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 5510              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/lock.h"
 5511              		.file 9 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_types.h"
 5512              		.file 10 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.
 5513              		.file 11 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/reent.h"
 5514              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 5515              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 5516              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 135


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_uart.c
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:18     .text.HAL_UART_Init:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:25     .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:816    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:4170   .text.UART_SetConfig:0000000000000000 UART_SetConfig
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:4885   .text.UART_AdvFeatureConfig:0000000000000000 UART_AdvFeatureConfig
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:5088   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:140    .text.HAL_HalfDuplex_Init:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:147    .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:269    .text.HAL_LIN_Init:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:276    .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:409    .text.HAL_MultiProcessor_Init:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:416    .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:559    .text.HAL_RS485Ex_Init:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:566    .text.HAL_RS485Ex_Init:0000000000000000 HAL_RS485Ex_Init
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:708    .text.HAL_RS485Ex_Init:00000000000000d4 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:713    .text.HAL_UART_DeInit:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:720    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:859    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:809    .text.HAL_UART_MspInit:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:852    .text.HAL_UART_MspDeInit:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:895    .text.HAL_UART_Transmit:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:902    .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:2685   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:1090   .text.HAL_UART_Receive:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:1097   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:1346   .text.HAL_UART_Transmit_IT:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:1353   .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:1463   .text.HAL_UART_Receive_IT:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:1470   .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:1653   .text.HAL_UART_Transmit_DMA:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:1660   .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:1804   .text.HAL_UART_Transmit_DMA:00000000000000d0 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:2798   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:2874   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:3049   .text.UART_DMAError:0000000000000000 UART_DMAError
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:1811   .text.HAL_UART_Receive_DMA:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:1818   .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:1969   .text.HAL_UART_Receive_DMA:00000000000000e0 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:2919   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:3004   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:1976   .text.HAL_UART_DMAPause:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:1983   .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:2101   .text.HAL_UART_DMAResume:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:2108   .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:2227   .text.HAL_UART_DMAStop:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:2234   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:3745   .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:3799   .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:2342   .text.HAL_UART_IRQHandler:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:2349   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:3595   .text.UART_Receive_IT:0000000000000000 UART_Receive_IT
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:3368   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:3410   .text.UART_Transmit_IT:0000000000000000 UART_Transmit_IT
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:3540   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:2673   .text.HAL_UART_IRQHandler:0000000000000208 $d
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 136


/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:3142   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:2678   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:2792   .text.UART_DMATransmitCplt:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:3196   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:2868   .text.UART_DMATxHalfCplt:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:3239   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:2913   .text.UART_DMAReceiveCplt:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:3282   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:2998   .text.UART_DMARxHalfCplt:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:3325   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:3043   .text.UART_DMAError:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:3136   .text.UART_DMAAbortOnError:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:3189   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:3232   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:3275   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:3318   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:3361   .text.HAL_UART_ErrorCallback:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:3404   .text.UART_Transmit_IT:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:3534   .text.UART_EndTransmit_IT:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:3589   .text.UART_Receive_IT:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:3739   .text.UART_EndTxTransfer:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:3793   .text.UART_EndRxTransfer:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:3855   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:3862   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 HAL_MultiProcessor_EnableMuteMode
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:3928   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:3935   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 HAL_MultiProcessor_DisableMuteMode
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:4001   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:4008   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:4052   .text.HAL_UART_GetState:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:4059   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:4117   .text.HAL_UART_GetError:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:4124   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:4163   .text.UART_SetConfig:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:4271   .text.UART_SetConfig:00000000000000a0 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:4275   .text.UART_SetConfig:00000000000000b0 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:4313   .text.UART_SetConfig:00000000000000e8 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:4326   .text.UART_SetConfig:000000000000011c $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:4617   .text.UART_SetConfig:00000000000002f0 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:4628   .text.UART_SetConfig:0000000000000318 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:4643   .text.UART_SetConfig:0000000000000330 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:4652   .text.UART_SetConfig:0000000000000354 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:4758   .text.UART_SetConfig:000000000000040c $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:4767   .text.UART_SetConfig:0000000000000430 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:4872   .text.UART_SetConfig:00000000000004d8 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:4878   .text.UART_AdvFeatureConfig:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:5081   .text.UART_CheckIdleState:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:5167   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:5174   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:5254   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:5261   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:5341   .text.HAL_LIN_SendBreak:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:5348   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:5420   .text.HAL_MultiProcessorEx_AddressLength_Set:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s:5427   .text.HAL_MultiProcessorEx_AddressLength_Set:0000000000000000 HAL_MultiProcessorEx_AddressLength_Set

UNDEFINED SYMBOLS
HAL_GetTick
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxWM97c.s 			page 137


HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetSysClockFreq
