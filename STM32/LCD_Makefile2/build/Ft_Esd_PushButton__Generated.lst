ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"Ft_Esd_PushButton__Generated.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Ft_Esd_Theme_GetButtonTextColor,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	Ft_Esd_Theme_GetButtonTextColor:
  25              	.LFB6:
  26              		.file 1 "FT_Esd_Widgets/FT_Esd_Theme.h"
   1:FT_Esd_Widgets/FT_Esd_Theme.h **** 
   2:FT_Esd_Widgets/FT_Esd_Theme.h **** #ifndef FT_ESD_THEME_H
   3:FT_Esd_Widgets/FT_Esd_Theme.h **** #define FT_ESD_THEME_H
   4:FT_Esd_Widgets/FT_Esd_Theme.h **** #include "FT_DataTypes.h"
   5:FT_Esd_Widgets/FT_Esd_Theme.h **** #include "Ft_Esd.h"
   6:FT_Esd_Widgets/FT_Esd_Theme.h **** 
   7:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_CATEGORY(EsdTheme, DisplayName = "ESD Theme")
   8:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_CATEGORY(EsdTheme_Themes, DisplayName = "Themes", Category = EsdTheme)
   9:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  10:FT_Esd_Widgets/FT_Esd_Theme.h **** typedef unsigned int ft_uint32_t;
  11:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  12:FT_Esd_Widgets/FT_Esd_Theme.h **** typedef struct
  13:FT_Esd_Widgets/FT_Esd_Theme.h **** {
  14:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t ClearColor;
  15:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t BackColor;
  16:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t TextColor;
  17:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t ButtonTextColor;
  18:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t DefaultColor;
  19:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t PrimaryColor;
  20:FT_Esd_Widgets/FT_Esd_Theme.h **** } Ft_Esd_Theme;
  21:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  22:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_TYPE(Ft_Esd_Theme *, Native = Pointer, Edit = Library)
  23:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  24:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_RENDER(Ft_Esd_Theme_SetCurrent, DisplayName = "Set Current Theme", Category = EsdTheme, Include
  25:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *)
  26:FT_Esd_Widgets/FT_Esd_Theme.h **** void Ft_Esd_Theme_SetCurrent(Ft_Esd_Theme *theme);
  27:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  28:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetCurrent, DisplayName = "Current Theme", Category = EsdTheme, Type = Ft
  29:FT_Esd_Widgets/FT_Esd_Theme.h **** Ft_Esd_Theme *Ft_Esd_Theme_GetCurrent();
  30:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  31:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetClearColor, DisplayName = "Get Clear Color", Category = EsdTheme, Type
  32:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s 			page 2


  33:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetClearColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_Es
  34:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  35:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetBackColor, DisplayName = "Get Back Color", Category = EsdTheme, Type =
  36:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  37:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetBackColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_Esd
  38:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  39:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetTextColor, DisplayName = "Get Text Color", Category = EsdTheme, Type =
  40:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  41:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetTextColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_Esd
  42:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  43:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetButtonTextColor, DisplayName = "Get Button Text Color", Category = Esd
  44:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  45:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetButtonTextColor(Ft_Esd_Theme *theme) { if (!theme) return 
  27              		.loc 1 45 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
  43              		.loc 1 45 0
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 002B     		cmp	r3, #0
  46 000c 04D1     		bne	.L2
  47              		.loc 1 45 0 is_stmt 0 discriminator 1
  48 000e FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
  49 0012 0346     		mov	r3, r0
  50 0014 DB68     		ldr	r3, [r3, #12]
  51 0016 01E0     		b	.L3
  52              	.L2:
  53              		.loc 1 45 0 discriminator 2
  54 0018 7B68     		ldr	r3, [r7, #4]
  55 001a DB68     		ldr	r3, [r3, #12]
  56              	.L3:
  57              		.loc 1 45 0
  58 001c 1846     		mov	r0, r3
  59 001e 0837     		adds	r7, r7, #8
  60              	.LCFI3:
  61              		.cfi_def_cfa_offset 8
  62 0020 BD46     		mov	sp, r7
  63              	.LCFI4:
  64              		.cfi_def_cfa_register 13
  65              		@ sp needed
  66 0022 80BD     		pop	{r7, pc}
  67              		.cfi_endproc
  68              	.LFE6:
  70              		.section	.text.Ft_Esd_Theme_GetCurrentColor,"ax",%progbits
  71              		.align	1
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s 			page 3


  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  75              		.fpu fpv5-sp-d16
  77              	Ft_Esd_Theme_GetCurrentColor:
  78              	.LFB7:
  46:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  47:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetCurrentColor, DisplayName = "Get Default Color", Category = EsdTheme, 
  48:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  49:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetCurrentColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_
  79              		.loc 1 49 0 is_stmt 1
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 8
  82              		@ frame_needed = 1, uses_anonymous_args = 0
  83 0000 80B5     		push	{r7, lr}
  84              	.LCFI5:
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 7, -8
  87              		.cfi_offset 14, -4
  88 0002 82B0     		sub	sp, sp, #8
  89              	.LCFI6:
  90              		.cfi_def_cfa_offset 16
  91 0004 00AF     		add	r7, sp, #0
  92              	.LCFI7:
  93              		.cfi_def_cfa_register 7
  94 0006 7860     		str	r0, [r7, #4]
  95              		.loc 1 49 0
  96 0008 7B68     		ldr	r3, [r7, #4]
  97 000a 002B     		cmp	r3, #0
  98 000c 04D1     		bne	.L5
  99              		.loc 1 49 0 is_stmt 0 discriminator 1
 100 000e FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
 101 0012 0346     		mov	r3, r0
 102 0014 1B69     		ldr	r3, [r3, #16]
 103 0016 01E0     		b	.L6
 104              	.L5:
 105              		.loc 1 49 0 discriminator 2
 106 0018 7B68     		ldr	r3, [r7, #4]
 107 001a 1B69     		ldr	r3, [r3, #16]
 108              	.L6:
 109              		.loc 1 49 0
 110 001c 1846     		mov	r0, r3
 111 001e 0837     		adds	r7, r7, #8
 112              	.LCFI8:
 113              		.cfi_def_cfa_offset 8
 114 0020 BD46     		mov	sp, r7
 115              	.LCFI9:
 116              		.cfi_def_cfa_register 13
 117              		@ sp needed
 118 0022 80BD     		pop	{r7, pc}
 119              		.cfi_endproc
 120              	.LFE7:
 122              		.section	.text.Ft_Esd_Theme_GetPrimaryColor,"ax",%progbits
 123              		.align	1
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s 			page 4


 127              		.fpu fpv5-sp-d16
 129              	Ft_Esd_Theme_GetPrimaryColor:
 130              	.LFB8:
  50:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  51:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetPrimaryColor, DisplayName = "Get Primary Color", Category = EsdTheme, 
  52:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  53:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetPrimaryColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_
 131              		.loc 1 53 0 is_stmt 1
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 8
 134              		@ frame_needed = 1, uses_anonymous_args = 0
 135 0000 80B5     		push	{r7, lr}
 136              	.LCFI10:
 137              		.cfi_def_cfa_offset 8
 138              		.cfi_offset 7, -8
 139              		.cfi_offset 14, -4
 140 0002 82B0     		sub	sp, sp, #8
 141              	.LCFI11:
 142              		.cfi_def_cfa_offset 16
 143 0004 00AF     		add	r7, sp, #0
 144              	.LCFI12:
 145              		.cfi_def_cfa_register 7
 146 0006 7860     		str	r0, [r7, #4]
 147              		.loc 1 53 0
 148 0008 7B68     		ldr	r3, [r7, #4]
 149 000a 002B     		cmp	r3, #0
 150 000c 04D1     		bne	.L8
 151              		.loc 1 53 0 is_stmt 0 discriminator 1
 152 000e FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
 153 0012 0346     		mov	r3, r0
 154 0014 5B69     		ldr	r3, [r3, #20]
 155 0016 01E0     		b	.L9
 156              	.L8:
 157              		.loc 1 53 0 discriminator 2
 158 0018 7B68     		ldr	r3, [r7, #4]
 159 001a 5B69     		ldr	r3, [r3, #20]
 160              	.L9:
 161              		.loc 1 53 0
 162 001c 1846     		mov	r0, r3
 163 001e 0837     		adds	r7, r7, #8
 164              	.LCFI13:
 165              		.cfi_def_cfa_offset 8
 166 0020 BD46     		mov	sp, r7
 167              	.LCFI14:
 168              		.cfi_def_cfa_register 13
 169              		@ sp needed
 170 0022 80BD     		pop	{r7, pc}
 171              		.cfi_endproc
 172              	.LFE8:
 174              		.section	.text.Ft_Esd_BitmapCell_GetInfo,"ax",%progbits
 175              		.align	1
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 179              		.fpu fpv5-sp-d16
 181              	Ft_Esd_BitmapCell_GetInfo:
 182              	.LFB9:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s 			page 5


 183              		.file 2 "FT_Esd_Framework/Ft_Esd_BitmapInfo.h"
   1:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** /*
   2:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** Bitmap info structure
   3:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** */
   4:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
   5:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #ifndef FT_ESD_BITMAPINFO_H
   6:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #define FT_ESD_BITMAPINFO_H
   7:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
   8:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "Ft_Esd.h"
   9:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "FT_DataTypes.h"
  10:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "Ft_Esd_GpuAlloc.h"
  11:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  12:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapInfo, Native = Struct) // TODO: Struct support, expose values
  13:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  14:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  15:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Width;
  16:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Height;
  17:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Stride;
  18:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Format;
  19:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Size;
  20:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	const char *File;
  21:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  22:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Handle pointing to the address in RAM_G if it is allocated
  23:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_GpuHandle GpuHandle;
  24:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  25:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Bitmap handle that is being used
  26:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_uint32_t BitmapHandle;
  27:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  28:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	const char *PaletteFile;
  29:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_GpuHandle PaletteGpuHandle;
  30:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  31:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// When this is set, the allocated ram is not free'd automatically
  32:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Use Ft_Esd_GpuAlloc_Free(GpuAlloc, GpuHandle) to free the GPU ram manually
  33:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_bool_t Persistent;
  34:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  35:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_BitmapInfo;
  36:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  37:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapInfo *, Native = Pointer, Edit = Library)
  38:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  39:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapCell, Native = Struct) // TODO: Struct support, expose values
  40:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  41:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  42:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapInfo *Info;
  43:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Cell;
  44:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_BitmapCell;
  45:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  46:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapCell *, Native = Pointer, Edit = Library)
  47:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  48:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // Attempts to load the specified bitmap if it has not been loaded into RAM_G yet.
  49:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // Call during the Update cycle of each frame to keep the bitmap flagged as in use, otherwise the m
  50:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_LoadBitmap, Type = ft_uint32_t, Include = "Ft_Esd_BitmapInfo.h", DisplayName = 
  51:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapInfo, Type = Ft_Esd_BitmapInfo *)
  52:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ft_uint32_t Ft_Esd_LoadBitmap(Ft_Esd_BitmapInfo *bitmapInfo);
  53:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  54:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_LoadPalette, Type = ft_uint32_t, Include = "Ft_Esd_BitmapInfo.h", DisplayName =
  55:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapInfo, Type = Ft_Esd_BitmapInfo *)
  56:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ft_uint32_t Ft_Esd_LoadPalette(Ft_Esd_BitmapInfo *bitmapInfo);
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s 			page 6


  57:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  58:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_ENUM(_BitmapResourceFormat, DisplayName = "Bitmap Format")
  59:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB1555)
  60:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L1)
  61:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L2)
  62:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L4)
  63:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L8)
  64:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(RGB332)
  65:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB2)
  66:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB4)
  67:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(RGB565)
  68:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(PALETTED565)
  69:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(PALETTED4444)
  70:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(PALETTED8)
  71:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(JPEG)
  72:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(PNG)
  73:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_END()
  74:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  75:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_LOGIC(Ft_Esd_SwitchBitmapCell, Callback, Include = "Ft_Esd_BitmapInfo.h", DisplayName = "Switch
  76:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  77:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  78:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Callback
  79:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	void *Parent;
  80:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  81:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  82:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Input
  83:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  84:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  85:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ESD_INPUT(BitmapInfo, Type = Ft_Esd_BitmapInfo *, DisplayName = "Bitmap Info")
  86:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapInfo *(* BitmapInfo)(void *context);
  87:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  88:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ESD_INPUT(Cell, Type = ft_uint8_t, DisplayName = "Cell")
  89:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_uint8_t(* Cell)(void *context);
  90:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  91:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  92:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Variables
  93:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  94:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  95:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// BitmapCell object
  96:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapCell BitmapCell;
  97:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  98:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_SwitchBitmapCell;
  99:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 100:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** void Ft_Esd_SwitchBitmapCell__Initializer(Ft_Esd_SwitchBitmapCell *context);
 101:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 102:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_OUTPUT(BitmapCell, Type = Ft_Esd_BitmapCell *, DisplayName = "Bitmap Cell")
 103:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** Ft_Esd_BitmapCell *Ft_Esd_SwitchBitmapCell_BitmapCell(Ft_Esd_SwitchBitmapCell *context);
 104:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 105:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_UPDATE(Ft_Esd_BitmapPersist, DisplayName = "Bitmap Persist", Category = EsdUtilities)
 106:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapCell, Type = Ft_Esd_BitmapCell *)
 107:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** void Ft_Esd_BitmapPersist(Ft_Esd_BitmapCell *bitmapCell);
 108:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 109:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_BitmapCell_GetInfo, Type = Ft_Esd_BitmapInfo *, DisplayName = "ESD BitmapCell G
 110:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapCell, Type = Ft_Esd_BitmapCell *)
 111:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** static Ft_Esd_BitmapInfo *Ft_Esd_BitmapCell_GetInfo(Ft_Esd_BitmapCell *bitmapCell)
 112:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
 184              		.loc 2 112 0 is_stmt 1
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s 			page 7


 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 8
 187              		@ frame_needed = 1, uses_anonymous_args = 0
 188              		@ link register save eliminated.
 189 0000 80B4     		push	{r7}
 190              	.LCFI15:
 191              		.cfi_def_cfa_offset 4
 192              		.cfi_offset 7, -4
 193 0002 83B0     		sub	sp, sp, #12
 194              	.LCFI16:
 195              		.cfi_def_cfa_offset 16
 196 0004 00AF     		add	r7, sp, #0
 197              	.LCFI17:
 198              		.cfi_def_cfa_register 7
 199 0006 7860     		str	r0, [r7, #4]
 113:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	if (!bitmapCell) return 0;
 200              		.loc 2 113 0
 201 0008 7B68     		ldr	r3, [r7, #4]
 202 000a 002B     		cmp	r3, #0
 203 000c 01D1     		bne	.L11
 204              		.loc 2 113 0 is_stmt 0 discriminator 1
 205 000e 0023     		movs	r3, #0
 206 0010 01E0     		b	.L12
 207              	.L11:
 114:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	return bitmapCell->Info;
 208              		.loc 2 114 0 is_stmt 1
 209 0012 7B68     		ldr	r3, [r7, #4]
 210 0014 1B68     		ldr	r3, [r3]
 211              	.L12:
 115:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** }
 212              		.loc 2 115 0
 213 0016 1846     		mov	r0, r3
 214 0018 0C37     		adds	r7, r7, #12
 215              	.LCFI18:
 216              		.cfi_def_cfa_offset 4
 217 001a BD46     		mov	sp, r7
 218              	.LCFI19:
 219              		.cfi_def_cfa_register 13
 220              		@ sp needed
 221 001c 5DF8047B 		ldr	r7, [sp], #4
 222              	.LCFI20:
 223              		.cfi_restore 7
 224              		.cfi_def_cfa_offset 0
 225 0020 7047     		bx	lr
 226              		.cfi_endproc
 227              	.LFE9:
 229              		.section	.text.Ft_Esd_Dl_TAG,"ax",%progbits
 230              		.align	1
 231              		.syntax unified
 232              		.thumb
 233              		.thumb_func
 234              		.fpu fpv5-sp-d16
 236              	Ft_Esd_Dl_TAG:
 237              	.LFB12:
 238              		.file 3 "FT_Esd_Framework/FT_Esd_Dl.h"
   1:FT_Esd_Framework/FT_Esd_Dl.h **** 
   2:FT_Esd_Framework/FT_Esd_Dl.h **** #ifndef FT_ESD_DL_H
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s 			page 8


   3:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_DL_H
   4:FT_Esd_Framework/FT_Esd_Dl.h **** 
   5:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_DataTypes.h"
   6:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_Platform.h"
   7:FT_Esd_Framework/FT_Esd_Dl.h **** #include "Ft_Esd.h"
   8:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_Gpu.h"
   9:FT_Esd_Framework/FT_Esd_Dl.h **** #include "Ft_Esd_BitmapInfo.h"
  10:FT_Esd_Framework/FT_Esd_Dl.h **** 
  11:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_CATEGORY(EsdUtilities, DisplayName = "ESD Utilities")
  12:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_CATEGORY(EveRenderFunctions, DisplayName = "EVE Render Functions")
  13:FT_Esd_Framework/FT_Esd_Dl.h **** 
  14:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_TYPE(Ft_Gpu_Hal_Context_t *, Native = Pointer, Edit = Library)
  15:FT_Esd_Framework/FT_Esd_Dl.h **** 
  16:FT_Esd_Framework/FT_Esd_Dl.h **** // Keep cache of displaylist values that don't often change but are generally set by every widget t
  17:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_OPTIMIZE_DISPLAYLIST 1
  18:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_STATE_STACK_SIZE 5
  19:FT_Esd_Framework/FT_Esd_Dl.h **** 
  20:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_BITMAPHANDLE_INVALID 255
  21:FT_Esd_Framework/FT_Esd_Dl.h **** 
  22:FT_Esd_Framework/FT_Esd_Dl.h **** //
  23:FT_Esd_Framework/FT_Esd_Dl.h **** // Structs
  24:FT_Esd_Framework/FT_Esd_Dl.h **** //
  25:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_ESD_OPTIMIZE_DISPLAYLIST
  26:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_STATE Ft_Esd_GpuState[Ft_Esd_GpuState_I]
  27:FT_Esd_Framework/FT_Esd_Dl.h **** typedef struct
  28:FT_Esd_Framework/FT_Esd_Dl.h **** {
  29:FT_Esd_Framework/FT_Esd_Dl.h **** 	// Keep to a minimum
  30:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_81X_ENABLE
  31:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint32_t PaletteSource;
  32:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  33:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint32_t ColorRGB;
  34:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t ColorA;
  35:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t Handle;         // Current handle
  36:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t Cell;           // Current cell
  37:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_bool_t BitmapTransform; // BitmapTransform other than default is set
  38:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_81X_ENABLE
  39:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t VertexFormat;   // Current vertex format
  40:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  41:FT_Esd_Framework/FT_Esd_Dl.h **** } Ft_Esd_GpuState_T;
  42:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  43:FT_Esd_Framework/FT_Esd_Dl.h **** 
  44:FT_Esd_Framework/FT_Esd_Dl.h **** //
  45:FT_Esd_Framework/FT_Esd_Dl.h **** // Globals
  46:FT_Esd_Framework/FT_Esd_Dl.h **** //
  47:FT_Esd_Framework/FT_Esd_Dl.h **** extern Ft_Gpu_Hal_Context_t *Ft_Esd_Host;
  48:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint16_t Ft_Esd_FontHeight[32];
  49:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_ESD_OPTIMIZE_DISPLAYLIST
  50:FT_Esd_Framework/FT_Esd_Dl.h **** extern Ft_Esd_GpuState_T Ft_Esd_GpuState[FT_ESD_STATE_STACK_SIZE];
  51:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint8_t Ft_Esd_GpuState_I;
  52:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint32_t Ft_Esd_CoFgColor;
  53:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint32_t Ft_Esd_CoBgColor;
  54:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  55:FT_Esd_Framework/FT_Esd_Dl.h **** 
  56:FT_Esd_Framework/FT_Esd_Dl.h **** //Get the height of builtin font
  57:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_GetFontHeight, Type = ft_uint16_t ,DisplayName = "Get Font Height", Category = 
  58:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(i, Type = int, DisplayName = "Bitmap Handle", Default = 0, Min = 0, Max = 31)
  59:FT_Esd_Framework/FT_Esd_Dl.h **** // inline static ft_uint16_t Ft_Esd_GetFontHeight(int i) { return Ft_Esd_FontHeight[i]; }
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s 			page 9


  60:FT_Esd_Framework/FT_Esd_Dl.h **** #define Ft_Esd_GetFontHeight(i) (Ft_Esd_FontHeight[i]);
  61:FT_Esd_Framework/FT_Esd_Dl.h **** 
  62:FT_Esd_Framework/FT_Esd_Dl.h **** // Reset any cached state
  63:FT_Esd_Framework/FT_Esd_Dl.h **** void Ft_Esd_ResetGpuState();
  64:FT_Esd_Framework/FT_Esd_Dl.h **** void Ft_Esd_ResetCoState();
  65:FT_Esd_Framework/FT_Esd_Dl.h **** 
  66:FT_Esd_Framework/FT_Esd_Dl.h **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotalUsed();
  67:FT_Esd_Framework/FT_Esd_Dl.h **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotal();
  68:FT_Esd_Framework/FT_Esd_Dl.h **** 
  69:FT_Esd_Framework/FT_Esd_Dl.h **** /// Set current tag. Must be returned to 255 after usage, to ensure next widgets don't draw with in
  70:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_TAG, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  71:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(s, Type = ft_uint8_t, DisplayName = "Tag", Default = 255, Min = 0, Max = 255)
  72:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_TAG(ft_uint8_t s)
  73:FT_Esd_Framework/FT_Esd_Dl.h **** {
 239              		.loc 3 73 0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 8
 242              		@ frame_needed = 1, uses_anonymous_args = 0
 243 0000 80B5     		push	{r7, lr}
 244              	.LCFI21:
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 7, -8
 247              		.cfi_offset 14, -4
 248 0002 82B0     		sub	sp, sp, #8
 249              	.LCFI22:
 250              		.cfi_def_cfa_offset 16
 251 0004 00AF     		add	r7, sp, #0
 252              	.LCFI23:
 253              		.cfi_def_cfa_register 7
 254 0006 0346     		mov	r3, r0
 255 0008 FB71     		strb	r3, [r7, #7]
  74:FT_Esd_Framework/FT_Esd_Dl.h **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, TAG(s));
 256              		.loc 3 74 0
 257 000a 064B     		ldr	r3, .L14
 258 000c 1A68     		ldr	r2, [r3]
 259 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 260 0010 43F04073 		orr	r3, r3, #50331648
 261 0014 1946     		mov	r1, r3
 262 0016 1046     		mov	r0, r2
 263 0018 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  75:FT_Esd_Framework/FT_Esd_Dl.h **** }
 264              		.loc 3 75 0
 265 001c 00BF     		nop
 266 001e 0837     		adds	r7, r7, #8
 267              	.LCFI24:
 268              		.cfi_def_cfa_offset 8
 269 0020 BD46     		mov	sp, r7
 270              	.LCFI25:
 271              		.cfi_def_cfa_register 13
 272              		@ sp needed
 273 0022 80BD     		pop	{r7, pc}
 274              	.L15:
 275              		.align	2
 276              	.L14:
 277 0024 00000000 		.word	Ft_Esd_Host
 278              		.cfi_endproc
 279              	.LFE12:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s 			page 10


 281              		.section	.text.Ft_Esd_Dl_COLOR_RGB,"ax",%progbits
 282              		.align	1
 283              		.syntax unified
 284              		.thumb
 285              		.thumb_func
 286              		.fpu fpv5-sp-d16
 288              	Ft_Esd_Dl_COLOR_RGB:
 289              	.LFB13:
  76:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify color RGB
  77:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_RGB, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  78:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(c, Type = ft_rgb32_t, DisplayName = "Color")
  79:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_RGB(ft_rgb32_t c)
  80:FT_Esd_Framework/FT_Esd_Dl.h **** {
 290              		.loc 3 80 0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 16
 293              		@ frame_needed = 1, uses_anonymous_args = 0
 294 0000 80B5     		push	{r7, lr}
 295              	.LCFI26:
 296              		.cfi_def_cfa_offset 8
 297              		.cfi_offset 7, -8
 298              		.cfi_offset 14, -4
 299 0002 84B0     		sub	sp, sp, #16
 300              	.LCFI27:
 301              		.cfi_def_cfa_offset 24
 302 0004 00AF     		add	r7, sp, #0
 303              	.LCFI28:
 304              		.cfi_def_cfa_register 7
 305 0006 7860     		str	r0, [r7, #4]
  81:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  82:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_rgb32_t rgb = c & 0xFFFFFF;
 306              		.loc 3 82 0
 307 0008 7B68     		ldr	r3, [r7, #4]
 308 000a 23F07F43 		bic	r3, r3, #-16777216
 309 000e FB60     		str	r3, [r7, #12]
  83:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (rgb != FT_ESD_STATE.ColorRGB)
 310              		.loc 3 83 0
 311 0010 0F4B     		ldr	r3, .L19
 312 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 313 0014 0F4A     		ldr	r2, .L19+4
 314 0016 1B01     		lsls	r3, r3, #4
 315 0018 1344     		add	r3, r3, r2
 316 001a 0433     		adds	r3, r3, #4
 317 001c 1B68     		ldr	r3, [r3]
 318 001e FA68     		ldr	r2, [r7, #12]
 319 0020 9A42     		cmp	r2, r3
 320 0022 10D0     		beq	.L18
  84:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
  85:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  86:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, (4UL << 24) | (rgb));
 321              		.loc 3 86 0
 322 0024 0C4B     		ldr	r3, .L19+8
 323 0026 1A68     		ldr	r2, [r3]
 324 0028 FB68     		ldr	r3, [r7, #12]
 325 002a 43F08063 		orr	r3, r3, #67108864
 326 002e 1946     		mov	r1, r3
 327 0030 1046     		mov	r0, r2
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s 			page 11


 328 0032 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  87:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  88:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.ColorRGB = rgb;
 329              		.loc 3 88 0
 330 0036 064B     		ldr	r3, .L19
 331 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 332 003a 064A     		ldr	r2, .L19+4
 333 003c 1B01     		lsls	r3, r3, #4
 334 003e 1344     		add	r3, r3, r2
 335 0040 0433     		adds	r3, r3, #4
 336 0042 FA68     		ldr	r2, [r7, #12]
 337 0044 1A60     		str	r2, [r3]
 338              	.L18:
  89:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
  90:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  91:FT_Esd_Framework/FT_Esd_Dl.h **** }
 339              		.loc 3 91 0
 340 0046 00BF     		nop
 341 0048 1037     		adds	r7, r7, #16
 342              	.LCFI29:
 343              		.cfi_def_cfa_offset 8
 344 004a BD46     		mov	sp, r7
 345              	.LCFI30:
 346              		.cfi_def_cfa_register 13
 347              		@ sp needed
 348 004c 80BD     		pop	{r7, pc}
 349              	.L20:
 350 004e 00BF     		.align	2
 351              	.L19:
 352 0050 00000000 		.word	Ft_Esd_GpuState_I
 353 0054 00000000 		.word	Ft_Esd_GpuState
 354 0058 00000000 		.word	Ft_Esd_Host
 355              		.cfi_endproc
 356              	.LFE13:
 358              		.section	.text.Ft_Esd_Dl_COLOR_A,"ax",%progbits
 359              		.align	1
 360              		.syntax unified
 361              		.thumb
 362              		.thumb_func
 363              		.fpu fpv5-sp-d16
 365              	Ft_Esd_Dl_COLOR_A:
 366              	.LFB14:
  92:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify alpha channel
  93:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_A, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  94:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(alpha, Type = ft_uint8_t, Default = 255, Min = 0, Max = 255)
  95:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_A(ft_uint8_t alpha)
  96:FT_Esd_Framework/FT_Esd_Dl.h **** {
 367              		.loc 3 96 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 8
 370              		@ frame_needed = 1, uses_anonymous_args = 0
 371 0000 80B5     		push	{r7, lr}
 372              	.LCFI31:
 373              		.cfi_def_cfa_offset 8
 374              		.cfi_offset 7, -8
 375              		.cfi_offset 14, -4
 376 0002 82B0     		sub	sp, sp, #8
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s 			page 12


 377              	.LCFI32:
 378              		.cfi_def_cfa_offset 16
 379 0004 00AF     		add	r7, sp, #0
 380              	.LCFI33:
 381              		.cfi_def_cfa_register 7
 382 0006 0346     		mov	r3, r0
 383 0008 FB71     		strb	r3, [r7, #7]
  97:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  98:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (alpha != FT_ESD_STATE.ColorA)
 384              		.loc 3 98 0
 385 000a 0F4B     		ldr	r3, .L24
 386 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 387 000e 0F4A     		ldr	r2, .L24+4
 388 0010 1B01     		lsls	r3, r3, #4
 389 0012 1344     		add	r3, r3, r2
 390 0014 0833     		adds	r3, r3, #8
 391 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 392 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 393 001a 9A42     		cmp	r2, r3
 394 001c 10D0     		beq	.L23
  99:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
 100:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 101:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, COLOR_A(alpha));
 395              		.loc 3 101 0
 396 001e 0C4B     		ldr	r3, .L24+8
 397 0020 1A68     		ldr	r2, [r3]
 398 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 399 0024 43F08053 		orr	r3, r3, #268435456
 400 0028 1946     		mov	r1, r3
 401 002a 1046     		mov	r0, r2
 402 002c FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 102:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 103:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.ColorA = alpha;
 403              		.loc 3 103 0
 404 0030 054B     		ldr	r3, .L24
 405 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 406 0034 054A     		ldr	r2, .L24+4
 407 0036 1B01     		lsls	r3, r3, #4
 408 0038 1344     		add	r3, r3, r2
 409 003a 0833     		adds	r3, r3, #8
 410 003c FA79     		ldrb	r2, [r7, #7]
 411 003e 1A70     		strb	r2, [r3]
 412              	.L23:
 104:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
 105:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 106:FT_Esd_Framework/FT_Esd_Dl.h **** }
 413              		.loc 3 106 0
 414 0040 00BF     		nop
 415 0042 0837     		adds	r7, r7, #8
 416              	.LCFI34:
 417              		.cfi_def_cfa_offset 8
 418 0044 BD46     		mov	sp, r7
 419              	.LCFI35:
 420              		.cfi_def_cfa_register 13
 421              		@ sp needed
 422 0046 80BD     		pop	{r7, pc}
 423              	.L25:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s 			page 13


 424              		.align	2
 425              	.L24:
 426 0048 00000000 		.word	Ft_Esd_GpuState_I
 427 004c 00000000 		.word	Ft_Esd_GpuState
 428 0050 00000000 		.word	Ft_Esd_Host
 429              		.cfi_endproc
 430              	.LFE14:
 432              		.section	.text.Ft_Esd_PushButton_Theme__Default,"ax",%progbits
 433              		.align	1
 434              		.global	Ft_Esd_PushButton_Theme__Default
 435              		.syntax unified
 436              		.thumb
 437              		.thumb_func
 438              		.fpu fpv5-sp-d16
 440              	Ft_Esd_PushButton_Theme__Default:
 441              	.LFB23:
 442              		.file 4 "FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c"
   1:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** /*
   2:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** This file is automatically generated
   3:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** Ft_Esd_PushButton
   4:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** C Source
   5:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c ****  */
   6:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 
   7:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** #include "Ft_Esd_PushButton.h"
   8:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 
   9:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** #include "FT_Esd_CoPro_Cmds.h"
  10:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** #include "FT_Esd_Dl.h"
  11:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 
  12:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** extern void Ft_Esd_Noop(void *context);
  13:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** Ft_Esd_Theme * Ft_Esd_PushButton_Theme__Default(void *context) { return Ft_Esd_Theme_GetCurrent(); 
 443              		.loc 4 13 0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 8
 446              		@ frame_needed = 1, uses_anonymous_args = 0
 447 0000 80B5     		push	{r7, lr}
 448              	.LCFI36:
 449              		.cfi_def_cfa_offset 8
 450              		.cfi_offset 7, -8
 451              		.cfi_offset 14, -4
 452 0002 82B0     		sub	sp, sp, #8
 453              	.LCFI37:
 454              		.cfi_def_cfa_offset 16
 455 0004 00AF     		add	r7, sp, #0
 456              	.LCFI38:
 457              		.cfi_def_cfa_register 7
 458 0006 7860     		str	r0, [r7, #4]
 459              		.loc 4 13 0
 460 0008 FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
 461 000c 0346     		mov	r3, r0
 462 000e 1846     		mov	r0, r3
 463 0010 0837     		adds	r7, r7, #8
 464              	.LCFI39:
 465              		.cfi_def_cfa_offset 8
 466 0012 BD46     		mov	sp, r7
 467              	.LCFI40:
 468              		.cfi_def_cfa_register 13
 469              		@ sp needed
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s 			page 14


 470 0014 80BD     		pop	{r7, pc}
 471              		.cfi_endproc
 472              	.LFE23:
 474              		.section	.text.Ft_Esd_PushButton_X__Default,"ax",%progbits
 475              		.align	1
 476              		.global	Ft_Esd_PushButton_X__Default
 477              		.syntax unified
 478              		.thumb
 479              		.thumb_func
 480              		.fpu fpv5-sp-d16
 482              	Ft_Esd_PushButton_X__Default:
 483              	.LFB24:
  14:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** ft_int16_t Ft_Esd_PushButton_X__Default(void *context) { return 0; }
 484              		.loc 4 14 0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 8
 487              		@ frame_needed = 1, uses_anonymous_args = 0
 488              		@ link register save eliminated.
 489 0000 80B4     		push	{r7}
 490              	.LCFI41:
 491              		.cfi_def_cfa_offset 4
 492              		.cfi_offset 7, -4
 493 0002 83B0     		sub	sp, sp, #12
 494              	.LCFI42:
 495              		.cfi_def_cfa_offset 16
 496 0004 00AF     		add	r7, sp, #0
 497              	.LCFI43:
 498              		.cfi_def_cfa_register 7
 499 0006 7860     		str	r0, [r7, #4]
 500              		.loc 4 14 0
 501 0008 0023     		movs	r3, #0
 502 000a 1846     		mov	r0, r3
 503 000c 0C37     		adds	r7, r7, #12
 504              	.LCFI44:
 505              		.cfi_def_cfa_offset 4
 506 000e BD46     		mov	sp, r7
 507              	.LCFI45:
 508              		.cfi_def_cfa_register 13
 509              		@ sp needed
 510 0010 5DF8047B 		ldr	r7, [sp], #4
 511              	.LCFI46:
 512              		.cfi_restore 7
 513              		.cfi_def_cfa_offset 0
 514 0014 7047     		bx	lr
 515              		.cfi_endproc
 516              	.LFE24:
 518              		.section	.text.Ft_Esd_PushButton_Y__Default,"ax",%progbits
 519              		.align	1
 520              		.global	Ft_Esd_PushButton_Y__Default
 521              		.syntax unified
 522              		.thumb
 523              		.thumb_func
 524              		.fpu fpv5-sp-d16
 526              	Ft_Esd_PushButton_Y__Default:
 527              	.LFB25:
  15:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** ft_int16_t Ft_Esd_PushButton_Y__Default(void *context) { return 0; }
 528              		.loc 4 15 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s 			page 15


 529              		.cfi_startproc
 530              		@ args = 0, pretend = 0, frame = 8
 531              		@ frame_needed = 1, uses_anonymous_args = 0
 532              		@ link register save eliminated.
 533 0000 80B4     		push	{r7}
 534              	.LCFI47:
 535              		.cfi_def_cfa_offset 4
 536              		.cfi_offset 7, -4
 537 0002 83B0     		sub	sp, sp, #12
 538              	.LCFI48:
 539              		.cfi_def_cfa_offset 16
 540 0004 00AF     		add	r7, sp, #0
 541              	.LCFI49:
 542              		.cfi_def_cfa_register 7
 543 0006 7860     		str	r0, [r7, #4]
 544              		.loc 4 15 0
 545 0008 0023     		movs	r3, #0
 546 000a 1846     		mov	r0, r3
 547 000c 0C37     		adds	r7, r7, #12
 548              	.LCFI50:
 549              		.cfi_def_cfa_offset 4
 550 000e BD46     		mov	sp, r7
 551              	.LCFI51:
 552              		.cfi_def_cfa_register 13
 553              		@ sp needed
 554 0010 5DF8047B 		ldr	r7, [sp], #4
 555              	.LCFI52:
 556              		.cfi_restore 7
 557              		.cfi_def_cfa_offset 0
 558 0014 7047     		bx	lr
 559              		.cfi_endproc
 560              	.LFE25:
 562              		.section	.text.Ft_Esd_PushButton_Width__Default,"ax",%progbits
 563              		.align	1
 564              		.global	Ft_Esd_PushButton_Width__Default
 565              		.syntax unified
 566              		.thumb
 567              		.thumb_func
 568              		.fpu fpv5-sp-d16
 570              	Ft_Esd_PushButton_Width__Default:
 571              	.LFB26:
  16:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** ft_int16_t Ft_Esd_PushButton_Width__Default(void *context) { return 120; }
 572              		.loc 4 16 0
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 8
 575              		@ frame_needed = 1, uses_anonymous_args = 0
 576              		@ link register save eliminated.
 577 0000 80B4     		push	{r7}
 578              	.LCFI53:
 579              		.cfi_def_cfa_offset 4
 580              		.cfi_offset 7, -4
 581 0002 83B0     		sub	sp, sp, #12
 582              	.LCFI54:
 583              		.cfi_def_cfa_offset 16
 584 0004 00AF     		add	r7, sp, #0
 585              	.LCFI55:
 586              		.cfi_def_cfa_register 7
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s 			page 16


 587 0006 7860     		str	r0, [r7, #4]
 588              		.loc 4 16 0
 589 0008 7823     		movs	r3, #120
 590 000a 1846     		mov	r0, r3
 591 000c 0C37     		adds	r7, r7, #12
 592              	.LCFI56:
 593              		.cfi_def_cfa_offset 4
 594 000e BD46     		mov	sp, r7
 595              	.LCFI57:
 596              		.cfi_def_cfa_register 13
 597              		@ sp needed
 598 0010 5DF8047B 		ldr	r7, [sp], #4
 599              	.LCFI58:
 600              		.cfi_restore 7
 601              		.cfi_def_cfa_offset 0
 602 0014 7047     		bx	lr
 603              		.cfi_endproc
 604              	.LFE26:
 606              		.section	.text.Ft_Esd_PushButton_Height__Default,"ax",%progbits
 607              		.align	1
 608              		.global	Ft_Esd_PushButton_Height__Default
 609              		.syntax unified
 610              		.thumb
 611              		.thumb_func
 612              		.fpu fpv5-sp-d16
 614              	Ft_Esd_PushButton_Height__Default:
 615              	.LFB27:
  17:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** ft_int16_t Ft_Esd_PushButton_Height__Default(void *context) { return 36; }
 616              		.loc 4 17 0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 8
 619              		@ frame_needed = 1, uses_anonymous_args = 0
 620              		@ link register save eliminated.
 621 0000 80B4     		push	{r7}
 622              	.LCFI59:
 623              		.cfi_def_cfa_offset 4
 624              		.cfi_offset 7, -4
 625 0002 83B0     		sub	sp, sp, #12
 626              	.LCFI60:
 627              		.cfi_def_cfa_offset 16
 628 0004 00AF     		add	r7, sp, #0
 629              	.LCFI61:
 630              		.cfi_def_cfa_register 7
 631 0006 7860     		str	r0, [r7, #4]
 632              		.loc 4 17 0
 633 0008 2423     		movs	r3, #36
 634 000a 1846     		mov	r0, r3
 635 000c 0C37     		adds	r7, r7, #12
 636              	.LCFI62:
 637              		.cfi_def_cfa_offset 4
 638 000e BD46     		mov	sp, r7
 639              	.LCFI63:
 640              		.cfi_def_cfa_register 13
 641              		@ sp needed
 642 0010 5DF8047B 		ldr	r7, [sp], #4
 643              	.LCFI64:
 644              		.cfi_restore 7
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s 			page 17


 645              		.cfi_def_cfa_offset 0
 646 0014 7047     		bx	lr
 647              		.cfi_endproc
 648              	.LFE27:
 650              		.section	.text.Ft_Esd_PushButton_Font__Default,"ax",%progbits
 651              		.align	1
 652              		.global	Ft_Esd_PushButton_Font__Default
 653              		.syntax unified
 654              		.thumb
 655              		.thumb_func
 656              		.fpu fpv5-sp-d16
 658              	Ft_Esd_PushButton_Font__Default:
 659              	.LFB28:
  18:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** ft_int16_t Ft_Esd_PushButton_Font__Default(void *context) { return 27; }
 660              		.loc 4 18 0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 8
 663              		@ frame_needed = 1, uses_anonymous_args = 0
 664              		@ link register save eliminated.
 665 0000 80B4     		push	{r7}
 666              	.LCFI65:
 667              		.cfi_def_cfa_offset 4
 668              		.cfi_offset 7, -4
 669 0002 83B0     		sub	sp, sp, #12
 670              	.LCFI66:
 671              		.cfi_def_cfa_offset 16
 672 0004 00AF     		add	r7, sp, #0
 673              	.LCFI67:
 674              		.cfi_def_cfa_register 7
 675 0006 7860     		str	r0, [r7, #4]
 676              		.loc 4 18 0
 677 0008 1B23     		movs	r3, #27
 678 000a 1846     		mov	r0, r3
 679 000c 0C37     		adds	r7, r7, #12
 680              	.LCFI68:
 681              		.cfi_def_cfa_offset 4
 682 000e BD46     		mov	sp, r7
 683              	.LCFI69:
 684              		.cfi_def_cfa_register 13
 685              		@ sp needed
 686 0010 5DF8047B 		ldr	r7, [sp], #4
 687              	.LCFI70:
 688              		.cfi_restore 7
 689              		.cfi_def_cfa_offset 0
 690 0014 7047     		bx	lr
 691              		.cfi_endproc
 692              	.LFE28:
 694              		.section	.rodata
 695              		.align	2
 696              	.LC0:
 697 0000 42757474 		.ascii	"Button\000"
 697      6F6E00
 698              		.section	.text.Ft_Esd_PushButton_Text__Default,"ax",%progbits
 699              		.align	1
 700              		.global	Ft_Esd_PushButton_Text__Default
 701              		.syntax unified
 702              		.thumb
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s 			page 18


 703              		.thumb_func
 704              		.fpu fpv5-sp-d16
 706              	Ft_Esd_PushButton_Text__Default:
 707              	.LFB29:
  19:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** const char * Ft_Esd_PushButton_Text__Default(void *context) { return "Button"; }
 708              		.loc 4 19 0
 709              		.cfi_startproc
 710              		@ args = 0, pretend = 0, frame = 8
 711              		@ frame_needed = 1, uses_anonymous_args = 0
 712              		@ link register save eliminated.
 713 0000 80B4     		push	{r7}
 714              	.LCFI71:
 715              		.cfi_def_cfa_offset 4
 716              		.cfi_offset 7, -4
 717 0002 83B0     		sub	sp, sp, #12
 718              	.LCFI72:
 719              		.cfi_def_cfa_offset 16
 720 0004 00AF     		add	r7, sp, #0
 721              	.LCFI73:
 722              		.cfi_def_cfa_register 7
 723 0006 7860     		str	r0, [r7, #4]
 724              		.loc 4 19 0
 725 0008 034B     		ldr	r3, .L40
 726 000a 1846     		mov	r0, r3
 727 000c 0C37     		adds	r7, r7, #12
 728              	.LCFI74:
 729              		.cfi_def_cfa_offset 4
 730 000e BD46     		mov	sp, r7
 731              	.LCFI75:
 732              		.cfi_def_cfa_register 13
 733              		@ sp needed
 734 0010 5DF8047B 		ldr	r7, [sp], #4
 735              	.LCFI76:
 736              		.cfi_restore 7
 737              		.cfi_def_cfa_offset 0
 738 0014 7047     		bx	lr
 739              	.L41:
 740 0016 00BF     		.align	2
 741              	.L40:
 742 0018 00000000 		.word	.LC0
 743              		.cfi_endproc
 744              	.LFE29:
 746              		.section	.text.Ft_Esd_PushButton_Primary__Default,"ax",%progbits
 747              		.align	1
 748              		.global	Ft_Esd_PushButton_Primary__Default
 749              		.syntax unified
 750              		.thumb
 751              		.thumb_func
 752              		.fpu fpv5-sp-d16
 754              	Ft_Esd_PushButton_Primary__Default:
 755              	.LFB30:
  20:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** ft_bool_t Ft_Esd_PushButton_Primary__Default(void *context) { return 1; }
 756              		.loc 4 20 0
 757              		.cfi_startproc
 758              		@ args = 0, pretend = 0, frame = 8
 759              		@ frame_needed = 1, uses_anonymous_args = 0
 760              		@ link register save eliminated.
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s 			page 19


 761 0000 80B4     		push	{r7}
 762              	.LCFI77:
 763              		.cfi_def_cfa_offset 4
 764              		.cfi_offset 7, -4
 765 0002 83B0     		sub	sp, sp, #12
 766              	.LCFI78:
 767              		.cfi_def_cfa_offset 16
 768 0004 00AF     		add	r7, sp, #0
 769              	.LCFI79:
 770              		.cfi_def_cfa_register 7
 771 0006 7860     		str	r0, [r7, #4]
 772              		.loc 4 20 0
 773 0008 0123     		movs	r3, #1
 774 000a 1846     		mov	r0, r3
 775 000c 0C37     		adds	r7, r7, #12
 776              	.LCFI80:
 777              		.cfi_def_cfa_offset 4
 778 000e BD46     		mov	sp, r7
 779              	.LCFI81:
 780              		.cfi_def_cfa_register 13
 781              		@ sp needed
 782 0010 5DF8047B 		ldr	r7, [sp], #4
 783              	.LCFI82:
 784              		.cfi_restore 7
 785              		.cfi_def_cfa_offset 0
 786 0014 7047     		bx	lr
 787              		.cfi_endproc
 788              	.LFE30:
 790              		.section	.text.Ft_Esd_PushButton__Initializer,"ax",%progbits
 791              		.align	1
 792              		.global	Ft_Esd_PushButton__Initializer
 793              		.syntax unified
 794              		.thumb
 795              		.thumb_func
 796              		.fpu fpv5-sp-d16
 798              	Ft_Esd_PushButton__Initializer:
 799              	.LFB31:
  21:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 
  22:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** Ft_Esd_Theme * Ft_Esd_Theme_GetCurrent();
  23:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** Ft_Gpu_Hal_Context_t * Ft_Esd_GetHost();
  24:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 
  25:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** static void Ft_Esd_PushButton_Touch_Tag_Down__Signal(void *context);
  26:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** static void Ft_Esd_PushButton_Touch_Tag_Up__Signal(void *context);
  27:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** static void Ft_Esd_PushButton_Touch_Tag_Tap__Signal(void *context);
  28:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 
  29:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** void Ft_Esd_PushButton__Initializer(Ft_Esd_PushButton *context)
  30:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** {
 800              		.loc 4 30 0
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 8
 803              		@ frame_needed = 1, uses_anonymous_args = 0
 804 0000 80B5     		push	{r7, lr}
 805              	.LCFI83:
 806              		.cfi_def_cfa_offset 8
 807              		.cfi_offset 7, -8
 808              		.cfi_offset 14, -4
 809 0002 82B0     		sub	sp, sp, #8
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s 			page 20


 810              	.LCFI84:
 811              		.cfi_def_cfa_offset 16
 812 0004 00AF     		add	r7, sp, #0
 813              	.LCFI85:
 814              		.cfi_def_cfa_register 7
 815 0006 7860     		str	r0, [r7, #4]
  31:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Parent = 0;
 816              		.loc 4 31 0
 817 0008 7B68     		ldr	r3, [r7, #4]
 818 000a 0022     		movs	r2, #0
 819 000c 1A60     		str	r2, [r3]
  32:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Theme = Ft_Esd_PushButton_Theme__Default;
 820              		.loc 4 32 0
 821 000e 7B68     		ldr	r3, [r7, #4]
 822 0010 1A4A     		ldr	r2, .L45
 823 0012 5A60     		str	r2, [r3, #4]
  33:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->X = Ft_Esd_PushButton_X__Default;
 824              		.loc 4 33 0
 825 0014 7B68     		ldr	r3, [r7, #4]
 826 0016 1A4A     		ldr	r2, .L45+4
 827 0018 9A60     		str	r2, [r3, #8]
  34:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Y = Ft_Esd_PushButton_Y__Default;
 828              		.loc 4 34 0
 829 001a 7B68     		ldr	r3, [r7, #4]
 830 001c 194A     		ldr	r2, .L45+8
 831 001e DA60     		str	r2, [r3, #12]
  35:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Width = Ft_Esd_PushButton_Width__Default;
 832              		.loc 4 35 0
 833 0020 7B68     		ldr	r3, [r7, #4]
 834 0022 194A     		ldr	r2, .L45+12
 835 0024 1A61     		str	r2, [r3, #16]
  36:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Height = Ft_Esd_PushButton_Height__Default;
 836              		.loc 4 36 0
 837 0026 7B68     		ldr	r3, [r7, #4]
 838 0028 184A     		ldr	r2, .L45+16
 839 002a 5A61     		str	r2, [r3, #20]
  37:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Font = Ft_Esd_PushButton_Font__Default;
 840              		.loc 4 37 0
 841 002c 7B68     		ldr	r3, [r7, #4]
 842 002e 184A     		ldr	r2, .L45+20
 843 0030 9A61     		str	r2, [r3, #24]
  38:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Text = Ft_Esd_PushButton_Text__Default;
 844              		.loc 4 38 0
 845 0032 7B68     		ldr	r3, [r7, #4]
 846 0034 174A     		ldr	r2, .L45+24
 847 0036 DA61     		str	r2, [r3, #28]
  39:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Down = Ft_Esd_Noop;
 848              		.loc 4 39 0
 849 0038 7B68     		ldr	r3, [r7, #4]
 850 003a 174A     		ldr	r2, .L45+28
 851 003c 1A62     		str	r2, [r3, #32]
  40:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Primary = Ft_Esd_PushButton_Primary__Default;
 852              		.loc 4 40 0
 853 003e 7B68     		ldr	r3, [r7, #4]
 854 0040 164A     		ldr	r2, .L45+32
 855 0042 5A62     		str	r2, [r3, #36]
  41:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Up = Ft_Esd_Noop;
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s 			page 21


 856              		.loc 4 41 0
 857 0044 7B68     		ldr	r3, [r7, #4]
 858 0046 144A     		ldr	r2, .L45+28
 859 0048 9A62     		str	r2, [r3, #40]
  42:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	Ft_Esd_TouchTag__Initializer(&context->Touch_Tag);
 860              		.loc 4 42 0
 861 004a 7B68     		ldr	r3, [r7, #4]
 862 004c 2C33     		adds	r3, r3, #44
 863 004e 1846     		mov	r0, r3
 864 0050 FFF7FEFF 		bl	Ft_Esd_TouchTag__Initializer
  43:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Touch_Tag.Parent = context;
 865              		.loc 4 43 0
 866 0054 7B68     		ldr	r3, [r7, #4]
 867 0056 7A68     		ldr	r2, [r7, #4]
 868 0058 DA62     		str	r2, [r3, #44]
  44:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Touch_Tag.Down = Ft_Esd_PushButton_Touch_Tag_Down__Signal;
 869              		.loc 4 44 0
 870 005a 7B68     		ldr	r3, [r7, #4]
 871 005c 104A     		ldr	r2, .L45+36
 872 005e 1A63     		str	r2, [r3, #48]
  45:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Touch_Tag.Up = Ft_Esd_PushButton_Touch_Tag_Up__Signal;
 873              		.loc 4 45 0
 874 0060 7B68     		ldr	r3, [r7, #4]
 875 0062 104A     		ldr	r2, .L45+40
 876 0064 5A63     		str	r2, [r3, #52]
  46:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Touch_Tag.Tap = Ft_Esd_PushButton_Touch_Tag_Tap__Signal;
 877              		.loc 4 46 0
 878 0066 7B68     		ldr	r3, [r7, #4]
 879 0068 0F4A     		ldr	r2, .L45+44
 880 006a 9A63     		str	r2, [r3, #56]
  47:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Pushed = Ft_Esd_Noop;
 881              		.loc 4 47 0
 882 006c 7B68     		ldr	r3, [r7, #4]
 883 006e 0A4A     		ldr	r2, .L45+28
 884 0070 5A64     		str	r2, [r3, #68]
  48:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** }
 885              		.loc 4 48 0
 886 0072 00BF     		nop
 887 0074 0837     		adds	r7, r7, #8
 888              	.LCFI86:
 889              		.cfi_def_cfa_offset 8
 890 0076 BD46     		mov	sp, r7
 891              	.LCFI87:
 892              		.cfi_def_cfa_register 13
 893              		@ sp needed
 894 0078 80BD     		pop	{r7, pc}
 895              	.L46:
 896 007a 00BF     		.align	2
 897              	.L45:
 898 007c 00000000 		.word	Ft_Esd_PushButton_Theme__Default
 899 0080 00000000 		.word	Ft_Esd_PushButton_X__Default
 900 0084 00000000 		.word	Ft_Esd_PushButton_Y__Default
 901 0088 00000000 		.word	Ft_Esd_PushButton_Width__Default
 902 008c 00000000 		.word	Ft_Esd_PushButton_Height__Default
 903 0090 00000000 		.word	Ft_Esd_PushButton_Font__Default
 904 0094 00000000 		.word	Ft_Esd_PushButton_Text__Default
 905 0098 00000000 		.word	Ft_Esd_Noop
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s 			page 22


 906 009c 00000000 		.word	Ft_Esd_PushButton_Primary__Default
 907 00a0 00000000 		.word	Ft_Esd_PushButton_Touch_Tag_Down__Signal
 908 00a4 00000000 		.word	Ft_Esd_PushButton_Touch_Tag_Up__Signal
 909 00a8 00000000 		.word	Ft_Esd_PushButton_Touch_Tag_Tap__Signal
 910              		.cfi_endproc
 911              	.LFE31:
 913              		.section	.text.Ft_Esd_PushButton_Render,"ax",%progbits
 914              		.align	1
 915              		.global	Ft_Esd_PushButton_Render
 916              		.syntax unified
 917              		.thumb
 918              		.thumb_func
 919              		.fpu fpv5-sp-d16
 921              	Ft_Esd_PushButton_Render:
 922              	.LFB32:
  49:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 
  50:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** ft_void_t Ft_Gpu_CoCmd_FgColor(Ft_Gpu_Hal_Context_t *, ft_rgb32_t);
  51:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** ft_void_t Ft_Gpu_CoCmd_Button(Ft_Gpu_Hal_Context_t *, ft_int16_t, ft_int16_t, ft_int16_t, ft_int16_
  52:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** ft_void_t Ft_Gpu_CoCmd_Number(Ft_Gpu_Hal_Context_t *, ft_int16_t, ft_int16_t, ft_int16_t, ft_uint16
  53:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 
  54:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** void Ft_Esd_PushButton_Render(Ft_Esd_PushButton *context)
  55:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** {
 923              		.loc 4 55 0
 924              		.cfi_startproc
 925              		@ args = 0, pretend = 0, frame = 72
 926              		@ frame_needed = 1, uses_anonymous_args = 0
 927 0000 80B5     		push	{r7, lr}
 928              	.LCFI88:
 929              		.cfi_def_cfa_offset 8
 930              		.cfi_offset 7, -8
 931              		.cfi_offset 14, -4
 932 0002 96B0     		sub	sp, sp, #88
 933              	.LCFI89:
 934              		.cfi_def_cfa_offset 96
 935 0004 04AF     		add	r7, sp, #16
 936              	.LCFI90:
 937              		.cfi_def_cfa 7, 80
 938 0006 7860     		str	r0, [r7, #4]
  56:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	void *parent = context->Parent;
 939              		.loc 4 56 0
 940 0008 7B68     		ldr	r3, [r7, #4]
 941 000a 1B68     		ldr	r3, [r3]
 942 000c FB63     		str	r3, [r7, #60]
  57:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_uint8_t alpha = 255;
 943              		.loc 4 57 0
 944 000e FF23     		movs	r3, #255
 945 0010 87F83B30 		strb	r3, [r7, #59]
  58:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	Ft_Esd_Dl_COLOR_A(alpha);
 946              		.loc 4 58 0
 947 0014 97F83B30 		ldrb	r3, [r7, #59]	@ zero_extendqisi2
 948 0018 1846     		mov	r0, r3
 949 001a FFF7FEFF 		bl	Ft_Esd_Dl_COLOR_A
  59:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_uint8_t s = Ft_Esd_TouchTag_Tag(&context->Touch_Tag);
 950              		.loc 4 59 0
 951 001e 7B68     		ldr	r3, [r7, #4]
 952 0020 2C33     		adds	r3, r3, #44
 953 0022 1846     		mov	r0, r3
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s 			page 23


 954 0024 FFF7FEFF 		bl	Ft_Esd_TouchTag_Tag
 955 0028 0346     		mov	r3, r0
 956 002a 87F83A30 		strb	r3, [r7, #58]
  60:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	Ft_Esd_Dl_TAG(s);
 957              		.loc 4 60 0
 958 002e 97F83A30 		ldrb	r3, [r7, #58]	@ zero_extendqisi2
 959 0032 1846     		mov	r0, r3
 960 0034 FFF7FEFF 		bl	Ft_Esd_Dl_TAG
  61:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	Ft_Gpu_Hal_Context_t * phost = Ft_Esd_GetHost();
 961              		.loc 4 61 0
 962 0038 FFF7FEFF 		bl	Ft_Esd_GetHost
 963 003c 7863     		str	r0, [r7, #52]
  62:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_bool_t if_1 = context->Primary(parent);
 964              		.loc 4 62 0
 965 003e 7B68     		ldr	r3, [r7, #4]
 966 0040 5B6A     		ldr	r3, [r3, #36]
 967 0042 F86B     		ldr	r0, [r7, #60]
 968 0044 9847     		blx	r3
 969              	.LVL0:
 970 0046 0346     		mov	r3, r0
 971 0048 87F83330 		strb	r3, [r7, #51]
  63:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_rgb32_t c;
  64:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	if (if_1)
 972              		.loc 4 64 0
 973 004c 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 974 0050 002B     		cmp	r3, #0
 975 0052 09D0     		beq	.L48
 976              	.LBB2:
  65:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	{
  66:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 		Ft_Esd_Theme * theme = context->Theme(parent);
 977              		.loc 4 66 0
 978 0054 7B68     		ldr	r3, [r7, #4]
 979 0056 5B68     		ldr	r3, [r3, #4]
 980 0058 F86B     		ldr	r0, [r7, #60]
 981 005a 9847     		blx	r3
 982              	.LVL1:
 983 005c B862     		str	r0, [r7, #40]
  67:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 		c = Ft_Esd_Theme_GetPrimaryColor(theme);
 984              		.loc 4 67 0
 985 005e B86A     		ldr	r0, [r7, #40]
 986 0060 FFF7FEFF 		bl	Ft_Esd_Theme_GetPrimaryColor
 987 0064 7864     		str	r0, [r7, #68]
 988              	.LBE2:
 989 0066 08E0     		b	.L49
 990              	.L48:
 991              	.LBB3:
  68:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	}
  69:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	else
  70:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	{
  71:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 		Ft_Esd_Theme * theme_1 = context->Theme(parent);
 992              		.loc 4 71 0
 993 0068 7B68     		ldr	r3, [r7, #4]
 994 006a 5B68     		ldr	r3, [r3, #4]
 995 006c F86B     		ldr	r0, [r7, #60]
 996 006e 9847     		blx	r3
 997              	.LVL2:
 998 0070 F862     		str	r0, [r7, #44]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s 			page 24


  72:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 		c = Ft_Esd_Theme_GetCurrentColor(theme_1);
 999              		.loc 4 72 0
 1000 0072 F86A     		ldr	r0, [r7, #44]
 1001 0074 FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrentColor
 1002 0078 7864     		str	r0, [r7, #68]
 1003              	.L49:
 1004              	.LBE3:
  73:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	}
  74:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	Ft_Gpu_CoCmd_FgColor(phost, c);
 1005              		.loc 4 74 0
 1006 007a 796C     		ldr	r1, [r7, #68]
 1007 007c 786B     		ldr	r0, [r7, #52]
 1008 007e FFF7FEFF 		bl	Ft_Gpu_CoCmd_FgColor
  75:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	Ft_Esd_Theme * theme_2 = context->Theme(parent);
 1009              		.loc 4 75 0
 1010 0082 7B68     		ldr	r3, [r7, #4]
 1011 0084 5B68     		ldr	r3, [r3, #4]
 1012 0086 F86B     		ldr	r0, [r7, #60]
 1013 0088 9847     		blx	r3
 1014              	.LVL3:
 1015 008a 7862     		str	r0, [r7, #36]
  76:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_rgb32_t c_1 = Ft_Esd_Theme_GetButtonTextColor(theme_2);
 1016              		.loc 4 76 0
 1017 008c 786A     		ldr	r0, [r7, #36]
 1018 008e FFF7FEFF 		bl	Ft_Esd_Theme_GetButtonTextColor
 1019 0092 3862     		str	r0, [r7, #32]
  77:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	Ft_Esd_Dl_COLOR_RGB(c_1);
 1020              		.loc 4 77 0
 1021 0094 386A     		ldr	r0, [r7, #32]
 1022 0096 FFF7FEFF 		bl	Ft_Esd_Dl_COLOR_RGB
  78:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	Ft_Gpu_Hal_Context_t * phost_1 = Ft_Esd_GetHost();
 1023              		.loc 4 78 0
 1024 009a FFF7FEFF 		bl	Ft_Esd_GetHost
 1025 009e F861     		str	r0, [r7, #28]
  79:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_int16_t x = context->X(parent);
 1026              		.loc 4 79 0
 1027 00a0 7B68     		ldr	r3, [r7, #4]
 1028 00a2 9B68     		ldr	r3, [r3, #8]
 1029 00a4 F86B     		ldr	r0, [r7, #60]
 1030 00a6 9847     		blx	r3
 1031              	.LVL4:
 1032 00a8 0346     		mov	r3, r0
 1033 00aa 7B83     		strh	r3, [r7, #26]	@ movhi
  80:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_int16_t y = context->Y(parent);
 1034              		.loc 4 80 0
 1035 00ac 7B68     		ldr	r3, [r7, #4]
 1036 00ae DB68     		ldr	r3, [r3, #12]
 1037 00b0 F86B     		ldr	r0, [r7, #60]
 1038 00b2 9847     		blx	r3
 1039              	.LVL5:
 1040 00b4 0346     		mov	r3, r0
 1041 00b6 3B83     		strh	r3, [r7, #24]	@ movhi
  81:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_int16_t width = context->Width(parent);
 1042              		.loc 4 81 0
 1043 00b8 7B68     		ldr	r3, [r7, #4]
 1044 00ba 1B69     		ldr	r3, [r3, #16]
 1045 00bc F86B     		ldr	r0, [r7, #60]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s 			page 25


 1046 00be 9847     		blx	r3
 1047              	.LVL6:
 1048 00c0 0346     		mov	r3, r0
 1049 00c2 FB82     		strh	r3, [r7, #22]	@ movhi
  82:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_int16_t height = context->Height(parent);
 1050              		.loc 4 82 0
 1051 00c4 7B68     		ldr	r3, [r7, #4]
 1052 00c6 5B69     		ldr	r3, [r3, #20]
 1053 00c8 F86B     		ldr	r0, [r7, #60]
 1054 00ca 9847     		blx	r3
 1055              	.LVL7:
 1056 00cc 0346     		mov	r3, r0
 1057 00ce BB82     		strh	r3, [r7, #20]	@ movhi
  83:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_int16_t font = context->Font(parent);
 1058              		.loc 4 83 0
 1059 00d0 7B68     		ldr	r3, [r7, #4]
 1060 00d2 9B69     		ldr	r3, [r3, #24]
 1061 00d4 F86B     		ldr	r0, [r7, #60]
 1062 00d6 9847     		blx	r3
 1063              	.LVL8:
 1064 00d8 0346     		mov	r3, r0
 1065 00da 7B82     		strh	r3, [r7, #18]	@ movhi
  84:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_bool_t if_2 = Ft_Esd_TouchTag_Inside(&context->Touch_Tag);
 1066              		.loc 4 84 0
 1067 00dc 7B68     		ldr	r3, [r7, #4]
 1068 00de 2C33     		adds	r3, r3, #44
 1069 00e0 1846     		mov	r0, r3
 1070 00e2 FFF7FEFF 		bl	Ft_Esd_TouchTag_Inside
 1071 00e6 0346     		mov	r3, r0
 1072 00e8 7B74     		strb	r3, [r7, #17]
  85:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_uint16_t options;
  86:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	if (if_2)
 1073              		.loc 4 86 0
 1074 00ea 7B7C     		ldrb	r3, [r7, #17]	@ zero_extendqisi2
 1075 00ec 002B     		cmp	r3, #0
 1076 00ee 04D0     		beq	.L50
  87:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	{
  88:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 		options = OPT_FLAT;
 1077              		.loc 4 88 0
 1078 00f0 4FF48073 		mov	r3, #256
 1079 00f4 A7F84230 		strh	r3, [r7, #66]	@ movhi
 1080 00f8 02E0     		b	.L51
 1081              	.L50:
  89:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	}
  90:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	else
  91:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	{
  92:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 		options = 0;
 1082              		.loc 4 92 0
 1083 00fa 0023     		movs	r3, #0
 1084 00fc A7F84230 		strh	r3, [r7, #66]	@ movhi
 1085              	.L51:
  93:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	}
  94:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	const char * s_1 = context->Text(parent);
 1086              		.loc 4 94 0
 1087 0100 7B68     		ldr	r3, [r7, #4]
 1088 0102 DB69     		ldr	r3, [r3, #28]
 1089 0104 F86B     		ldr	r0, [r7, #60]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s 			page 26


 1090 0106 9847     		blx	r3
 1091              	.LVL9:
 1092 0108 F860     		str	r0, [r7, #12]
  95:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	Ft_Gpu_CoCmd_Button(phost_1, x, y, width, height, font, options, s_1);
 1093              		.loc 4 95 0
 1094 010a B7F91600 		ldrsh	r0, [r7, #22]
 1095 010e B7F91820 		ldrsh	r2, [r7, #24]
 1096 0112 B7F91A10 		ldrsh	r1, [r7, #26]
 1097 0116 FB68     		ldr	r3, [r7, #12]
 1098 0118 0393     		str	r3, [sp, #12]
 1099 011a B7F84230 		ldrh	r3, [r7, #66]
 1100 011e 0293     		str	r3, [sp, #8]
 1101 0120 B7F91230 		ldrsh	r3, [r7, #18]
 1102 0124 0193     		str	r3, [sp, #4]
 1103 0126 B7F91430 		ldrsh	r3, [r7, #20]
 1104 012a 0093     		str	r3, [sp]
 1105 012c 0346     		mov	r3, r0
 1106 012e F869     		ldr	r0, [r7, #28]
 1107 0130 FFF7FEFF 		bl	Ft_Gpu_CoCmd_Button
  96:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_uint8_t s_2 = 255;
 1108              		.loc 4 96 0
 1109 0134 FF23     		movs	r3, #255
 1110 0136 FB72     		strb	r3, [r7, #11]
  97:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	Ft_Esd_Dl_TAG(s_2);
 1111              		.loc 4 97 0
 1112 0138 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1113 013a 1846     		mov	r0, r3
 1114 013c FFF7FEFF 		bl	Ft_Esd_Dl_TAG
  98:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** }
 1115              		.loc 4 98 0
 1116 0140 00BF     		nop
 1117 0142 4837     		adds	r7, r7, #72
 1118              	.LCFI91:
 1119              		.cfi_def_cfa_offset 8
 1120 0144 BD46     		mov	sp, r7
 1121              	.LCFI92:
 1122              		.cfi_def_cfa_register 13
 1123              		@ sp needed
 1124 0146 80BD     		pop	{r7, pc}
 1125              		.cfi_endproc
 1126              	.LFE32:
 1128              		.section	.text.Ft_Esd_PushButton_Start,"ax",%progbits
 1129              		.align	1
 1130              		.global	Ft_Esd_PushButton_Start
 1131              		.syntax unified
 1132              		.thumb
 1133              		.thumb_func
 1134              		.fpu fpv5-sp-d16
 1136              	Ft_Esd_PushButton_Start:
 1137              	.LFB33:
  99:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 
 100:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** void Ft_Esd_PushButton_Start(Ft_Esd_PushButton *context)
 101:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** {
 1138              		.loc 4 101 0
 1139              		.cfi_startproc
 1140              		@ args = 0, pretend = 0, frame = 16
 1141              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s 			page 27


 1142 0000 80B5     		push	{r7, lr}
 1143              	.LCFI93:
 1144              		.cfi_def_cfa_offset 8
 1145              		.cfi_offset 7, -8
 1146              		.cfi_offset 14, -4
 1147 0002 84B0     		sub	sp, sp, #16
 1148              	.LCFI94:
 1149              		.cfi_def_cfa_offset 24
 1150 0004 00AF     		add	r7, sp, #0
 1151              	.LCFI95:
 1152              		.cfi_def_cfa_register 7
 1153 0006 7860     		str	r0, [r7, #4]
 102:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	void *parent = context->Parent;
 1154              		.loc 4 102 0
 1155 0008 7B68     		ldr	r3, [r7, #4]
 1156 000a 1B68     		ldr	r3, [r3]
 1157 000c FB60     		str	r3, [r7, #12]
 103:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	Ft_Esd_TouchTag_Start(&context->Touch_Tag);
 1158              		.loc 4 103 0
 1159 000e 7B68     		ldr	r3, [r7, #4]
 1160 0010 2C33     		adds	r3, r3, #44
 1161 0012 1846     		mov	r0, r3
 1162 0014 FFF7FEFF 		bl	Ft_Esd_TouchTag_Start
 104:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** }
 1163              		.loc 4 104 0
 1164 0018 00BF     		nop
 1165 001a 1037     		adds	r7, r7, #16
 1166              	.LCFI96:
 1167              		.cfi_def_cfa_offset 8
 1168 001c BD46     		mov	sp, r7
 1169              	.LCFI97:
 1170              		.cfi_def_cfa_register 13
 1171              		@ sp needed
 1172 001e 80BD     		pop	{r7, pc}
 1173              		.cfi_endproc
 1174              	.LFE33:
 1176              		.section	.text.Ft_Esd_PushButton_Touch_Tag_Down__Signal,"ax",%progbits
 1177              		.align	1
 1178              		.syntax unified
 1179              		.thumb
 1180              		.thumb_func
 1181              		.fpu fpv5-sp-d16
 1183              	Ft_Esd_PushButton_Touch_Tag_Down__Signal:
 1184              	.LFB34:
 105:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 
 106:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** void Ft_Esd_PushButton_Touch_Tag_Down__Signal(void *c)
 107:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** {
 1185              		.loc 4 107 0
 1186              		.cfi_startproc
 1187              		@ args = 0, pretend = 0, frame = 16
 1188              		@ frame_needed = 1, uses_anonymous_args = 0
 1189 0000 80B5     		push	{r7, lr}
 1190              	.LCFI98:
 1191              		.cfi_def_cfa_offset 8
 1192              		.cfi_offset 7, -8
 1193              		.cfi_offset 14, -4
 1194 0002 84B0     		sub	sp, sp, #16
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s 			page 28


 1195              	.LCFI99:
 1196              		.cfi_def_cfa_offset 24
 1197 0004 00AF     		add	r7, sp, #0
 1198              	.LCFI100:
 1199              		.cfi_def_cfa_register 7
 1200 0006 7860     		str	r0, [r7, #4]
 108:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	Ft_Esd_PushButton *context = (Ft_Esd_PushButton *)c;
 1201              		.loc 4 108 0
 1202 0008 7B68     		ldr	r3, [r7, #4]
 1203 000a FB60     		str	r3, [r7, #12]
 109:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	void *parent = context->Parent;
 1204              		.loc 4 109 0
 1205 000c FB68     		ldr	r3, [r7, #12]
 1206 000e 1B68     		ldr	r3, [r3]
 1207 0010 BB60     		str	r3, [r7, #8]
 110:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Down(parent);
 1208              		.loc 4 110 0
 1209 0012 FB68     		ldr	r3, [r7, #12]
 1210 0014 1B6A     		ldr	r3, [r3, #32]
 1211 0016 B868     		ldr	r0, [r7, #8]
 1212 0018 9847     		blx	r3
 1213              	.LVL10:
 111:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** }
 1214              		.loc 4 111 0
 1215 001a 00BF     		nop
 1216 001c 1037     		adds	r7, r7, #16
 1217              	.LCFI101:
 1218              		.cfi_def_cfa_offset 8
 1219 001e BD46     		mov	sp, r7
 1220              	.LCFI102:
 1221              		.cfi_def_cfa_register 13
 1222              		@ sp needed
 1223 0020 80BD     		pop	{r7, pc}
 1224              		.cfi_endproc
 1225              	.LFE34:
 1227              		.section	.text.Ft_Esd_PushButton_Touch_Tag_Up__Signal,"ax",%progbits
 1228              		.align	1
 1229              		.syntax unified
 1230              		.thumb
 1231              		.thumb_func
 1232              		.fpu fpv5-sp-d16
 1234              	Ft_Esd_PushButton_Touch_Tag_Up__Signal:
 1235              	.LFB35:
 112:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 
 113:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** void Ft_Esd_PushButton_Touch_Tag_Up__Signal(void *c)
 114:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** {
 1236              		.loc 4 114 0
 1237              		.cfi_startproc
 1238              		@ args = 0, pretend = 0, frame = 16
 1239              		@ frame_needed = 1, uses_anonymous_args = 0
 1240 0000 80B5     		push	{r7, lr}
 1241              	.LCFI103:
 1242              		.cfi_def_cfa_offset 8
 1243              		.cfi_offset 7, -8
 1244              		.cfi_offset 14, -4
 1245 0002 84B0     		sub	sp, sp, #16
 1246              	.LCFI104:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s 			page 29


 1247              		.cfi_def_cfa_offset 24
 1248 0004 00AF     		add	r7, sp, #0
 1249              	.LCFI105:
 1250              		.cfi_def_cfa_register 7
 1251 0006 7860     		str	r0, [r7, #4]
 115:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	Ft_Esd_PushButton *context = (Ft_Esd_PushButton *)c;
 1252              		.loc 4 115 0
 1253 0008 7B68     		ldr	r3, [r7, #4]
 1254 000a FB60     		str	r3, [r7, #12]
 116:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	void *parent = context->Parent;
 1255              		.loc 4 116 0
 1256 000c FB68     		ldr	r3, [r7, #12]
 1257 000e 1B68     		ldr	r3, [r3]
 1258 0010 BB60     		str	r3, [r7, #8]
 117:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Up(parent);
 1259              		.loc 4 117 0
 1260 0012 FB68     		ldr	r3, [r7, #12]
 1261 0014 9B6A     		ldr	r3, [r3, #40]
 1262 0016 B868     		ldr	r0, [r7, #8]
 1263 0018 9847     		blx	r3
 1264              	.LVL11:
 118:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** }
 1265              		.loc 4 118 0
 1266 001a 00BF     		nop
 1267 001c 1037     		adds	r7, r7, #16
 1268              	.LCFI106:
 1269              		.cfi_def_cfa_offset 8
 1270 001e BD46     		mov	sp, r7
 1271              	.LCFI107:
 1272              		.cfi_def_cfa_register 13
 1273              		@ sp needed
 1274 0020 80BD     		pop	{r7, pc}
 1275              		.cfi_endproc
 1276              	.LFE35:
 1278              		.section	.text.Ft_Esd_PushButton_Touch_Tag_Tap__Signal,"ax",%progbits
 1279              		.align	1
 1280              		.syntax unified
 1281              		.thumb
 1282              		.thumb_func
 1283              		.fpu fpv5-sp-d16
 1285              	Ft_Esd_PushButton_Touch_Tag_Tap__Signal:
 1286              	.LFB36:
 119:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 
 120:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** void Ft_Esd_PushButton_Touch_Tag_Tap__Signal(void *c)
 121:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** {
 1287              		.loc 4 121 0
 1288              		.cfi_startproc
 1289              		@ args = 0, pretend = 0, frame = 16
 1290              		@ frame_needed = 1, uses_anonymous_args = 0
 1291 0000 80B5     		push	{r7, lr}
 1292              	.LCFI108:
 1293              		.cfi_def_cfa_offset 8
 1294              		.cfi_offset 7, -8
 1295              		.cfi_offset 14, -4
 1296 0002 84B0     		sub	sp, sp, #16
 1297              	.LCFI109:
 1298              		.cfi_def_cfa_offset 24
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s 			page 30


 1299 0004 00AF     		add	r7, sp, #0
 1300              	.LCFI110:
 1301              		.cfi_def_cfa_register 7
 1302 0006 7860     		str	r0, [r7, #4]
 122:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	Ft_Esd_PushButton *context = (Ft_Esd_PushButton *)c;
 1303              		.loc 4 122 0
 1304 0008 7B68     		ldr	r3, [r7, #4]
 1305 000a FB60     		str	r3, [r7, #12]
 123:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	void *parent = context->Parent;
 1306              		.loc 4 123 0
 1307 000c FB68     		ldr	r3, [r7, #12]
 1308 000e 1B68     		ldr	r3, [r3]
 1309 0010 BB60     		str	r3, [r7, #8]
 124:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Pushed(parent);
 1310              		.loc 4 124 0
 1311 0012 FB68     		ldr	r3, [r7, #12]
 1312 0014 5B6C     		ldr	r3, [r3, #68]
 1313 0016 B868     		ldr	r0, [r7, #8]
 1314 0018 9847     		blx	r3
 1315              	.LVL12:
 125:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** }
 1316              		.loc 4 125 0
 1317 001a 00BF     		nop
 1318 001c 1037     		adds	r7, r7, #16
 1319              	.LCFI111:
 1320              		.cfi_def_cfa_offset 8
 1321 001e BD46     		mov	sp, r7
 1322              	.LCFI112:
 1323              		.cfi_def_cfa_register 13
 1324              		@ sp needed
 1325 0020 80BD     		pop	{r7, pc}
 1326              		.cfi_endproc
 1327              	.LFE36:
 1329              		.section	.text.Ft_Esd_PushButton_Update,"ax",%progbits
 1330              		.align	1
 1331              		.global	Ft_Esd_PushButton_Update
 1332              		.syntax unified
 1333              		.thumb
 1334              		.thumb_func
 1335              		.fpu fpv5-sp-d16
 1337              	Ft_Esd_PushButton_Update:
 1338              	.LFB37:
 126:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 
 127:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** void Ft_Esd_PushButton_Update(Ft_Esd_PushButton *context)
 128:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** {
 1339              		.loc 4 128 0
 1340              		.cfi_startproc
 1341              		@ args = 0, pretend = 0, frame = 16
 1342              		@ frame_needed = 1, uses_anonymous_args = 0
 1343 0000 80B5     		push	{r7, lr}
 1344              	.LCFI113:
 1345              		.cfi_def_cfa_offset 8
 1346              		.cfi_offset 7, -8
 1347              		.cfi_offset 14, -4
 1348 0002 84B0     		sub	sp, sp, #16
 1349              	.LCFI114:
 1350              		.cfi_def_cfa_offset 24
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s 			page 31


 1351 0004 00AF     		add	r7, sp, #0
 1352              	.LCFI115:
 1353              		.cfi_def_cfa_register 7
 1354 0006 7860     		str	r0, [r7, #4]
 129:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	void *parent = context->Parent;
 1355              		.loc 4 129 0
 1356 0008 7B68     		ldr	r3, [r7, #4]
 1357 000a 1B68     		ldr	r3, [r3]
 1358 000c FB60     		str	r3, [r7, #12]
 130:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	Ft_Esd_TouchTag_Update(&context->Touch_Tag);
 1359              		.loc 4 130 0
 1360 000e 7B68     		ldr	r3, [r7, #4]
 1361 0010 2C33     		adds	r3, r3, #44
 1362 0012 1846     		mov	r0, r3
 1363 0014 FFF7FEFF 		bl	Ft_Esd_TouchTag_Update
 131:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** }
 1364              		.loc 4 131 0
 1365 0018 00BF     		nop
 1366 001a 1037     		adds	r7, r7, #16
 1367              	.LCFI116:
 1368              		.cfi_def_cfa_offset 8
 1369 001c BD46     		mov	sp, r7
 1370              	.LCFI117:
 1371              		.cfi_def_cfa_register 13
 1372              		@ sp needed
 1373 001e 80BD     		pop	{r7, pc}
 1374              		.cfi_endproc
 1375              	.LFE37:
 1377              		.section	.text.Ft_Esd_PushButton_Pushing,"ax",%progbits
 1378              		.align	1
 1379              		.global	Ft_Esd_PushButton_Pushing
 1380              		.syntax unified
 1381              		.thumb
 1382              		.thumb_func
 1383              		.fpu fpv5-sp-d16
 1385              	Ft_Esd_PushButton_Pushing:
 1386              	.LFB38:
 132:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 
 133:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** ft_bool_t Ft_Esd_PushButton_Pushing(Ft_Esd_PushButton *context)
 134:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** {
 1387              		.loc 4 134 0
 1388              		.cfi_startproc
 1389              		@ args = 0, pretend = 0, frame = 16
 1390              		@ frame_needed = 1, uses_anonymous_args = 0
 1391 0000 80B5     		push	{r7, lr}
 1392              	.LCFI118:
 1393              		.cfi_def_cfa_offset 8
 1394              		.cfi_offset 7, -8
 1395              		.cfi_offset 14, -4
 1396 0002 84B0     		sub	sp, sp, #16
 1397              	.LCFI119:
 1398              		.cfi_def_cfa_offset 24
 1399 0004 00AF     		add	r7, sp, #0
 1400              	.LCFI120:
 1401              		.cfi_def_cfa_register 7
 1402 0006 7860     		str	r0, [r7, #4]
 135:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	void *parent = context->Parent;
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s 			page 32


 1403              		.loc 4 135 0
 1404 0008 7B68     		ldr	r3, [r7, #4]
 1405 000a 1B68     		ldr	r3, [r3]
 1406 000c FB60     		str	r3, [r7, #12]
 136:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	return Ft_Esd_TouchTag_Inside(&context->Touch_Tag);
 1407              		.loc 4 136 0
 1408 000e 7B68     		ldr	r3, [r7, #4]
 1409 0010 2C33     		adds	r3, r3, #44
 1410 0012 1846     		mov	r0, r3
 1411 0014 FFF7FEFF 		bl	Ft_Esd_TouchTag_Inside
 1412 0018 0346     		mov	r3, r0
 137:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** }
 1413              		.loc 4 137 0
 1414 001a 1846     		mov	r0, r3
 1415 001c 1037     		adds	r7, r7, #16
 1416              	.LCFI121:
 1417              		.cfi_def_cfa_offset 8
 1418 001e BD46     		mov	sp, r7
 1419              	.LCFI122:
 1420              		.cfi_def_cfa_register 13
 1421              		@ sp needed
 1422 0020 80BD     		pop	{r7, pc}
 1423              		.cfi_endproc
 1424              	.LFE38:
 1426              		.section	.text.Ft_Esd_PushButton_End,"ax",%progbits
 1427              		.align	1
 1428              		.global	Ft_Esd_PushButton_End
 1429              		.syntax unified
 1430              		.thumb
 1431              		.thumb_func
 1432              		.fpu fpv5-sp-d16
 1434              	Ft_Esd_PushButton_End:
 1435              	.LFB39:
 138:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 
 139:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** void Ft_Esd_PushButton_End(Ft_Esd_PushButton *context)
 140:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** {
 1436              		.loc 4 140 0
 1437              		.cfi_startproc
 1438              		@ args = 0, pretend = 0, frame = 16
 1439              		@ frame_needed = 1, uses_anonymous_args = 0
 1440 0000 80B5     		push	{r7, lr}
 1441              	.LCFI123:
 1442              		.cfi_def_cfa_offset 8
 1443              		.cfi_offset 7, -8
 1444              		.cfi_offset 14, -4
 1445 0002 84B0     		sub	sp, sp, #16
 1446              	.LCFI124:
 1447              		.cfi_def_cfa_offset 24
 1448 0004 00AF     		add	r7, sp, #0
 1449              	.LCFI125:
 1450              		.cfi_def_cfa_register 7
 1451 0006 7860     		str	r0, [r7, #4]
 141:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	void *parent = context->Parent;
 1452              		.loc 4 141 0
 1453 0008 7B68     		ldr	r3, [r7, #4]
 1454 000a 1B68     		ldr	r3, [r3]
 1455 000c FB60     		str	r3, [r7, #12]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s 			page 33


 142:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	Ft_Esd_TouchTag_End(&context->Touch_Tag);
 1456              		.loc 4 142 0
 1457 000e 7B68     		ldr	r3, [r7, #4]
 1458 0010 2C33     		adds	r3, r3, #44
 1459 0012 1846     		mov	r0, r3
 1460 0014 FFF7FEFF 		bl	Ft_Esd_TouchTag_End
 143:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** }
 1461              		.loc 4 143 0
 1462 0018 00BF     		nop
 1463 001a 1037     		adds	r7, r7, #16
 1464              	.LCFI126:
 1465              		.cfi_def_cfa_offset 8
 1466 001c BD46     		mov	sp, r7
 1467              	.LCFI127:
 1468              		.cfi_def_cfa_register 13
 1469              		@ sp needed
 1470 001e 80BD     		pop	{r7, pc}
 1471              		.cfi_endproc
 1472              	.LFE39:
 1474              		.text
 1475              	.Letext0:
 1476              		.file 5 "FT_Eve_Hal/FT_DataTypes.h"
 1477              		.file 6 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/lock.h"
 1478              		.file 7 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_types.h"
 1479              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 1480              		.file 9 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/unistd.h"
 1481              		.file 10 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/reent.h"
 1482              		.file 11 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/stdlib.h"
 1483              		.file 12 "FT_Eve_Hal/FT_Gpu_Hal.h"
 1484              		.file 13 "FT_Esd_Framework/Ft_Esd.h"
 1485              		.file 14 "FT_Esd_Widgets/Ft_Esd_DefaultTheme.h"
 1486              		.file 15 "FT_Esd_Framework/Ft_Esd_TouchTag.h"
 1487              		.file 16 "FT_Esd_Widgets/Ft_Esd_PushButton.h"
 1488              		.file 17 "FT_Esd_Framework/FT_Esd_CoPro_Cmds.h"
 1489              		.file 18 "FT_Esd_Framework/Ft_Esd_GpuAlloc.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s 			page 34


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Ft_Esd_PushButton__Generated.c
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:18     .text.Ft_Esd_Theme_GetButtonTextColor:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:24     .text.Ft_Esd_Theme_GetButtonTextColor:0000000000000000 Ft_Esd_Theme_GetButtonTextColor
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:71     .text.Ft_Esd_Theme_GetCurrentColor:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:77     .text.Ft_Esd_Theme_GetCurrentColor:0000000000000000 Ft_Esd_Theme_GetCurrentColor
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:123    .text.Ft_Esd_Theme_GetPrimaryColor:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:129    .text.Ft_Esd_Theme_GetPrimaryColor:0000000000000000 Ft_Esd_Theme_GetPrimaryColor
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:175    .text.Ft_Esd_BitmapCell_GetInfo:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:181    .text.Ft_Esd_BitmapCell_GetInfo:0000000000000000 Ft_Esd_BitmapCell_GetInfo
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:230    .text.Ft_Esd_Dl_TAG:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:236    .text.Ft_Esd_Dl_TAG:0000000000000000 Ft_Esd_Dl_TAG
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:277    .text.Ft_Esd_Dl_TAG:0000000000000024 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:282    .text.Ft_Esd_Dl_COLOR_RGB:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:288    .text.Ft_Esd_Dl_COLOR_RGB:0000000000000000 Ft_Esd_Dl_COLOR_RGB
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:352    .text.Ft_Esd_Dl_COLOR_RGB:0000000000000050 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:359    .text.Ft_Esd_Dl_COLOR_A:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:365    .text.Ft_Esd_Dl_COLOR_A:0000000000000000 Ft_Esd_Dl_COLOR_A
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:426    .text.Ft_Esd_Dl_COLOR_A:0000000000000048 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:433    .text.Ft_Esd_PushButton_Theme__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:440    .text.Ft_Esd_PushButton_Theme__Default:0000000000000000 Ft_Esd_PushButton_Theme__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:475    .text.Ft_Esd_PushButton_X__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:482    .text.Ft_Esd_PushButton_X__Default:0000000000000000 Ft_Esd_PushButton_X__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:519    .text.Ft_Esd_PushButton_Y__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:526    .text.Ft_Esd_PushButton_Y__Default:0000000000000000 Ft_Esd_PushButton_Y__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:563    .text.Ft_Esd_PushButton_Width__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:570    .text.Ft_Esd_PushButton_Width__Default:0000000000000000 Ft_Esd_PushButton_Width__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:607    .text.Ft_Esd_PushButton_Height__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:614    .text.Ft_Esd_PushButton_Height__Default:0000000000000000 Ft_Esd_PushButton_Height__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:651    .text.Ft_Esd_PushButton_Font__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:658    .text.Ft_Esd_PushButton_Font__Default:0000000000000000 Ft_Esd_PushButton_Font__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:695    .rodata:0000000000000000 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:699    .text.Ft_Esd_PushButton_Text__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:706    .text.Ft_Esd_PushButton_Text__Default:0000000000000000 Ft_Esd_PushButton_Text__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:742    .text.Ft_Esd_PushButton_Text__Default:0000000000000018 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:747    .text.Ft_Esd_PushButton_Primary__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:754    .text.Ft_Esd_PushButton_Primary__Default:0000000000000000 Ft_Esd_PushButton_Primary__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:791    .text.Ft_Esd_PushButton__Initializer:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:798    .text.Ft_Esd_PushButton__Initializer:0000000000000000 Ft_Esd_PushButton__Initializer
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:898    .text.Ft_Esd_PushButton__Initializer:000000000000007c $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:1183   .text.Ft_Esd_PushButton_Touch_Tag_Down__Signal:0000000000000000 Ft_Esd_PushButton_Touch_Tag_Down__Signal
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:1234   .text.Ft_Esd_PushButton_Touch_Tag_Up__Signal:0000000000000000 Ft_Esd_PushButton_Touch_Tag_Up__Signal
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:1285   .text.Ft_Esd_PushButton_Touch_Tag_Tap__Signal:0000000000000000 Ft_Esd_PushButton_Touch_Tag_Tap__Signal
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:914    .text.Ft_Esd_PushButton_Render:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:921    .text.Ft_Esd_PushButton_Render:0000000000000000 Ft_Esd_PushButton_Render
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:1129   .text.Ft_Esd_PushButton_Start:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:1136   .text.Ft_Esd_PushButton_Start:0000000000000000 Ft_Esd_PushButton_Start
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:1177   .text.Ft_Esd_PushButton_Touch_Tag_Down__Signal:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:1228   .text.Ft_Esd_PushButton_Touch_Tag_Up__Signal:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:1279   .text.Ft_Esd_PushButton_Touch_Tag_Tap__Signal:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:1330   .text.Ft_Esd_PushButton_Update:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:1337   .text.Ft_Esd_PushButton_Update:0000000000000000 Ft_Esd_PushButton_Update
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:1378   .text.Ft_Esd_PushButton_Pushing:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:1385   .text.Ft_Esd_PushButton_Pushing:0000000000000000 Ft_Esd_PushButton_Pushing
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:1427   .text.Ft_Esd_PushButton_End:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s:1434   .text.Ft_Esd_PushButton_End:0000000000000000 Ft_Esd_PushButton_End

ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclnmfDx.s 			page 35


UNDEFINED SYMBOLS
Ft_Esd_Theme_GetCurrent
Ft_Gpu_Hal_WrCmd32
Ft_Esd_Host
Ft_Esd_GpuState_I
Ft_Esd_GpuState
Ft_Esd_TouchTag__Initializer
Ft_Esd_Noop
Ft_Esd_TouchTag_Tag
Ft_Esd_GetHost
Ft_Gpu_CoCmd_FgColor
Ft_Esd_TouchTag_Inside
Ft_Gpu_CoCmd_Button
Ft_Esd_TouchTag_Start
Ft_Esd_TouchTag_Update
Ft_Esd_TouchTag_End
