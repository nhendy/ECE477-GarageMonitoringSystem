ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccwZJUm1.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"Ft_Esd_Slider.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Ft_Esd_Slider_Update_Signal,"ax",%progbits
  18              		.align	1
  19              		.global	Ft_Esd_Slider_Update_Signal
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-sp-d16
  25              	Ft_Esd_Slider_Update_Signal:
  26              	.LFB9:
  27              		.file 1 "FT_Esd_Widgets/Ft_Esd_Slider.c"
   1:FT_Esd_Widgets/Ft_Esd_Slider.c **** #include "Ft_Esd.h"
   2:FT_Esd_Widgets/Ft_Esd_Slider.c **** #include "Ft_Esd_Slider.h"
   3:FT_Esd_Widgets/Ft_Esd_Slider.c **** 
   4:FT_Esd_Widgets/Ft_Esd_Slider.c **** #include "Ft_Esd_TouchTag.h"
   5:FT_Esd_Widgets/Ft_Esd_Slider.c **** 
   6:FT_Esd_Widgets/Ft_Esd_Slider.c **** #include <stdio.h>
   7:FT_Esd_Widgets/Ft_Esd_Slider.c **** 
   8:FT_Esd_Widgets/Ft_Esd_Slider.c **** ESD_METHOD(Ft_Esd_Slider_Update_Signal, Context = Ft_Esd_Slider)
   9:FT_Esd_Widgets/Ft_Esd_Slider.c **** void Ft_Esd_Slider_Update_Signal(Ft_Esd_Slider *context)
  10:FT_Esd_Widgets/Ft_Esd_Slider.c **** {
  28              		.loc 1 10 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 90B5     		push	{r4, r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
  11:FT_Esd_Widgets/Ft_Esd_Slider.c **** 	if (Ft_Esd_TouchTag_Touching(&context->TouchTag))
  45              		.loc 1 11 0
  46 0008 7B68     		ldr	r3, [r7, #4]
  47 000a 0833     		adds	r3, r3, #8
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccwZJUm1.s 			page 2


  48 000c 1846     		mov	r0, r3
  49 000e FFF7FEFF 		bl	Ft_Esd_TouchTag_Touching
  50 0012 0346     		mov	r3, r0
  51 0014 002B     		cmp	r3, #0
  52 0016 55D0     		beq	.L5
  53              	.LBB2:
  12:FT_Esd_Widgets/Ft_Esd_Slider.c **** 	{
  13:FT_Esd_Widgets/Ft_Esd_Slider.c **** 		ft_int32_t width = context->Width(context->Parent) - context->Height(context->Parent);
  54              		.loc 1 13 0
  55 0018 7B68     		ldr	r3, [r7, #4]
  56 001a 9B6A     		ldr	r3, [r3, #40]
  57 001c 7A68     		ldr	r2, [r7, #4]
  58 001e 1268     		ldr	r2, [r2]
  59 0020 1046     		mov	r0, r2
  60 0022 9847     		blx	r3
  61              	.LVL0:
  62 0024 0346     		mov	r3, r0
  63 0026 1C46     		mov	r4, r3
  64 0028 7B68     		ldr	r3, [r7, #4]
  65 002a DB6A     		ldr	r3, [r3, #44]
  66 002c 7A68     		ldr	r2, [r7, #4]
  67 002e 1268     		ldr	r2, [r2]
  68 0030 1046     		mov	r0, r2
  69 0032 9847     		blx	r3
  70              	.LVL1:
  71 0034 0346     		mov	r3, r0
  72 0036 E31A     		subs	r3, r4, r3
  73 0038 BB61     		str	r3, [r7, #24]
  14:FT_Esd_Widgets/Ft_Esd_Slider.c **** 		ft_int16_t touchX = Ft_Esd_TouchTag_TouchX(&context->TouchTag);
  74              		.loc 1 14 0
  75 003a 7B68     		ldr	r3, [r7, #4]
  76 003c 0833     		adds	r3, r3, #8
  77 003e 1846     		mov	r0, r3
  78 0040 FFF7FEFF 		bl	Ft_Esd_TouchTag_TouchX
  79 0044 0346     		mov	r3, r0
  80 0046 FB82     		strh	r3, [r7, #22]	@ movhi
  15:FT_Esd_Widgets/Ft_Esd_Slider.c **** 		ft_int16_t touchY = Ft_Esd_TouchTag_TouchY(&context->TouchTag);
  81              		.loc 1 15 0
  82 0048 7B68     		ldr	r3, [r7, #4]
  83 004a 0833     		adds	r3, r3, #8
  84 004c 1846     		mov	r0, r3
  85 004e FFF7FEFF 		bl	Ft_Esd_TouchTag_TouchY
  86 0052 0346     		mov	r3, r0
  87 0054 BB82     		strh	r3, [r7, #20]	@ movhi
  16:FT_Esd_Widgets/Ft_Esd_Slider.c **** 		ft_int32_t range = context->Range(context->Parent);
  88              		.loc 1 16 0
  89 0056 7B68     		ldr	r3, [r7, #4]
  90 0058 1B6C     		ldr	r3, [r3, #64]
  91 005a 7A68     		ldr	r2, [r7, #4]
  92 005c 1268     		ldr	r2, [r2]
  93 005e 1046     		mov	r0, r2
  94 0060 9847     		blx	r3
  95              	.LVL2:
  96 0062 0346     		mov	r3, r0
  97 0064 3B61     		str	r3, [r7, #16]
  17:FT_Esd_Widgets/Ft_Esd_Slider.c **** 		ft_int32_t touchDelta = touchX - context->PreviousX;
  98              		.loc 1 17 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccwZJUm1.s 			page 3


  99 0066 B7F91630 		ldrsh	r3, [r7, #22]
 100 006a 7A68     		ldr	r2, [r7, #4]
 101 006c B2F93E20 		ldrsh	r2, [r2, #62]
 102 0070 9B1A     		subs	r3, r3, r2
 103 0072 FB60     		str	r3, [r7, #12]
  18:FT_Esd_Widgets/Ft_Esd_Slider.c **** 		ft_int32_t valueDelta = (touchDelta * range) / width;
 104              		.loc 1 18 0
 105 0074 FB68     		ldr	r3, [r7, #12]
 106 0076 3A69     		ldr	r2, [r7, #16]
 107 0078 02FB03F2 		mul	r2, r2, r3
 108 007c BB69     		ldr	r3, [r7, #24]
 109 007e 92FBF3F3 		sdiv	r3, r2, r3
 110 0082 BB60     		str	r3, [r7, #8]
  19:FT_Esd_Widgets/Ft_Esd_Slider.c **** 		ft_int32_t newValue = context->PreviousValue + valueDelta;
 111              		.loc 1 19 0
 112 0084 7B68     		ldr	r3, [r7, #4]
 113 0086 B3F93C30 		ldrsh	r3, [r3, #60]
 114 008a 1A46     		mov	r2, r3
 115 008c BB68     		ldr	r3, [r7, #8]
 116 008e 1344     		add	r3, r3, r2
 117 0090 FB61     		str	r3, [r7, #28]
  20:FT_Esd_Widgets/Ft_Esd_Slider.c **** 		if (newValue < 0) newValue = 0;
 118              		.loc 1 20 0
 119 0092 FB69     		ldr	r3, [r7, #28]
 120 0094 002B     		cmp	r3, #0
 121 0096 02DA     		bge	.L3
 122              		.loc 1 20 0 is_stmt 0 discriminator 1
 123 0098 0023     		movs	r3, #0
 124 009a FB61     		str	r3, [r7, #28]
 125 009c 05E0     		b	.L4
 126              	.L3:
  21:FT_Esd_Widgets/Ft_Esd_Slider.c **** 		else if (newValue > range) newValue = range;
 127              		.loc 1 21 0 is_stmt 1
 128 009e FA69     		ldr	r2, [r7, #28]
 129 00a0 3B69     		ldr	r3, [r7, #16]
 130 00a2 9A42     		cmp	r2, r3
 131 00a4 01DD     		ble	.L4
 132              		.loc 1 21 0 is_stmt 0 discriminator 1
 133 00a6 3B69     		ldr	r3, [r7, #16]
 134 00a8 FB61     		str	r3, [r7, #28]
 135              	.L4:
  22:FT_Esd_Widgets/Ft_Esd_Slider.c **** 		context->Value = newValue;
 136              		.loc 1 22 0 is_stmt 1
 137 00aa FB69     		ldr	r3, [r7, #28]
 138 00ac 1AB2     		sxth	r2, r3
 139 00ae 7B68     		ldr	r3, [r7, #4]
 140 00b0 9A86     		strh	r2, [r3, #52]	@ movhi
  23:FT_Esd_Widgets/Ft_Esd_Slider.c **** 		context->Changed(context->Parent, context->Value);
 141              		.loc 1 23 0
 142 00b2 7B68     		ldr	r3, [r7, #4]
 143 00b4 9B6B     		ldr	r3, [r3, #56]
 144 00b6 7A68     		ldr	r2, [r7, #4]
 145 00b8 1068     		ldr	r0, [r2]
 146 00ba 7A68     		ldr	r2, [r7, #4]
 147 00bc B2F93420 		ldrsh	r2, [r2, #52]
 148 00c0 1146     		mov	r1, r2
 149 00c2 9847     		blx	r3
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccwZJUm1.s 			page 4


 150              	.LVL3:
 151              	.L5:
 152              	.LBE2:
  24:FT_Esd_Widgets/Ft_Esd_Slider.c **** 	}
  25:FT_Esd_Widgets/Ft_Esd_Slider.c **** }
 153              		.loc 1 25 0
 154 00c4 00BF     		nop
 155 00c6 2437     		adds	r7, r7, #36
 156              	.LCFI3:
 157              		.cfi_def_cfa_offset 12
 158 00c8 BD46     		mov	sp, r7
 159              	.LCFI4:
 160              		.cfi_def_cfa_register 13
 161              		@ sp needed
 162 00ca 90BD     		pop	{r4, r7, pc}
 163              		.cfi_endproc
 164              	.LFE9:
 166              		.section	.text.Ft_Esd_Slider_ClampedValue,"ax",%progbits
 167              		.align	1
 168              		.global	Ft_Esd_Slider_ClampedValue
 169              		.syntax unified
 170              		.thumb
 171              		.thumb_func
 172              		.fpu fpv5-sp-d16
 174              	Ft_Esd_Slider_ClampedValue:
 175              	.LFB10:
  26:FT_Esd_Widgets/Ft_Esd_Slider.c **** 
  27:FT_Esd_Widgets/Ft_Esd_Slider.c **** ESD_METHOD(Ft_Esd_Slider_ClampedValue, Context = Ft_Esd_Slider, Type = ft_int16_t)
  28:FT_Esd_Widgets/Ft_Esd_Slider.c **** ft_int16_t Ft_Esd_Slider_ClampedValue(Ft_Esd_Slider *context)
  29:FT_Esd_Widgets/Ft_Esd_Slider.c **** {
 176              		.loc 1 29 0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 16
 179              		@ frame_needed = 1, uses_anonymous_args = 0
 180 0000 80B5     		push	{r7, lr}
 181              	.LCFI5:
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 7, -8
 184              		.cfi_offset 14, -4
 185 0002 84B0     		sub	sp, sp, #16
 186              	.LCFI6:
 187              		.cfi_def_cfa_offset 24
 188 0004 00AF     		add	r7, sp, #0
 189              	.LCFI7:
 190              		.cfi_def_cfa_register 7
 191 0006 7860     		str	r0, [r7, #4]
  30:FT_Esd_Widgets/Ft_Esd_Slider.c **** 	ft_int16_t value = context->Value;
 192              		.loc 1 30 0
 193 0008 7B68     		ldr	r3, [r7, #4]
 194 000a 9B8E     		ldrh	r3, [r3, #52]	@ movhi
 195 000c FB81     		strh	r3, [r7, #14]	@ movhi
  31:FT_Esd_Widgets/Ft_Esd_Slider.c **** 	ft_int16_t range = context->Range(context->Parent);
 196              		.loc 1 31 0
 197 000e 7B68     		ldr	r3, [r7, #4]
 198 0010 1B6C     		ldr	r3, [r3, #64]
 199 0012 7A68     		ldr	r2, [r7, #4]
 200 0014 1268     		ldr	r2, [r2]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccwZJUm1.s 			page 5


 201 0016 1046     		mov	r0, r2
 202 0018 9847     		blx	r3
 203              	.LVL4:
 204 001a 0346     		mov	r3, r0
 205 001c BB81     		strh	r3, [r7, #12]	@ movhi
  32:FT_Esd_Widgets/Ft_Esd_Slider.c **** 	if (value < 0) return 0;
 206              		.loc 1 32 0
 207 001e B7F90E30 		ldrsh	r3, [r7, #14]
 208 0022 002B     		cmp	r3, #0
 209 0024 01DA     		bge	.L7
 210              		.loc 1 32 0 is_stmt 0 discriminator 1
 211 0026 0023     		movs	r3, #0
 212 0028 0AE0     		b	.L8
 213              	.L7:
  33:FT_Esd_Widgets/Ft_Esd_Slider.c **** 	if (value > range) return range;
 214              		.loc 1 33 0 is_stmt 1
 215 002a B7F90E20 		ldrsh	r2, [r7, #14]
 216 002e B7F90C30 		ldrsh	r3, [r7, #12]
 217 0032 9A42     		cmp	r2, r3
 218 0034 02DD     		ble	.L9
 219              		.loc 1 33 0 is_stmt 0 discriminator 1
 220 0036 B7F90C30 		ldrsh	r3, [r7, #12]
 221 003a 01E0     		b	.L8
 222              	.L9:
  34:FT_Esd_Widgets/Ft_Esd_Slider.c **** 	return value;
 223              		.loc 1 34 0 is_stmt 1
 224 003c B7F90E30 		ldrsh	r3, [r7, #14]
 225              	.L8:
  35:FT_Esd_Widgets/Ft_Esd_Slider.c **** }
 226              		.loc 1 35 0
 227 0040 1846     		mov	r0, r3
 228 0042 1037     		adds	r7, r7, #16
 229              	.LCFI8:
 230              		.cfi_def_cfa_offset 8
 231 0044 BD46     		mov	sp, r7
 232              	.LCFI9:
 233              		.cfi_def_cfa_register 13
 234              		@ sp needed
 235 0046 80BD     		pop	{r7, pc}
 236              		.cfi_endproc
 237              	.LFE10:
 239              		.text
 240              	.Letext0:
 241              		.file 2 "FT_Eve_Hal/FT_DataTypes.h"
 242              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/lock.h"
 243              		.file 4 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_types.h"
 244              		.file 5 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 245              		.file 6 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/unistd.h"
 246              		.file 7 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/reent.h"
 247              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/stdlib.h"
 248              		.file 9 "FT_Esd_Framework/Ft_Esd.h"
 249              		.file 10 "FT_Esd_Widgets/Ft_Esd_Theme.h"
 250              		.file 11 "FT_Esd_Framework/Ft_Esd_TouchTag.h"
 251              		.file 12 "FT_Esd_Widgets/Ft_Esd_Slider.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccwZJUm1.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Ft_Esd_Slider.c
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccwZJUm1.s:18     .text.Ft_Esd_Slider_Update_Signal:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccwZJUm1.s:25     .text.Ft_Esd_Slider_Update_Signal:0000000000000000 Ft_Esd_Slider_Update_Signal
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccwZJUm1.s:167    .text.Ft_Esd_Slider_ClampedValue:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccwZJUm1.s:174    .text.Ft_Esd_Slider_ClampedValue:0000000000000000 Ft_Esd_Slider_ClampedValue

UNDEFINED SYMBOLS
Ft_Esd_TouchTag_Touching
Ft_Esd_TouchTag_TouchX
Ft_Esd_TouchTag_TouchY
