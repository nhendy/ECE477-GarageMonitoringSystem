ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"FT_Esd_Dl.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Ft_Esd_BitmapCell_GetInfo,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	Ft_Esd_BitmapCell_GetInfo:
  25              	.LFB3:
  26              		.file 1 "FT_Esd_Framework/Ft_Esd_BitmapInfo.h"
   1:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** /*
   2:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** Bitmap info structure
   3:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** */
   4:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
   5:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #ifndef FT_ESD_BITMAPINFO_H
   6:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #define FT_ESD_BITMAPINFO_H
   7:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
   8:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "Ft_Esd.h"
   9:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "FT_DataTypes.h"
  10:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "Ft_Esd_GpuAlloc.h"
  11:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  12:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapInfo, Native = Struct) // TODO: Struct support, expose values
  13:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  14:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  15:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Width;
  16:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Height;
  17:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Stride;
  18:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Format;
  19:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Size;
  20:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	const char *File;
  21:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  22:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Handle pointing to the address in RAM_G if it is allocated
  23:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_GpuHandle GpuHandle;
  24:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  25:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Bitmap handle that is being used
  26:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_uint32_t BitmapHandle;
  27:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  28:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	const char *PaletteFile;
  29:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_GpuHandle PaletteGpuHandle;
  30:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  31:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// When this is set, the allocated ram is not free'd automatically
  32:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Use Ft_Esd_GpuAlloc_Free(GpuAlloc, GpuHandle) to free the GPU ram manually
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s 			page 2


  33:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_bool_t Persistent;
  34:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  35:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_BitmapInfo;
  36:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  37:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapInfo *, Native = Pointer, Edit = Library)
  38:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  39:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapCell, Native = Struct) // TODO: Struct support, expose values
  40:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  41:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  42:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapInfo *Info;
  43:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Cell;
  44:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_BitmapCell;
  45:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  46:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapCell *, Native = Pointer, Edit = Library)
  47:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  48:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // Attempts to load the specified bitmap if it has not been loaded into RAM_G yet.
  49:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // Call during the Update cycle of each frame to keep the bitmap flagged as in use, otherwise the m
  50:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_LoadBitmap, Type = ft_uint32_t, Include = "Ft_Esd_BitmapInfo.h", DisplayName = 
  51:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapInfo, Type = Ft_Esd_BitmapInfo *)
  52:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ft_uint32_t Ft_Esd_LoadBitmap(Ft_Esd_BitmapInfo *bitmapInfo);
  53:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  54:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_LoadPalette, Type = ft_uint32_t, Include = "Ft_Esd_BitmapInfo.h", DisplayName =
  55:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapInfo, Type = Ft_Esd_BitmapInfo *)
  56:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ft_uint32_t Ft_Esd_LoadPalette(Ft_Esd_BitmapInfo *bitmapInfo);
  57:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  58:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_ENUM(_BitmapResourceFormat, DisplayName = "Bitmap Format")
  59:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB1555)
  60:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L1)
  61:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L2)
  62:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L4)
  63:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L8)
  64:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(RGB332)
  65:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB2)
  66:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB4)
  67:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(RGB565)
  68:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(PALETTED565)
  69:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(PALETTED4444)
  70:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(PALETTED8)
  71:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(JPEG)
  72:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(PNG)
  73:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_END()
  74:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  75:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_LOGIC(Ft_Esd_SwitchBitmapCell, Callback, Include = "Ft_Esd_BitmapInfo.h", DisplayName = "Switch
  76:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  77:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  78:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Callback
  79:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	void *Parent;
  80:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  81:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  82:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Input
  83:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  84:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  85:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ESD_INPUT(BitmapInfo, Type = Ft_Esd_BitmapInfo *, DisplayName = "Bitmap Info")
  86:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapInfo *(* BitmapInfo)(void *context);
  87:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  88:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ESD_INPUT(Cell, Type = ft_uint8_t, DisplayName = "Cell")
  89:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_uint8_t(* Cell)(void *context);
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s 			page 3


  90:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  91:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  92:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Variables
  93:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  94:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  95:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// BitmapCell object
  96:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapCell BitmapCell;
  97:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  98:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_SwitchBitmapCell;
  99:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 100:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** void Ft_Esd_SwitchBitmapCell__Initializer(Ft_Esd_SwitchBitmapCell *context);
 101:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 102:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_OUTPUT(BitmapCell, Type = Ft_Esd_BitmapCell *, DisplayName = "Bitmap Cell")
 103:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** Ft_Esd_BitmapCell *Ft_Esd_SwitchBitmapCell_BitmapCell(Ft_Esd_SwitchBitmapCell *context);
 104:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 105:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_UPDATE(Ft_Esd_BitmapPersist, DisplayName = "Bitmap Persist", Category = EsdUtilities)
 106:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapCell, Type = Ft_Esd_BitmapCell *)
 107:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** void Ft_Esd_BitmapPersist(Ft_Esd_BitmapCell *bitmapCell);
 108:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 109:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_BitmapCell_GetInfo, Type = Ft_Esd_BitmapInfo *, DisplayName = "ESD BitmapCell G
 110:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapCell, Type = Ft_Esd_BitmapCell *)
 111:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** static Ft_Esd_BitmapInfo *Ft_Esd_BitmapCell_GetInfo(Ft_Esd_BitmapCell *bitmapCell)
 112:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  27              		.loc 1 112 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 113:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	if (!bitmapCell) return 0;
  43              		.loc 1 113 0
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 002B     		cmp	r3, #0
  46 000c 01D1     		bne	.L2
  47              		.loc 1 113 0 is_stmt 0 discriminator 1
  48 000e 0023     		movs	r3, #0
  49 0010 01E0     		b	.L3
  50              	.L2:
 114:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	return bitmapCell->Info;
  51              		.loc 1 114 0 is_stmt 1
  52 0012 7B68     		ldr	r3, [r7, #4]
  53 0014 1B68     		ldr	r3, [r3]
  54              	.L3:
 115:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** }
  55              		.loc 1 115 0
  56 0016 1846     		mov	r0, r3
  57 0018 0C37     		adds	r7, r7, #12
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s 			page 4


  58              	.LCFI3:
  59              		.cfi_def_cfa_offset 4
  60 001a BD46     		mov	sp, r7
  61              	.LCFI4:
  62              		.cfi_def_cfa_register 13
  63              		@ sp needed
  64 001c 5DF8047B 		ldr	r7, [sp], #4
  65              	.LCFI5:
  66              		.cfi_restore 7
  67              		.cfi_def_cfa_offset 0
  68 0020 7047     		bx	lr
  69              		.cfi_endproc
  70              	.LFE3:
  72              		.section	.text.Ft_Esd_Dl_BITMAP_HANDLE,"ax",%progbits
  73              		.align	1
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  77              		.fpu fpv5-sp-d16
  79              	Ft_Esd_Dl_BITMAP_HANDLE:
  80              	.LFB10:
  81              		.file 2 "FT_Esd_Framework/FT_Esd_Dl.h"
   1:FT_Esd_Framework/FT_Esd_Dl.h **** 
   2:FT_Esd_Framework/FT_Esd_Dl.h **** #ifndef FT_ESD_DL_H
   3:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_DL_H
   4:FT_Esd_Framework/FT_Esd_Dl.h **** 
   5:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_DataTypes.h"
   6:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_Platform.h"
   7:FT_Esd_Framework/FT_Esd_Dl.h **** #include "Ft_Esd.h"
   8:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_Gpu.h"
   9:FT_Esd_Framework/FT_Esd_Dl.h **** #include "Ft_Esd_BitmapInfo.h"
  10:FT_Esd_Framework/FT_Esd_Dl.h **** 
  11:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_CATEGORY(EsdUtilities, DisplayName = "ESD Utilities")
  12:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_CATEGORY(EveRenderFunctions, DisplayName = "EVE Render Functions")
  13:FT_Esd_Framework/FT_Esd_Dl.h **** 
  14:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_TYPE(Ft_Gpu_Hal_Context_t *, Native = Pointer, Edit = Library)
  15:FT_Esd_Framework/FT_Esd_Dl.h **** 
  16:FT_Esd_Framework/FT_Esd_Dl.h **** // Keep cache of displaylist values that don't often change but are generally set by every widget t
  17:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_OPTIMIZE_DISPLAYLIST 1
  18:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_STATE_STACK_SIZE 5
  19:FT_Esd_Framework/FT_Esd_Dl.h **** 
  20:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_BITMAPHANDLE_INVALID 255
  21:FT_Esd_Framework/FT_Esd_Dl.h **** 
  22:FT_Esd_Framework/FT_Esd_Dl.h **** //
  23:FT_Esd_Framework/FT_Esd_Dl.h **** // Structs
  24:FT_Esd_Framework/FT_Esd_Dl.h **** //
  25:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_ESD_OPTIMIZE_DISPLAYLIST
  26:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_STATE Ft_Esd_GpuState[Ft_Esd_GpuState_I]
  27:FT_Esd_Framework/FT_Esd_Dl.h **** typedef struct
  28:FT_Esd_Framework/FT_Esd_Dl.h **** {
  29:FT_Esd_Framework/FT_Esd_Dl.h **** 	// Keep to a minimum
  30:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_81X_ENABLE
  31:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint32_t PaletteSource;
  32:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  33:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint32_t ColorRGB;
  34:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t ColorA;
  35:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t Handle;         // Current handle
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s 			page 5


  36:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t Cell;           // Current cell
  37:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_bool_t BitmapTransform; // BitmapTransform other than default is set
  38:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_81X_ENABLE
  39:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t VertexFormat;   // Current vertex format
  40:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  41:FT_Esd_Framework/FT_Esd_Dl.h **** } Ft_Esd_GpuState_T;
  42:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  43:FT_Esd_Framework/FT_Esd_Dl.h **** 
  44:FT_Esd_Framework/FT_Esd_Dl.h **** //
  45:FT_Esd_Framework/FT_Esd_Dl.h **** // Globals
  46:FT_Esd_Framework/FT_Esd_Dl.h **** //
  47:FT_Esd_Framework/FT_Esd_Dl.h **** extern Ft_Gpu_Hal_Context_t *Ft_Esd_Host;
  48:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint16_t Ft_Esd_FontHeight[32];
  49:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_ESD_OPTIMIZE_DISPLAYLIST
  50:FT_Esd_Framework/FT_Esd_Dl.h **** extern Ft_Esd_GpuState_T Ft_Esd_GpuState[FT_ESD_STATE_STACK_SIZE];
  51:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint8_t Ft_Esd_GpuState_I;
  52:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint32_t Ft_Esd_CoFgColor;
  53:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint32_t Ft_Esd_CoBgColor;
  54:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  55:FT_Esd_Framework/FT_Esd_Dl.h **** 
  56:FT_Esd_Framework/FT_Esd_Dl.h **** //Get the height of builtin font
  57:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_GetFontHeight, Type = ft_uint16_t ,DisplayName = "Get Font Height", Category = 
  58:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(i, Type = int, DisplayName = "Bitmap Handle", Default = 0, Min = 0, Max = 31)
  59:FT_Esd_Framework/FT_Esd_Dl.h **** // inline static ft_uint16_t Ft_Esd_GetFontHeight(int i) { return Ft_Esd_FontHeight[i]; }
  60:FT_Esd_Framework/FT_Esd_Dl.h **** #define Ft_Esd_GetFontHeight(i) (Ft_Esd_FontHeight[i]);
  61:FT_Esd_Framework/FT_Esd_Dl.h **** 
  62:FT_Esd_Framework/FT_Esd_Dl.h **** // Reset any cached state
  63:FT_Esd_Framework/FT_Esd_Dl.h **** void Ft_Esd_ResetGpuState();
  64:FT_Esd_Framework/FT_Esd_Dl.h **** void Ft_Esd_ResetCoState();
  65:FT_Esd_Framework/FT_Esd_Dl.h **** 
  66:FT_Esd_Framework/FT_Esd_Dl.h **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotalUsed();
  67:FT_Esd_Framework/FT_Esd_Dl.h **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotal();
  68:FT_Esd_Framework/FT_Esd_Dl.h **** 
  69:FT_Esd_Framework/FT_Esd_Dl.h **** /// Set current tag. Must be returned to 255 after usage, to ensure next widgets don't draw with in
  70:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_TAG, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  71:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(s, Type = ft_uint8_t, DisplayName = "Tag", Default = 255, Min = 0, Max = 255)
  72:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_TAG(ft_uint8_t s)
  73:FT_Esd_Framework/FT_Esd_Dl.h **** {
  74:FT_Esd_Framework/FT_Esd_Dl.h **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, TAG(s));
  75:FT_Esd_Framework/FT_Esd_Dl.h **** }
  76:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify color RGB
  77:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_RGB, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  78:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(c, Type = ft_rgb32_t, DisplayName = "Color")
  79:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_RGB(ft_rgb32_t c)
  80:FT_Esd_Framework/FT_Esd_Dl.h **** {
  81:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  82:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_rgb32_t rgb = c & 0xFFFFFF;
  83:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (rgb != FT_ESD_STATE.ColorRGB)
  84:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
  85:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  86:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, (4UL << 24) | (rgb));
  87:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  88:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.ColorRGB = rgb;
  89:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
  90:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  91:FT_Esd_Framework/FT_Esd_Dl.h **** }
  92:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify alpha channel
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s 			page 6


  93:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_A, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  94:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(alpha, Type = ft_uint8_t, Default = 255, Min = 0, Max = 255)
  95:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_A(ft_uint8_t alpha)
  96:FT_Esd_Framework/FT_Esd_Dl.h **** {
  97:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  98:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (alpha != FT_ESD_STATE.ColorA)
  99:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
 100:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 101:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, COLOR_A(alpha));
 102:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 103:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.ColorA = alpha;
 104:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
 105:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 106:FT_Esd_Framework/FT_Esd_Dl.h **** }
 107:FT_Esd_Framework/FT_Esd_Dl.h **** 
 108:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify color: Alpha(31~24 bit) + RGB(23~0 bit)
 109:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_ARGB, Type = ft_void_t, Category = EveRenderFunctions, Inline)
 110:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(c, Type = ft_argb32_t, DisplayName = "Color")
 111:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_ARGB(ft_uint32_t c)
 112:FT_Esd_Framework/FT_Esd_Dl.h **** {
 113:FT_Esd_Framework/FT_Esd_Dl.h **** 	Ft_Esd_Dl_COLOR_RGB(c);
 114:FT_Esd_Framework/FT_Esd_Dl.h **** 	Ft_Esd_Dl_COLOR_A(c >> 24);
 115:FT_Esd_Framework/FT_Esd_Dl.h **** }
 116:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify bitmap handle, see BITMAP_HANDLE
 117:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_BITMAP_HANDLE, Type = ft_void_t, Category = EveRenderFunctions, Inline)
 118:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(handle, Type = ft_uint8_t, Min = 0, Max = 31)
 119:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_BITMAP_HANDLE(ft_uint8_t handle)
 120:FT_Esd_Framework/FT_Esd_Dl.h **** {
  82              		.loc 2 120 0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 8
  85              		@ frame_needed = 1, uses_anonymous_args = 0
  86 0000 80B5     		push	{r7, lr}
  87              	.LCFI6:
  88              		.cfi_def_cfa_offset 8
  89              		.cfi_offset 7, -8
  90              		.cfi_offset 14, -4
  91 0002 82B0     		sub	sp, sp, #8
  92              	.LCFI7:
  93              		.cfi_def_cfa_offset 16
  94 0004 00AF     		add	r7, sp, #0
  95              	.LCFI8:
  96              		.cfi_def_cfa_register 7
  97 0006 0346     		mov	r3, r0
  98 0008 FB71     		strb	r3, [r7, #7]
 121:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 122:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (handle != FT_ESD_STATE.Handle)
  99              		.loc 2 122 0
 100 000a 104B     		ldr	r3, .L7
 101 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 102 000e 104A     		ldr	r2, .L7+4
 103 0010 1B01     		lsls	r3, r3, #4
 104 0012 1344     		add	r3, r3, r2
 105 0014 0933     		adds	r3, r3, #9
 106 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 107 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 108 001a 9A42     		cmp	r2, r3
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s 			page 7


 109 001c 12D0     		beq	.L6
 123:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
 124:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 125:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, BITMAP_HANDLE(handle));
 110              		.loc 2 125 0
 111 001e 0D4B     		ldr	r3, .L7+8
 112 0020 1A68     		ldr	r2, [r3]
 113 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 114 0024 03F01F03 		and	r3, r3, #31
 115 0028 43F0A063 		orr	r3, r3, #83886080
 116 002c 1946     		mov	r1, r3
 117 002e 1046     		mov	r0, r2
 118 0030 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 126:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 127:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.Handle = handle;
 119              		.loc 2 127 0
 120 0034 054B     		ldr	r3, .L7
 121 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 122 0038 054A     		ldr	r2, .L7+4
 123 003a 1B01     		lsls	r3, r3, #4
 124 003c 1344     		add	r3, r3, r2
 125 003e 0933     		adds	r3, r3, #9
 126 0040 FA79     		ldrb	r2, [r7, #7]
 127 0042 1A70     		strb	r2, [r3]
 128              	.L6:
 128:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
 129:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 130:FT_Esd_Framework/FT_Esd_Dl.h **** }
 129              		.loc 2 130 0
 130 0044 00BF     		nop
 131 0046 0837     		adds	r7, r7, #8
 132              	.LCFI9:
 133              		.cfi_def_cfa_offset 8
 134 0048 BD46     		mov	sp, r7
 135              	.LCFI10:
 136              		.cfi_def_cfa_register 13
 137              		@ sp needed
 138 004a 80BD     		pop	{r7, pc}
 139              	.L8:
 140              		.align	2
 141              	.L7:
 142 004c 00000000 		.word	Ft_Esd_GpuState_I
 143 0050 00000000 		.word	Ft_Esd_GpuState
 144 0054 00000000 		.word	Ft_Esd_Host
 145              		.cfi_endproc
 146              	.LFE10:
 148              		.section	.text.Ft_Esd_Dl_PALETTE_SOURCE,"ax",%progbits
 149              		.align	1
 150              		.syntax unified
 151              		.thumb
 152              		.thumb_func
 153              		.fpu fpv5-sp-d16
 155              	Ft_Esd_Dl_PALETTE_SOURCE:
 156              	.LFB15:
 131:FT_Esd_Framework/FT_Esd_Dl.h **** 
 132:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify cell number for bitmap, see CELL 
 133:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_CELL, Type = ft_void_t, Category = EveRenderFunctions, Inline)
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s 			page 8


 134:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(cell, Type = ft_uint8_t, Min = 0, Max = 255)
 135:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_CELL(ft_uint8_t cell)
 136:FT_Esd_Framework/FT_Esd_Dl.h **** {
 137:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 138:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (cell != FT_ESD_STATE.Cell)
 139:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
 140:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 141:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, CELL(cell));
 142:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 143:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.Cell = cell;
 144:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
 145:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 146:FT_Esd_Framework/FT_Esd_Dl.h **** }
 147:FT_Esd_Framework/FT_Esd_Dl.h **** //Save EVE context, see SAVE_CONTEXT
 148:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_SAVE_CONTEXT, Type = ft_void_t, Category = EveRenderFunctions, Inline)
 149:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_SAVE_CONTEXT()
 150:FT_Esd_Framework/FT_Esd_Dl.h **** {
 151:FT_Esd_Framework/FT_Esd_Dl.h **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, SAVE_CONTEXT());
 152:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 153:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t nextState = Ft_Esd_GpuState_I + 1;
 154:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (nextState < FT_ESD_STATE_STACK_SIZE)
 155:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
 156:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Esd_GpuState[nextState] = Ft_Esd_GpuState[Ft_Esd_GpuState_I];
 157:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Esd_GpuState_I = nextState;
 158:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
 159:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 160:FT_Esd_Framework/FT_Esd_Dl.h **** }
 161:FT_Esd_Framework/FT_Esd_Dl.h **** //Restore EVE context, see RESTORE_CONTEXT
 162:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_RESTORE_CONTEXT, Type = ft_void_t, Category = EveRenderFunctions, Inline)
 163:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_RESTORE_CONTEXT()
 164:FT_Esd_Framework/FT_Esd_Dl.h **** {
 165:FT_Esd_Framework/FT_Esd_Dl.h **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, RESTORE_CONTEXT());
 166:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 167:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (Ft_Esd_GpuState_I > 0)
 168:FT_Esd_Framework/FT_Esd_Dl.h **** 		--Ft_Esd_GpuState_I;
 169:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 170:FT_Esd_Framework/FT_Esd_Dl.h **** }
 171:FT_Esd_Framework/FT_Esd_Dl.h **** 
 172:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify vertex format , see VERTEX_FORMAT command
 173:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_VERTEX_FORMAT, Type = ft_void_t, Category = EveRenderFunctions, Inline)
 174:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(frac, Type = ft_uint8_t, Min = 0, Max = 4)
 175:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_VERTEX_FORMAT(ft_uint8_t frac)
 176:FT_Esd_Framework/FT_Esd_Dl.h **** {
 177:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 178:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (frac != FT_ESD_STATE.VertexFormat)
 179:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
 180:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 181:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, VERTEX_FORMAT(frac));
 182:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 183:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.VertexFormat = frac;
 184:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
 185:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 186:FT_Esd_Framework/FT_Esd_Dl.h **** }
 187:FT_Esd_Framework/FT_Esd_Dl.h **** 
 188:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify vertex format , see VERTEX_FORMAT command
 189:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_PALETTE_SOURCE, Type = ft_void_t, Category = EveRenderFunctions, Inline)
 190:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(addr, Type = ft_uint32_t, Min = 0)
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s 			page 9


 191:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_PALETTE_SOURCE(ft_uint32_t addr)
 192:FT_Esd_Framework/FT_Esd_Dl.h **** {
 157              		.loc 2 192 0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 8
 160              		@ frame_needed = 1, uses_anonymous_args = 0
 161 0000 80B5     		push	{r7, lr}
 162              	.LCFI11:
 163              		.cfi_def_cfa_offset 8
 164              		.cfi_offset 7, -8
 165              		.cfi_offset 14, -4
 166 0002 82B0     		sub	sp, sp, #8
 167              	.LCFI12:
 168              		.cfi_def_cfa_offset 16
 169 0004 00AF     		add	r7, sp, #0
 170              	.LCFI13:
 171              		.cfi_def_cfa_register 7
 172 0006 7860     		str	r0, [r7, #4]
 193:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 194:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (addr != FT_ESD_STATE.PaletteSource)
 173              		.loc 2 194 0
 174 0008 0F4B     		ldr	r3, .L12
 175 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 176 000c 0F4A     		ldr	r2, .L12+4
 177 000e 1B01     		lsls	r3, r3, #4
 178 0010 1344     		add	r3, r3, r2
 179 0012 1B68     		ldr	r3, [r3]
 180 0014 7A68     		ldr	r2, [r7, #4]
 181 0016 9A42     		cmp	r2, r3
 182 0018 11D0     		beq	.L11
 195:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
 196:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 197:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, PALETTE_SOURCE(addr));
 183              		.loc 2 197 0
 184 001a 0D4B     		ldr	r3, .L12+8
 185 001c 1A68     		ldr	r2, [r3]
 186 001e 7B68     		ldr	r3, [r7, #4]
 187 0020 C3F31503 		ubfx	r3, r3, #0, #22
 188 0024 43F02853 		orr	r3, r3, #704643072
 189 0028 1946     		mov	r1, r3
 190 002a 1046     		mov	r0, r2
 191 002c FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 198:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 199:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.PaletteSource = addr;
 192              		.loc 2 199 0
 193 0030 054B     		ldr	r3, .L12
 194 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 195 0034 054A     		ldr	r2, .L12+4
 196 0036 1B01     		lsls	r3, r3, #4
 197 0038 1344     		add	r3, r3, r2
 198 003a 7A68     		ldr	r2, [r7, #4]
 199 003c 1A60     		str	r2, [r3]
 200              	.L11:
 200:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
 201:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 202:FT_Esd_Framework/FT_Esd_Dl.h **** }
 201              		.loc 2 202 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s 			page 10


 202 003e 00BF     		nop
 203 0040 0837     		adds	r7, r7, #8
 204              	.LCFI14:
 205              		.cfi_def_cfa_offset 8
 206 0042 BD46     		mov	sp, r7
 207              	.LCFI15:
 208              		.cfi_def_cfa_register 13
 209              		@ sp needed
 210 0044 80BD     		pop	{r7, pc}
 211              	.L13:
 212 0046 00BF     		.align	2
 213              	.L12:
 214 0048 00000000 		.word	Ft_Esd_GpuState_I
 215 004c 00000000 		.word	Ft_Esd_GpuState
 216 0050 00000000 		.word	Ft_Esd_Host
 217              		.cfi_endproc
 218              	.LFE15:
 220              		.comm	Ft_Esd_GpuState,80,4
 221              		.comm	Ft_Esd_GpuState_I,1,1
 222              		.comm	Ft_Esd_CoFgColor,4,4
 223              		.comm	Ft_Esd_CoBgColor,4,4
 224              		.global	Ft_Esd_BitmapHandleInfo
 225              		.section	.bss.Ft_Esd_BitmapHandleInfo,"aw",%nobits
 226              		.align	2
 229              	Ft_Esd_BitmapHandleInfo:
 230 0000 00000000 		.space	60
 230      00000000 
 230      00000000 
 230      00000000 
 230      00000000 
 231              		.global	Ft_Esd_BitmapHandleGpuHandle
 232              		.section	.bss.Ft_Esd_BitmapHandleGpuHandle,"aw",%nobits
 233              		.align	2
 236              	Ft_Esd_BitmapHandleGpuHandle:
 237 0000 00000000 		.space	60
 237      00000000 
 237      00000000 
 237      00000000 
 237      00000000 
 238              		.global	Ft_Esd_BitmapHandleUse
 239              		.section	.bss.Ft_Esd_BitmapHandleUse,"aw",%nobits
 240              		.align	2
 243              	Ft_Esd_BitmapHandleUse:
 244 0000 00000000 		.space	15
 244      00000000 
 244      00000000 
 244      000000
 245              		.global	Ft_Esd_BitmapHandleResized
 246              		.section	.bss.Ft_Esd_BitmapHandleResized,"aw",%nobits
 247              		.align	2
 250              	Ft_Esd_BitmapHandleResized:
 251 0000 00000000 		.space	15
 251      00000000 
 251      00000000 
 251      000000
 252              		.section	.text.Ft_Esd_ResetGpuState,"ax",%progbits
 253              		.align	1
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s 			page 11


 254              		.global	Ft_Esd_ResetGpuState
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 258              		.fpu fpv5-sp-d16
 260              	Ft_Esd_ResetGpuState:
 261              	.LFB17:
 262              		.file 3 "FT_Esd_Framework/FT_Esd_Dl.c"
   1:FT_Esd_Framework/FT_Esd_Dl.c **** 
   2:FT_Esd_Framework/FT_Esd_Dl.c **** #include "FT_Platform.h"
   3:FT_Esd_Framework/FT_Esd_Dl.c **** #include "FT_Esd_Dl.h"
   4:FT_Esd_Framework/FT_Esd_Dl.c **** 
   5:FT_Esd_Framework/FT_Esd_Dl.c **** Ft_Esd_GpuState_T Ft_Esd_GpuState[FT_ESD_STATE_STACK_SIZE];
   6:FT_Esd_Framework/FT_Esd_Dl.c **** ft_uint8_t Ft_Esd_GpuState_I;
   7:FT_Esd_Framework/FT_Esd_Dl.c **** ft_uint32_t Ft_Esd_CoFgColor;
   8:FT_Esd_Framework/FT_Esd_Dl.c **** ft_uint32_t Ft_Esd_CoBgColor;
   9:FT_Esd_Framework/FT_Esd_Dl.c **** 
  10:FT_Esd_Framework/FT_Esd_Dl.c **** // Number of bitmap handles to use (and also the scratch handle)
  11:FT_Esd_Framework/FT_Esd_Dl.c **** #define FT_ESD_BITMAPHANDLE_NB 15UL
  12:FT_Esd_Framework/FT_Esd_Dl.c **** // List which bitmap info is using a handle
  13:FT_Esd_Framework/FT_Esd_Dl.c **** Ft_Esd_BitmapInfo *Ft_Esd_BitmapHandleInfo[FT_ESD_BITMAPHANDLE_NB] = { 0 };
  14:FT_Esd_Framework/FT_Esd_Dl.c **** Ft_Esd_GpuHandle Ft_Esd_BitmapHandleGpuHandle[FT_ESD_BITMAPHANDLE_NB] = { 0 };
  15:FT_Esd_Framework/FT_Esd_Dl.c **** ft_bool_t Ft_Esd_BitmapHandleUse[FT_ESD_BITMAPHANDLE_NB] = { 0 };
  16:FT_Esd_Framework/FT_Esd_Dl.c **** 
  17:FT_Esd_Framework/FT_Esd_Dl.c **** ft_bool_t Ft_Esd_BitmapHandleResized[FT_ESD_BITMAPHANDLE_NB] = { 0 };
  18:FT_Esd_Framework/FT_Esd_Dl.c **** 
  19:FT_Esd_Framework/FT_Esd_Dl.c **** void Ft_Esd_ResetGpuState() // Begin of frame
  20:FT_Esd_Framework/FT_Esd_Dl.c **** {
 263              		.loc 3 20 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 8
 266              		@ frame_needed = 1, uses_anonymous_args = 0
 267              		@ link register save eliminated.
 268 0000 80B4     		push	{r7}
 269              	.LCFI16:
 270              		.cfi_def_cfa_offset 4
 271              		.cfi_offset 7, -4
 272 0002 83B0     		sub	sp, sp, #12
 273              	.LCFI17:
 274              		.cfi_def_cfa_offset 16
 275 0004 00AF     		add	r7, sp, #0
 276              	.LCFI18:
 277              		.cfi_def_cfa_register 7
  21:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Esd_GpuState_I = 0;
 278              		.loc 3 21 0
 279 0006 1D4B     		ldr	r3, .L19
 280 0008 0022     		movs	r2, #0
 281 000a 1A70     		strb	r2, [r3]
  22:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Esd_GpuState[0] = (Ft_Esd_GpuState_T) {
 282              		.loc 3 22 0
 283 000c 1C4B     		ldr	r3, .L19+4
 284 000e 1A46     		mov	r2, r3
 285 0010 0023     		movs	r3, #0
 286 0012 1360     		str	r3, [r2]
 287 0014 5360     		str	r3, [r2, #4]
 288 0016 9360     		str	r3, [r2, #8]
 289 0018 D360     		str	r3, [r2, #12]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s 			page 12


 290 001a 194B     		ldr	r3, .L19+4
 291 001c 6FF07F42 		mvn	r2, #-16777216
 292 0020 5A60     		str	r2, [r3, #4]
 293 0022 174B     		ldr	r3, .L19+4
 294 0024 FF22     		movs	r2, #255
 295 0026 1A72     		strb	r2, [r3, #8]
 296 0028 154B     		ldr	r3, .L19+4
 297 002a 0422     		movs	r2, #4
 298 002c 1A73     		strb	r2, [r3, #12]
 299              	.LBB2:
  23:FT_Esd_Framework/FT_Esd_Dl.c **** 		.ColorA = 0xFF,
  24:FT_Esd_Framework/FT_Esd_Dl.c **** 		.ColorRGB = 0xFFFFFF,
  25:FT_Esd_Framework/FT_Esd_Dl.c **** 		.VertexFormat = 4
  26:FT_Esd_Framework/FT_Esd_Dl.c **** 	};
  27:FT_Esd_Framework/FT_Esd_Dl.c **** 	for (int i = 0; i < FT_ESD_BITMAPHANDLE_NB; ++i)
 300              		.loc 3 27 0
 301 002e 0023     		movs	r3, #0
 302 0030 7B60     		str	r3, [r7, #4]
 303 0032 19E0     		b	.L15
 304              	.L18:
  28:FT_Esd_Framework/FT_Esd_Dl.c **** 	{
  29:FT_Esd_Framework/FT_Esd_Dl.c **** 		// 2: In use last frame
  30:FT_Esd_Framework/FT_Esd_Dl.c **** 		// 1: Not in use anymore
  31:FT_Esd_Framework/FT_Esd_Dl.c **** 		// 0: Not in use
  32:FT_Esd_Framework/FT_Esd_Dl.c **** 		if (Ft_Esd_BitmapHandleUse[i] < 2)
 305              		.loc 3 32 0
 306 0034 134A     		ldr	r2, .L19+8
 307 0036 7B68     		ldr	r3, [r7, #4]
 308 0038 1344     		add	r3, r3, r2
 309 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 310 003c 012B     		cmp	r3, #1
 311 003e 05D8     		bhi	.L16
  33:FT_Esd_Framework/FT_Esd_Dl.c **** 			Ft_Esd_BitmapHandleUse[i] = 0;
 312              		.loc 3 33 0
 313 0040 104A     		ldr	r2, .L19+8
 314 0042 7B68     		ldr	r3, [r7, #4]
 315 0044 1344     		add	r3, r3, r2
 316 0046 0022     		movs	r2, #0
 317 0048 1A70     		strb	r2, [r3]
 318 004a 0AE0     		b	.L17
 319              	.L16:
  34:FT_Esd_Framework/FT_Esd_Dl.c **** 		else
  35:FT_Esd_Framework/FT_Esd_Dl.c **** 			--Ft_Esd_BitmapHandleUse[i];
 320              		.loc 3 35 0
 321 004c 0D4A     		ldr	r2, .L19+8
 322 004e 7B68     		ldr	r3, [r7, #4]
 323 0050 1344     		add	r3, r3, r2
 324 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 325 0054 013B     		subs	r3, r3, #1
 326 0056 D9B2     		uxtb	r1, r3
 327 0058 0A4A     		ldr	r2, .L19+8
 328 005a 7B68     		ldr	r3, [r7, #4]
 329 005c 1344     		add	r3, r3, r2
 330 005e 0A46     		mov	r2, r1
 331 0060 1A70     		strb	r2, [r3]
 332              	.L17:
  27:FT_Esd_Framework/FT_Esd_Dl.c **** 	{
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s 			page 13


 333              		.loc 3 27 0 discriminator 2
 334 0062 7B68     		ldr	r3, [r7, #4]
 335 0064 0133     		adds	r3, r3, #1
 336 0066 7B60     		str	r3, [r7, #4]
 337              	.L15:
  27:FT_Esd_Framework/FT_Esd_Dl.c **** 	{
 338              		.loc 3 27 0 is_stmt 0 discriminator 1
 339 0068 7B68     		ldr	r3, [r7, #4]
 340 006a 0E2B     		cmp	r3, #14
 341 006c E2D9     		bls	.L18
 342              	.LBE2:
  36:FT_Esd_Framework/FT_Esd_Dl.c **** 		// 2: In use this frame
  37:FT_Esd_Framework/FT_Esd_Dl.c **** 		// 1: In use last frame
  38:FT_Esd_Framework/FT_Esd_Dl.c **** 		// 0: Not in use
  39:FT_Esd_Framework/FT_Esd_Dl.c **** 	}
  40:FT_Esd_Framework/FT_Esd_Dl.c **** }
 343              		.loc 3 40 0 is_stmt 1
 344 006e 00BF     		nop
 345 0070 0C37     		adds	r7, r7, #12
 346              	.LCFI19:
 347              		.cfi_def_cfa_offset 4
 348 0072 BD46     		mov	sp, r7
 349              	.LCFI20:
 350              		.cfi_def_cfa_register 13
 351              		@ sp needed
 352 0074 5DF8047B 		ldr	r7, [sp], #4
 353              	.LCFI21:
 354              		.cfi_restore 7
 355              		.cfi_def_cfa_offset 0
 356 0078 7047     		bx	lr
 357              	.L20:
 358 007a 00BF     		.align	2
 359              	.L19:
 360 007c 00000000 		.word	Ft_Esd_GpuState_I
 361 0080 00000000 		.word	Ft_Esd_GpuState
 362 0084 00000000 		.word	Ft_Esd_BitmapHandleUse
 363              		.cfi_endproc
 364              	.LFE17:
 366              		.section	.text.Ft_Esd_ResetCoState,"ax",%progbits
 367              		.align	1
 368              		.global	Ft_Esd_ResetCoState
 369              		.syntax unified
 370              		.thumb
 371              		.thumb_func
 372              		.fpu fpv5-sp-d16
 374              	Ft_Esd_ResetCoState:
 375              	.LFB18:
  41:FT_Esd_Framework/FT_Esd_Dl.c **** 
  42:FT_Esd_Framework/FT_Esd_Dl.c **** void Ft_Esd_ResetCoState()
  43:FT_Esd_Framework/FT_Esd_Dl.c **** {
 376              		.loc 3 43 0
 377              		.cfi_startproc
 378              		@ args = 0, pretend = 0, frame = 0
 379              		@ frame_needed = 1, uses_anonymous_args = 0
 380              		@ link register save eliminated.
 381 0000 80B4     		push	{r7}
 382              	.LCFI22:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s 			page 14


 383              		.cfi_def_cfa_offset 4
 384              		.cfi_offset 7, -4
 385 0002 00AF     		add	r7, sp, #0
 386              	.LCFI23:
 387              		.cfi_def_cfa_register 7
  44:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Esd_CoFgColor = 0x003870;
 388              		.loc 3 44 0
 389 0004 064B     		ldr	r3, .L22
 390 0006 43F67002 		movw	r2, #14448
 391 000a 1A60     		str	r2, [r3]
  45:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Esd_CoBgColor = 0x002040;
 392              		.loc 3 45 0
 393 000c 054B     		ldr	r3, .L22+4
 394 000e 4FF40152 		mov	r2, #8256
 395 0012 1A60     		str	r2, [r3]
  46:FT_Esd_Framework/FT_Esd_Dl.c **** }
 396              		.loc 3 46 0
 397 0014 00BF     		nop
 398 0016 BD46     		mov	sp, r7
 399              	.LCFI24:
 400              		.cfi_def_cfa_register 13
 401              		@ sp needed
 402 0018 5DF8047B 		ldr	r7, [sp], #4
 403              	.LCFI25:
 404              		.cfi_restore 7
 405              		.cfi_def_cfa_offset 0
 406 001c 7047     		bx	lr
 407              	.L23:
 408 001e 00BF     		.align	2
 409              	.L22:
 410 0020 00000000 		.word	Ft_Esd_CoFgColor
 411 0024 00000000 		.word	Ft_Esd_CoBgColor
 412              		.cfi_endproc
 413              	.LFE18:
 415              		.section	.text.Ft_Esd_BitmapHandle_GetTotalUsed,"ax",%progbits
 416              		.align	1
 417              		.global	Ft_Esd_BitmapHandle_GetTotalUsed
 418              		.syntax unified
 419              		.thumb
 420              		.thumb_func
 421              		.fpu fpv5-sp-d16
 423              	Ft_Esd_BitmapHandle_GetTotalUsed:
 424              	.LFB19:
  47:FT_Esd_Framework/FT_Esd_Dl.c **** 
  48:FT_Esd_Framework/FT_Esd_Dl.c **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotalUsed()
  49:FT_Esd_Framework/FT_Esd_Dl.c **** {
 425              		.loc 3 49 0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 8
 428              		@ frame_needed = 1, uses_anonymous_args = 0
 429              		@ link register save eliminated.
 430 0000 80B4     		push	{r7}
 431              	.LCFI26:
 432              		.cfi_def_cfa_offset 4
 433              		.cfi_offset 7, -4
 434 0002 83B0     		sub	sp, sp, #12
 435              	.LCFI27:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s 			page 15


 436              		.cfi_def_cfa_offset 16
 437 0004 00AF     		add	r7, sp, #0
 438              	.LCFI28:
 439              		.cfi_def_cfa_register 7
  50:FT_Esd_Framework/FT_Esd_Dl.c **** 	ft_uint32_t total = 0;
 440              		.loc 3 50 0
 441 0006 0023     		movs	r3, #0
 442 0008 7B60     		str	r3, [r7, #4]
 443              	.LBB3:
  51:FT_Esd_Framework/FT_Esd_Dl.c **** 	for (int i = 0; i < FT_ESD_BITMAPHANDLE_NB; ++i)
 444              		.loc 3 51 0
 445 000a 0023     		movs	r3, #0
 446 000c 3B60     		str	r3, [r7]
 447 000e 0BE0     		b	.L25
 448              	.L27:
  52:FT_Esd_Framework/FT_Esd_Dl.c **** 	{
  53:FT_Esd_Framework/FT_Esd_Dl.c **** 		if (Ft_Esd_BitmapHandleUse[i] > 0)
 449              		.loc 3 53 0
 450 0010 0A4A     		ldr	r2, .L29
 451 0012 3B68     		ldr	r3, [r7]
 452 0014 1344     		add	r3, r3, r2
 453 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 454 0018 002B     		cmp	r3, #0
 455 001a 02D0     		beq	.L26
  54:FT_Esd_Framework/FT_Esd_Dl.c **** 		{
  55:FT_Esd_Framework/FT_Esd_Dl.c **** 			++total;
 456              		.loc 3 55 0
 457 001c 7B68     		ldr	r3, [r7, #4]
 458 001e 0133     		adds	r3, r3, #1
 459 0020 7B60     		str	r3, [r7, #4]
 460              	.L26:
  51:FT_Esd_Framework/FT_Esd_Dl.c **** 	{
 461              		.loc 3 51 0 discriminator 2
 462 0022 3B68     		ldr	r3, [r7]
 463 0024 0133     		adds	r3, r3, #1
 464 0026 3B60     		str	r3, [r7]
 465              	.L25:
  51:FT_Esd_Framework/FT_Esd_Dl.c **** 	{
 466              		.loc 3 51 0 is_stmt 0 discriminator 1
 467 0028 3B68     		ldr	r3, [r7]
 468 002a 0E2B     		cmp	r3, #14
 469 002c F0D9     		bls	.L27
 470              	.LBE3:
  56:FT_Esd_Framework/FT_Esd_Dl.c **** 		}
  57:FT_Esd_Framework/FT_Esd_Dl.c **** 	}
  58:FT_Esd_Framework/FT_Esd_Dl.c **** 	return total;
 471              		.loc 3 58 0 is_stmt 1
 472 002e 7B68     		ldr	r3, [r7, #4]
  59:FT_Esd_Framework/FT_Esd_Dl.c **** }
 473              		.loc 3 59 0
 474 0030 1846     		mov	r0, r3
 475 0032 0C37     		adds	r7, r7, #12
 476              	.LCFI29:
 477              		.cfi_def_cfa_offset 4
 478 0034 BD46     		mov	sp, r7
 479              	.LCFI30:
 480              		.cfi_def_cfa_register 13
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s 			page 16


 481              		@ sp needed
 482 0036 5DF8047B 		ldr	r7, [sp], #4
 483              	.LCFI31:
 484              		.cfi_restore 7
 485              		.cfi_def_cfa_offset 0
 486 003a 7047     		bx	lr
 487              	.L30:
 488              		.align	2
 489              	.L29:
 490 003c 00000000 		.word	Ft_Esd_BitmapHandleUse
 491              		.cfi_endproc
 492              	.LFE19:
 494              		.section	.text.Ft_Esd_BitmapHandle_GetTotal,"ax",%progbits
 495              		.align	1
 496              		.global	Ft_Esd_BitmapHandle_GetTotal
 497              		.syntax unified
 498              		.thumb
 499              		.thumb_func
 500              		.fpu fpv5-sp-d16
 502              	Ft_Esd_BitmapHandle_GetTotal:
 503              	.LFB20:
  60:FT_Esd_Framework/FT_Esd_Dl.c **** 
  61:FT_Esd_Framework/FT_Esd_Dl.c **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotal()
  62:FT_Esd_Framework/FT_Esd_Dl.c **** {
 504              		.loc 3 62 0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 1, uses_anonymous_args = 0
 508              		@ link register save eliminated.
 509 0000 80B4     		push	{r7}
 510              	.LCFI32:
 511              		.cfi_def_cfa_offset 4
 512              		.cfi_offset 7, -4
 513 0002 00AF     		add	r7, sp, #0
 514              	.LCFI33:
 515              		.cfi_def_cfa_register 7
  63:FT_Esd_Framework/FT_Esd_Dl.c **** 	return FT_ESD_BITMAPHANDLE_NB;
 516              		.loc 3 63 0
 517 0004 0F23     		movs	r3, #15
  64:FT_Esd_Framework/FT_Esd_Dl.c **** }
 518              		.loc 3 64 0
 519 0006 1846     		mov	r0, r3
 520 0008 BD46     		mov	sp, r7
 521              	.LCFI34:
 522              		.cfi_def_cfa_register 13
 523              		@ sp needed
 524 000a 5DF8047B 		ldr	r7, [sp], #4
 525              	.LCFI35:
 526              		.cfi_restore 7
 527              		.cfi_def_cfa_offset 0
 528 000e 7047     		bx	lr
 529              		.cfi_endproc
 530              	.LFE20:
 532              		.section	.text.FT_Esd_Render_Rect,"ax",%progbits
 533              		.align	1
 534              		.global	FT_Esd_Render_Rect
 535              		.syntax unified
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s 			page 17


 536              		.thumb
 537              		.thumb_func
 538              		.fpu fpv5-sp-d16
 540              	FT_Esd_Render_Rect:
 541              	.LFB21:
  65:FT_Esd_Framework/FT_Esd_Dl.c **** 
  66:FT_Esd_Framework/FT_Esd_Dl.c **** void FT_Esd_Render_Rect(ft_int16_t x, ft_int16_t y, ft_int16_t w, ft_int16_t h)
  67:FT_Esd_Framework/FT_Esd_Dl.c **** {
 542              		.loc 3 67 0
 543              		.cfi_startproc
 544              		@ args = 0, pretend = 0, frame = 8
 545              		@ frame_needed = 1, uses_anonymous_args = 0
 546 0000 90B5     		push	{r4, r7, lr}
 547              	.LCFI36:
 548              		.cfi_def_cfa_offset 12
 549              		.cfi_offset 4, -12
 550              		.cfi_offset 7, -8
 551              		.cfi_offset 14, -4
 552 0002 83B0     		sub	sp, sp, #12
 553              	.LCFI37:
 554              		.cfi_def_cfa_offset 24
 555 0004 00AF     		add	r7, sp, #0
 556              	.LCFI38:
 557              		.cfi_def_cfa_register 7
 558 0006 0446     		mov	r4, r0
 559 0008 0846     		mov	r0, r1
 560 000a 1146     		mov	r1, r2
 561 000c 1A46     		mov	r2, r3
 562 000e 2346     		mov	r3, r4	@ movhi
 563 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 564 0012 0346     		mov	r3, r0	@ movhi
 565 0014 BB80     		strh	r3, [r7, #4]	@ movhi
 566 0016 0B46     		mov	r3, r1	@ movhi
 567 0018 7B80     		strh	r3, [r7, #2]	@ movhi
 568 001a 1346     		mov	r3, r2	@ movhi
 569 001c 3B80     		strh	r3, [r7]	@ movhi
  68:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, BEGIN(RECTS));
 570              		.loc 3 68 0
 571 001e 194B     		ldr	r3, .L34
 572 0020 1B68     		ldr	r3, [r3]
 573 0022 1949     		ldr	r1, .L34+4
 574 0024 1846     		mov	r0, r3
 575 0026 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  69:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, VERTEX2II(x, y, 0, 0));
 576              		.loc 3 69 0
 577 002a 164B     		ldr	r3, .L34
 578 002c 1868     		ldr	r0, [r3]
 579 002e FB88     		ldrh	r3, [r7, #6]
 580 0030 5B05     		lsls	r3, r3, #21
 581 0032 164A     		ldr	r2, .L34+8
 582 0034 1A40     		ands	r2, r2, r3
 583 0036 BB88     		ldrh	r3, [r7, #4]
 584 0038 1903     		lsls	r1, r3, #12
 585 003a 154B     		ldr	r3, .L34+12
 586 003c 0B40     		ands	r3, r3, r1
 587 003e 1343     		orrs	r3, r3, r2
 588 0040 43F00043 		orr	r3, r3, #-2147483648
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s 			page 18


 589 0044 1946     		mov	r1, r3
 590 0046 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  70:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, VERTEX2II(x + w, y + h, 0, 0));
 591              		.loc 3 70 0
 592 004a 0E4B     		ldr	r3, .L34
 593 004c 1868     		ldr	r0, [r3]
 594 004e B7F90620 		ldrsh	r2, [r7, #6]
 595 0052 B7F90230 		ldrsh	r3, [r7, #2]
 596 0056 1344     		add	r3, r3, r2
 597 0058 5B05     		lsls	r3, r3, #21
 598 005a 0C4A     		ldr	r2, .L34+8
 599 005c 1A40     		ands	r2, r2, r3
 600 005e B7F90410 		ldrsh	r1, [r7, #4]
 601 0062 B7F90030 		ldrsh	r3, [r7]
 602 0066 0B44     		add	r3, r3, r1
 603 0068 1903     		lsls	r1, r3, #12
 604 006a 094B     		ldr	r3, .L34+12
 605 006c 0B40     		ands	r3, r3, r1
 606 006e 1343     		orrs	r3, r3, r2
 607 0070 43F00043 		orr	r3, r3, #-2147483648
 608 0074 1946     		mov	r1, r3
 609 0076 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  71:FT_Esd_Framework/FT_Esd_Dl.c **** }
 610              		.loc 3 71 0
 611 007a 00BF     		nop
 612 007c 0C37     		adds	r7, r7, #12
 613              	.LCFI39:
 614              		.cfi_def_cfa_offset 12
 615 007e BD46     		mov	sp, r7
 616              	.LCFI40:
 617              		.cfi_def_cfa_register 13
 618              		@ sp needed
 619 0080 90BD     		pop	{r4, r7, pc}
 620              	.L35:
 621 0082 00BF     		.align	2
 622              	.L34:
 623 0084 00000000 		.word	Ft_Esd_Host
 624 0088 0900001F 		.word	520093705
 625 008c 0000E03F 		.word	1071644672
 626 0090 00F01F00 		.word	2093056
 627              		.cfi_endproc
 628              	.LFE21:
 630              		.section	.text.Ft_Esd_Cmd_Button,"ax",%progbits
 631              		.align	1
 632              		.global	Ft_Esd_Cmd_Button
 633              		.syntax unified
 634              		.thumb
 635              		.thumb_func
 636              		.fpu fpv5-sp-d16
 638              	Ft_Esd_Cmd_Button:
 639              	.LFB22:
  72:FT_Esd_Framework/FT_Esd_Dl.c **** 
  73:FT_Esd_Framework/FT_Esd_Dl.c **** ft_void_t Ft_Esd_Cmd_Button(ft_int16_t x, ft_int16_t y, ft_int16_t w, ft_int16_t h, ft_int16_t font
  74:FT_Esd_Framework/FT_Esd_Dl.c **** {
 640              		.loc 3 74 0
 641              		.cfi_startproc
 642              		@ args = 12, pretend = 0, frame = 8
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s 			page 19


 643              		@ frame_needed = 1, uses_anonymous_args = 0
 644 0000 90B5     		push	{r4, r7, lr}
 645              	.LCFI41:
 646              		.cfi_def_cfa_offset 12
 647              		.cfi_offset 4, -12
 648              		.cfi_offset 7, -8
 649              		.cfi_offset 14, -4
 650 0002 87B0     		sub	sp, sp, #28
 651              	.LCFI42:
 652              		.cfi_def_cfa_offset 40
 653 0004 04AF     		add	r7, sp, #16
 654              	.LCFI43:
 655              		.cfi_def_cfa 7, 24
 656 0006 0446     		mov	r4, r0
 657 0008 0846     		mov	r0, r1
 658 000a 1146     		mov	r1, r2
 659 000c 1A46     		mov	r2, r3
 660 000e 2346     		mov	r3, r4	@ movhi
 661 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 662 0012 0346     		mov	r3, r0	@ movhi
 663 0014 BB80     		strh	r3, [r7, #4]	@ movhi
 664 0016 0B46     		mov	r3, r1	@ movhi
 665 0018 7B80     		strh	r3, [r7, #2]	@ movhi
 666 001a 1346     		mov	r3, r2	@ movhi
 667 001c 3B80     		strh	r3, [r7]	@ movhi
  75:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Gpu_CoCmd_Button(Ft_Esd_Host, x, y, w, h, font, options, s);
 668              		.loc 3 75 0
 669 001e 0C4B     		ldr	r3, .L37
 670 0020 1868     		ldr	r0, [r3]
 671 0022 B7F90240 		ldrsh	r4, [r7, #2]
 672 0026 B7F90420 		ldrsh	r2, [r7, #4]
 673 002a B7F90610 		ldrsh	r1, [r7, #6]
 674 002e 3B6A     		ldr	r3, [r7, #32]
 675 0030 0393     		str	r3, [sp, #12]
 676 0032 BB8B     		ldrh	r3, [r7, #28]
 677 0034 0293     		str	r3, [sp, #8]
 678 0036 B7F91830 		ldrsh	r3, [r7, #24]
 679 003a 0193     		str	r3, [sp, #4]
 680 003c B7F90030 		ldrsh	r3, [r7]
 681 0040 0093     		str	r3, [sp]
 682 0042 2346     		mov	r3, r4
 683 0044 FFF7FEFF 		bl	Ft_Gpu_CoCmd_Button
  76:FT_Esd_Framework/FT_Esd_Dl.c **** }
 684              		.loc 3 76 0
 685 0048 00BF     		nop
 686 004a 0C37     		adds	r7, r7, #12
 687              	.LCFI44:
 688              		.cfi_def_cfa_offset 12
 689 004c BD46     		mov	sp, r7
 690              	.LCFI45:
 691              		.cfi_def_cfa_register 13
 692              		@ sp needed
 693 004e 90BD     		pop	{r4, r7, pc}
 694              	.L38:
 695              		.align	2
 696              	.L37:
 697 0050 00000000 		.word	Ft_Esd_Host
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s 			page 20


 698              		.cfi_endproc
 699              	.LFE22:
 701              		.section	.text.Ft_Esd_Cmd_Number,"ax",%progbits
 702              		.align	1
 703              		.global	Ft_Esd_Cmd_Number
 704              		.syntax unified
 705              		.thumb
 706              		.thumb_func
 707              		.fpu fpv5-sp-d16
 709              	Ft_Esd_Cmd_Number:
 710              	.LFB23:
  77:FT_Esd_Framework/FT_Esd_Dl.c **** 
  78:FT_Esd_Framework/FT_Esd_Dl.c **** ft_void_t Ft_Esd_Cmd_Number(ft_int16_t x, ft_int16_t y, ft_int16_t font, ft_uint16_t options, ft_in
  79:FT_Esd_Framework/FT_Esd_Dl.c **** {
 711              		.loc 3 79 0
 712              		.cfi_startproc
 713              		@ args = 4, pretend = 0, frame = 8
 714              		@ frame_needed = 1, uses_anonymous_args = 0
 715 0000 90B5     		push	{r4, r7, lr}
 716              	.LCFI46:
 717              		.cfi_def_cfa_offset 12
 718              		.cfi_offset 4, -12
 719              		.cfi_offset 7, -8
 720              		.cfi_offset 14, -4
 721 0002 85B0     		sub	sp, sp, #20
 722              	.LCFI47:
 723              		.cfi_def_cfa_offset 32
 724 0004 02AF     		add	r7, sp, #8
 725              	.LCFI48:
 726              		.cfi_def_cfa 7, 24
 727 0006 0446     		mov	r4, r0
 728 0008 0846     		mov	r0, r1
 729 000a 1146     		mov	r1, r2
 730 000c 1A46     		mov	r2, r3
 731 000e 2346     		mov	r3, r4	@ movhi
 732 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 733 0012 0346     		mov	r3, r0	@ movhi
 734 0014 BB80     		strh	r3, [r7, #4]	@ movhi
 735 0016 0B46     		mov	r3, r1	@ movhi
 736 0018 7B80     		strh	r3, [r7, #2]	@ movhi
 737 001a 1346     		mov	r3, r2	@ movhi
 738 001c 3B80     		strh	r3, [r7]	@ movhi
  80:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Gpu_CoCmd_Number(Ft_Esd_Host, x, y, font, options, n);
 739              		.loc 3 80 0
 740 001e 094B     		ldr	r3, .L40
 741 0020 1868     		ldr	r0, [r3]
 742 0022 B7F90240 		ldrsh	r4, [r7, #2]
 743 0026 B7F90420 		ldrsh	r2, [r7, #4]
 744 002a B7F90610 		ldrsh	r1, [r7, #6]
 745 002e BB69     		ldr	r3, [r7, #24]
 746 0030 0193     		str	r3, [sp, #4]
 747 0032 3B88     		ldrh	r3, [r7]
 748 0034 0093     		str	r3, [sp]
 749 0036 2346     		mov	r3, r4
 750 0038 FFF7FEFF 		bl	Ft_Gpu_CoCmd_Number
  81:FT_Esd_Framework/FT_Esd_Dl.c **** }
 751              		.loc 3 81 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s 			page 21


 752 003c 00BF     		nop
 753 003e 0C37     		adds	r7, r7, #12
 754              	.LCFI49:
 755              		.cfi_def_cfa_offset 12
 756 0040 BD46     		mov	sp, r7
 757              	.LCFI50:
 758              		.cfi_def_cfa_register 13
 759              		@ sp needed
 760 0042 90BD     		pop	{r4, r7, pc}
 761              	.L41:
 762              		.align	2
 763              	.L40:
 764 0044 00000000 		.word	Ft_Esd_Host
 765              		.cfi_endproc
 766              	.LFE23:
 768              		.section	.text.Ft_Esd_Dl_Bitmap_Setup,"ax",%progbits
 769              		.align	1
 770              		.global	Ft_Esd_Dl_Bitmap_Setup
 771              		.syntax unified
 772              		.thumb
 773              		.thumb_func
 774              		.fpu fpv5-sp-d16
 776              	Ft_Esd_Dl_Bitmap_Setup:
 777              	.LFB24:
  82:FT_Esd_Framework/FT_Esd_Dl.c **** 
  83:FT_Esd_Framework/FT_Esd_Dl.c **** ft_uint8_t Ft_Esd_Dl_Bitmap_Setup(Ft_Esd_BitmapInfo *bitmapInfo)
  84:FT_Esd_Framework/FT_Esd_Dl.c **** {
 778              		.loc 3 84 0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 24
 781              		@ frame_needed = 1, uses_anonymous_args = 0
 782 0000 80B5     		push	{r7, lr}
 783              	.LCFI51:
 784              		.cfi_def_cfa_offset 8
 785              		.cfi_offset 7, -8
 786              		.cfi_offset 14, -4
 787 0002 88B0     		sub	sp, sp, #32
 788              	.LCFI52:
 789              		.cfi_def_cfa_offset 40
 790 0004 02AF     		add	r7, sp, #8
 791              	.LCFI53:
 792              		.cfi_def_cfa 7, 32
 793 0006 7860     		str	r0, [r7, #4]
  85:FT_Esd_Framework/FT_Esd_Dl.c **** 	// Get bitmap address
  86:FT_Esd_Framework/FT_Esd_Dl.c **** 	uint32_t addr = Ft_Esd_LoadBitmap(bitmapInfo);
 794              		.loc 3 86 0
 795 0008 7868     		ldr	r0, [r7, #4]
 796 000a FFF7FEFF 		bl	Ft_Esd_LoadBitmap
 797 000e F860     		str	r0, [r7, #12]
  87:FT_Esd_Framework/FT_Esd_Dl.c **** 	if (addr == ~0)
 798              		.loc 3 87 0
 799 0010 FB68     		ldr	r3, [r7, #12]
 800 0012 B3F1FF3F 		cmp	r3, #-1
 801 0016 01D1     		bne	.L43
  88:FT_Esd_Framework/FT_Esd_Dl.c **** 		return FT_ESD_BITMAPHANDLE_INVALID; // Bitmap not loaded (out of memory or file not found)
 802              		.loc 3 88 0
 803 0018 FF23     		movs	r3, #255
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s 			page 22


 804 001a 6EE0     		b	.L44
 805              	.L43:
  89:FT_Esd_Framework/FT_Esd_Dl.c **** 
  90:FT_Esd_Framework/FT_Esd_Dl.c **** 	uint32_t handle = bitmapInfo->BitmapHandle;
 806              		.loc 3 90 0
 807 001c 7B68     		ldr	r3, [r7, #4]
 808 001e DB69     		ldr	r3, [r3, #28]
 809 0020 7B61     		str	r3, [r7, #20]
  91:FT_Esd_Framework/FT_Esd_Dl.c **** 	if (!((handle < FT_ESD_BITMAPHANDLE_NB)
 810              		.loc 3 91 0
 811 0022 7B69     		ldr	r3, [r7, #20]
 812 0024 0E2B     		cmp	r3, #14
 813 0026 17D8     		bhi	.L45
  92:FT_Esd_Framework/FT_Esd_Dl.c **** 		&& (Ft_Esd_BitmapHandleInfo[handle] == bitmapInfo)
 814              		.loc 3 92 0
 815 0028 364A     		ldr	r2, .L53
 816 002a 7B69     		ldr	r3, [r7, #20]
 817 002c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 818 0030 7A68     		ldr	r2, [r7, #4]
 819 0032 9A42     		cmp	r2, r3
 820 0034 10D1     		bne	.L45
  93:FT_Esd_Framework/FT_Esd_Dl.c **** 		&& (Ft_Esd_BitmapHandleGpuHandle[handle].Id == bitmapInfo->GpuHandle.Id)
 821              		.loc 3 93 0
 822 0036 344A     		ldr	r2, .L53+4
 823 0038 7B69     		ldr	r3, [r7, #20]
 824 003a 32F82320 		ldrh	r2, [r2, r3, lsl #2]
 825 003e 7B68     		ldr	r3, [r7, #4]
 826 0040 1B8B     		ldrh	r3, [r3, #24]
 827 0042 9A42     		cmp	r2, r3
 828 0044 08D1     		bne	.L45
  94:FT_Esd_Framework/FT_Esd_Dl.c **** 		&& (Ft_Esd_BitmapHandleGpuHandle[handle].Seq == bitmapInfo->GpuHandle.Seq)))
 829              		.loc 3 94 0
 830 0046 304A     		ldr	r2, .L53+4
 831 0048 7B69     		ldr	r3, [r7, #20]
 832 004a 9B00     		lsls	r3, r3, #2
 833 004c 1344     		add	r3, r3, r2
 834 004e 5A88     		ldrh	r2, [r3, #2]
 835 0050 7B68     		ldr	r3, [r7, #4]
 836 0052 5B8B     		ldrh	r3, [r3, #26]
  91:FT_Esd_Framework/FT_Esd_Dl.c **** 		&& (Ft_Esd_BitmapHandleInfo[handle] == bitmapInfo)
 837              		.loc 3 91 0
 838 0054 9A42     		cmp	r2, r3
 839 0056 21D0     		beq	.L46
 840              	.L45:
  95:FT_Esd_Framework/FT_Esd_Dl.c **** 	{
  96:FT_Esd_Framework/FT_Esd_Dl.c **** 		// Bitmap is loaded but no handle is setup, create a new handle for this bitmap
  97:FT_Esd_Framework/FT_Esd_Dl.c **** 		// printf("Find free bitmap handle for addr %i\n", (int)addr);
  98:FT_Esd_Framework/FT_Esd_Dl.c **** 
  99:FT_Esd_Framework/FT_Esd_Dl.c **** 		// Find a free handle
 100:FT_Esd_Framework/FT_Esd_Dl.c **** 		handle = FT_ESD_BITMAPHANDLE_NB; // Fallback to scratch handle
 841              		.loc 3 100 0
 842 0058 0F23     		movs	r3, #15
 843 005a 7B61     		str	r3, [r7, #20]
 844              	.LBB4:
 101:FT_Esd_Framework/FT_Esd_Dl.c **** 		for (int i = 0; i < FT_ESD_BITMAPHANDLE_NB; ++i)
 845              		.loc 3 101 0
 846 005c 0023     		movs	r3, #0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s 			page 23


 847 005e 3B61     		str	r3, [r7, #16]
 848 0060 16E0     		b	.L47
 849              	.L50:
 102:FT_Esd_Framework/FT_Esd_Dl.c **** 		{
 103:FT_Esd_Framework/FT_Esd_Dl.c **** 			if (!Ft_Esd_BitmapHandleUse[i])
 850              		.loc 3 103 0
 851 0062 2A4A     		ldr	r2, .L53+8
 852 0064 3B69     		ldr	r3, [r7, #16]
 853 0066 1344     		add	r3, r3, r2
 854 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 855 006a 002B     		cmp	r3, #0
 856 006c 0DD1     		bne	.L48
 104:FT_Esd_Framework/FT_Esd_Dl.c **** 			{
 105:FT_Esd_Framework/FT_Esd_Dl.c **** 				// Attach this handle to the bitmap info
 106:FT_Esd_Framework/FT_Esd_Dl.c **** 				handle = i;
 857              		.loc 3 106 0
 858 006e 3B69     		ldr	r3, [r7, #16]
 859 0070 7B61     		str	r3, [r7, #20]
 107:FT_Esd_Framework/FT_Esd_Dl.c **** 				Ft_Esd_BitmapHandleInfo[i] = bitmapInfo;
 860              		.loc 3 107 0
 861 0072 2449     		ldr	r1, .L53
 862 0074 3B69     		ldr	r3, [r7, #16]
 863 0076 7A68     		ldr	r2, [r7, #4]
 864 0078 41F82320 		str	r2, [r1, r3, lsl #2]
 108:FT_Esd_Framework/FT_Esd_Dl.c **** 				Ft_Esd_BitmapHandleGpuHandle[i] = bitmapInfo->GpuHandle;
 865              		.loc 3 108 0
 866 007c 2249     		ldr	r1, .L53+4
 867 007e 3B69     		ldr	r3, [r7, #16]
 868 0080 7A68     		ldr	r2, [r7, #4]
 869 0082 9269     		ldr	r2, [r2, #24]
 870 0084 41F82320 		str	r2, [r1, r3, lsl #2]
 109:FT_Esd_Framework/FT_Esd_Dl.c **** 				break;
 871              		.loc 3 109 0
 872 0088 05E0     		b	.L49
 873              	.L48:
 101:FT_Esd_Framework/FT_Esd_Dl.c **** 		{
 874              		.loc 3 101 0 discriminator 2
 875 008a 3B69     		ldr	r3, [r7, #16]
 876 008c 0133     		adds	r3, r3, #1
 877 008e 3B61     		str	r3, [r7, #16]
 878              	.L47:
 101:FT_Esd_Framework/FT_Esd_Dl.c **** 		{
 879              		.loc 3 101 0 is_stmt 0 discriminator 1
 880 0090 3B69     		ldr	r3, [r7, #16]
 881 0092 0E2B     		cmp	r3, #14
 882 0094 E5D9     		bls	.L50
 883              	.L49:
 884              	.LBE4:
 110:FT_Esd_Framework/FT_Esd_Dl.c **** 			}
 111:FT_Esd_Framework/FT_Esd_Dl.c **** 		}
 112:FT_Esd_Framework/FT_Esd_Dl.c **** 		
 113:FT_Esd_Framework/FT_Esd_Dl.c **** 		// printf("Use handle %i, addr %i, gpu alloc %i, %i, file %s\n",
 114:FT_Esd_Framework/FT_Esd_Dl.c **** 		// 	(int)handle, (int)addr, (int)bitmapInfo->GpuHandle.Id, (int)bitmapInfo->GpuHandle.Seq,
 115:FT_Esd_Framework/FT_Esd_Dl.c **** 		// 	bitmapInfo->File ? bitmapInfo->File : "");
 116:FT_Esd_Framework/FT_Esd_Dl.c **** 
 117:FT_Esd_Framework/FT_Esd_Dl.c **** 		bitmapInfo->BitmapHandle = handle;
 885              		.loc 3 117 0 is_stmt 1
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s 			page 24


 886 0096 7B68     		ldr	r3, [r7, #4]
 887 0098 7A69     		ldr	r2, [r7, #20]
 888 009a DA61     		str	r2, [r3, #28]
 889              	.L46:
 118:FT_Esd_Framework/FT_Esd_Dl.c **** 		
 119:FT_Esd_Framework/FT_Esd_Dl.c **** 		// Setup the handle
 120:FT_Esd_Framework/FT_Esd_Dl.c **** 		// Ft_Esd_Dl_BITMAP_HANDLE(handle);
 121:FT_Esd_Framework/FT_Esd_Dl.c **** 		// Ft_Gpu_CoCmd_SetBitmap(Ft_Esd_Host, addr, bitmapInfo->Format, bitmapInfo->Width, bitmapInfo->H
 122:FT_Esd_Framework/FT_Esd_Dl.c **** 	}
 123:FT_Esd_Framework/FT_Esd_Dl.c **** 
 124:FT_Esd_Framework/FT_Esd_Dl.c **** 	// TEMPORARY WORKAROUND: SetBitmap not correctly being applied some frames... Need to check!
 125:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Esd_Dl_BITMAP_HANDLE(handle);
 890              		.loc 3 125 0
 891 009c 7B69     		ldr	r3, [r7, #20]
 892 009e DBB2     		uxtb	r3, r3
 893 00a0 1846     		mov	r0, r3
 894 00a2 FFF7FEFF 		bl	Ft_Esd_Dl_BITMAP_HANDLE
 126:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Gpu_CoCmd_SetBitmap(Ft_Esd_Host, addr, bitmapInfo->Format, bitmapInfo->Width, bitmapInfo->Heigh
 895              		.loc 3 126 0
 896 00a6 1A4B     		ldr	r3, .L53+12
 897 00a8 1868     		ldr	r0, [r3]
 898 00aa 7B68     		ldr	r3, [r7, #4]
 899 00ac DB68     		ldr	r3, [r3, #12]
 900 00ae 9AB2     		uxth	r2, r3
 901 00b0 7B68     		ldr	r3, [r7, #4]
 902 00b2 1B68     		ldr	r3, [r3]
 903 00b4 99B2     		uxth	r1, r3
 904 00b6 7B68     		ldr	r3, [r7, #4]
 905 00b8 5B68     		ldr	r3, [r3, #4]
 906 00ba 9BB2     		uxth	r3, r3
 907 00bc 0093     		str	r3, [sp]
 908 00be 0B46     		mov	r3, r1
 909 00c0 F968     		ldr	r1, [r7, #12]
 910 00c2 FFF7FEFF 		bl	Ft_Gpu_CoCmd_SetBitmap
 127:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Esd_BitmapHandleResized[handle] = 0;
 911              		.loc 3 127 0
 912 00c6 134A     		ldr	r2, .L53+16
 913 00c8 7B69     		ldr	r3, [r7, #20]
 914 00ca 1344     		add	r3, r3, r2
 915 00cc 0022     		movs	r2, #0
 916 00ce 1A70     		strb	r2, [r3]
 128:FT_Esd_Framework/FT_Esd_Dl.c **** 
 129:FT_Esd_Framework/FT_Esd_Dl.c **** 	if (handle < FT_ESD_BITMAPHANDLE_NB) // When valid and not using scratch handle
 917              		.loc 3 129 0
 918 00d0 7B69     		ldr	r3, [r7, #20]
 919 00d2 0E2B     		cmp	r3, #14
 920 00d4 04D8     		bhi	.L51
 130:FT_Esd_Framework/FT_Esd_Dl.c **** 	{
 131:FT_Esd_Framework/FT_Esd_Dl.c **** 		Ft_Esd_BitmapHandleUse[handle] = 2; // In use
 921              		.loc 3 131 0
 922 00d6 0D4A     		ldr	r2, .L53+8
 923 00d8 7B69     		ldr	r3, [r7, #20]
 924 00da 1344     		add	r3, r3, r2
 925 00dc 0222     		movs	r2, #2
 926 00de 1A70     		strb	r2, [r3]
 927              	.L51:
 132:FT_Esd_Framework/FT_Esd_Dl.c **** 	}
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s 			page 25


 133:FT_Esd_Framework/FT_Esd_Dl.c **** 
 134:FT_Esd_Framework/FT_Esd_Dl.c **** 	// Use palette if available
 135:FT_Esd_Framework/FT_Esd_Dl.c **** 	ft_uint32_t paletteAddr = Ft_Esd_LoadPalette(bitmapInfo);
 928              		.loc 3 135 0
 929 00e0 7868     		ldr	r0, [r7, #4]
 930 00e2 FFF7FEFF 		bl	Ft_Esd_LoadPalette
 931 00e6 B860     		str	r0, [r7, #8]
 136:FT_Esd_Framework/FT_Esd_Dl.c **** 	if (paletteAddr != ~0)
 932              		.loc 3 136 0
 933 00e8 BB68     		ldr	r3, [r7, #8]
 934 00ea B3F1FF3F 		cmp	r3, #-1
 935 00ee 02D0     		beq	.L52
 137:FT_Esd_Framework/FT_Esd_Dl.c **** 	{
 138:FT_Esd_Framework/FT_Esd_Dl.c **** 		Ft_Esd_Dl_PALETTE_SOURCE(paletteAddr);
 936              		.loc 3 138 0
 937 00f0 B868     		ldr	r0, [r7, #8]
 938 00f2 FFF7FEFF 		bl	Ft_Esd_Dl_PALETTE_SOURCE
 939              	.L52:
 139:FT_Esd_Framework/FT_Esd_Dl.c **** 	}
 140:FT_Esd_Framework/FT_Esd_Dl.c **** 
 141:FT_Esd_Framework/FT_Esd_Dl.c **** 	return handle;
 940              		.loc 3 141 0
 941 00f6 7B69     		ldr	r3, [r7, #20]
 942 00f8 DBB2     		uxtb	r3, r3
 943              	.L44:
 142:FT_Esd_Framework/FT_Esd_Dl.c **** }
 944              		.loc 3 142 0
 945 00fa 1846     		mov	r0, r3
 946 00fc 1837     		adds	r7, r7, #24
 947              	.LCFI54:
 948              		.cfi_def_cfa_offset 8
 949 00fe BD46     		mov	sp, r7
 950              	.LCFI55:
 951              		.cfi_def_cfa_register 13
 952              		@ sp needed
 953 0100 80BD     		pop	{r7, pc}
 954              	.L54:
 955 0102 00BF     		.align	2
 956              	.L53:
 957 0104 00000000 		.word	Ft_Esd_BitmapHandleInfo
 958 0108 00000000 		.word	Ft_Esd_BitmapHandleGpuHandle
 959 010c 00000000 		.word	Ft_Esd_BitmapHandleUse
 960 0110 00000000 		.word	Ft_Esd_Host
 961 0114 00000000 		.word	Ft_Esd_BitmapHandleResized
 962              		.cfi_endproc
 963              	.LFE24:
 965              		.section	.text.Ft_Esd_Dl_Bitmap_WidthHeight,"ax",%progbits
 966              		.align	1
 967              		.global	Ft_Esd_Dl_Bitmap_WidthHeight
 968              		.syntax unified
 969              		.thumb
 970              		.thumb_func
 971              		.fpu fpv5-sp-d16
 973              	Ft_Esd_Dl_Bitmap_WidthHeight:
 974              	.LFB25:
 143:FT_Esd_Framework/FT_Esd_Dl.c **** 
 144:FT_Esd_Framework/FT_Esd_Dl.c **** void Ft_Esd_Dl_Bitmap_WidthHeight(ft_uint8_t handle, ft_uint16_t width, ft_uint16_t height)
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s 			page 26


 145:FT_Esd_Framework/FT_Esd_Dl.c **** {
 975              		.loc 3 145 0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 8
 978              		@ frame_needed = 1, uses_anonymous_args = 0
 979 0000 80B5     		push	{r7, lr}
 980              	.LCFI56:
 981              		.cfi_def_cfa_offset 8
 982              		.cfi_offset 7, -8
 983              		.cfi_offset 14, -4
 984 0002 82B0     		sub	sp, sp, #8
 985              	.LCFI57:
 986              		.cfi_def_cfa_offset 16
 987 0004 00AF     		add	r7, sp, #0
 988              	.LCFI58:
 989              		.cfi_def_cfa_register 7
 990 0006 0346     		mov	r3, r0
 991 0008 FB71     		strb	r3, [r7, #7]
 992 000a 0B46     		mov	r3, r1	@ movhi
 993 000c BB80     		strh	r3, [r7, #4]	@ movhi
 994 000e 1346     		mov	r3, r2	@ movhi
 995 0010 7B80     		strh	r3, [r7, #2]	@ movhi
 146:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Esd_Dl_BITMAP_HANDLE(handle);
 996              		.loc 3 146 0
 997 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 998 0014 1846     		mov	r0, r3
 999 0016 FFF7FEFF 		bl	Ft_Esd_Dl_BITMAP_HANDLE
 147:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, BITMAP_SIZE(NEAREST, BORDER, BORDER, width & 0x1ff, height & 0x1ff
 1000              		.loc 3 147 0
 1001 001a 154B     		ldr	r3, .L56
 1002 001c 1868     		ldr	r0, [r3]
 1003 001e BB88     		ldrh	r3, [r7, #4]
 1004 0020 5A02     		lsls	r2, r3, #9
 1005 0022 144B     		ldr	r3, .L56+4
 1006 0024 1340     		ands	r3, r3, r2
 1007 0026 7A88     		ldrh	r2, [r7, #2]
 1008 0028 C2F30802 		ubfx	r2, r2, #0, #9
 1009 002c 1343     		orrs	r3, r3, r2
 1010 002e 43F00063 		orr	r3, r3, #134217728
 1011 0032 1946     		mov	r1, r3
 1012 0034 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 148:FT_Esd_Framework/FT_Esd_Dl.c **** #ifdef FT_81X_ENABLE
 149:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, BITMAP_SIZE_H(width >> 9, height >> 9));
 1013              		.loc 3 149 0
 1014 0038 0D4B     		ldr	r3, .L56
 1015 003a 1868     		ldr	r0, [r3]
 1016 003c BB88     		ldrh	r3, [r7, #4]
 1017 003e 5B0A     		lsrs	r3, r3, #9
 1018 0040 9BB2     		uxth	r3, r3
 1019 0042 9B00     		lsls	r3, r3, #2
 1020 0044 03F00C02 		and	r2, r3, #12
 1021 0048 7B88     		ldrh	r3, [r7, #2]
 1022 004a 5B0A     		lsrs	r3, r3, #9
 1023 004c 9BB2     		uxth	r3, r3
 1024 004e 03F00303 		and	r3, r3, #3
 1025 0052 1343     		orrs	r3, r3, r2
 1026 0054 43F02453 		orr	r3, r3, #687865856
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s 			page 27


 1027 0058 1946     		mov	r1, r3
 1028 005a FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 150:FT_Esd_Framework/FT_Esd_Dl.c **** #endif
 151:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Esd_BitmapHandleResized[handle] = 1;
 1029              		.loc 3 151 0
 1030 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1031 0060 054A     		ldr	r2, .L56+8
 1032 0062 0121     		movs	r1, #1
 1033 0064 D154     		strb	r1, [r2, r3]
 152:FT_Esd_Framework/FT_Esd_Dl.c **** }
 1034              		.loc 3 152 0
 1035 0066 00BF     		nop
 1036 0068 0837     		adds	r7, r7, #8
 1037              	.LCFI59:
 1038              		.cfi_def_cfa_offset 8
 1039 006a BD46     		mov	sp, r7
 1040              	.LCFI60:
 1041              		.cfi_def_cfa_register 13
 1042              		@ sp needed
 1043 006c 80BD     		pop	{r7, pc}
 1044              	.L57:
 1045 006e 00BF     		.align	2
 1046              	.L56:
 1047 0070 00000000 		.word	Ft_Esd_Host
 1048 0074 00FE0300 		.word	261632
 1049 0078 00000000 		.word	Ft_Esd_BitmapHandleResized
 1050              		.cfi_endproc
 1051              	.LFE25:
 1053              		.section	.text.Ft_Esd_Dl_Bitmap_WidthHeight_BILINEAR,"ax",%progbits
 1054              		.align	1
 1055              		.global	Ft_Esd_Dl_Bitmap_WidthHeight_BILINEAR
 1056              		.syntax unified
 1057              		.thumb
 1058              		.thumb_func
 1059              		.fpu fpv5-sp-d16
 1061              	Ft_Esd_Dl_Bitmap_WidthHeight_BILINEAR:
 1062              	.LFB26:
 153:FT_Esd_Framework/FT_Esd_Dl.c **** 
 154:FT_Esd_Framework/FT_Esd_Dl.c **** void Ft_Esd_Dl_Bitmap_WidthHeight_BILINEAR(ft_uint8_t handle, ft_uint16_t width, ft_uint16_t height
 155:FT_Esd_Framework/FT_Esd_Dl.c **** {
 1063              		.loc 3 155 0
 1064              		.cfi_startproc
 1065              		@ args = 0, pretend = 0, frame = 8
 1066              		@ frame_needed = 1, uses_anonymous_args = 0
 1067 0000 80B5     		push	{r7, lr}
 1068              	.LCFI61:
 1069              		.cfi_def_cfa_offset 8
 1070              		.cfi_offset 7, -8
 1071              		.cfi_offset 14, -4
 1072 0002 82B0     		sub	sp, sp, #8
 1073              	.LCFI62:
 1074              		.cfi_def_cfa_offset 16
 1075 0004 00AF     		add	r7, sp, #0
 1076              	.LCFI63:
 1077              		.cfi_def_cfa_register 7
 1078 0006 0346     		mov	r3, r0
 1079 0008 FB71     		strb	r3, [r7, #7]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s 			page 28


 1080 000a 0B46     		mov	r3, r1	@ movhi
 1081 000c BB80     		strh	r3, [r7, #4]	@ movhi
 1082 000e 1346     		mov	r3, r2	@ movhi
 1083 0010 7B80     		strh	r3, [r7, #2]	@ movhi
 156:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Esd_Dl_BITMAP_HANDLE(handle);
 1084              		.loc 3 156 0
 1085 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1086 0014 1846     		mov	r0, r3
 1087 0016 FFF7FEFF 		bl	Ft_Esd_Dl_BITMAP_HANDLE
 157:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, BITMAP_SIZE(BILINEAR, BORDER, BORDER, width & 0x1ff, height & 0x1f
 1088              		.loc 3 157 0
 1089 001a 154B     		ldr	r3, .L59
 1090 001c 1868     		ldr	r0, [r3]
 1091 001e BB88     		ldrh	r3, [r7, #4]
 1092 0020 5A02     		lsls	r2, r3, #9
 1093 0022 144B     		ldr	r3, .L59+4
 1094 0024 1340     		ands	r3, r3, r2
 1095 0026 7A88     		ldrh	r2, [r7, #2]
 1096 0028 C2F30802 		ubfx	r2, r2, #0, #9
 1097 002c 1343     		orrs	r3, r3, r2
 1098 002e 43F00163 		orr	r3, r3, #135266304
 1099 0032 1946     		mov	r1, r3
 1100 0034 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 158:FT_Esd_Framework/FT_Esd_Dl.c **** #ifdef FT_81X_ENABLE
 159:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, BITMAP_SIZE_H(width >> 9, height >> 9));
 1101              		.loc 3 159 0
 1102 0038 0D4B     		ldr	r3, .L59
 1103 003a 1868     		ldr	r0, [r3]
 1104 003c BB88     		ldrh	r3, [r7, #4]
 1105 003e 5B0A     		lsrs	r3, r3, #9
 1106 0040 9BB2     		uxth	r3, r3
 1107 0042 9B00     		lsls	r3, r3, #2
 1108 0044 03F00C02 		and	r2, r3, #12
 1109 0048 7B88     		ldrh	r3, [r7, #2]
 1110 004a 5B0A     		lsrs	r3, r3, #9
 1111 004c 9BB2     		uxth	r3, r3
 1112 004e 03F00303 		and	r3, r3, #3
 1113 0052 1343     		orrs	r3, r3, r2
 1114 0054 43F02453 		orr	r3, r3, #687865856
 1115 0058 1946     		mov	r1, r3
 1116 005a FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 160:FT_Esd_Framework/FT_Esd_Dl.c **** #endif
 161:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Esd_BitmapHandleResized[handle] = 1;
 1117              		.loc 3 161 0
 1118 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1119 0060 054A     		ldr	r2, .L59+8
 1120 0062 0121     		movs	r1, #1
 1121 0064 D154     		strb	r1, [r2, r3]
 162:FT_Esd_Framework/FT_Esd_Dl.c **** }
 1122              		.loc 3 162 0
 1123 0066 00BF     		nop
 1124 0068 0837     		adds	r7, r7, #8
 1125              	.LCFI64:
 1126              		.cfi_def_cfa_offset 8
 1127 006a BD46     		mov	sp, r7
 1128              	.LCFI65:
 1129              		.cfi_def_cfa_register 13
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s 			page 29


 1130              		@ sp needed
 1131 006c 80BD     		pop	{r7, pc}
 1132              	.L60:
 1133 006e 00BF     		.align	2
 1134              	.L59:
 1135 0070 00000000 		.word	Ft_Esd_Host
 1136 0074 00FE0300 		.word	261632
 1137 0078 00000000 		.word	Ft_Esd_BitmapHandleResized
 1138              		.cfi_endproc
 1139              	.LFE26:
 1141              		.section	.text.Ft_Esd_Dl_Bitmap_WidthHeightReset,"ax",%progbits
 1142              		.align	1
 1143              		.global	Ft_Esd_Dl_Bitmap_WidthHeightReset
 1144              		.syntax unified
 1145              		.thumb
 1146              		.thumb_func
 1147              		.fpu fpv5-sp-d16
 1149              	Ft_Esd_Dl_Bitmap_WidthHeightReset:
 1150              	.LFB27:
 163:FT_Esd_Framework/FT_Esd_Dl.c **** 
 164:FT_Esd_Framework/FT_Esd_Dl.c **** void Ft_Esd_Dl_Bitmap_WidthHeightReset(ft_uint8_t handle)
 165:FT_Esd_Framework/FT_Esd_Dl.c **** {
 1151              		.loc 3 165 0
 1152              		.cfi_startproc
 1153              		@ args = 0, pretend = 0, frame = 16
 1154              		@ frame_needed = 1, uses_anonymous_args = 0
 1155 0000 80B5     		push	{r7, lr}
 1156              	.LCFI66:
 1157              		.cfi_def_cfa_offset 8
 1158              		.cfi_offset 7, -8
 1159              		.cfi_offset 14, -4
 1160 0002 84B0     		sub	sp, sp, #16
 1161              	.LCFI67:
 1162              		.cfi_def_cfa_offset 24
 1163 0004 00AF     		add	r7, sp, #0
 1164              	.LCFI68:
 1165              		.cfi_def_cfa_register 7
 1166 0006 0346     		mov	r3, r0
 1167 0008 FB71     		strb	r3, [r7, #7]
 166:FT_Esd_Framework/FT_Esd_Dl.c **** 	if (Ft_Esd_BitmapHandleResized[handle])
 1168              		.loc 3 166 0
 1169 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1170 000c 0D4A     		ldr	r2, .L64
 1171 000e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1172 0010 002B     		cmp	r3, #0
 1173 0012 12D0     		beq	.L63
 1174              	.LBB5:
 167:FT_Esd_Framework/FT_Esd_Dl.c **** 	{
 168:FT_Esd_Framework/FT_Esd_Dl.c **** 		Ft_Esd_BitmapInfo *bitmapInfo = Ft_Esd_BitmapHandleInfo[handle];
 1175              		.loc 3 168 0
 1176 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1177 0016 0C4A     		ldr	r2, .L64+4
 1178 0018 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1179 001c FB60     		str	r3, [r7, #12]
 169:FT_Esd_Framework/FT_Esd_Dl.c **** 		Ft_Esd_Dl_Bitmap_WidthHeight(handle, bitmapInfo->Width, bitmapInfo->Height);
 1180              		.loc 3 169 0
 1181 001e FB68     		ldr	r3, [r7, #12]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s 			page 30


 1182 0020 1B68     		ldr	r3, [r3]
 1183 0022 99B2     		uxth	r1, r3
 1184 0024 FB68     		ldr	r3, [r7, #12]
 1185 0026 5B68     		ldr	r3, [r3, #4]
 1186 0028 9AB2     		uxth	r2, r3
 1187 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1188 002c 1846     		mov	r0, r3
 1189 002e FFF7FEFF 		bl	Ft_Esd_Dl_Bitmap_WidthHeight
 170:FT_Esd_Framework/FT_Esd_Dl.c **** 		Ft_Esd_BitmapHandleResized[handle] = 0;
 1190              		.loc 3 170 0
 1191 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1192 0034 034A     		ldr	r2, .L64
 1193 0036 0021     		movs	r1, #0
 1194 0038 D154     		strb	r1, [r2, r3]
 1195              	.L63:
 1196              	.LBE5:
 171:FT_Esd_Framework/FT_Esd_Dl.c **** 	}
 172:FT_Esd_Framework/FT_Esd_Dl.c **** }
 1197              		.loc 3 172 0
 1198 003a 00BF     		nop
 1199 003c 1037     		adds	r7, r7, #16
 1200              	.LCFI69:
 1201              		.cfi_def_cfa_offset 8
 1202 003e BD46     		mov	sp, r7
 1203              	.LCFI70:
 1204              		.cfi_def_cfa_register 13
 1205              		@ sp needed
 1206 0040 80BD     		pop	{r7, pc}
 1207              	.L65:
 1208 0042 00BF     		.align	2
 1209              	.L64:
 1210 0044 00000000 		.word	Ft_Esd_BitmapHandleResized
 1211 0048 00000000 		.word	Ft_Esd_BitmapHandleInfo
 1212              		.cfi_endproc
 1213              	.LFE27:
 1215              		.text
 1216              	.Letext0:
 1217              		.file 4 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/machine/_default_types
 1218              		.file 5 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/lock.h"
 1219              		.file 6 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_types.h"
 1220              		.file 7 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 1221              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_stdint.h"
 1222              		.file 9 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/unistd.h"
 1223              		.file 10 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/reent.h"
 1224              		.file 11 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/stdlib.h"
 1225              		.file 12 "FT_Eve_Hal/FT_DataTypes.h"
 1226              		.file 13 "FT_Eve_Hal/FT_Gpu_Hal.h"
 1227              		.file 14 "FT_Esd_Framework/Ft_Esd_GpuAlloc.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s 			page 31


DEFINED SYMBOLS
                            *ABS*:0000000000000000 FT_Esd_Dl.c
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:18     .text.Ft_Esd_BitmapCell_GetInfo:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:24     .text.Ft_Esd_BitmapCell_GetInfo:0000000000000000 Ft_Esd_BitmapCell_GetInfo
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:73     .text.Ft_Esd_Dl_BITMAP_HANDLE:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:79     .text.Ft_Esd_Dl_BITMAP_HANDLE:0000000000000000 Ft_Esd_Dl_BITMAP_HANDLE
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:142    .text.Ft_Esd_Dl_BITMAP_HANDLE:000000000000004c $d
                            *COM*:0000000000000001 Ft_Esd_GpuState_I
                            *COM*:0000000000000050 Ft_Esd_GpuState
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:149    .text.Ft_Esd_Dl_PALETTE_SOURCE:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:155    .text.Ft_Esd_Dl_PALETTE_SOURCE:0000000000000000 Ft_Esd_Dl_PALETTE_SOURCE
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:214    .text.Ft_Esd_Dl_PALETTE_SOURCE:0000000000000048 $d
                            *COM*:0000000000000004 Ft_Esd_CoFgColor
                            *COM*:0000000000000004 Ft_Esd_CoBgColor
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:229    .bss.Ft_Esd_BitmapHandleInfo:0000000000000000 Ft_Esd_BitmapHandleInfo
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:226    .bss.Ft_Esd_BitmapHandleInfo:0000000000000000 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:236    .bss.Ft_Esd_BitmapHandleGpuHandle:0000000000000000 Ft_Esd_BitmapHandleGpuHandle
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:233    .bss.Ft_Esd_BitmapHandleGpuHandle:0000000000000000 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:243    .bss.Ft_Esd_BitmapHandleUse:0000000000000000 Ft_Esd_BitmapHandleUse
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:240    .bss.Ft_Esd_BitmapHandleUse:0000000000000000 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:250    .bss.Ft_Esd_BitmapHandleResized:0000000000000000 Ft_Esd_BitmapHandleResized
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:247    .bss.Ft_Esd_BitmapHandleResized:0000000000000000 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:253    .text.Ft_Esd_ResetGpuState:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:260    .text.Ft_Esd_ResetGpuState:0000000000000000 Ft_Esd_ResetGpuState
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:360    .text.Ft_Esd_ResetGpuState:000000000000007c $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:367    .text.Ft_Esd_ResetCoState:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:374    .text.Ft_Esd_ResetCoState:0000000000000000 Ft_Esd_ResetCoState
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:410    .text.Ft_Esd_ResetCoState:0000000000000020 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:416    .text.Ft_Esd_BitmapHandle_GetTotalUsed:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:423    .text.Ft_Esd_BitmapHandle_GetTotalUsed:0000000000000000 Ft_Esd_BitmapHandle_GetTotalUsed
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:490    .text.Ft_Esd_BitmapHandle_GetTotalUsed:000000000000003c $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:495    .text.Ft_Esd_BitmapHandle_GetTotal:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:502    .text.Ft_Esd_BitmapHandle_GetTotal:0000000000000000 Ft_Esd_BitmapHandle_GetTotal
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:533    .text.FT_Esd_Render_Rect:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:540    .text.FT_Esd_Render_Rect:0000000000000000 FT_Esd_Render_Rect
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:623    .text.FT_Esd_Render_Rect:0000000000000084 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:631    .text.Ft_Esd_Cmd_Button:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:638    .text.Ft_Esd_Cmd_Button:0000000000000000 Ft_Esd_Cmd_Button
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:697    .text.Ft_Esd_Cmd_Button:0000000000000050 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:702    .text.Ft_Esd_Cmd_Number:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:709    .text.Ft_Esd_Cmd_Number:0000000000000000 Ft_Esd_Cmd_Number
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:764    .text.Ft_Esd_Cmd_Number:0000000000000044 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:769    .text.Ft_Esd_Dl_Bitmap_Setup:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:776    .text.Ft_Esd_Dl_Bitmap_Setup:0000000000000000 Ft_Esd_Dl_Bitmap_Setup
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:957    .text.Ft_Esd_Dl_Bitmap_Setup:0000000000000104 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:966    .text.Ft_Esd_Dl_Bitmap_WidthHeight:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:973    .text.Ft_Esd_Dl_Bitmap_WidthHeight:0000000000000000 Ft_Esd_Dl_Bitmap_WidthHeight
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:1047   .text.Ft_Esd_Dl_Bitmap_WidthHeight:0000000000000070 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:1054   .text.Ft_Esd_Dl_Bitmap_WidthHeight_BILINEAR:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:1061   .text.Ft_Esd_Dl_Bitmap_WidthHeight_BILINEAR:0000000000000000 Ft_Esd_Dl_Bitmap_WidthHeight_BILINEAR
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:1135   .text.Ft_Esd_Dl_Bitmap_WidthHeight_BILINEAR:0000000000000070 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:1142   .text.Ft_Esd_Dl_Bitmap_WidthHeightReset:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:1149   .text.Ft_Esd_Dl_Bitmap_WidthHeightReset:0000000000000000 Ft_Esd_Dl_Bitmap_WidthHeightReset
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s:1210   .text.Ft_Esd_Dl_Bitmap_WidthHeightReset:0000000000000044 $d

UNDEFINED SYMBOLS
Ft_Gpu_Hal_WrCmd32
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccSjX5cg.s 			page 32


Ft_Esd_Host
Ft_Gpu_CoCmd_Button
Ft_Gpu_CoCmd_Number
Ft_Esd_LoadBitmap
Ft_Gpu_CoCmd_SetBitmap
Ft_Esd_LoadPalette
