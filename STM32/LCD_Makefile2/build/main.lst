ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	hspi1,100,4
  18              		.comm	hspi2,100,4
  19              		.comm	huart4,112,4
  20              		.comm	huart6,112,4
  21              		.section	.rodata
  22              		.align	2
  23              	.LC0:
  24 0000 68656C6C 		.ascii	"hello %d\000"
  24      6F202564 
  24      00
  25              		.section	.text.main,"ax",%progbits
  26              		.align	1
  27              		.global	main
  28              		.syntax unified
  29              		.thumb
  30              		.thumb_func
  31              		.fpu fpv5-sp-d16
  33              	main:
  34              	.LFB138:
  35              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s 			page 2


  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* USER CODE END Header */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  42:Src/main.c    **** #include "main.h"
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  45:Src/main.c    **** /* USER CODE BEGIN Includes */
  46:Src/main.c    **** #include "FT_Platform.h"
  47:Src/main.c    **** #include "Ft_Esd.h"
  48:Src/main.c    **** #include "Ft_Esd_GpuAlloc.h"
  49:Src/main.c    **** #include <stdio.h>
  50:Src/main.c    **** /* USER CODE END Includes */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  53:Src/main.c    **** /* USER CODE BEGIN PTD */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE END PTD */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  58:Src/main.c    **** /* USER CODE BEGIN PD */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE END PD */
  61:Src/main.c    **** 
  62:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  63:Src/main.c    **** /* USER CODE BEGIN PM */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE END PM */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  68:Src/main.c    **** 
  69:Src/main.c    **** SPI_HandleTypeDef hspi1;
  70:Src/main.c    **** SPI_HandleTypeDef hspi2;
  71:Src/main.c    **** 
  72:Src/main.c    **** UART_HandleTypeDef huart4;
  73:Src/main.c    **** UART_HandleTypeDef huart6;
  74:Src/main.c    **** 
  75:Src/main.c    **** /* USER CODE BEGIN PV */
  76:Src/main.c    **** 
  77:Src/main.c    **** /* USER CODE END PV */
  78:Src/main.c    **** 
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s 			page 3


  79:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  80:Src/main.c    **** void SystemClock_Config(void);
  81:Src/main.c    **** static void MX_GPIO_Init(void);
  82:Src/main.c    **** static void MX_SPI1_Init(void);
  83:Src/main.c    **** static void MX_SPI2_Init(void);
  84:Src/main.c    **** static void MX_UART4_Init(void);
  85:Src/main.c    **** static void MX_USART6_UART_Init(void);
  86:Src/main.c    **** /* USER CODE BEGIN PFP */
  87:Src/main.c    **** extern ft_void_t FT800_BootupConfig();
  88:Src/main.c    **** /* USER CODE END PFP */
  89:Src/main.c    **** 
  90:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  91:Src/main.c    **** /* USER CODE BEGIN 0 */
  92:Src/main.c    **** 
  93:Src/main.c    **** /* USER CODE END 0 */
  94:Src/main.c    **** 
  95:Src/main.c    **** /**
  96:Src/main.c    ****   * @brief  The application entry point.
  97:Src/main.c    ****   * @retval int
  98:Src/main.c    ****   */
  99:Src/main.c    **** int main(void)
 100:Src/main.c    **** {
  36              		.loc 1 100 0
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 0
  39              		@ frame_needed = 1, uses_anonymous_args = 0
  40 0000 80B5     		push	{r7, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 7, -8
  44              		.cfi_offset 14, -4
  45 0002 00AF     		add	r7, sp, #0
  46              	.LCFI1:
  47              		.cfi_def_cfa_register 7
 101:Src/main.c    ****   /* USER CODE BEGIN 1 */
 102:Src/main.c    **** 
 103:Src/main.c    ****   /* USER CODE END 1 */
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 108:Src/main.c    ****   HAL_Init();
  48              		.loc 1 108 0
  49 0004 FFF7FEFF 		bl	HAL_Init
 109:Src/main.c    **** 
 110:Src/main.c    ****   /* USER CODE BEGIN Init */
 111:Src/main.c    **** 
 112:Src/main.c    ****   /* USER CODE END Init */
 113:Src/main.c    **** 
 114:Src/main.c    ****   /* Configure the system clock */
 115:Src/main.c    ****   SystemClock_Config();
  50              		.loc 1 115 0
  51 0008 FFF7FEFF 		bl	SystemClock_Config
 116:Src/main.c    **** 
 117:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 118:Src/main.c    **** 
 119:Src/main.c    ****   /* USER CODE END SysInit */
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s 			page 4


 120:Src/main.c    **** 
 121:Src/main.c    ****   /* Initialize all configured peripherals */
 122:Src/main.c    ****   MX_GPIO_Init();
  52              		.loc 1 122 0
  53 000c FFF7FEFF 		bl	MX_GPIO_Init
 123:Src/main.c    ****   MX_SPI1_Init();
  54              		.loc 1 123 0
  55 0010 FFF7FEFF 		bl	MX_SPI1_Init
 124:Src/main.c    ****   MX_SPI2_Init();
  56              		.loc 1 124 0
  57 0014 FFF7FEFF 		bl	MX_SPI2_Init
 125:Src/main.c    ****   MX_UART4_Init();
  58              		.loc 1 125 0
  59 0018 FFF7FEFF 		bl	MX_UART4_Init
 126:Src/main.c    ****   MX_USART6_UART_Init();
  60              		.loc 1 126 0
  61 001c FFF7FEFF 		bl	MX_USART6_UART_Init
 127:Src/main.c    ****   /* USER CODE BEGIN 2 */
 128:Src/main.c    **** FT800_BootupConfig();
  62              		.loc 1 128 0
  63 0020 FFF7FEFF 		bl	FT800_BootupConfig
 129:Src/main.c    ****   my_printf("hello %d", 1);
  64              		.loc 1 129 0
  65 0024 0121     		movs	r1, #1
  66 0026 0248     		ldr	r0, .L3
  67 0028 FFF7FEFF 		bl	my_printf
  68              	.L2:
 130:Src/main.c    **** 
 131:Src/main.c    **** 
 132:Src/main.c    **** 
 133:Src/main.c    ****   /* USER CODE END 2 */
 134:Src/main.c    **** 
 135:Src/main.c    ****   /* Infinite loop */
 136:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 137:Src/main.c    ****   while (1)
  69              		.loc 1 137 0 discriminator 1
  70 002c FEE7     		b	.L2
  71              	.L4:
  72 002e 00BF     		.align	2
  73              	.L3:
  74 0030 00000000 		.word	.LC0
  75              		.cfi_endproc
  76              	.LFE138:
  78              		.section	.text.SystemClock_Config,"ax",%progbits
  79              		.align	1
  80              		.global	SystemClock_Config
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  84              		.fpu fpv5-sp-d16
  86              	SystemClock_Config:
  87              	.LFB139:
 138:Src/main.c    ****   {
 139:Src/main.c    ****     /* USER CODE END WHILE */
 140:Src/main.c    **** 
 141:Src/main.c    ****     /* USER CODE BEGIN 3 */
 142:Src/main.c    ****   }
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s 			page 5


 143:Src/main.c    ****   /* USER CODE END 3 */
 144:Src/main.c    **** }
 145:Src/main.c    **** 
 146:Src/main.c    **** /**
 147:Src/main.c    ****   * @brief System Clock Configuration
 148:Src/main.c    ****   * @retval None
 149:Src/main.c    ****   */
 150:Src/main.c    **** void SystemClock_Config(void)
 151:Src/main.c    **** {
  88              		.loc 1 151 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 208
  91              		@ frame_needed = 1, uses_anonymous_args = 0
  92 0000 80B5     		push	{r7, lr}
  93              	.LCFI2:
  94              		.cfi_def_cfa_offset 8
  95              		.cfi_offset 7, -8
  96              		.cfi_offset 14, -4
  97 0002 B4B0     		sub	sp, sp, #208
  98              	.LCFI3:
  99              		.cfi_def_cfa_offset 216
 100 0004 00AF     		add	r7, sp, #0
 101              	.LCFI4:
 102              		.cfi_def_cfa_register 7
 152:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 103              		.loc 1 152 0
 104 0006 07F1A003 		add	r3, r7, #160
 105 000a 3022     		movs	r2, #48
 106 000c 0021     		movs	r1, #0
 107 000e 1846     		mov	r0, r3
 108 0010 FFF7FEFF 		bl	memset
 153:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 109              		.loc 1 153 0
 110 0014 07F18C03 		add	r3, r7, #140
 111 0018 0022     		movs	r2, #0
 112 001a 1A60     		str	r2, [r3]
 113 001c 5A60     		str	r2, [r3, #4]
 114 001e 9A60     		str	r2, [r3, #8]
 115 0020 DA60     		str	r2, [r3, #12]
 116 0022 1A61     		str	r2, [r3, #16]
 154:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 117              		.loc 1 154 0
 118 0024 07F10803 		add	r3, r7, #8
 119 0028 8422     		movs	r2, #132
 120 002a 0021     		movs	r1, #0
 121 002c 1846     		mov	r0, r3
 122 002e FFF7FEFF 		bl	memset
 123              	.LBB2:
 155:Src/main.c    **** 
 156:Src/main.c    ****   /**Configure the main internal regulator output voltage
 157:Src/main.c    ****   */
 158:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 124              		.loc 1 158 0
 125 0032 2F4B     		ldr	r3, .L10
 126 0034 1B6C     		ldr	r3, [r3, #64]
 127 0036 2E4A     		ldr	r2, .L10
 128 0038 43F08053 		orr	r3, r3, #268435456
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s 			page 6


 129 003c 1364     		str	r3, [r2, #64]
 130 003e 2C4B     		ldr	r3, .L10
 131 0040 1B6C     		ldr	r3, [r3, #64]
 132 0042 03F08053 		and	r3, r3, #268435456
 133 0046 7B60     		str	r3, [r7, #4]
 134 0048 7B68     		ldr	r3, [r7, #4]
 135              	.LBE2:
 136              	.LBB3:
 159:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 137              		.loc 1 159 0
 138 004a 2A4B     		ldr	r3, .L10+4
 139 004c 1B68     		ldr	r3, [r3]
 140 004e 23F44043 		bic	r3, r3, #49152
 141 0052 284A     		ldr	r2, .L10+4
 142 0054 43F48043 		orr	r3, r3, #16384
 143 0058 1360     		str	r3, [r2]
 144 005a 264B     		ldr	r3, .L10+4
 145 005c 1B68     		ldr	r3, [r3]
 146 005e 03F44043 		and	r3, r3, #49152
 147 0062 3B60     		str	r3, [r7]
 148 0064 3B68     		ldr	r3, [r7]
 149              	.LBE3:
 160:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks
 161:Src/main.c    ****   */
 162:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 150              		.loc 1 162 0
 151 0066 0223     		movs	r3, #2
 152 0068 C7F8A030 		str	r3, [r7, #160]
 163:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 153              		.loc 1 163 0
 154 006c 0123     		movs	r3, #1
 155 006e C7F8AC30 		str	r3, [r7, #172]
 164:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 156              		.loc 1 164 0
 157 0072 1023     		movs	r3, #16
 158 0074 C7F8B030 		str	r3, [r7, #176]
 165:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 159              		.loc 1 165 0
 160 0078 0023     		movs	r3, #0
 161 007a C7F8B830 		str	r3, [r7, #184]
 166:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 162              		.loc 1 166 0
 163 007e 07F1A003 		add	r3, r7, #160
 164 0082 1846     		mov	r0, r3
 165 0084 FFF7FEFF 		bl	HAL_RCC_OscConfig
 166 0088 0346     		mov	r3, r0
 167 008a 002B     		cmp	r3, #0
 168 008c 01D0     		beq	.L6
 167:Src/main.c    ****   {
 168:Src/main.c    ****     Error_Handler();
 169              		.loc 1 168 0
 170 008e FFF7FEFF 		bl	Error_Handler
 171              	.L6:
 169:Src/main.c    ****   }
 170:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks
 171:Src/main.c    ****   */
 172:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s 			page 7


 172              		.loc 1 172 0
 173 0092 0F23     		movs	r3, #15
 174 0094 C7F88C30 		str	r3, [r7, #140]
 173:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 174:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 175              		.loc 1 174 0
 176 0098 0023     		movs	r3, #0
 177 009a C7F89030 		str	r3, [r7, #144]
 175:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 178              		.loc 1 175 0
 179 009e 8023     		movs	r3, #128
 180 00a0 C7F89430 		str	r3, [r7, #148]
 176:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 181              		.loc 1 176 0
 182 00a4 0023     		movs	r3, #0
 183 00a6 C7F89830 		str	r3, [r7, #152]
 177:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 184              		.loc 1 177 0
 185 00aa 0023     		movs	r3, #0
 186 00ac C7F89C30 		str	r3, [r7, #156]
 178:Src/main.c    **** 
 179:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 187              		.loc 1 179 0
 188 00b0 07F18C03 		add	r3, r7, #140
 189 00b4 0021     		movs	r1, #0
 190 00b6 1846     		mov	r0, r3
 191 00b8 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 192 00bc 0346     		mov	r3, r0
 193 00be 002B     		cmp	r3, #0
 194 00c0 01D0     		beq	.L7
 180:Src/main.c    ****   {
 181:Src/main.c    ****     Error_Handler();
 195              		.loc 1 181 0
 196 00c2 FFF7FEFF 		bl	Error_Handler
 197              	.L7:
 182:Src/main.c    ****   }
 183:Src/main.c    ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART6|RCC_PERIPHCLK_UART4;
 198              		.loc 1 183 0
 199 00c6 4FF42063 		mov	r3, #2560
 200 00ca BB60     		str	r3, [r7, #8]
 184:Src/main.c    ****   PeriphClkInitStruct.Uart4ClockSelection = RCC_UART4CLKSOURCE_PCLK1;
 201              		.loc 1 184 0
 202 00cc 0023     		movs	r3, #0
 203 00ce BB65     		str	r3, [r7, #88]
 185:Src/main.c    ****   PeriphClkInitStruct.Usart6ClockSelection = RCC_USART6CLKSOURCE_PCLK2;
 204              		.loc 1 185 0
 205 00d0 0023     		movs	r3, #0
 206 00d2 3B66     		str	r3, [r7, #96]
 186:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 207              		.loc 1 186 0
 208 00d4 07F10803 		add	r3, r7, #8
 209 00d8 1846     		mov	r0, r3
 210 00da FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 211 00de 0346     		mov	r3, r0
 212 00e0 002B     		cmp	r3, #0
 213 00e2 01D0     		beq	.L9
 187:Src/main.c    ****   {
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s 			page 8


 188:Src/main.c    ****     Error_Handler();
 214              		.loc 1 188 0
 215 00e4 FFF7FEFF 		bl	Error_Handler
 216              	.L9:
 189:Src/main.c    ****   }
 190:Src/main.c    **** }
 217              		.loc 1 190 0
 218 00e8 00BF     		nop
 219 00ea D037     		adds	r7, r7, #208
 220              	.LCFI5:
 221              		.cfi_def_cfa_offset 8
 222 00ec BD46     		mov	sp, r7
 223              	.LCFI6:
 224              		.cfi_def_cfa_register 13
 225              		@ sp needed
 226 00ee 80BD     		pop	{r7, pc}
 227              	.L11:
 228              		.align	2
 229              	.L10:
 230 00f0 00380240 		.word	1073887232
 231 00f4 00700040 		.word	1073770496
 232              		.cfi_endproc
 233              	.LFE139:
 235              		.section	.text.MX_SPI1_Init,"ax",%progbits
 236              		.align	1
 237              		.syntax unified
 238              		.thumb
 239              		.thumb_func
 240              		.fpu fpv5-sp-d16
 242              	MX_SPI1_Init:
 243              	.LFB140:
 191:Src/main.c    **** 
 192:Src/main.c    **** /**
 193:Src/main.c    ****   * @brief SPI1 Initialization Function
 194:Src/main.c    ****   * @param None
 195:Src/main.c    ****   * @retval None
 196:Src/main.c    ****   */
 197:Src/main.c    **** static void MX_SPI1_Init(void)
 198:Src/main.c    **** {
 244              		.loc 1 198 0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 1, uses_anonymous_args = 0
 248 0000 80B5     		push	{r7, lr}
 249              	.LCFI7:
 250              		.cfi_def_cfa_offset 8
 251              		.cfi_offset 7, -8
 252              		.cfi_offset 14, -4
 253 0002 00AF     		add	r7, sp, #0
 254              	.LCFI8:
 255              		.cfi_def_cfa_register 7
 199:Src/main.c    **** 
 200:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 0 */
 201:Src/main.c    **** 
 202:Src/main.c    ****   /* USER CODE END SPI1_Init 0 */
 203:Src/main.c    **** 
 204:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 1 */
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s 			page 9


 205:Src/main.c    **** 
 206:Src/main.c    ****   /* USER CODE END SPI1_Init 1 */
 207:Src/main.c    ****   /* SPI1 parameter configuration*/
 208:Src/main.c    ****   hspi1.Instance = SPI1;
 256              		.loc 1 208 0
 257 0004 1B4B     		ldr	r3, .L15
 258 0006 1C4A     		ldr	r2, .L15+4
 259 0008 1A60     		str	r2, [r3]
 209:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 260              		.loc 1 209 0
 261 000a 1A4B     		ldr	r3, .L15
 262 000c 4FF48272 		mov	r2, #260
 263 0010 5A60     		str	r2, [r3, #4]
 210:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 264              		.loc 1 210 0
 265 0012 184B     		ldr	r3, .L15
 266 0014 0022     		movs	r2, #0
 267 0016 9A60     		str	r2, [r3, #8]
 211:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 268              		.loc 1 211 0
 269 0018 164B     		ldr	r3, .L15
 270 001a 4FF4E062 		mov	r2, #1792
 271 001e DA60     		str	r2, [r3, #12]
 212:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 272              		.loc 1 212 0
 273 0020 144B     		ldr	r3, .L15
 274 0022 0022     		movs	r2, #0
 275 0024 1A61     		str	r2, [r3, #16]
 213:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 276              		.loc 1 213 0
 277 0026 134B     		ldr	r3, .L15
 278 0028 0022     		movs	r2, #0
 279 002a 5A61     		str	r2, [r3, #20]
 214:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 280              		.loc 1 214 0
 281 002c 114B     		ldr	r3, .L15
 282 002e 4FF40072 		mov	r2, #512
 283 0032 9A61     		str	r2, [r3, #24]
 215:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 284              		.loc 1 215 0
 285 0034 0F4B     		ldr	r3, .L15
 286 0036 0022     		movs	r2, #0
 287 0038 DA61     		str	r2, [r3, #28]
 216:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 288              		.loc 1 216 0
 289 003a 0E4B     		ldr	r3, .L15
 290 003c 0022     		movs	r2, #0
 291 003e 1A62     		str	r2, [r3, #32]
 217:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 292              		.loc 1 217 0
 293 0040 0C4B     		ldr	r3, .L15
 294 0042 0022     		movs	r2, #0
 295 0044 5A62     		str	r2, [r3, #36]
 218:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 296              		.loc 1 218 0
 297 0046 0B4B     		ldr	r3, .L15
 298 0048 0022     		movs	r2, #0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s 			page 10


 299 004a 9A62     		str	r2, [r3, #40]
 219:Src/main.c    ****   hspi1.Init.CRCPolynomial = 7;
 300              		.loc 1 219 0
 301 004c 094B     		ldr	r3, .L15
 302 004e 0722     		movs	r2, #7
 303 0050 DA62     		str	r2, [r3, #44]
 220:Src/main.c    ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 304              		.loc 1 220 0
 305 0052 084B     		ldr	r3, .L15
 306 0054 0022     		movs	r2, #0
 307 0056 1A63     		str	r2, [r3, #48]
 221:Src/main.c    ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 308              		.loc 1 221 0
 309 0058 064B     		ldr	r3, .L15
 310 005a 0022     		movs	r2, #0
 311 005c 5A63     		str	r2, [r3, #52]
 222:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 312              		.loc 1 222 0
 313 005e 0548     		ldr	r0, .L15
 314 0060 FFF7FEFF 		bl	HAL_SPI_Init
 315 0064 0346     		mov	r3, r0
 316 0066 002B     		cmp	r3, #0
 317 0068 01D0     		beq	.L14
 223:Src/main.c    ****   {
 224:Src/main.c    ****     Error_Handler();
 318              		.loc 1 224 0
 319 006a FFF7FEFF 		bl	Error_Handler
 320              	.L14:
 225:Src/main.c    ****   }
 226:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 2 */
 227:Src/main.c    **** 
 228:Src/main.c    ****   /* USER CODE END SPI1_Init 2 */
 229:Src/main.c    **** 
 230:Src/main.c    **** }
 321              		.loc 1 230 0
 322 006e 00BF     		nop
 323 0070 80BD     		pop	{r7, pc}
 324              	.L16:
 325 0072 00BF     		.align	2
 326              	.L15:
 327 0074 00000000 		.word	hspi1
 328 0078 00300140 		.word	1073819648
 329              		.cfi_endproc
 330              	.LFE140:
 332              		.section	.text.MX_SPI2_Init,"ax",%progbits
 333              		.align	1
 334              		.syntax unified
 335              		.thumb
 336              		.thumb_func
 337              		.fpu fpv5-sp-d16
 339              	MX_SPI2_Init:
 340              	.LFB141:
 231:Src/main.c    **** 
 232:Src/main.c    **** /**
 233:Src/main.c    ****   * @brief SPI2 Initialization Function
 234:Src/main.c    ****   * @param None
 235:Src/main.c    ****   * @retval None
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s 			page 11


 236:Src/main.c    ****   */
 237:Src/main.c    **** static void MX_SPI2_Init(void)
 238:Src/main.c    **** {
 341              		.loc 1 238 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 1, uses_anonymous_args = 0
 345 0000 80B5     		push	{r7, lr}
 346              	.LCFI9:
 347              		.cfi_def_cfa_offset 8
 348              		.cfi_offset 7, -8
 349              		.cfi_offset 14, -4
 350 0002 00AF     		add	r7, sp, #0
 351              	.LCFI10:
 352              		.cfi_def_cfa_register 7
 239:Src/main.c    **** 
 240:Src/main.c    ****   /* USER CODE BEGIN SPI2_Init 0 */
 241:Src/main.c    **** 
 242:Src/main.c    ****   /* USER CODE END SPI2_Init 0 */
 243:Src/main.c    **** 
 244:Src/main.c    ****   /* USER CODE BEGIN SPI2_Init 1 */
 245:Src/main.c    **** 
 246:Src/main.c    ****   /* USER CODE END SPI2_Init 1 */
 247:Src/main.c    ****   /* SPI2 parameter configuration*/
 248:Src/main.c    ****   hspi2.Instance = SPI2;
 353              		.loc 1 248 0
 354 0004 1B4B     		ldr	r3, .L20
 355 0006 1C4A     		ldr	r2, .L20+4
 356 0008 1A60     		str	r2, [r3]
 249:Src/main.c    ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 357              		.loc 1 249 0
 358 000a 1A4B     		ldr	r3, .L20
 359 000c 4FF48272 		mov	r2, #260
 360 0010 5A60     		str	r2, [r3, #4]
 250:Src/main.c    ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 361              		.loc 1 250 0
 362 0012 184B     		ldr	r3, .L20
 363 0014 0022     		movs	r2, #0
 364 0016 9A60     		str	r2, [r3, #8]
 251:Src/main.c    ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 365              		.loc 1 251 0
 366 0018 164B     		ldr	r3, .L20
 367 001a 4FF4E062 		mov	r2, #1792
 368 001e DA60     		str	r2, [r3, #12]
 252:Src/main.c    ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 369              		.loc 1 252 0
 370 0020 144B     		ldr	r3, .L20
 371 0022 0022     		movs	r2, #0
 372 0024 1A61     		str	r2, [r3, #16]
 253:Src/main.c    ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 373              		.loc 1 253 0
 374 0026 134B     		ldr	r3, .L20
 375 0028 0022     		movs	r2, #0
 376 002a 5A61     		str	r2, [r3, #20]
 254:Src/main.c    ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 377              		.loc 1 254 0
 378 002c 114B     		ldr	r3, .L20
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s 			page 12


 379 002e 4FF40072 		mov	r2, #512
 380 0032 9A61     		str	r2, [r3, #24]
 255:Src/main.c    ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 381              		.loc 1 255 0
 382 0034 0F4B     		ldr	r3, .L20
 383 0036 0022     		movs	r2, #0
 384 0038 DA61     		str	r2, [r3, #28]
 256:Src/main.c    ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 385              		.loc 1 256 0
 386 003a 0E4B     		ldr	r3, .L20
 387 003c 0022     		movs	r2, #0
 388 003e 1A62     		str	r2, [r3, #32]
 257:Src/main.c    ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 389              		.loc 1 257 0
 390 0040 0C4B     		ldr	r3, .L20
 391 0042 0022     		movs	r2, #0
 392 0044 5A62     		str	r2, [r3, #36]
 258:Src/main.c    ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 393              		.loc 1 258 0
 394 0046 0B4B     		ldr	r3, .L20
 395 0048 0022     		movs	r2, #0
 396 004a 9A62     		str	r2, [r3, #40]
 259:Src/main.c    ****   hspi2.Init.CRCPolynomial = 7;
 397              		.loc 1 259 0
 398 004c 094B     		ldr	r3, .L20
 399 004e 0722     		movs	r2, #7
 400 0050 DA62     		str	r2, [r3, #44]
 260:Src/main.c    ****   hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 401              		.loc 1 260 0
 402 0052 084B     		ldr	r3, .L20
 403 0054 0022     		movs	r2, #0
 404 0056 1A63     		str	r2, [r3, #48]
 261:Src/main.c    ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 405              		.loc 1 261 0
 406 0058 064B     		ldr	r3, .L20
 407 005a 0822     		movs	r2, #8
 408 005c 5A63     		str	r2, [r3, #52]
 262:Src/main.c    ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 409              		.loc 1 262 0
 410 005e 0548     		ldr	r0, .L20
 411 0060 FFF7FEFF 		bl	HAL_SPI_Init
 412 0064 0346     		mov	r3, r0
 413 0066 002B     		cmp	r3, #0
 414 0068 01D0     		beq	.L19
 263:Src/main.c    ****   {
 264:Src/main.c    ****     Error_Handler();
 415              		.loc 1 264 0
 416 006a FFF7FEFF 		bl	Error_Handler
 417              	.L19:
 265:Src/main.c    ****   }
 266:Src/main.c    ****   /* USER CODE BEGIN SPI2_Init 2 */
 267:Src/main.c    **** 
 268:Src/main.c    ****   /* USER CODE END SPI2_Init 2 */
 269:Src/main.c    **** 
 270:Src/main.c    **** }
 418              		.loc 1 270 0
 419 006e 00BF     		nop
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s 			page 13


 420 0070 80BD     		pop	{r7, pc}
 421              	.L21:
 422 0072 00BF     		.align	2
 423              	.L20:
 424 0074 00000000 		.word	hspi2
 425 0078 00380040 		.word	1073756160
 426              		.cfi_endproc
 427              	.LFE141:
 429              		.section	.text.MX_UART4_Init,"ax",%progbits
 430              		.align	1
 431              		.syntax unified
 432              		.thumb
 433              		.thumb_func
 434              		.fpu fpv5-sp-d16
 436              	MX_UART4_Init:
 437              	.LFB142:
 271:Src/main.c    **** 
 272:Src/main.c    **** /**
 273:Src/main.c    ****   * @brief UART4 Initialization Function
 274:Src/main.c    ****   * @param None
 275:Src/main.c    ****   * @retval None
 276:Src/main.c    ****   */
 277:Src/main.c    **** static void MX_UART4_Init(void)
 278:Src/main.c    **** {
 438              		.loc 1 278 0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 0
 441              		@ frame_needed = 1, uses_anonymous_args = 0
 442 0000 80B5     		push	{r7, lr}
 443              	.LCFI11:
 444              		.cfi_def_cfa_offset 8
 445              		.cfi_offset 7, -8
 446              		.cfi_offset 14, -4
 447 0002 00AF     		add	r7, sp, #0
 448              	.LCFI12:
 449              		.cfi_def_cfa_register 7
 279:Src/main.c    **** 
 280:Src/main.c    ****   /* USER CODE BEGIN UART4_Init 0 */
 281:Src/main.c    **** 
 282:Src/main.c    ****   /* USER CODE END UART4_Init 0 */
 283:Src/main.c    **** 
 284:Src/main.c    ****   /* USER CODE BEGIN UART4_Init 1 */
 285:Src/main.c    **** 
 286:Src/main.c    ****   /* USER CODE END UART4_Init 1 */
 287:Src/main.c    ****   huart4.Instance = UART4;
 450              		.loc 1 287 0
 451 0004 144B     		ldr	r3, .L25
 452 0006 154A     		ldr	r2, .L25+4
 453 0008 1A60     		str	r2, [r3]
 288:Src/main.c    ****   huart4.Init.BaudRate = 115200;
 454              		.loc 1 288 0
 455 000a 134B     		ldr	r3, .L25
 456 000c 4FF4E132 		mov	r2, #115200
 457 0010 5A60     		str	r2, [r3, #4]
 289:Src/main.c    ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 458              		.loc 1 289 0
 459 0012 114B     		ldr	r3, .L25
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s 			page 14


 460 0014 0022     		movs	r2, #0
 461 0016 9A60     		str	r2, [r3, #8]
 290:Src/main.c    ****   huart4.Init.StopBits = UART_STOPBITS_1;
 462              		.loc 1 290 0
 463 0018 0F4B     		ldr	r3, .L25
 464 001a 0022     		movs	r2, #0
 465 001c DA60     		str	r2, [r3, #12]
 291:Src/main.c    ****   huart4.Init.Parity = UART_PARITY_NONE;
 466              		.loc 1 291 0
 467 001e 0E4B     		ldr	r3, .L25
 468 0020 0022     		movs	r2, #0
 469 0022 1A61     		str	r2, [r3, #16]
 292:Src/main.c    ****   huart4.Init.Mode = UART_MODE_TX_RX;
 470              		.loc 1 292 0
 471 0024 0C4B     		ldr	r3, .L25
 472 0026 0C22     		movs	r2, #12
 473 0028 5A61     		str	r2, [r3, #20]
 293:Src/main.c    ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 474              		.loc 1 293 0
 475 002a 0B4B     		ldr	r3, .L25
 476 002c 0022     		movs	r2, #0
 477 002e 9A61     		str	r2, [r3, #24]
 294:Src/main.c    ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 478              		.loc 1 294 0
 479 0030 094B     		ldr	r3, .L25
 480 0032 0022     		movs	r2, #0
 481 0034 DA61     		str	r2, [r3, #28]
 295:Src/main.c    ****   huart4.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 482              		.loc 1 295 0
 483 0036 084B     		ldr	r3, .L25
 484 0038 0022     		movs	r2, #0
 485 003a 1A62     		str	r2, [r3, #32]
 296:Src/main.c    ****   huart4.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 486              		.loc 1 296 0
 487 003c 064B     		ldr	r3, .L25
 488 003e 0022     		movs	r2, #0
 489 0040 5A62     		str	r2, [r3, #36]
 297:Src/main.c    ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 490              		.loc 1 297 0
 491 0042 0548     		ldr	r0, .L25
 492 0044 FFF7FEFF 		bl	HAL_UART_Init
 493 0048 0346     		mov	r3, r0
 494 004a 002B     		cmp	r3, #0
 495 004c 01D0     		beq	.L24
 298:Src/main.c    ****   {
 299:Src/main.c    ****     Error_Handler();
 496              		.loc 1 299 0
 497 004e FFF7FEFF 		bl	Error_Handler
 498              	.L24:
 300:Src/main.c    ****   }
 301:Src/main.c    ****   /* USER CODE BEGIN UART4_Init 2 */
 302:Src/main.c    **** 
 303:Src/main.c    ****   /* USER CODE END UART4_Init 2 */
 304:Src/main.c    **** 
 305:Src/main.c    **** }
 499              		.loc 1 305 0
 500 0052 00BF     		nop
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s 			page 15


 501 0054 80BD     		pop	{r7, pc}
 502              	.L26:
 503 0056 00BF     		.align	2
 504              	.L25:
 505 0058 00000000 		.word	huart4
 506 005c 004C0040 		.word	1073761280
 507              		.cfi_endproc
 508              	.LFE142:
 510              		.section	.text.MX_USART6_UART_Init,"ax",%progbits
 511              		.align	1
 512              		.syntax unified
 513              		.thumb
 514              		.thumb_func
 515              		.fpu fpv5-sp-d16
 517              	MX_USART6_UART_Init:
 518              	.LFB143:
 306:Src/main.c    **** 
 307:Src/main.c    **** /**
 308:Src/main.c    ****   * @brief USART6 Initialization Function
 309:Src/main.c    ****   * @param None
 310:Src/main.c    ****   * @retval None
 311:Src/main.c    ****   */
 312:Src/main.c    **** static void MX_USART6_UART_Init(void)
 313:Src/main.c    **** {
 519              		.loc 1 313 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 0
 522              		@ frame_needed = 1, uses_anonymous_args = 0
 523 0000 80B5     		push	{r7, lr}
 524              	.LCFI13:
 525              		.cfi_def_cfa_offset 8
 526              		.cfi_offset 7, -8
 527              		.cfi_offset 14, -4
 528 0002 00AF     		add	r7, sp, #0
 529              	.LCFI14:
 530              		.cfi_def_cfa_register 7
 314:Src/main.c    **** 
 315:Src/main.c    ****   /* USER CODE BEGIN USART6_Init 0 */
 316:Src/main.c    **** 
 317:Src/main.c    ****   /* USER CODE END USART6_Init 0 */
 318:Src/main.c    **** 
 319:Src/main.c    ****   /* USER CODE BEGIN USART6_Init 1 */
 320:Src/main.c    **** 
 321:Src/main.c    ****   /* USER CODE END USART6_Init 1 */
 322:Src/main.c    ****   huart6.Instance = USART6;
 531              		.loc 1 322 0
 532 0004 144B     		ldr	r3, .L30
 533 0006 154A     		ldr	r2, .L30+4
 534 0008 1A60     		str	r2, [r3]
 323:Src/main.c    ****   huart6.Init.BaudRate = 115200;
 535              		.loc 1 323 0
 536 000a 134B     		ldr	r3, .L30
 537 000c 4FF4E132 		mov	r2, #115200
 538 0010 5A60     		str	r2, [r3, #4]
 324:Src/main.c    ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 539              		.loc 1 324 0
 540 0012 114B     		ldr	r3, .L30
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s 			page 16


 541 0014 0022     		movs	r2, #0
 542 0016 9A60     		str	r2, [r3, #8]
 325:Src/main.c    ****   huart6.Init.StopBits = UART_STOPBITS_1;
 543              		.loc 1 325 0
 544 0018 0F4B     		ldr	r3, .L30
 545 001a 0022     		movs	r2, #0
 546 001c DA60     		str	r2, [r3, #12]
 326:Src/main.c    ****   huart6.Init.Parity = UART_PARITY_NONE;
 547              		.loc 1 326 0
 548 001e 0E4B     		ldr	r3, .L30
 549 0020 0022     		movs	r2, #0
 550 0022 1A61     		str	r2, [r3, #16]
 327:Src/main.c    ****   huart6.Init.Mode = UART_MODE_TX_RX;
 551              		.loc 1 327 0
 552 0024 0C4B     		ldr	r3, .L30
 553 0026 0C22     		movs	r2, #12
 554 0028 5A61     		str	r2, [r3, #20]
 328:Src/main.c    ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 555              		.loc 1 328 0
 556 002a 0B4B     		ldr	r3, .L30
 557 002c 0022     		movs	r2, #0
 558 002e 9A61     		str	r2, [r3, #24]
 329:Src/main.c    ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 559              		.loc 1 329 0
 560 0030 094B     		ldr	r3, .L30
 561 0032 0022     		movs	r2, #0
 562 0034 DA61     		str	r2, [r3, #28]
 330:Src/main.c    ****   huart6.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 563              		.loc 1 330 0
 564 0036 084B     		ldr	r3, .L30
 565 0038 0022     		movs	r2, #0
 566 003a 1A62     		str	r2, [r3, #32]
 331:Src/main.c    ****   huart6.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 567              		.loc 1 331 0
 568 003c 064B     		ldr	r3, .L30
 569 003e 0022     		movs	r2, #0
 570 0040 5A62     		str	r2, [r3, #36]
 332:Src/main.c    ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 571              		.loc 1 332 0
 572 0042 0548     		ldr	r0, .L30
 573 0044 FFF7FEFF 		bl	HAL_UART_Init
 574 0048 0346     		mov	r3, r0
 575 004a 002B     		cmp	r3, #0
 576 004c 01D0     		beq	.L29
 333:Src/main.c    ****   {
 334:Src/main.c    ****     Error_Handler();
 577              		.loc 1 334 0
 578 004e FFF7FEFF 		bl	Error_Handler
 579              	.L29:
 335:Src/main.c    ****   }
 336:Src/main.c    ****   /* USER CODE BEGIN USART6_Init 2 */
 337:Src/main.c    **** 
 338:Src/main.c    ****   /* USER CODE END USART6_Init 2 */
 339:Src/main.c    **** 
 340:Src/main.c    **** }
 580              		.loc 1 340 0
 581 0052 00BF     		nop
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s 			page 17


 582 0054 80BD     		pop	{r7, pc}
 583              	.L31:
 584 0056 00BF     		.align	2
 585              	.L30:
 586 0058 00000000 		.word	huart6
 587 005c 00140140 		.word	1073812480
 588              		.cfi_endproc
 589              	.LFE143:
 591              		.section	.text.MX_GPIO_Init,"ax",%progbits
 592              		.align	1
 593              		.syntax unified
 594              		.thumb
 595              		.thumb_func
 596              		.fpu fpv5-sp-d16
 598              	MX_GPIO_Init:
 599              	.LFB144:
 341:Src/main.c    **** 
 342:Src/main.c    **** /**
 343:Src/main.c    ****   * @brief GPIO Initialization Function
 344:Src/main.c    ****   * @param None
 345:Src/main.c    ****   * @retval None
 346:Src/main.c    ****   */
 347:Src/main.c    **** static void MX_GPIO_Init(void)
 348:Src/main.c    **** {
 600              		.loc 1 348 0
 601              		.cfi_startproc
 602              		@ args = 0, pretend = 0, frame = 32
 603              		@ frame_needed = 1, uses_anonymous_args = 0
 604 0000 80B5     		push	{r7, lr}
 605              	.LCFI15:
 606              		.cfi_def_cfa_offset 8
 607              		.cfi_offset 7, -8
 608              		.cfi_offset 14, -4
 609 0002 88B0     		sub	sp, sp, #32
 610              	.LCFI16:
 611              		.cfi_def_cfa_offset 40
 612 0004 00AF     		add	r7, sp, #0
 613              	.LCFI17:
 614              		.cfi_def_cfa_register 7
 349:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 615              		.loc 1 349 0
 616 0006 07F10C03 		add	r3, r7, #12
 617 000a 0022     		movs	r2, #0
 618 000c 1A60     		str	r2, [r3]
 619 000e 5A60     		str	r2, [r3, #4]
 620 0010 9A60     		str	r2, [r3, #8]
 621 0012 DA60     		str	r2, [r3, #12]
 622 0014 1A61     		str	r2, [r3, #16]
 623              	.LBB4:
 350:Src/main.c    **** 
 351:Src/main.c    ****   /* GPIO Ports Clock Enable */
 352:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 624              		.loc 1 352 0
 625 0016 1D4B     		ldr	r3, .L33
 626 0018 1B6B     		ldr	r3, [r3, #48]
 627 001a 1C4A     		ldr	r2, .L33
 628 001c 43F00403 		orr	r3, r3, #4
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s 			page 18


 629 0020 1363     		str	r3, [r2, #48]
 630 0022 1A4B     		ldr	r3, .L33
 631 0024 1B6B     		ldr	r3, [r3, #48]
 632 0026 03F00403 		and	r3, r3, #4
 633 002a BB60     		str	r3, [r7, #8]
 634 002c BB68     		ldr	r3, [r7, #8]
 635              	.LBE4:
 636              	.LBB5:
 353:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 637              		.loc 1 353 0
 638 002e 174B     		ldr	r3, .L33
 639 0030 1B6B     		ldr	r3, [r3, #48]
 640 0032 164A     		ldr	r2, .L33
 641 0034 43F00103 		orr	r3, r3, #1
 642 0038 1363     		str	r3, [r2, #48]
 643 003a 144B     		ldr	r3, .L33
 644 003c 1B6B     		ldr	r3, [r3, #48]
 645 003e 03F00103 		and	r3, r3, #1
 646 0042 7B60     		str	r3, [r7, #4]
 647 0044 7B68     		ldr	r3, [r7, #4]
 648              	.LBE5:
 649              	.LBB6:
 354:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 650              		.loc 1 354 0
 651 0046 114B     		ldr	r3, .L33
 652 0048 1B6B     		ldr	r3, [r3, #48]
 653 004a 104A     		ldr	r2, .L33
 654 004c 43F00203 		orr	r3, r3, #2
 655 0050 1363     		str	r3, [r2, #48]
 656 0052 0E4B     		ldr	r3, .L33
 657 0054 1B6B     		ldr	r3, [r3, #48]
 658 0056 03F00203 		and	r3, r3, #2
 659 005a 3B60     		str	r3, [r7]
 660 005c 3B68     		ldr	r3, [r7]
 661              	.LBE6:
 355:Src/main.c    **** 
 356:Src/main.c    ****   /*Configure GPIO pin Output Level */
 357:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
 662              		.loc 1 357 0
 663 005e 0022     		movs	r2, #0
 664 0060 0321     		movs	r1, #3
 665 0062 0B48     		ldr	r0, .L33+4
 666 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 358:Src/main.c    **** 
 359:Src/main.c    ****   /*Configure GPIO pins : PB0 PB1 */
 360:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 667              		.loc 1 360 0
 668 0068 0323     		movs	r3, #3
 669 006a FB60     		str	r3, [r7, #12]
 361:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 670              		.loc 1 361 0
 671 006c 0123     		movs	r3, #1
 672 006e 3B61     		str	r3, [r7, #16]
 362:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 673              		.loc 1 362 0
 674 0070 0023     		movs	r3, #0
 675 0072 7B61     		str	r3, [r7, #20]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s 			page 19


 363:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 676              		.loc 1 363 0
 677 0074 0023     		movs	r3, #0
 678 0076 BB61     		str	r3, [r7, #24]
 364:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 679              		.loc 1 364 0
 680 0078 07F10C03 		add	r3, r7, #12
 681 007c 1946     		mov	r1, r3
 682 007e 0448     		ldr	r0, .L33+4
 683 0080 FFF7FEFF 		bl	HAL_GPIO_Init
 365:Src/main.c    **** 
 366:Src/main.c    **** }
 684              		.loc 1 366 0
 685 0084 00BF     		nop
 686 0086 2037     		adds	r7, r7, #32
 687              	.LCFI18:
 688              		.cfi_def_cfa_offset 8
 689 0088 BD46     		mov	sp, r7
 690              	.LCFI19:
 691              		.cfi_def_cfa_register 13
 692              		@ sp needed
 693 008a 80BD     		pop	{r7, pc}
 694              	.L34:
 695              		.align	2
 696              	.L33:
 697 008c 00380240 		.word	1073887232
 698 0090 00040240 		.word	1073873920
 699              		.cfi_endproc
 700              	.LFE144:
 702              		.section	.text.Error_Handler,"ax",%progbits
 703              		.align	1
 704              		.global	Error_Handler
 705              		.syntax unified
 706              		.thumb
 707              		.thumb_func
 708              		.fpu fpv5-sp-d16
 710              	Error_Handler:
 711              	.LFB145:
 367:Src/main.c    **** 
 368:Src/main.c    **** /* USER CODE BEGIN 4 */
 369:Src/main.c    **** 
 370:Src/main.c    **** /* USER CODE END 4 */
 371:Src/main.c    **** 
 372:Src/main.c    **** /**
 373:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 374:Src/main.c    ****   * @retval None
 375:Src/main.c    ****   */
 376:Src/main.c    **** void Error_Handler(void)
 377:Src/main.c    **** {
 712              		.loc 1 377 0
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 0
 715              		@ frame_needed = 1, uses_anonymous_args = 0
 716              		@ link register save eliminated.
 717 0000 80B4     		push	{r7}
 718              	.LCFI20:
 719              		.cfi_def_cfa_offset 4
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s 			page 20


 720              		.cfi_offset 7, -4
 721 0002 00AF     		add	r7, sp, #0
 722              	.LCFI21:
 723              		.cfi_def_cfa_register 7
 378:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 379:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 380:Src/main.c    **** 
 381:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 382:Src/main.c    **** }
 724              		.loc 1 382 0
 725 0004 00BF     		nop
 726 0006 BD46     		mov	sp, r7
 727              	.LCFI22:
 728              		.cfi_def_cfa_register 13
 729              		@ sp needed
 730 0008 5DF8047B 		ldr	r7, [sp], #4
 731              	.LCFI23:
 732              		.cfi_restore 7
 733              		.cfi_def_cfa_offset 0
 734 000c 7047     		bx	lr
 735              		.cfi_endproc
 736              	.LFE145:
 738              		.text
 739              	.Letext0:
 740              		.file 2 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/machine/_default_types
 741              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_stdint.h"
 742              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 743              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 744              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 745              		.file 7 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/lock.h"
 746              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_types.h"
 747              		.file 9 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 748              		.file 10 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/reent.h"
 749              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 750              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 751              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 752              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 753              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 754              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_spi.h"
 755              		.file 17 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 756              		.file 18 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/unistd.h"
 757              		.file 19 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/stdlib.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
                            *COM*:0000000000000064 hspi1
                            *COM*:0000000000000064 hspi2
                            *COM*:0000000000000070 huart4
                            *COM*:0000000000000070 huart6
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s:22     .rodata:0000000000000000 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s:26     .text.main:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s:33     .text.main:0000000000000000 main
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s:86     .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s:598    .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s:242    .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s:339    .text.MX_SPI2_Init:0000000000000000 MX_SPI2_Init
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s:436    .text.MX_UART4_Init:0000000000000000 MX_UART4_Init
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s:517    .text.MX_USART6_UART_Init:0000000000000000 MX_USART6_UART_Init
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s:74     .text.main:0000000000000030 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s:79     .text.SystemClock_Config:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s:710    .text.Error_Handler:0000000000000000 Error_Handler
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s:230    .text.SystemClock_Config:00000000000000f0 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s:236    .text.MX_SPI1_Init:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s:327    .text.MX_SPI1_Init:0000000000000074 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s:333    .text.MX_SPI2_Init:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s:424    .text.MX_SPI2_Init:0000000000000074 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s:430    .text.MX_UART4_Init:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s:505    .text.MX_UART4_Init:0000000000000058 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s:511    .text.MX_USART6_UART_Init:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s:586    .text.MX_USART6_UART_Init:0000000000000058 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s:592    .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s:697    .text.MX_GPIO_Init:000000000000008c $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cckI0D78.s:703    .text.Error_Handler:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_Init
FT800_BootupConfig
my_printf
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_SPI_Init
HAL_UART_Init
HAL_GPIO_WritePin
HAL_GPIO_Init
