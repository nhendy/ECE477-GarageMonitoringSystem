ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	hspi1,100,4
  18              		.comm	hspi2,100,4
  19              		.comm	huart4,112,4
  20              		.comm	huart6,112,4
  21              		.section	.rodata
  22              		.align	2
  23              	.LC0:
  24 0000 68656C6C 		.ascii	"hello %d\000"
  24      6F202564 
  24      00
  25              		.section	.text.main,"ax",%progbits
  26              		.align	1
  27              		.global	main
  28              		.syntax unified
  29              		.thumb
  30              		.thumb_func
  31              		.fpu fpv5-sp-d16
  33              	main:
  34              	.LFB138:
  35              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s 			page 2


  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* USER CODE END Header */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  42:Src/main.c    **** #include "main.h"
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  45:Src/main.c    **** /* USER CODE BEGIN Includes */
  46:Src/main.c    **** #include "FT_Platform.h"
  47:Src/main.c    **** #include "Ft_Esd.h"
  48:Src/main.c    **** #include "Ft_Esd_GpuAlloc.h"
  49:Src/main.c    **** #include <stdio.h>
  50:Src/main.c    **** /* USER CODE END Includes */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  53:Src/main.c    **** /* USER CODE BEGIN PTD */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE END PTD */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  58:Src/main.c    **** /* USER CODE BEGIN PD */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE END PD */
  61:Src/main.c    **** 
  62:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  63:Src/main.c    **** /* USER CODE BEGIN PM */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE END PM */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  68:Src/main.c    **** 
  69:Src/main.c    **** SPI_HandleTypeDef hspi1;
  70:Src/main.c    **** SPI_HandleTypeDef hspi2;
  71:Src/main.c    **** 
  72:Src/main.c    **** UART_HandleTypeDef huart4;
  73:Src/main.c    **** UART_HandleTypeDef huart6;
  74:Src/main.c    **** 
  75:Src/main.c    **** /* USER CODE BEGIN PV */
  76:Src/main.c    **** 
  77:Src/main.c    **** /* USER CODE END PV */
  78:Src/main.c    **** 
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s 			page 3


  79:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  80:Src/main.c    **** void SystemClock_Config(void);
  81:Src/main.c    **** static void MX_GPIO_Init(void);
  82:Src/main.c    **** static void MX_SPI1_Init(void);
  83:Src/main.c    **** static void MX_SPI2_Init(void);
  84:Src/main.c    **** static void MX_UART4_Init(void);
  85:Src/main.c    **** static void MX_USART6_UART_Init(void);
  86:Src/main.c    **** /* USER CODE BEGIN PFP */
  87:Src/main.c    **** extern ft_void_t FT800_BootupConfig();
  88:Src/main.c    **** /* USER CODE END PFP */
  89:Src/main.c    **** 
  90:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  91:Src/main.c    **** /* USER CODE BEGIN 0 */
  92:Src/main.c    **** 
  93:Src/main.c    **** /* USER CODE END 0 */
  94:Src/main.c    **** 
  95:Src/main.c    **** /**
  96:Src/main.c    ****   * @brief  The application entry point.
  97:Src/main.c    ****   * @retval int
  98:Src/main.c    ****   */
  99:Src/main.c    **** int main(void)
 100:Src/main.c    **** {
  36              		.loc 1 100 0
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 0
  39              		@ frame_needed = 1, uses_anonymous_args = 0
  40 0000 80B5     		push	{r7, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 7, -8
  44              		.cfi_offset 14, -4
  45 0002 00AF     		add	r7, sp, #0
  46              	.LCFI1:
  47              		.cfi_def_cfa_register 7
 101:Src/main.c    ****   /* USER CODE BEGIN 1 */
 102:Src/main.c    **** 
 103:Src/main.c    ****   /* USER CODE END 1 */
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 108:Src/main.c    ****   HAL_Init();
  48              		.loc 1 108 0
  49 0004 FFF7FEFF 		bl	HAL_Init
 109:Src/main.c    **** 
 110:Src/main.c    ****   /* USER CODE BEGIN Init */
 111:Src/main.c    **** 
 112:Src/main.c    ****   /* USER CODE END Init */
 113:Src/main.c    **** 
 114:Src/main.c    ****   /* Configure the system clock */
 115:Src/main.c    ****   SystemClock_Config();
  50              		.loc 1 115 0
  51 0008 FFF7FEFF 		bl	SystemClock_Config
 116:Src/main.c    **** 
 117:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 118:Src/main.c    **** 
 119:Src/main.c    ****   /* USER CODE END SysInit */
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s 			page 4


 120:Src/main.c    **** 
 121:Src/main.c    ****   /* Initialize all configured peripherals */
 122:Src/main.c    ****   MX_GPIO_Init();
  52              		.loc 1 122 0
  53 000c FFF7FEFF 		bl	MX_GPIO_Init
 123:Src/main.c    ****   MX_SPI1_Init();
  54              		.loc 1 123 0
  55 0010 FFF7FEFF 		bl	MX_SPI1_Init
 124:Src/main.c    ****   MX_SPI2_Init();
  56              		.loc 1 124 0
  57 0014 FFF7FEFF 		bl	MX_SPI2_Init
 125:Src/main.c    ****   MX_UART4_Init();
  58              		.loc 1 125 0
  59 0018 FFF7FEFF 		bl	MX_UART4_Init
 126:Src/main.c    ****   MX_USART6_UART_Init();
  60              		.loc 1 126 0
  61 001c FFF7FEFF 		bl	MX_USART6_UART_Init
 127:Src/main.c    ****   /* USER CODE BEGIN 2 */
 128:Src/main.c    **** // FT800_BootupConfig();
 129:Src/main.c    ****   my_printf("hello %d", 1);
  62              		.loc 1 129 0
  63 0020 0121     		movs	r1, #1
  64 0022 0248     		ldr	r0, .L3
  65 0024 FFF7FEFF 		bl	my_printf
  66              	.L2:
 130:Src/main.c    **** 
 131:Src/main.c    **** 
 132:Src/main.c    **** 
 133:Src/main.c    ****   /* USER CODE END 2 */
 134:Src/main.c    **** 
 135:Src/main.c    ****   /* Infinite loop */
 136:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 137:Src/main.c    ****   while (1)
  67              		.loc 1 137 0 discriminator 1
  68 0028 FEE7     		b	.L2
  69              	.L4:
  70 002a 00BF     		.align	2
  71              	.L3:
  72 002c 00000000 		.word	.LC0
  73              		.cfi_endproc
  74              	.LFE138:
  76              		.section	.text.SystemClock_Config,"ax",%progbits
  77              		.align	1
  78              		.global	SystemClock_Config
  79              		.syntax unified
  80              		.thumb
  81              		.thumb_func
  82              		.fpu fpv5-sp-d16
  84              	SystemClock_Config:
  85              	.LFB139:
 138:Src/main.c    ****   {
 139:Src/main.c    ****     /* USER CODE END WHILE */
 140:Src/main.c    **** 
 141:Src/main.c    ****     /* USER CODE BEGIN 3 */
 142:Src/main.c    ****   }
 143:Src/main.c    ****   /* USER CODE END 3 */
 144:Src/main.c    **** }
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s 			page 5


 145:Src/main.c    **** 
 146:Src/main.c    **** /**
 147:Src/main.c    ****   * @brief System Clock Configuration
 148:Src/main.c    ****   * @retval None
 149:Src/main.c    ****   */
 150:Src/main.c    **** void SystemClock_Config(void)
 151:Src/main.c    **** {
  86              		.loc 1 151 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 208
  89              		@ frame_needed = 1, uses_anonymous_args = 0
  90 0000 80B5     		push	{r7, lr}
  91              	.LCFI2:
  92              		.cfi_def_cfa_offset 8
  93              		.cfi_offset 7, -8
  94              		.cfi_offset 14, -4
  95 0002 B4B0     		sub	sp, sp, #208
  96              	.LCFI3:
  97              		.cfi_def_cfa_offset 216
  98 0004 00AF     		add	r7, sp, #0
  99              	.LCFI4:
 100              		.cfi_def_cfa_register 7
 152:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 101              		.loc 1 152 0
 102 0006 07F1A003 		add	r3, r7, #160
 103 000a 3022     		movs	r2, #48
 104 000c 0021     		movs	r1, #0
 105 000e 1846     		mov	r0, r3
 106 0010 FFF7FEFF 		bl	memset
 153:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 107              		.loc 1 153 0
 108 0014 07F18C03 		add	r3, r7, #140
 109 0018 0022     		movs	r2, #0
 110 001a 1A60     		str	r2, [r3]
 111 001c 5A60     		str	r2, [r3, #4]
 112 001e 9A60     		str	r2, [r3, #8]
 113 0020 DA60     		str	r2, [r3, #12]
 114 0022 1A61     		str	r2, [r3, #16]
 154:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 115              		.loc 1 154 0
 116 0024 07F10803 		add	r3, r7, #8
 117 0028 8422     		movs	r2, #132
 118 002a 0021     		movs	r1, #0
 119 002c 1846     		mov	r0, r3
 120 002e FFF7FEFF 		bl	memset
 121              	.LBB2:
 155:Src/main.c    **** 
 156:Src/main.c    ****   /**Configure the main internal regulator output voltage
 157:Src/main.c    ****   */
 158:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 122              		.loc 1 158 0
 123 0032 2F4B     		ldr	r3, .L10
 124 0034 1B6C     		ldr	r3, [r3, #64]
 125 0036 2E4A     		ldr	r2, .L10
 126 0038 43F08053 		orr	r3, r3, #268435456
 127 003c 1364     		str	r3, [r2, #64]
 128 003e 2C4B     		ldr	r3, .L10
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s 			page 6


 129 0040 1B6C     		ldr	r3, [r3, #64]
 130 0042 03F08053 		and	r3, r3, #268435456
 131 0046 7B60     		str	r3, [r7, #4]
 132 0048 7B68     		ldr	r3, [r7, #4]
 133              	.LBE2:
 134              	.LBB3:
 159:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 135              		.loc 1 159 0
 136 004a 2A4B     		ldr	r3, .L10+4
 137 004c 1B68     		ldr	r3, [r3]
 138 004e 23F44043 		bic	r3, r3, #49152
 139 0052 284A     		ldr	r2, .L10+4
 140 0054 43F48043 		orr	r3, r3, #16384
 141 0058 1360     		str	r3, [r2]
 142 005a 264B     		ldr	r3, .L10+4
 143 005c 1B68     		ldr	r3, [r3]
 144 005e 03F44043 		and	r3, r3, #49152
 145 0062 3B60     		str	r3, [r7]
 146 0064 3B68     		ldr	r3, [r7]
 147              	.LBE3:
 160:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks
 161:Src/main.c    ****   */
 162:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 148              		.loc 1 162 0
 149 0066 0223     		movs	r3, #2
 150 0068 C7F8A030 		str	r3, [r7, #160]
 163:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 151              		.loc 1 163 0
 152 006c 0123     		movs	r3, #1
 153 006e C7F8AC30 		str	r3, [r7, #172]
 164:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 154              		.loc 1 164 0
 155 0072 1023     		movs	r3, #16
 156 0074 C7F8B030 		str	r3, [r7, #176]
 165:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 157              		.loc 1 165 0
 158 0078 0023     		movs	r3, #0
 159 007a C7F8B830 		str	r3, [r7, #184]
 166:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 160              		.loc 1 166 0
 161 007e 07F1A003 		add	r3, r7, #160
 162 0082 1846     		mov	r0, r3
 163 0084 FFF7FEFF 		bl	HAL_RCC_OscConfig
 164 0088 0346     		mov	r3, r0
 165 008a 002B     		cmp	r3, #0
 166 008c 01D0     		beq	.L6
 167:Src/main.c    ****   {
 168:Src/main.c    ****     Error_Handler();
 167              		.loc 1 168 0
 168 008e FFF7FEFF 		bl	Error_Handler
 169              	.L6:
 169:Src/main.c    ****   }
 170:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks
 171:Src/main.c    ****   */
 172:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 170              		.loc 1 172 0
 171 0092 0F23     		movs	r3, #15
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s 			page 7


 172 0094 C7F88C30 		str	r3, [r7, #140]
 173:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 174:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 173              		.loc 1 174 0
 174 0098 0023     		movs	r3, #0
 175 009a C7F89030 		str	r3, [r7, #144]
 175:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 176              		.loc 1 175 0
 177 009e 8023     		movs	r3, #128
 178 00a0 C7F89430 		str	r3, [r7, #148]
 176:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 179              		.loc 1 176 0
 180 00a4 0023     		movs	r3, #0
 181 00a6 C7F89830 		str	r3, [r7, #152]
 177:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 182              		.loc 1 177 0
 183 00aa 0023     		movs	r3, #0
 184 00ac C7F89C30 		str	r3, [r7, #156]
 178:Src/main.c    **** 
 179:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 185              		.loc 1 179 0
 186 00b0 07F18C03 		add	r3, r7, #140
 187 00b4 0021     		movs	r1, #0
 188 00b6 1846     		mov	r0, r3
 189 00b8 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 190 00bc 0346     		mov	r3, r0
 191 00be 002B     		cmp	r3, #0
 192 00c0 01D0     		beq	.L7
 180:Src/main.c    ****   {
 181:Src/main.c    ****     Error_Handler();
 193              		.loc 1 181 0
 194 00c2 FFF7FEFF 		bl	Error_Handler
 195              	.L7:
 182:Src/main.c    ****   }
 183:Src/main.c    ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART6|RCC_PERIPHCLK_UART4;
 196              		.loc 1 183 0
 197 00c6 4FF42063 		mov	r3, #2560
 198 00ca BB60     		str	r3, [r7, #8]
 184:Src/main.c    ****   PeriphClkInitStruct.Uart4ClockSelection = RCC_UART4CLKSOURCE_PCLK1;
 199              		.loc 1 184 0
 200 00cc 0023     		movs	r3, #0
 201 00ce BB65     		str	r3, [r7, #88]
 185:Src/main.c    ****   PeriphClkInitStruct.Usart6ClockSelection = RCC_USART6CLKSOURCE_PCLK2;
 202              		.loc 1 185 0
 203 00d0 0023     		movs	r3, #0
 204 00d2 3B66     		str	r3, [r7, #96]
 186:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 205              		.loc 1 186 0
 206 00d4 07F10803 		add	r3, r7, #8
 207 00d8 1846     		mov	r0, r3
 208 00da FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 209 00de 0346     		mov	r3, r0
 210 00e0 002B     		cmp	r3, #0
 211 00e2 01D0     		beq	.L9
 187:Src/main.c    ****   {
 188:Src/main.c    ****     Error_Handler();
 212              		.loc 1 188 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s 			page 8


 213 00e4 FFF7FEFF 		bl	Error_Handler
 214              	.L9:
 189:Src/main.c    ****   }
 190:Src/main.c    **** }
 215              		.loc 1 190 0
 216 00e8 00BF     		nop
 217 00ea D037     		adds	r7, r7, #208
 218              	.LCFI5:
 219              		.cfi_def_cfa_offset 8
 220 00ec BD46     		mov	sp, r7
 221              	.LCFI6:
 222              		.cfi_def_cfa_register 13
 223              		@ sp needed
 224 00ee 80BD     		pop	{r7, pc}
 225              	.L11:
 226              		.align	2
 227              	.L10:
 228 00f0 00380240 		.word	1073887232
 229 00f4 00700040 		.word	1073770496
 230              		.cfi_endproc
 231              	.LFE139:
 233              		.section	.text.MX_SPI1_Init,"ax",%progbits
 234              		.align	1
 235              		.syntax unified
 236              		.thumb
 237              		.thumb_func
 238              		.fpu fpv5-sp-d16
 240              	MX_SPI1_Init:
 241              	.LFB140:
 191:Src/main.c    **** 
 192:Src/main.c    **** /**
 193:Src/main.c    ****   * @brief SPI1 Initialization Function
 194:Src/main.c    ****   * @param None
 195:Src/main.c    ****   * @retval None
 196:Src/main.c    ****   */
 197:Src/main.c    **** static void MX_SPI1_Init(void)
 198:Src/main.c    **** {
 242              		.loc 1 198 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 1, uses_anonymous_args = 0
 246 0000 80B5     		push	{r7, lr}
 247              	.LCFI7:
 248              		.cfi_def_cfa_offset 8
 249              		.cfi_offset 7, -8
 250              		.cfi_offset 14, -4
 251 0002 00AF     		add	r7, sp, #0
 252              	.LCFI8:
 253              		.cfi_def_cfa_register 7
 199:Src/main.c    **** 
 200:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 0 */
 201:Src/main.c    **** 
 202:Src/main.c    ****   /* USER CODE END SPI1_Init 0 */
 203:Src/main.c    **** 
 204:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 1 */
 205:Src/main.c    **** 
 206:Src/main.c    ****   /* USER CODE END SPI1_Init 1 */
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s 			page 9


 207:Src/main.c    ****   /* SPI1 parameter configuration*/
 208:Src/main.c    ****   hspi1.Instance = SPI1;
 254              		.loc 1 208 0
 255 0004 1B4B     		ldr	r3, .L15
 256 0006 1C4A     		ldr	r2, .L15+4
 257 0008 1A60     		str	r2, [r3]
 209:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 258              		.loc 1 209 0
 259 000a 1A4B     		ldr	r3, .L15
 260 000c 4FF48272 		mov	r2, #260
 261 0010 5A60     		str	r2, [r3, #4]
 210:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 262              		.loc 1 210 0
 263 0012 184B     		ldr	r3, .L15
 264 0014 0022     		movs	r2, #0
 265 0016 9A60     		str	r2, [r3, #8]
 211:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 266              		.loc 1 211 0
 267 0018 164B     		ldr	r3, .L15
 268 001a 4FF4E062 		mov	r2, #1792
 269 001e DA60     		str	r2, [r3, #12]
 212:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 270              		.loc 1 212 0
 271 0020 144B     		ldr	r3, .L15
 272 0022 0022     		movs	r2, #0
 273 0024 1A61     		str	r2, [r3, #16]
 213:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 274              		.loc 1 213 0
 275 0026 134B     		ldr	r3, .L15
 276 0028 0022     		movs	r2, #0
 277 002a 5A61     		str	r2, [r3, #20]
 214:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 278              		.loc 1 214 0
 279 002c 114B     		ldr	r3, .L15
 280 002e 4FF40072 		mov	r2, #512
 281 0032 9A61     		str	r2, [r3, #24]
 215:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 282              		.loc 1 215 0
 283 0034 0F4B     		ldr	r3, .L15
 284 0036 0022     		movs	r2, #0
 285 0038 DA61     		str	r2, [r3, #28]
 216:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 286              		.loc 1 216 0
 287 003a 0E4B     		ldr	r3, .L15
 288 003c 0022     		movs	r2, #0
 289 003e 1A62     		str	r2, [r3, #32]
 217:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 290              		.loc 1 217 0
 291 0040 0C4B     		ldr	r3, .L15
 292 0042 0022     		movs	r2, #0
 293 0044 5A62     		str	r2, [r3, #36]
 218:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 294              		.loc 1 218 0
 295 0046 0B4B     		ldr	r3, .L15
 296 0048 0022     		movs	r2, #0
 297 004a 9A62     		str	r2, [r3, #40]
 219:Src/main.c    ****   hspi1.Init.CRCPolynomial = 7;
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s 			page 10


 298              		.loc 1 219 0
 299 004c 094B     		ldr	r3, .L15
 300 004e 0722     		movs	r2, #7
 301 0050 DA62     		str	r2, [r3, #44]
 220:Src/main.c    ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 302              		.loc 1 220 0
 303 0052 084B     		ldr	r3, .L15
 304 0054 0022     		movs	r2, #0
 305 0056 1A63     		str	r2, [r3, #48]
 221:Src/main.c    ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 306              		.loc 1 221 0
 307 0058 064B     		ldr	r3, .L15
 308 005a 0022     		movs	r2, #0
 309 005c 5A63     		str	r2, [r3, #52]
 222:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 310              		.loc 1 222 0
 311 005e 0548     		ldr	r0, .L15
 312 0060 FFF7FEFF 		bl	HAL_SPI_Init
 313 0064 0346     		mov	r3, r0
 314 0066 002B     		cmp	r3, #0
 315 0068 01D0     		beq	.L14
 223:Src/main.c    ****   {
 224:Src/main.c    ****     Error_Handler();
 316              		.loc 1 224 0
 317 006a FFF7FEFF 		bl	Error_Handler
 318              	.L14:
 225:Src/main.c    ****   }
 226:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 2 */
 227:Src/main.c    **** 
 228:Src/main.c    ****   /* USER CODE END SPI1_Init 2 */
 229:Src/main.c    **** 
 230:Src/main.c    **** }
 319              		.loc 1 230 0
 320 006e 00BF     		nop
 321 0070 80BD     		pop	{r7, pc}
 322              	.L16:
 323 0072 00BF     		.align	2
 324              	.L15:
 325 0074 00000000 		.word	hspi1
 326 0078 00300140 		.word	1073819648
 327              		.cfi_endproc
 328              	.LFE140:
 330              		.section	.text.MX_SPI2_Init,"ax",%progbits
 331              		.align	1
 332              		.syntax unified
 333              		.thumb
 334              		.thumb_func
 335              		.fpu fpv5-sp-d16
 337              	MX_SPI2_Init:
 338              	.LFB141:
 231:Src/main.c    **** 
 232:Src/main.c    **** /**
 233:Src/main.c    ****   * @brief SPI2 Initialization Function
 234:Src/main.c    ****   * @param None
 235:Src/main.c    ****   * @retval None
 236:Src/main.c    ****   */
 237:Src/main.c    **** static void MX_SPI2_Init(void)
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s 			page 11


 238:Src/main.c    **** {
 339              		.loc 1 238 0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 0
 342              		@ frame_needed = 1, uses_anonymous_args = 0
 343 0000 80B5     		push	{r7, lr}
 344              	.LCFI9:
 345              		.cfi_def_cfa_offset 8
 346              		.cfi_offset 7, -8
 347              		.cfi_offset 14, -4
 348 0002 00AF     		add	r7, sp, #0
 349              	.LCFI10:
 350              		.cfi_def_cfa_register 7
 239:Src/main.c    **** 
 240:Src/main.c    ****   /* USER CODE BEGIN SPI2_Init 0 */
 241:Src/main.c    **** 
 242:Src/main.c    ****   /* USER CODE END SPI2_Init 0 */
 243:Src/main.c    **** 
 244:Src/main.c    ****   /* USER CODE BEGIN SPI2_Init 1 */
 245:Src/main.c    **** 
 246:Src/main.c    ****   /* USER CODE END SPI2_Init 1 */
 247:Src/main.c    ****   /* SPI2 parameter configuration*/
 248:Src/main.c    ****   hspi2.Instance = SPI2;
 351              		.loc 1 248 0
 352 0004 1B4B     		ldr	r3, .L20
 353 0006 1C4A     		ldr	r2, .L20+4
 354 0008 1A60     		str	r2, [r3]
 249:Src/main.c    ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 355              		.loc 1 249 0
 356 000a 1A4B     		ldr	r3, .L20
 357 000c 4FF48272 		mov	r2, #260
 358 0010 5A60     		str	r2, [r3, #4]
 250:Src/main.c    ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 359              		.loc 1 250 0
 360 0012 184B     		ldr	r3, .L20
 361 0014 0022     		movs	r2, #0
 362 0016 9A60     		str	r2, [r3, #8]
 251:Src/main.c    ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 363              		.loc 1 251 0
 364 0018 164B     		ldr	r3, .L20
 365 001a 4FF4E062 		mov	r2, #1792
 366 001e DA60     		str	r2, [r3, #12]
 252:Src/main.c    ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 367              		.loc 1 252 0
 368 0020 144B     		ldr	r3, .L20
 369 0022 0022     		movs	r2, #0
 370 0024 1A61     		str	r2, [r3, #16]
 253:Src/main.c    ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 371              		.loc 1 253 0
 372 0026 134B     		ldr	r3, .L20
 373 0028 0022     		movs	r2, #0
 374 002a 5A61     		str	r2, [r3, #20]
 254:Src/main.c    ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 375              		.loc 1 254 0
 376 002c 114B     		ldr	r3, .L20
 377 002e 4FF40072 		mov	r2, #512
 378 0032 9A61     		str	r2, [r3, #24]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s 			page 12


 255:Src/main.c    ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 379              		.loc 1 255 0
 380 0034 0F4B     		ldr	r3, .L20
 381 0036 0022     		movs	r2, #0
 382 0038 DA61     		str	r2, [r3, #28]
 256:Src/main.c    ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 383              		.loc 1 256 0
 384 003a 0E4B     		ldr	r3, .L20
 385 003c 0022     		movs	r2, #0
 386 003e 1A62     		str	r2, [r3, #32]
 257:Src/main.c    ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 387              		.loc 1 257 0
 388 0040 0C4B     		ldr	r3, .L20
 389 0042 0022     		movs	r2, #0
 390 0044 5A62     		str	r2, [r3, #36]
 258:Src/main.c    ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 391              		.loc 1 258 0
 392 0046 0B4B     		ldr	r3, .L20
 393 0048 0022     		movs	r2, #0
 394 004a 9A62     		str	r2, [r3, #40]
 259:Src/main.c    ****   hspi2.Init.CRCPolynomial = 7;
 395              		.loc 1 259 0
 396 004c 094B     		ldr	r3, .L20
 397 004e 0722     		movs	r2, #7
 398 0050 DA62     		str	r2, [r3, #44]
 260:Src/main.c    ****   hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 399              		.loc 1 260 0
 400 0052 084B     		ldr	r3, .L20
 401 0054 0022     		movs	r2, #0
 402 0056 1A63     		str	r2, [r3, #48]
 261:Src/main.c    ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 403              		.loc 1 261 0
 404 0058 064B     		ldr	r3, .L20
 405 005a 0822     		movs	r2, #8
 406 005c 5A63     		str	r2, [r3, #52]
 262:Src/main.c    ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 407              		.loc 1 262 0
 408 005e 0548     		ldr	r0, .L20
 409 0060 FFF7FEFF 		bl	HAL_SPI_Init
 410 0064 0346     		mov	r3, r0
 411 0066 002B     		cmp	r3, #0
 412 0068 01D0     		beq	.L19
 263:Src/main.c    ****   {
 264:Src/main.c    ****     Error_Handler();
 413              		.loc 1 264 0
 414 006a FFF7FEFF 		bl	Error_Handler
 415              	.L19:
 265:Src/main.c    ****   }
 266:Src/main.c    ****   /* USER CODE BEGIN SPI2_Init 2 */
 267:Src/main.c    **** 
 268:Src/main.c    ****   /* USER CODE END SPI2_Init 2 */
 269:Src/main.c    **** 
 270:Src/main.c    **** }
 416              		.loc 1 270 0
 417 006e 00BF     		nop
 418 0070 80BD     		pop	{r7, pc}
 419              	.L21:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s 			page 13


 420 0072 00BF     		.align	2
 421              	.L20:
 422 0074 00000000 		.word	hspi2
 423 0078 00380040 		.word	1073756160
 424              		.cfi_endproc
 425              	.LFE141:
 427              		.section	.text.MX_UART4_Init,"ax",%progbits
 428              		.align	1
 429              		.syntax unified
 430              		.thumb
 431              		.thumb_func
 432              		.fpu fpv5-sp-d16
 434              	MX_UART4_Init:
 435              	.LFB142:
 271:Src/main.c    **** 
 272:Src/main.c    **** /**
 273:Src/main.c    ****   * @brief UART4 Initialization Function
 274:Src/main.c    ****   * @param None
 275:Src/main.c    ****   * @retval None
 276:Src/main.c    ****   */
 277:Src/main.c    **** static void MX_UART4_Init(void)
 278:Src/main.c    **** {
 436              		.loc 1 278 0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 0
 439              		@ frame_needed = 1, uses_anonymous_args = 0
 440 0000 80B5     		push	{r7, lr}
 441              	.LCFI11:
 442              		.cfi_def_cfa_offset 8
 443              		.cfi_offset 7, -8
 444              		.cfi_offset 14, -4
 445 0002 00AF     		add	r7, sp, #0
 446              	.LCFI12:
 447              		.cfi_def_cfa_register 7
 279:Src/main.c    **** 
 280:Src/main.c    ****   /* USER CODE BEGIN UART4_Init 0 */
 281:Src/main.c    **** 
 282:Src/main.c    ****   /* USER CODE END UART4_Init 0 */
 283:Src/main.c    **** 
 284:Src/main.c    ****   /* USER CODE BEGIN UART4_Init 1 */
 285:Src/main.c    **** 
 286:Src/main.c    ****   /* USER CODE END UART4_Init 1 */
 287:Src/main.c    ****   huart4.Instance = UART4;
 448              		.loc 1 287 0
 449 0004 144B     		ldr	r3, .L25
 450 0006 154A     		ldr	r2, .L25+4
 451 0008 1A60     		str	r2, [r3]
 288:Src/main.c    ****   huart4.Init.BaudRate = 115200;
 452              		.loc 1 288 0
 453 000a 134B     		ldr	r3, .L25
 454 000c 4FF4E132 		mov	r2, #115200
 455 0010 5A60     		str	r2, [r3, #4]
 289:Src/main.c    ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 456              		.loc 1 289 0
 457 0012 114B     		ldr	r3, .L25
 458 0014 0022     		movs	r2, #0
 459 0016 9A60     		str	r2, [r3, #8]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s 			page 14


 290:Src/main.c    ****   huart4.Init.StopBits = UART_STOPBITS_1;
 460              		.loc 1 290 0
 461 0018 0F4B     		ldr	r3, .L25
 462 001a 0022     		movs	r2, #0
 463 001c DA60     		str	r2, [r3, #12]
 291:Src/main.c    ****   huart4.Init.Parity = UART_PARITY_NONE;
 464              		.loc 1 291 0
 465 001e 0E4B     		ldr	r3, .L25
 466 0020 0022     		movs	r2, #0
 467 0022 1A61     		str	r2, [r3, #16]
 292:Src/main.c    ****   huart4.Init.Mode = UART_MODE_TX_RX;
 468              		.loc 1 292 0
 469 0024 0C4B     		ldr	r3, .L25
 470 0026 0C22     		movs	r2, #12
 471 0028 5A61     		str	r2, [r3, #20]
 293:Src/main.c    ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 472              		.loc 1 293 0
 473 002a 0B4B     		ldr	r3, .L25
 474 002c 0022     		movs	r2, #0
 475 002e 9A61     		str	r2, [r3, #24]
 294:Src/main.c    ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 476              		.loc 1 294 0
 477 0030 094B     		ldr	r3, .L25
 478 0032 0022     		movs	r2, #0
 479 0034 DA61     		str	r2, [r3, #28]
 295:Src/main.c    ****   huart4.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 480              		.loc 1 295 0
 481 0036 084B     		ldr	r3, .L25
 482 0038 0022     		movs	r2, #0
 483 003a 1A62     		str	r2, [r3, #32]
 296:Src/main.c    ****   huart4.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 484              		.loc 1 296 0
 485 003c 064B     		ldr	r3, .L25
 486 003e 0022     		movs	r2, #0
 487 0040 5A62     		str	r2, [r3, #36]
 297:Src/main.c    ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 488              		.loc 1 297 0
 489 0042 0548     		ldr	r0, .L25
 490 0044 FFF7FEFF 		bl	HAL_UART_Init
 491 0048 0346     		mov	r3, r0
 492 004a 002B     		cmp	r3, #0
 493 004c 01D0     		beq	.L24
 298:Src/main.c    ****   {
 299:Src/main.c    ****     Error_Handler();
 494              		.loc 1 299 0
 495 004e FFF7FEFF 		bl	Error_Handler
 496              	.L24:
 300:Src/main.c    ****   }
 301:Src/main.c    ****   /* USER CODE BEGIN UART4_Init 2 */
 302:Src/main.c    **** 
 303:Src/main.c    ****   /* USER CODE END UART4_Init 2 */
 304:Src/main.c    **** 
 305:Src/main.c    **** }
 497              		.loc 1 305 0
 498 0052 00BF     		nop
 499 0054 80BD     		pop	{r7, pc}
 500              	.L26:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s 			page 15


 501 0056 00BF     		.align	2
 502              	.L25:
 503 0058 00000000 		.word	huart4
 504 005c 004C0040 		.word	1073761280
 505              		.cfi_endproc
 506              	.LFE142:
 508              		.section	.text.MX_USART6_UART_Init,"ax",%progbits
 509              		.align	1
 510              		.syntax unified
 511              		.thumb
 512              		.thumb_func
 513              		.fpu fpv5-sp-d16
 515              	MX_USART6_UART_Init:
 516              	.LFB143:
 306:Src/main.c    **** 
 307:Src/main.c    **** /**
 308:Src/main.c    ****   * @brief USART6 Initialization Function
 309:Src/main.c    ****   * @param None
 310:Src/main.c    ****   * @retval None
 311:Src/main.c    ****   */
 312:Src/main.c    **** static void MX_USART6_UART_Init(void)
 313:Src/main.c    **** {
 517              		.loc 1 313 0
 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 0
 520              		@ frame_needed = 1, uses_anonymous_args = 0
 521 0000 80B5     		push	{r7, lr}
 522              	.LCFI13:
 523              		.cfi_def_cfa_offset 8
 524              		.cfi_offset 7, -8
 525              		.cfi_offset 14, -4
 526 0002 00AF     		add	r7, sp, #0
 527              	.LCFI14:
 528              		.cfi_def_cfa_register 7
 314:Src/main.c    **** 
 315:Src/main.c    ****   /* USER CODE BEGIN USART6_Init 0 */
 316:Src/main.c    **** 
 317:Src/main.c    ****   /* USER CODE END USART6_Init 0 */
 318:Src/main.c    **** 
 319:Src/main.c    ****   /* USER CODE BEGIN USART6_Init 1 */
 320:Src/main.c    **** 
 321:Src/main.c    ****   /* USER CODE END USART6_Init 1 */
 322:Src/main.c    ****   huart6.Instance = USART6;
 529              		.loc 1 322 0
 530 0004 144B     		ldr	r3, .L30
 531 0006 154A     		ldr	r2, .L30+4
 532 0008 1A60     		str	r2, [r3]
 323:Src/main.c    ****   huart6.Init.BaudRate = 115200;
 533              		.loc 1 323 0
 534 000a 134B     		ldr	r3, .L30
 535 000c 4FF4E132 		mov	r2, #115200
 536 0010 5A60     		str	r2, [r3, #4]
 324:Src/main.c    ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 537              		.loc 1 324 0
 538 0012 114B     		ldr	r3, .L30
 539 0014 0022     		movs	r2, #0
 540 0016 9A60     		str	r2, [r3, #8]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s 			page 16


 325:Src/main.c    ****   huart6.Init.StopBits = UART_STOPBITS_1;
 541              		.loc 1 325 0
 542 0018 0F4B     		ldr	r3, .L30
 543 001a 0022     		movs	r2, #0
 544 001c DA60     		str	r2, [r3, #12]
 326:Src/main.c    ****   huart6.Init.Parity = UART_PARITY_NONE;
 545              		.loc 1 326 0
 546 001e 0E4B     		ldr	r3, .L30
 547 0020 0022     		movs	r2, #0
 548 0022 1A61     		str	r2, [r3, #16]
 327:Src/main.c    ****   huart6.Init.Mode = UART_MODE_TX_RX;
 549              		.loc 1 327 0
 550 0024 0C4B     		ldr	r3, .L30
 551 0026 0C22     		movs	r2, #12
 552 0028 5A61     		str	r2, [r3, #20]
 328:Src/main.c    ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 553              		.loc 1 328 0
 554 002a 0B4B     		ldr	r3, .L30
 555 002c 0022     		movs	r2, #0
 556 002e 9A61     		str	r2, [r3, #24]
 329:Src/main.c    ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 557              		.loc 1 329 0
 558 0030 094B     		ldr	r3, .L30
 559 0032 0022     		movs	r2, #0
 560 0034 DA61     		str	r2, [r3, #28]
 330:Src/main.c    ****   huart6.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 561              		.loc 1 330 0
 562 0036 084B     		ldr	r3, .L30
 563 0038 0022     		movs	r2, #0
 564 003a 1A62     		str	r2, [r3, #32]
 331:Src/main.c    ****   huart6.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 565              		.loc 1 331 0
 566 003c 064B     		ldr	r3, .L30
 567 003e 0022     		movs	r2, #0
 568 0040 5A62     		str	r2, [r3, #36]
 332:Src/main.c    ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 569              		.loc 1 332 0
 570 0042 0548     		ldr	r0, .L30
 571 0044 FFF7FEFF 		bl	HAL_UART_Init
 572 0048 0346     		mov	r3, r0
 573 004a 002B     		cmp	r3, #0
 574 004c 01D0     		beq	.L29
 333:Src/main.c    ****   {
 334:Src/main.c    ****     Error_Handler();
 575              		.loc 1 334 0
 576 004e FFF7FEFF 		bl	Error_Handler
 577              	.L29:
 335:Src/main.c    ****   }
 336:Src/main.c    ****   /* USER CODE BEGIN USART6_Init 2 */
 337:Src/main.c    **** 
 338:Src/main.c    ****   /* USER CODE END USART6_Init 2 */
 339:Src/main.c    **** 
 340:Src/main.c    **** }
 578              		.loc 1 340 0
 579 0052 00BF     		nop
 580 0054 80BD     		pop	{r7, pc}
 581              	.L31:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s 			page 17


 582 0056 00BF     		.align	2
 583              	.L30:
 584 0058 00000000 		.word	huart6
 585 005c 00140140 		.word	1073812480
 586              		.cfi_endproc
 587              	.LFE143:
 589              		.section	.text.MX_GPIO_Init,"ax",%progbits
 590              		.align	1
 591              		.syntax unified
 592              		.thumb
 593              		.thumb_func
 594              		.fpu fpv5-sp-d16
 596              	MX_GPIO_Init:
 597              	.LFB144:
 341:Src/main.c    **** 
 342:Src/main.c    **** /**
 343:Src/main.c    ****   * @brief GPIO Initialization Function
 344:Src/main.c    ****   * @param None
 345:Src/main.c    ****   * @retval None
 346:Src/main.c    ****   */
 347:Src/main.c    **** static void MX_GPIO_Init(void)
 348:Src/main.c    **** {
 598              		.loc 1 348 0
 599              		.cfi_startproc
 600              		@ args = 0, pretend = 0, frame = 32
 601              		@ frame_needed = 1, uses_anonymous_args = 0
 602 0000 80B5     		push	{r7, lr}
 603              	.LCFI15:
 604              		.cfi_def_cfa_offset 8
 605              		.cfi_offset 7, -8
 606              		.cfi_offset 14, -4
 607 0002 88B0     		sub	sp, sp, #32
 608              	.LCFI16:
 609              		.cfi_def_cfa_offset 40
 610 0004 00AF     		add	r7, sp, #0
 611              	.LCFI17:
 612              		.cfi_def_cfa_register 7
 349:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 613              		.loc 1 349 0
 614 0006 07F10C03 		add	r3, r7, #12
 615 000a 0022     		movs	r2, #0
 616 000c 1A60     		str	r2, [r3]
 617 000e 5A60     		str	r2, [r3, #4]
 618 0010 9A60     		str	r2, [r3, #8]
 619 0012 DA60     		str	r2, [r3, #12]
 620 0014 1A61     		str	r2, [r3, #16]
 621              	.LBB4:
 350:Src/main.c    **** 
 351:Src/main.c    ****   /* GPIO Ports Clock Enable */
 352:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 622              		.loc 1 352 0
 623 0016 1D4B     		ldr	r3, .L33
 624 0018 1B6B     		ldr	r3, [r3, #48]
 625 001a 1C4A     		ldr	r2, .L33
 626 001c 43F00403 		orr	r3, r3, #4
 627 0020 1363     		str	r3, [r2, #48]
 628 0022 1A4B     		ldr	r3, .L33
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s 			page 18


 629 0024 1B6B     		ldr	r3, [r3, #48]
 630 0026 03F00403 		and	r3, r3, #4
 631 002a BB60     		str	r3, [r7, #8]
 632 002c BB68     		ldr	r3, [r7, #8]
 633              	.LBE4:
 634              	.LBB5:
 353:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 635              		.loc 1 353 0
 636 002e 174B     		ldr	r3, .L33
 637 0030 1B6B     		ldr	r3, [r3, #48]
 638 0032 164A     		ldr	r2, .L33
 639 0034 43F00103 		orr	r3, r3, #1
 640 0038 1363     		str	r3, [r2, #48]
 641 003a 144B     		ldr	r3, .L33
 642 003c 1B6B     		ldr	r3, [r3, #48]
 643 003e 03F00103 		and	r3, r3, #1
 644 0042 7B60     		str	r3, [r7, #4]
 645 0044 7B68     		ldr	r3, [r7, #4]
 646              	.LBE5:
 647              	.LBB6:
 354:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 648              		.loc 1 354 0
 649 0046 114B     		ldr	r3, .L33
 650 0048 1B6B     		ldr	r3, [r3, #48]
 651 004a 104A     		ldr	r2, .L33
 652 004c 43F00203 		orr	r3, r3, #2
 653 0050 1363     		str	r3, [r2, #48]
 654 0052 0E4B     		ldr	r3, .L33
 655 0054 1B6B     		ldr	r3, [r3, #48]
 656 0056 03F00203 		and	r3, r3, #2
 657 005a 3B60     		str	r3, [r7]
 658 005c 3B68     		ldr	r3, [r7]
 659              	.LBE6:
 355:Src/main.c    **** 
 356:Src/main.c    ****   /*Configure GPIO pin Output Level */
 357:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
 660              		.loc 1 357 0
 661 005e 0022     		movs	r2, #0
 662 0060 0321     		movs	r1, #3
 663 0062 0B48     		ldr	r0, .L33+4
 664 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 358:Src/main.c    **** 
 359:Src/main.c    ****   /*Configure GPIO pins : PB0 PB1 */
 360:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 665              		.loc 1 360 0
 666 0068 0323     		movs	r3, #3
 667 006a FB60     		str	r3, [r7, #12]
 361:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 668              		.loc 1 361 0
 669 006c 0123     		movs	r3, #1
 670 006e 3B61     		str	r3, [r7, #16]
 362:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 671              		.loc 1 362 0
 672 0070 0023     		movs	r3, #0
 673 0072 7B61     		str	r3, [r7, #20]
 363:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 674              		.loc 1 363 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s 			page 19


 675 0074 0023     		movs	r3, #0
 676 0076 BB61     		str	r3, [r7, #24]
 364:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 677              		.loc 1 364 0
 678 0078 07F10C03 		add	r3, r7, #12
 679 007c 1946     		mov	r1, r3
 680 007e 0448     		ldr	r0, .L33+4
 681 0080 FFF7FEFF 		bl	HAL_GPIO_Init
 365:Src/main.c    **** 
 366:Src/main.c    **** }
 682              		.loc 1 366 0
 683 0084 00BF     		nop
 684 0086 2037     		adds	r7, r7, #32
 685              	.LCFI18:
 686              		.cfi_def_cfa_offset 8
 687 0088 BD46     		mov	sp, r7
 688              	.LCFI19:
 689              		.cfi_def_cfa_register 13
 690              		@ sp needed
 691 008a 80BD     		pop	{r7, pc}
 692              	.L34:
 693              		.align	2
 694              	.L33:
 695 008c 00380240 		.word	1073887232
 696 0090 00040240 		.word	1073873920
 697              		.cfi_endproc
 698              	.LFE144:
 700              		.section	.text.Error_Handler,"ax",%progbits
 701              		.align	1
 702              		.global	Error_Handler
 703              		.syntax unified
 704              		.thumb
 705              		.thumb_func
 706              		.fpu fpv5-sp-d16
 708              	Error_Handler:
 709              	.LFB145:
 367:Src/main.c    **** 
 368:Src/main.c    **** /* USER CODE BEGIN 4 */
 369:Src/main.c    **** 
 370:Src/main.c    **** /* USER CODE END 4 */
 371:Src/main.c    **** 
 372:Src/main.c    **** /**
 373:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 374:Src/main.c    ****   * @retval None
 375:Src/main.c    ****   */
 376:Src/main.c    **** void Error_Handler(void)
 377:Src/main.c    **** {
 710              		.loc 1 377 0
 711              		.cfi_startproc
 712              		@ args = 0, pretend = 0, frame = 0
 713              		@ frame_needed = 1, uses_anonymous_args = 0
 714              		@ link register save eliminated.
 715 0000 80B4     		push	{r7}
 716              	.LCFI20:
 717              		.cfi_def_cfa_offset 4
 718              		.cfi_offset 7, -4
 719 0002 00AF     		add	r7, sp, #0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s 			page 20


 720              	.LCFI21:
 721              		.cfi_def_cfa_register 7
 378:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 379:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 380:Src/main.c    **** 
 381:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 382:Src/main.c    **** }
 722              		.loc 1 382 0
 723 0004 00BF     		nop
 724 0006 BD46     		mov	sp, r7
 725              	.LCFI22:
 726              		.cfi_def_cfa_register 13
 727              		@ sp needed
 728 0008 5DF8047B 		ldr	r7, [sp], #4
 729              	.LCFI23:
 730              		.cfi_restore 7
 731              		.cfi_def_cfa_offset 0
 732 000c 7047     		bx	lr
 733              		.cfi_endproc
 734              	.LFE145:
 736              		.text
 737              	.Letext0:
 738              		.file 2 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/machine/_default_types
 739              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_stdint.h"
 740              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 741              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 742              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 743              		.file 7 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/lock.h"
 744              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_types.h"
 745              		.file 9 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 746              		.file 10 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/reent.h"
 747              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 748              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 749              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 750              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 751              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 752              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_spi.h"
 753              		.file 17 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 754              		.file 18 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/unistd.h"
 755              		.file 19 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/stdlib.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
                            *COM*:0000000000000064 hspi1
                            *COM*:0000000000000064 hspi2
                            *COM*:0000000000000070 huart4
                            *COM*:0000000000000070 huart6
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s:22     .rodata:0000000000000000 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s:26     .text.main:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s:33     .text.main:0000000000000000 main
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s:84     .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s:596    .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s:240    .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s:337    .text.MX_SPI2_Init:0000000000000000 MX_SPI2_Init
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s:434    .text.MX_UART4_Init:0000000000000000 MX_UART4_Init
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s:515    .text.MX_USART6_UART_Init:0000000000000000 MX_USART6_UART_Init
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s:72     .text.main:000000000000002c $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s:77     .text.SystemClock_Config:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s:708    .text.Error_Handler:0000000000000000 Error_Handler
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s:228    .text.SystemClock_Config:00000000000000f0 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s:234    .text.MX_SPI1_Init:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s:325    .text.MX_SPI1_Init:0000000000000074 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s:331    .text.MX_SPI2_Init:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s:422    .text.MX_SPI2_Init:0000000000000074 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s:428    .text.MX_UART4_Init:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s:503    .text.MX_UART4_Init:0000000000000058 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s:509    .text.MX_USART6_UART_Init:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s:584    .text.MX_USART6_UART_Init:0000000000000058 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s:590    .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s:695    .text.MX_GPIO_Init:000000000000008c $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccC8dQw0.s:701    .text.Error_Handler:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_Init
my_printf
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_SPI_Init
HAL_UART_Init
HAL_GPIO_WritePin
HAL_GPIO_Init
