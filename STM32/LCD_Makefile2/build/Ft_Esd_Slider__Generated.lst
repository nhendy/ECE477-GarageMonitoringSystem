ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"Ft_Esd_Slider__Generated.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Ft_Esd_Theme_GetBackColor,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	Ft_Esd_Theme_GetBackColor:
  25              	.LFB4:
  26              		.file 1 "FT_Esd_Widgets/Ft_Esd_Theme.h"
   1:FT_Esd_Widgets/Ft_Esd_Theme.h **** 
   2:FT_Esd_Widgets/Ft_Esd_Theme.h **** #ifndef FT_ESD_THEME_H
   3:FT_Esd_Widgets/Ft_Esd_Theme.h **** #define FT_ESD_THEME_H
   4:FT_Esd_Widgets/Ft_Esd_Theme.h **** #include "FT_DataTypes.h"
   5:FT_Esd_Widgets/Ft_Esd_Theme.h **** #include "Ft_Esd.h"
   6:FT_Esd_Widgets/Ft_Esd_Theme.h **** 
   7:FT_Esd_Widgets/Ft_Esd_Theme.h **** ESD_CATEGORY(EsdTheme, DisplayName = "ESD Theme")
   8:FT_Esd_Widgets/Ft_Esd_Theme.h **** ESD_CATEGORY(EsdTheme_Themes, DisplayName = "Themes", Category = EsdTheme)
   9:FT_Esd_Widgets/Ft_Esd_Theme.h **** 
  10:FT_Esd_Widgets/Ft_Esd_Theme.h **** typedef unsigned int ft_uint32_t;
  11:FT_Esd_Widgets/Ft_Esd_Theme.h **** 
  12:FT_Esd_Widgets/Ft_Esd_Theme.h **** typedef struct
  13:FT_Esd_Widgets/Ft_Esd_Theme.h **** {
  14:FT_Esd_Widgets/Ft_Esd_Theme.h **** 	ft_rgb32_t ClearColor;
  15:FT_Esd_Widgets/Ft_Esd_Theme.h **** 	ft_rgb32_t BackColor;
  16:FT_Esd_Widgets/Ft_Esd_Theme.h **** 	ft_rgb32_t TextColor;
  17:FT_Esd_Widgets/Ft_Esd_Theme.h **** 	ft_rgb32_t ButtonTextColor;
  18:FT_Esd_Widgets/Ft_Esd_Theme.h **** 	ft_rgb32_t DefaultColor;
  19:FT_Esd_Widgets/Ft_Esd_Theme.h **** 	ft_rgb32_t PrimaryColor;
  20:FT_Esd_Widgets/Ft_Esd_Theme.h **** } Ft_Esd_Theme;
  21:FT_Esd_Widgets/Ft_Esd_Theme.h **** 
  22:FT_Esd_Widgets/Ft_Esd_Theme.h **** ESD_TYPE(Ft_Esd_Theme *, Native = Pointer, Edit = Library)
  23:FT_Esd_Widgets/Ft_Esd_Theme.h **** 
  24:FT_Esd_Widgets/Ft_Esd_Theme.h **** ESD_RENDER(Ft_Esd_Theme_SetCurrent, DisplayName = "Set Current Theme", Category = EsdTheme, Include
  25:FT_Esd_Widgets/Ft_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *)
  26:FT_Esd_Widgets/Ft_Esd_Theme.h **** void Ft_Esd_Theme_SetCurrent(Ft_Esd_Theme *theme);
  27:FT_Esd_Widgets/Ft_Esd_Theme.h **** 
  28:FT_Esd_Widgets/Ft_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetCurrent, DisplayName = "Current Theme", Category = EsdTheme, Type = Ft
  29:FT_Esd_Widgets/Ft_Esd_Theme.h **** Ft_Esd_Theme *Ft_Esd_Theme_GetCurrent();
  30:FT_Esd_Widgets/Ft_Esd_Theme.h **** 
  31:FT_Esd_Widgets/Ft_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetClearColor, DisplayName = "Get Clear Color", Category = EsdTheme, Type
  32:FT_Esd_Widgets/Ft_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s 			page 2


  33:FT_Esd_Widgets/Ft_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetClearColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_Es
  34:FT_Esd_Widgets/Ft_Esd_Theme.h **** 
  35:FT_Esd_Widgets/Ft_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetBackColor, DisplayName = "Get Back Color", Category = EsdTheme, Type =
  36:FT_Esd_Widgets/Ft_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  37:FT_Esd_Widgets/Ft_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetBackColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_Esd
  27              		.loc 1 37 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
  43              		.loc 1 37 0
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 002B     		cmp	r3, #0
  46 000c 04D1     		bne	.L2
  47              		.loc 1 37 0 is_stmt 0 discriminator 1
  48 000e FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
  49 0012 0346     		mov	r3, r0
  50 0014 5B68     		ldr	r3, [r3, #4]
  51 0016 01E0     		b	.L3
  52              	.L2:
  53              		.loc 1 37 0 discriminator 2
  54 0018 7B68     		ldr	r3, [r7, #4]
  55 001a 5B68     		ldr	r3, [r3, #4]
  56              	.L3:
  57              		.loc 1 37 0
  58 001c 1846     		mov	r0, r3
  59 001e 0837     		adds	r7, r7, #8
  60              	.LCFI3:
  61              		.cfi_def_cfa_offset 8
  62 0020 BD46     		mov	sp, r7
  63              	.LCFI4:
  64              		.cfi_def_cfa_register 13
  65              		@ sp needed
  66 0022 80BD     		pop	{r7, pc}
  67              		.cfi_endproc
  68              	.LFE4:
  70              		.section	.text.Ft_Esd_Theme_GetCurrentColor,"ax",%progbits
  71              		.align	1
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  75              		.fpu fpv5-sp-d16
  77              	Ft_Esd_Theme_GetCurrentColor:
  78              	.LFB7:
  38:FT_Esd_Widgets/Ft_Esd_Theme.h **** 
  39:FT_Esd_Widgets/Ft_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetTextColor, DisplayName = "Get Text Color", Category = EsdTheme, Type =
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s 			page 3


  40:FT_Esd_Widgets/Ft_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  41:FT_Esd_Widgets/Ft_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetTextColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_Esd
  42:FT_Esd_Widgets/Ft_Esd_Theme.h **** 
  43:FT_Esd_Widgets/Ft_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetButtonTextColor, DisplayName = "Get Button Text Color", Category = Esd
  44:FT_Esd_Widgets/Ft_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  45:FT_Esd_Widgets/Ft_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetButtonTextColor(Ft_Esd_Theme *theme) { if (!theme) return 
  46:FT_Esd_Widgets/Ft_Esd_Theme.h **** 
  47:FT_Esd_Widgets/Ft_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetCurrentColor, DisplayName = "Get Default Color", Category = EsdTheme, 
  48:FT_Esd_Widgets/Ft_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  49:FT_Esd_Widgets/Ft_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetCurrentColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_
  79              		.loc 1 49 0 is_stmt 1
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 8
  82              		@ frame_needed = 1, uses_anonymous_args = 0
  83 0000 80B5     		push	{r7, lr}
  84              	.LCFI5:
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 7, -8
  87              		.cfi_offset 14, -4
  88 0002 82B0     		sub	sp, sp, #8
  89              	.LCFI6:
  90              		.cfi_def_cfa_offset 16
  91 0004 00AF     		add	r7, sp, #0
  92              	.LCFI7:
  93              		.cfi_def_cfa_register 7
  94 0006 7860     		str	r0, [r7, #4]
  95              		.loc 1 49 0
  96 0008 7B68     		ldr	r3, [r7, #4]
  97 000a 002B     		cmp	r3, #0
  98 000c 04D1     		bne	.L5
  99              		.loc 1 49 0 is_stmt 0 discriminator 1
 100 000e FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
 101 0012 0346     		mov	r3, r0
 102 0014 1B69     		ldr	r3, [r3, #16]
 103 0016 01E0     		b	.L6
 104              	.L5:
 105              		.loc 1 49 0 discriminator 2
 106 0018 7B68     		ldr	r3, [r7, #4]
 107 001a 1B69     		ldr	r3, [r3, #16]
 108              	.L6:
 109              		.loc 1 49 0
 110 001c 1846     		mov	r0, r3
 111 001e 0837     		adds	r7, r7, #8
 112              	.LCFI8:
 113              		.cfi_def_cfa_offset 8
 114 0020 BD46     		mov	sp, r7
 115              	.LCFI9:
 116              		.cfi_def_cfa_register 13
 117              		@ sp needed
 118 0022 80BD     		pop	{r7, pc}
 119              		.cfi_endproc
 120              	.LFE7:
 122              		.section	.text.Ft_Esd_Theme_GetPrimaryColor,"ax",%progbits
 123              		.align	1
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s 			page 4


 127              		.fpu fpv5-sp-d16
 129              	Ft_Esd_Theme_GetPrimaryColor:
 130              	.LFB8:
  50:FT_Esd_Widgets/Ft_Esd_Theme.h **** 
  51:FT_Esd_Widgets/Ft_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetPrimaryColor, DisplayName = "Get Primary Color", Category = EsdTheme, 
  52:FT_Esd_Widgets/Ft_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  53:FT_Esd_Widgets/Ft_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetPrimaryColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_
 131              		.loc 1 53 0 is_stmt 1
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 8
 134              		@ frame_needed = 1, uses_anonymous_args = 0
 135 0000 80B5     		push	{r7, lr}
 136              	.LCFI10:
 137              		.cfi_def_cfa_offset 8
 138              		.cfi_offset 7, -8
 139              		.cfi_offset 14, -4
 140 0002 82B0     		sub	sp, sp, #8
 141              	.LCFI11:
 142              		.cfi_def_cfa_offset 16
 143 0004 00AF     		add	r7, sp, #0
 144              	.LCFI12:
 145              		.cfi_def_cfa_register 7
 146 0006 7860     		str	r0, [r7, #4]
 147              		.loc 1 53 0
 148 0008 7B68     		ldr	r3, [r7, #4]
 149 000a 002B     		cmp	r3, #0
 150 000c 04D1     		bne	.L8
 151              		.loc 1 53 0 is_stmt 0 discriminator 1
 152 000e FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
 153 0012 0346     		mov	r3, r0
 154 0014 5B69     		ldr	r3, [r3, #20]
 155 0016 01E0     		b	.L9
 156              	.L8:
 157              		.loc 1 53 0 discriminator 2
 158 0018 7B68     		ldr	r3, [r7, #4]
 159 001a 5B69     		ldr	r3, [r3, #20]
 160              	.L9:
 161              		.loc 1 53 0
 162 001c 1846     		mov	r0, r3
 163 001e 0837     		adds	r7, r7, #8
 164              	.LCFI13:
 165              		.cfi_def_cfa_offset 8
 166 0020 BD46     		mov	sp, r7
 167              	.LCFI14:
 168              		.cfi_def_cfa_register 13
 169              		@ sp needed
 170 0022 80BD     		pop	{r7, pc}
 171              		.cfi_endproc
 172              	.LFE8:
 174              		.section	.text.Ft_Esd_BitmapCell_GetInfo,"ax",%progbits
 175              		.align	1
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 179              		.fpu fpv5-sp-d16
 181              	Ft_Esd_BitmapCell_GetInfo:
 182              	.LFB9:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s 			page 5


 183              		.file 2 "FT_Esd_Framework/Ft_Esd_BitmapInfo.h"
   1:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** /*
   2:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** Bitmap info structure
   3:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** */
   4:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
   5:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #ifndef FT_ESD_BITMAPINFO_H
   6:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #define FT_ESD_BITMAPINFO_H
   7:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
   8:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "Ft_Esd.h"
   9:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "FT_DataTypes.h"
  10:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "Ft_Esd_GpuAlloc.h"
  11:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  12:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapInfo, Native = Struct) // TODO: Struct support, expose values
  13:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  14:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  15:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Width;
  16:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Height;
  17:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Stride;
  18:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Format;
  19:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Size;
  20:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	const char *File;
  21:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  22:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Handle pointing to the address in RAM_G if it is allocated
  23:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_GpuHandle GpuHandle;
  24:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  25:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Bitmap handle that is being used
  26:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_uint32_t BitmapHandle;
  27:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  28:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	const char *PaletteFile;
  29:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_GpuHandle PaletteGpuHandle;
  30:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  31:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// When this is set, the allocated ram is not free'd automatically
  32:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Use Ft_Esd_GpuAlloc_Free(GpuAlloc, GpuHandle) to free the GPU ram manually
  33:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_bool_t Persistent;
  34:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  35:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_BitmapInfo;
  36:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  37:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapInfo *, Native = Pointer, Edit = Library)
  38:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  39:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapCell, Native = Struct) // TODO: Struct support, expose values
  40:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  41:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  42:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapInfo *Info;
  43:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Cell;
  44:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_BitmapCell;
  45:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  46:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapCell *, Native = Pointer, Edit = Library)
  47:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  48:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // Attempts to load the specified bitmap if it has not been loaded into RAM_G yet.
  49:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // Call during the Update cycle of each frame to keep the bitmap flagged as in use, otherwise the m
  50:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_LoadBitmap, Type = ft_uint32_t, Include = "Ft_Esd_BitmapInfo.h", DisplayName = 
  51:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapInfo, Type = Ft_Esd_BitmapInfo *)
  52:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ft_uint32_t Ft_Esd_LoadBitmap(Ft_Esd_BitmapInfo *bitmapInfo);
  53:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  54:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_LoadPalette, Type = ft_uint32_t, Include = "Ft_Esd_BitmapInfo.h", DisplayName =
  55:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapInfo, Type = Ft_Esd_BitmapInfo *)
  56:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ft_uint32_t Ft_Esd_LoadPalette(Ft_Esd_BitmapInfo *bitmapInfo);
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s 			page 6


  57:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  58:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_ENUM(_BitmapResourceFormat, DisplayName = "Bitmap Format")
  59:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB1555)
  60:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L1)
  61:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L2)
  62:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L4)
  63:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L8)
  64:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(RGB332)
  65:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB2)
  66:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB4)
  67:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(RGB565)
  68:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(PALETTED565)
  69:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(PALETTED4444)
  70:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(PALETTED8)
  71:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(JPEG)
  72:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(PNG)
  73:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_END()
  74:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  75:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_LOGIC(Ft_Esd_SwitchBitmapCell, Callback, Include = "Ft_Esd_BitmapInfo.h", DisplayName = "Switch
  76:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  77:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  78:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Callback
  79:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	void *Parent;
  80:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  81:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  82:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Input
  83:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  84:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  85:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ESD_INPUT(BitmapInfo, Type = Ft_Esd_BitmapInfo *, DisplayName = "Bitmap Info")
  86:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapInfo *(* BitmapInfo)(void *context);
  87:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  88:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ESD_INPUT(Cell, Type = ft_uint8_t, DisplayName = "Cell")
  89:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_uint8_t(* Cell)(void *context);
  90:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  91:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  92:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Variables
  93:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  94:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  95:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// BitmapCell object
  96:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapCell BitmapCell;
  97:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  98:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_SwitchBitmapCell;
  99:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 100:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** void Ft_Esd_SwitchBitmapCell__Initializer(Ft_Esd_SwitchBitmapCell *context);
 101:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 102:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_OUTPUT(BitmapCell, Type = Ft_Esd_BitmapCell *, DisplayName = "Bitmap Cell")
 103:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** Ft_Esd_BitmapCell *Ft_Esd_SwitchBitmapCell_BitmapCell(Ft_Esd_SwitchBitmapCell *context);
 104:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 105:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_UPDATE(Ft_Esd_BitmapPersist, DisplayName = "Bitmap Persist", Category = EsdUtilities)
 106:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapCell, Type = Ft_Esd_BitmapCell *)
 107:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** void Ft_Esd_BitmapPersist(Ft_Esd_BitmapCell *bitmapCell);
 108:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 109:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_BitmapCell_GetInfo, Type = Ft_Esd_BitmapInfo *, DisplayName = "ESD BitmapCell G
 110:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapCell, Type = Ft_Esd_BitmapCell *)
 111:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** static Ft_Esd_BitmapInfo *Ft_Esd_BitmapCell_GetInfo(Ft_Esd_BitmapCell *bitmapCell)
 112:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
 184              		.loc 2 112 0 is_stmt 1
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s 			page 7


 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 8
 187              		@ frame_needed = 1, uses_anonymous_args = 0
 188              		@ link register save eliminated.
 189 0000 80B4     		push	{r7}
 190              	.LCFI15:
 191              		.cfi_def_cfa_offset 4
 192              		.cfi_offset 7, -4
 193 0002 83B0     		sub	sp, sp, #12
 194              	.LCFI16:
 195              		.cfi_def_cfa_offset 16
 196 0004 00AF     		add	r7, sp, #0
 197              	.LCFI17:
 198              		.cfi_def_cfa_register 7
 199 0006 7860     		str	r0, [r7, #4]
 113:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	if (!bitmapCell) return 0;
 200              		.loc 2 113 0
 201 0008 7B68     		ldr	r3, [r7, #4]
 202 000a 002B     		cmp	r3, #0
 203 000c 01D1     		bne	.L11
 204              		.loc 2 113 0 is_stmt 0 discriminator 1
 205 000e 0023     		movs	r3, #0
 206 0010 01E0     		b	.L12
 207              	.L11:
 114:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	return bitmapCell->Info;
 208              		.loc 2 114 0 is_stmt 1
 209 0012 7B68     		ldr	r3, [r7, #4]
 210 0014 1B68     		ldr	r3, [r3]
 211              	.L12:
 115:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** }
 212              		.loc 2 115 0
 213 0016 1846     		mov	r0, r3
 214 0018 0C37     		adds	r7, r7, #12
 215              	.LCFI18:
 216              		.cfi_def_cfa_offset 4
 217 001a BD46     		mov	sp, r7
 218              	.LCFI19:
 219              		.cfi_def_cfa_register 13
 220              		@ sp needed
 221 001c 5DF8047B 		ldr	r7, [sp], #4
 222              	.LCFI20:
 223              		.cfi_restore 7
 224              		.cfi_def_cfa_offset 0
 225 0020 7047     		bx	lr
 226              		.cfi_endproc
 227              	.LFE9:
 229              		.section	.text.Ft_Esd_Dl_TAG,"ax",%progbits
 230              		.align	1
 231              		.syntax unified
 232              		.thumb
 233              		.thumb_func
 234              		.fpu fpv5-sp-d16
 236              	Ft_Esd_Dl_TAG:
 237              	.LFB12:
 238              		.file 3 "FT_Esd_Framework/FT_Esd_Dl.h"
   1:FT_Esd_Framework/FT_Esd_Dl.h **** 
   2:FT_Esd_Framework/FT_Esd_Dl.h **** #ifndef FT_ESD_DL_H
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s 			page 8


   3:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_DL_H
   4:FT_Esd_Framework/FT_Esd_Dl.h **** 
   5:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_DataTypes.h"
   6:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_Platform.h"
   7:FT_Esd_Framework/FT_Esd_Dl.h **** #include "Ft_Esd.h"
   8:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_Gpu.h"
   9:FT_Esd_Framework/FT_Esd_Dl.h **** #include "Ft_Esd_BitmapInfo.h"
  10:FT_Esd_Framework/FT_Esd_Dl.h **** 
  11:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_CATEGORY(EsdUtilities, DisplayName = "ESD Utilities")
  12:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_CATEGORY(EveRenderFunctions, DisplayName = "EVE Render Functions")
  13:FT_Esd_Framework/FT_Esd_Dl.h **** 
  14:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_TYPE(Ft_Gpu_Hal_Context_t *, Native = Pointer, Edit = Library)
  15:FT_Esd_Framework/FT_Esd_Dl.h **** 
  16:FT_Esd_Framework/FT_Esd_Dl.h **** // Keep cache of displaylist values that don't often change but are generally set by every widget t
  17:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_OPTIMIZE_DISPLAYLIST 1
  18:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_STATE_STACK_SIZE 5
  19:FT_Esd_Framework/FT_Esd_Dl.h **** 
  20:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_BITMAPHANDLE_INVALID 255
  21:FT_Esd_Framework/FT_Esd_Dl.h **** 
  22:FT_Esd_Framework/FT_Esd_Dl.h **** //
  23:FT_Esd_Framework/FT_Esd_Dl.h **** // Structs
  24:FT_Esd_Framework/FT_Esd_Dl.h **** //
  25:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_ESD_OPTIMIZE_DISPLAYLIST
  26:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_STATE Ft_Esd_GpuState[Ft_Esd_GpuState_I]
  27:FT_Esd_Framework/FT_Esd_Dl.h **** typedef struct
  28:FT_Esd_Framework/FT_Esd_Dl.h **** {
  29:FT_Esd_Framework/FT_Esd_Dl.h **** 	// Keep to a minimum
  30:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_81X_ENABLE
  31:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint32_t PaletteSource;
  32:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  33:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint32_t ColorRGB;
  34:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t ColorA;
  35:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t Handle;         // Current handle
  36:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t Cell;           // Current cell
  37:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_bool_t BitmapTransform; // BitmapTransform other than default is set
  38:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_81X_ENABLE
  39:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t VertexFormat;   // Current vertex format
  40:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  41:FT_Esd_Framework/FT_Esd_Dl.h **** } Ft_Esd_GpuState_T;
  42:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  43:FT_Esd_Framework/FT_Esd_Dl.h **** 
  44:FT_Esd_Framework/FT_Esd_Dl.h **** //
  45:FT_Esd_Framework/FT_Esd_Dl.h **** // Globals
  46:FT_Esd_Framework/FT_Esd_Dl.h **** //
  47:FT_Esd_Framework/FT_Esd_Dl.h **** extern Ft_Gpu_Hal_Context_t *Ft_Esd_Host;
  48:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint16_t Ft_Esd_FontHeight[32];
  49:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_ESD_OPTIMIZE_DISPLAYLIST
  50:FT_Esd_Framework/FT_Esd_Dl.h **** extern Ft_Esd_GpuState_T Ft_Esd_GpuState[FT_ESD_STATE_STACK_SIZE];
  51:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint8_t Ft_Esd_GpuState_I;
  52:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint32_t Ft_Esd_CoFgColor;
  53:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint32_t Ft_Esd_CoBgColor;
  54:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  55:FT_Esd_Framework/FT_Esd_Dl.h **** 
  56:FT_Esd_Framework/FT_Esd_Dl.h **** //Get the height of builtin font
  57:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_GetFontHeight, Type = ft_uint16_t ,DisplayName = "Get Font Height", Category = 
  58:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(i, Type = int, DisplayName = "Bitmap Handle", Default = 0, Min = 0, Max = 31)
  59:FT_Esd_Framework/FT_Esd_Dl.h **** // inline static ft_uint16_t Ft_Esd_GetFontHeight(int i) { return Ft_Esd_FontHeight[i]; }
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s 			page 9


  60:FT_Esd_Framework/FT_Esd_Dl.h **** #define Ft_Esd_GetFontHeight(i) (Ft_Esd_FontHeight[i]);
  61:FT_Esd_Framework/FT_Esd_Dl.h **** 
  62:FT_Esd_Framework/FT_Esd_Dl.h **** // Reset any cached state
  63:FT_Esd_Framework/FT_Esd_Dl.h **** void Ft_Esd_ResetGpuState();
  64:FT_Esd_Framework/FT_Esd_Dl.h **** void Ft_Esd_ResetCoState();
  65:FT_Esd_Framework/FT_Esd_Dl.h **** 
  66:FT_Esd_Framework/FT_Esd_Dl.h **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotalUsed();
  67:FT_Esd_Framework/FT_Esd_Dl.h **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotal();
  68:FT_Esd_Framework/FT_Esd_Dl.h **** 
  69:FT_Esd_Framework/FT_Esd_Dl.h **** /// Set current tag. Must be returned to 255 after usage, to ensure next widgets don't draw with in
  70:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_TAG, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  71:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(s, Type = ft_uint8_t, DisplayName = "Tag", Default = 255, Min = 0, Max = 255)
  72:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_TAG(ft_uint8_t s)
  73:FT_Esd_Framework/FT_Esd_Dl.h **** {
 239              		.loc 3 73 0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 8
 242              		@ frame_needed = 1, uses_anonymous_args = 0
 243 0000 80B5     		push	{r7, lr}
 244              	.LCFI21:
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 7, -8
 247              		.cfi_offset 14, -4
 248 0002 82B0     		sub	sp, sp, #8
 249              	.LCFI22:
 250              		.cfi_def_cfa_offset 16
 251 0004 00AF     		add	r7, sp, #0
 252              	.LCFI23:
 253              		.cfi_def_cfa_register 7
 254 0006 0346     		mov	r3, r0
 255 0008 FB71     		strb	r3, [r7, #7]
  74:FT_Esd_Framework/FT_Esd_Dl.h **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, TAG(s));
 256              		.loc 3 74 0
 257 000a 064B     		ldr	r3, .L14
 258 000c 1A68     		ldr	r2, [r3]
 259 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 260 0010 43F04073 		orr	r3, r3, #50331648
 261 0014 1946     		mov	r1, r3
 262 0016 1046     		mov	r0, r2
 263 0018 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  75:FT_Esd_Framework/FT_Esd_Dl.h **** }
 264              		.loc 3 75 0
 265 001c 00BF     		nop
 266 001e 0837     		adds	r7, r7, #8
 267              	.LCFI24:
 268              		.cfi_def_cfa_offset 8
 269 0020 BD46     		mov	sp, r7
 270              	.LCFI25:
 271              		.cfi_def_cfa_register 13
 272              		@ sp needed
 273 0022 80BD     		pop	{r7, pc}
 274              	.L15:
 275              		.align	2
 276              	.L14:
 277 0024 00000000 		.word	Ft_Esd_Host
 278              		.cfi_endproc
 279              	.LFE12:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s 			page 10


 281              		.section	.text.Ft_Esd_Dl_COLOR_RGB,"ax",%progbits
 282              		.align	1
 283              		.syntax unified
 284              		.thumb
 285              		.thumb_func
 286              		.fpu fpv5-sp-d16
 288              	Ft_Esd_Dl_COLOR_RGB:
 289              	.LFB13:
  76:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify color RGB
  77:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_RGB, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  78:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(c, Type = ft_rgb32_t, DisplayName = "Color")
  79:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_RGB(ft_rgb32_t c)
  80:FT_Esd_Framework/FT_Esd_Dl.h **** {
 290              		.loc 3 80 0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 16
 293              		@ frame_needed = 1, uses_anonymous_args = 0
 294 0000 80B5     		push	{r7, lr}
 295              	.LCFI26:
 296              		.cfi_def_cfa_offset 8
 297              		.cfi_offset 7, -8
 298              		.cfi_offset 14, -4
 299 0002 84B0     		sub	sp, sp, #16
 300              	.LCFI27:
 301              		.cfi_def_cfa_offset 24
 302 0004 00AF     		add	r7, sp, #0
 303              	.LCFI28:
 304              		.cfi_def_cfa_register 7
 305 0006 7860     		str	r0, [r7, #4]
  81:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  82:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_rgb32_t rgb = c & 0xFFFFFF;
 306              		.loc 3 82 0
 307 0008 7B68     		ldr	r3, [r7, #4]
 308 000a 23F07F43 		bic	r3, r3, #-16777216
 309 000e FB60     		str	r3, [r7, #12]
  83:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (rgb != FT_ESD_STATE.ColorRGB)
 310              		.loc 3 83 0
 311 0010 0F4B     		ldr	r3, .L19
 312 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 313 0014 0F4A     		ldr	r2, .L19+4
 314 0016 1B01     		lsls	r3, r3, #4
 315 0018 1344     		add	r3, r3, r2
 316 001a 0433     		adds	r3, r3, #4
 317 001c 1B68     		ldr	r3, [r3]
 318 001e FA68     		ldr	r2, [r7, #12]
 319 0020 9A42     		cmp	r2, r3
 320 0022 10D0     		beq	.L18
  84:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
  85:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  86:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, (4UL << 24) | (rgb));
 321              		.loc 3 86 0
 322 0024 0C4B     		ldr	r3, .L19+8
 323 0026 1A68     		ldr	r2, [r3]
 324 0028 FB68     		ldr	r3, [r7, #12]
 325 002a 43F08063 		orr	r3, r3, #67108864
 326 002e 1946     		mov	r1, r3
 327 0030 1046     		mov	r0, r2
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s 			page 11


 328 0032 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  87:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  88:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.ColorRGB = rgb;
 329              		.loc 3 88 0
 330 0036 064B     		ldr	r3, .L19
 331 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 332 003a 064A     		ldr	r2, .L19+4
 333 003c 1B01     		lsls	r3, r3, #4
 334 003e 1344     		add	r3, r3, r2
 335 0040 0433     		adds	r3, r3, #4
 336 0042 FA68     		ldr	r2, [r7, #12]
 337 0044 1A60     		str	r2, [r3]
 338              	.L18:
  89:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
  90:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  91:FT_Esd_Framework/FT_Esd_Dl.h **** }
 339              		.loc 3 91 0
 340 0046 00BF     		nop
 341 0048 1037     		adds	r7, r7, #16
 342              	.LCFI29:
 343              		.cfi_def_cfa_offset 8
 344 004a BD46     		mov	sp, r7
 345              	.LCFI30:
 346              		.cfi_def_cfa_register 13
 347              		@ sp needed
 348 004c 80BD     		pop	{r7, pc}
 349              	.L20:
 350 004e 00BF     		.align	2
 351              	.L19:
 352 0050 00000000 		.word	Ft_Esd_GpuState_I
 353 0054 00000000 		.word	Ft_Esd_GpuState
 354 0058 00000000 		.word	Ft_Esd_Host
 355              		.cfi_endproc
 356              	.LFE13:
 358              		.section	.text.Ft_Esd_Dl_COLOR_A,"ax",%progbits
 359              		.align	1
 360              		.syntax unified
 361              		.thumb
 362              		.thumb_func
 363              		.fpu fpv5-sp-d16
 365              	Ft_Esd_Dl_COLOR_A:
 366              	.LFB14:
  92:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify alpha channel
  93:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_A, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  94:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(alpha, Type = ft_uint8_t, Default = 255, Min = 0, Max = 255)
  95:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_A(ft_uint8_t alpha)
  96:FT_Esd_Framework/FT_Esd_Dl.h **** {
 367              		.loc 3 96 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 8
 370              		@ frame_needed = 1, uses_anonymous_args = 0
 371 0000 80B5     		push	{r7, lr}
 372              	.LCFI31:
 373              		.cfi_def_cfa_offset 8
 374              		.cfi_offset 7, -8
 375              		.cfi_offset 14, -4
 376 0002 82B0     		sub	sp, sp, #8
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s 			page 12


 377              	.LCFI32:
 378              		.cfi_def_cfa_offset 16
 379 0004 00AF     		add	r7, sp, #0
 380              	.LCFI33:
 381              		.cfi_def_cfa_register 7
 382 0006 0346     		mov	r3, r0
 383 0008 FB71     		strb	r3, [r7, #7]
  97:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  98:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (alpha != FT_ESD_STATE.ColorA)
 384              		.loc 3 98 0
 385 000a 0F4B     		ldr	r3, .L24
 386 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 387 000e 0F4A     		ldr	r2, .L24+4
 388 0010 1B01     		lsls	r3, r3, #4
 389 0012 1344     		add	r3, r3, r2
 390 0014 0833     		adds	r3, r3, #8
 391 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 392 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 393 001a 9A42     		cmp	r2, r3
 394 001c 10D0     		beq	.L23
  99:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
 100:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 101:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, COLOR_A(alpha));
 395              		.loc 3 101 0
 396 001e 0C4B     		ldr	r3, .L24+8
 397 0020 1A68     		ldr	r2, [r3]
 398 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 399 0024 43F08053 		orr	r3, r3, #268435456
 400 0028 1946     		mov	r1, r3
 401 002a 1046     		mov	r0, r2
 402 002c FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 102:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 103:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.ColorA = alpha;
 403              		.loc 3 103 0
 404 0030 054B     		ldr	r3, .L24
 405 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 406 0034 054A     		ldr	r2, .L24+4
 407 0036 1B01     		lsls	r3, r3, #4
 408 0038 1344     		add	r3, r3, r2
 409 003a 0833     		adds	r3, r3, #8
 410 003c FA79     		ldrb	r2, [r7, #7]
 411 003e 1A70     		strb	r2, [r3]
 412              	.L23:
 104:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
 105:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 106:FT_Esd_Framework/FT_Esd_Dl.h **** }
 413              		.loc 3 106 0
 414 0040 00BF     		nop
 415 0042 0837     		adds	r7, r7, #8
 416              	.LCFI34:
 417              		.cfi_def_cfa_offset 8
 418 0044 BD46     		mov	sp, r7
 419              	.LCFI35:
 420              		.cfi_def_cfa_register 13
 421              		@ sp needed
 422 0046 80BD     		pop	{r7, pc}
 423              	.L25:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s 			page 13


 424              		.align	2
 425              	.L24:
 426 0048 00000000 		.word	Ft_Esd_GpuState_I
 427 004c 00000000 		.word	Ft_Esd_GpuState
 428 0050 00000000 		.word	Ft_Esd_Host
 429              		.cfi_endproc
 430              	.LFE14:
 432              		.section	.text.Ft_Esd_Slider_Theme__Default,"ax",%progbits
 433              		.align	1
 434              		.global	Ft_Esd_Slider_Theme__Default
 435              		.syntax unified
 436              		.thumb
 437              		.thumb_func
 438              		.fpu fpv5-sp-d16
 440              	Ft_Esd_Slider_Theme__Default:
 441              	.LFB23:
 442              		.file 4 "FT_Esd_Widgets/Ft_Esd_Slider__Generated.c"
   1:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** /*
   2:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** This file is automatically generated
   3:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** Ft_Esd_Slider
   4:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** C Source
   5:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** */
   6:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 
   7:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** #include "Ft_Esd_Slider.h"
   8:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 
   9:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** #include "FT_Esd_CoPro_Cmds.h"
  10:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** #include "FT_Esd_Dl.h"
  11:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** #include "FT_Gpu.h"
  12:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 
  13:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** extern void Ft_Esd_Noop(void *context);
  14:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** Ft_Esd_Theme * Ft_Esd_Slider_Theme__Default(void *context) { return Ft_Esd_Theme_GetCurrent(); }
 443              		.loc 4 14 0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 8
 446              		@ frame_needed = 1, uses_anonymous_args = 0
 447 0000 80B5     		push	{r7, lr}
 448              	.LCFI36:
 449              		.cfi_def_cfa_offset 8
 450              		.cfi_offset 7, -8
 451              		.cfi_offset 14, -4
 452 0002 82B0     		sub	sp, sp, #8
 453              	.LCFI37:
 454              		.cfi_def_cfa_offset 16
 455 0004 00AF     		add	r7, sp, #0
 456              	.LCFI38:
 457              		.cfi_def_cfa_register 7
 458 0006 7860     		str	r0, [r7, #4]
 459              		.loc 4 14 0
 460 0008 FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
 461 000c 0346     		mov	r3, r0
 462 000e 1846     		mov	r0, r3
 463 0010 0837     		adds	r7, r7, #8
 464              	.LCFI39:
 465              		.cfi_def_cfa_offset 8
 466 0012 BD46     		mov	sp, r7
 467              	.LCFI40:
 468              		.cfi_def_cfa_register 13
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s 			page 14


 469              		@ sp needed
 470 0014 80BD     		pop	{r7, pc}
 471              		.cfi_endproc
 472              	.LFE23:
 474              		.section	.text.Ft_Esd_Slider_X__Default,"ax",%progbits
 475              		.align	1
 476              		.global	Ft_Esd_Slider_X__Default
 477              		.syntax unified
 478              		.thumb
 479              		.thumb_func
 480              		.fpu fpv5-sp-d16
 482              	Ft_Esd_Slider_X__Default:
 483              	.LFB24:
  15:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** ft_int16_t Ft_Esd_Slider_X__Default(void *context) { return 10; }
 484              		.loc 4 15 0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 8
 487              		@ frame_needed = 1, uses_anonymous_args = 0
 488              		@ link register save eliminated.
 489 0000 80B4     		push	{r7}
 490              	.LCFI41:
 491              		.cfi_def_cfa_offset 4
 492              		.cfi_offset 7, -4
 493 0002 83B0     		sub	sp, sp, #12
 494              	.LCFI42:
 495              		.cfi_def_cfa_offset 16
 496 0004 00AF     		add	r7, sp, #0
 497              	.LCFI43:
 498              		.cfi_def_cfa_register 7
 499 0006 7860     		str	r0, [r7, #4]
 500              		.loc 4 15 0
 501 0008 0A23     		movs	r3, #10
 502 000a 1846     		mov	r0, r3
 503 000c 0C37     		adds	r7, r7, #12
 504              	.LCFI44:
 505              		.cfi_def_cfa_offset 4
 506 000e BD46     		mov	sp, r7
 507              	.LCFI45:
 508              		.cfi_def_cfa_register 13
 509              		@ sp needed
 510 0010 5DF8047B 		ldr	r7, [sp], #4
 511              	.LCFI46:
 512              		.cfi_restore 7
 513              		.cfi_def_cfa_offset 0
 514 0014 7047     		bx	lr
 515              		.cfi_endproc
 516              	.LFE24:
 518              		.section	.text.Ft_Esd_Slider_Y__Default,"ax",%progbits
 519              		.align	1
 520              		.global	Ft_Esd_Slider_Y__Default
 521              		.syntax unified
 522              		.thumb
 523              		.thumb_func
 524              		.fpu fpv5-sp-d16
 526              	Ft_Esd_Slider_Y__Default:
 527              	.LFB25:
  16:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** ft_int16_t Ft_Esd_Slider_Y__Default(void *context) { return 10; }
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s 			page 15


 528              		.loc 4 16 0
 529              		.cfi_startproc
 530              		@ args = 0, pretend = 0, frame = 8
 531              		@ frame_needed = 1, uses_anonymous_args = 0
 532              		@ link register save eliminated.
 533 0000 80B4     		push	{r7}
 534              	.LCFI47:
 535              		.cfi_def_cfa_offset 4
 536              		.cfi_offset 7, -4
 537 0002 83B0     		sub	sp, sp, #12
 538              	.LCFI48:
 539              		.cfi_def_cfa_offset 16
 540 0004 00AF     		add	r7, sp, #0
 541              	.LCFI49:
 542              		.cfi_def_cfa_register 7
 543 0006 7860     		str	r0, [r7, #4]
 544              		.loc 4 16 0
 545 0008 0A23     		movs	r3, #10
 546 000a 1846     		mov	r0, r3
 547 000c 0C37     		adds	r7, r7, #12
 548              	.LCFI50:
 549              		.cfi_def_cfa_offset 4
 550 000e BD46     		mov	sp, r7
 551              	.LCFI51:
 552              		.cfi_def_cfa_register 13
 553              		@ sp needed
 554 0010 5DF8047B 		ldr	r7, [sp], #4
 555              	.LCFI52:
 556              		.cfi_restore 7
 557              		.cfi_def_cfa_offset 0
 558 0014 7047     		bx	lr
 559              		.cfi_endproc
 560              	.LFE25:
 562              		.section	.text.Ft_Esd_Slider_Width__Default,"ax",%progbits
 563              		.align	1
 564              		.global	Ft_Esd_Slider_Width__Default
 565              		.syntax unified
 566              		.thumb
 567              		.thumb_func
 568              		.fpu fpv5-sp-d16
 570              	Ft_Esd_Slider_Width__Default:
 571              	.LFB26:
  17:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** ft_int16_t Ft_Esd_Slider_Width__Default(void *context) { return 160; }
 572              		.loc 4 17 0
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 8
 575              		@ frame_needed = 1, uses_anonymous_args = 0
 576              		@ link register save eliminated.
 577 0000 80B4     		push	{r7}
 578              	.LCFI53:
 579              		.cfi_def_cfa_offset 4
 580              		.cfi_offset 7, -4
 581 0002 83B0     		sub	sp, sp, #12
 582              	.LCFI54:
 583              		.cfi_def_cfa_offset 16
 584 0004 00AF     		add	r7, sp, #0
 585              	.LCFI55:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s 			page 16


 586              		.cfi_def_cfa_register 7
 587 0006 7860     		str	r0, [r7, #4]
 588              		.loc 4 17 0
 589 0008 A023     		movs	r3, #160
 590 000a 1846     		mov	r0, r3
 591 000c 0C37     		adds	r7, r7, #12
 592              	.LCFI56:
 593              		.cfi_def_cfa_offset 4
 594 000e BD46     		mov	sp, r7
 595              	.LCFI57:
 596              		.cfi_def_cfa_register 13
 597              		@ sp needed
 598 0010 5DF8047B 		ldr	r7, [sp], #4
 599              	.LCFI58:
 600              		.cfi_restore 7
 601              		.cfi_def_cfa_offset 0
 602 0014 7047     		bx	lr
 603              		.cfi_endproc
 604              	.LFE26:
 606              		.section	.text.Ft_Esd_Slider_Height__Default,"ax",%progbits
 607              		.align	1
 608              		.global	Ft_Esd_Slider_Height__Default
 609              		.syntax unified
 610              		.thumb
 611              		.thumb_func
 612              		.fpu fpv5-sp-d16
 614              	Ft_Esd_Slider_Height__Default:
 615              	.LFB27:
  18:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** ft_int16_t Ft_Esd_Slider_Height__Default(void *context) { return 20; }
 616              		.loc 4 18 0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 8
 619              		@ frame_needed = 1, uses_anonymous_args = 0
 620              		@ link register save eliminated.
 621 0000 80B4     		push	{r7}
 622              	.LCFI59:
 623              		.cfi_def_cfa_offset 4
 624              		.cfi_offset 7, -4
 625 0002 83B0     		sub	sp, sp, #12
 626              	.LCFI60:
 627              		.cfi_def_cfa_offset 16
 628 0004 00AF     		add	r7, sp, #0
 629              	.LCFI61:
 630              		.cfi_def_cfa_register 7
 631 0006 7860     		str	r0, [r7, #4]
 632              		.loc 4 18 0
 633 0008 1423     		movs	r3, #20
 634 000a 1846     		mov	r0, r3
 635 000c 0C37     		adds	r7, r7, #12
 636              	.LCFI62:
 637              		.cfi_def_cfa_offset 4
 638 000e BD46     		mov	sp, r7
 639              	.LCFI63:
 640              		.cfi_def_cfa_register 13
 641              		@ sp needed
 642 0010 5DF8047B 		ldr	r7, [sp], #4
 643              	.LCFI64:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s 			page 17


 644              		.cfi_restore 7
 645              		.cfi_def_cfa_offset 0
 646 0014 7047     		bx	lr
 647              		.cfi_endproc
 648              	.LFE27:
 650              		.section	.text.Ft_Esd_Slider_Alpha__Default,"ax",%progbits
 651              		.align	1
 652              		.global	Ft_Esd_Slider_Alpha__Default
 653              		.syntax unified
 654              		.thumb
 655              		.thumb_func
 656              		.fpu fpv5-sp-d16
 658              	Ft_Esd_Slider_Alpha__Default:
 659              	.LFB28:
  19:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** ft_uint8_t Ft_Esd_Slider_Alpha__Default(void *context) { return 255; }
 660              		.loc 4 19 0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 8
 663              		@ frame_needed = 1, uses_anonymous_args = 0
 664              		@ link register save eliminated.
 665 0000 80B4     		push	{r7}
 666              	.LCFI65:
 667              		.cfi_def_cfa_offset 4
 668              		.cfi_offset 7, -4
 669 0002 83B0     		sub	sp, sp, #12
 670              	.LCFI66:
 671              		.cfi_def_cfa_offset 16
 672 0004 00AF     		add	r7, sp, #0
 673              	.LCFI67:
 674              		.cfi_def_cfa_register 7
 675 0006 7860     		str	r0, [r7, #4]
 676              		.loc 4 19 0
 677 0008 FF23     		movs	r3, #255
 678 000a 1846     		mov	r0, r3
 679 000c 0C37     		adds	r7, r7, #12
 680              	.LCFI68:
 681              		.cfi_def_cfa_offset 4
 682 000e BD46     		mov	sp, r7
 683              	.LCFI69:
 684              		.cfi_def_cfa_register 13
 685              		@ sp needed
 686 0010 5DF8047B 		ldr	r7, [sp], #4
 687              	.LCFI70:
 688              		.cfi_restore 7
 689              		.cfi_def_cfa_offset 0
 690 0014 7047     		bx	lr
 691              		.cfi_endproc
 692              	.LFE28:
 694              		.section	.text.Ft_Esd_Slider_Changed__Noop,"ax",%progbits
 695              		.align	1
 696              		.global	Ft_Esd_Slider_Changed__Noop
 697              		.syntax unified
 698              		.thumb
 699              		.thumb_func
 700              		.fpu fpv5-sp-d16
 702              	Ft_Esd_Slider_Changed__Noop:
 703              	.LFB29:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s 			page 18


  20:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** void Ft_Esd_Slider_Changed__Noop(void *context, int value) { }
 704              		.loc 4 20 0
 705              		.cfi_startproc
 706              		@ args = 0, pretend = 0, frame = 8
 707              		@ frame_needed = 1, uses_anonymous_args = 0
 708              		@ link register save eliminated.
 709 0000 80B4     		push	{r7}
 710              	.LCFI71:
 711              		.cfi_def_cfa_offset 4
 712              		.cfi_offset 7, -4
 713 0002 83B0     		sub	sp, sp, #12
 714              	.LCFI72:
 715              		.cfi_def_cfa_offset 16
 716 0004 00AF     		add	r7, sp, #0
 717              	.LCFI73:
 718              		.cfi_def_cfa_register 7
 719 0006 7860     		str	r0, [r7, #4]
 720 0008 3960     		str	r1, [r7]
 721              		.loc 4 20 0
 722 000a 00BF     		nop
 723 000c 0C37     		adds	r7, r7, #12
 724              	.LCFI74:
 725              		.cfi_def_cfa_offset 4
 726 000e BD46     		mov	sp, r7
 727              	.LCFI75:
 728              		.cfi_def_cfa_register 13
 729              		@ sp needed
 730 0010 5DF8047B 		ldr	r7, [sp], #4
 731              	.LCFI76:
 732              		.cfi_restore 7
 733              		.cfi_def_cfa_offset 0
 734 0014 7047     		bx	lr
 735              		.cfi_endproc
 736              	.LFE29:
 738              		.section	.text.Ft_Esd_Slider_Range__Default,"ax",%progbits
 739              		.align	1
 740              		.global	Ft_Esd_Slider_Range__Default
 741              		.syntax unified
 742              		.thumb
 743              		.thumb_func
 744              		.fpu fpv5-sp-d16
 746              	Ft_Esd_Slider_Range__Default:
 747              	.LFB30:
  21:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** ft_int16_t Ft_Esd_Slider_Range__Default(void *context) { return 100; }
 748              		.loc 4 21 0
 749              		.cfi_startproc
 750              		@ args = 0, pretend = 0, frame = 8
 751              		@ frame_needed = 1, uses_anonymous_args = 0
 752              		@ link register save eliminated.
 753 0000 80B4     		push	{r7}
 754              	.LCFI77:
 755              		.cfi_def_cfa_offset 4
 756              		.cfi_offset 7, -4
 757 0002 83B0     		sub	sp, sp, #12
 758              	.LCFI78:
 759              		.cfi_def_cfa_offset 16
 760 0004 00AF     		add	r7, sp, #0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s 			page 19


 761              	.LCFI79:
 762              		.cfi_def_cfa_register 7
 763 0006 7860     		str	r0, [r7, #4]
 764              		.loc 4 21 0
 765 0008 6423     		movs	r3, #100
 766 000a 1846     		mov	r0, r3
 767 000c 0C37     		adds	r7, r7, #12
 768              	.LCFI80:
 769              		.cfi_def_cfa_offset 4
 770 000e BD46     		mov	sp, r7
 771              	.LCFI81:
 772              		.cfi_def_cfa_register 13
 773              		@ sp needed
 774 0010 5DF8047B 		ldr	r7, [sp], #4
 775              	.LCFI82:
 776              		.cfi_restore 7
 777              		.cfi_def_cfa_offset 0
 778 0014 7047     		bx	lr
 779              		.cfi_endproc
 780              	.LFE30:
 782              		.section	.text.Ft_Esd_Slider__Initializer,"ax",%progbits
 783              		.align	1
 784              		.global	Ft_Esd_Slider__Initializer
 785              		.syntax unified
 786              		.thumb
 787              		.thumb_func
 788              		.fpu fpv5-sp-d16
 790              	Ft_Esd_Slider__Initializer:
 791              	.LFB31:
  22:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 
  23:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** Ft_Esd_Theme * Ft_Esd_Theme_GetCurrent();
  24:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** Ft_Gpu_Hal_Context_t * Ft_Esd_GetHost();
  25:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 
  26:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** static void Ft_Esd_Slider_TouchTag_Down__Signal(void *context);
  27:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 
  28:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** void Ft_Esd_Slider__Initializer(Ft_Esd_Slider *context)
  29:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** {
 792              		.loc 4 29 0
 793              		.cfi_startproc
 794              		@ args = 0, pretend = 0, frame = 8
 795              		@ frame_needed = 1, uses_anonymous_args = 0
 796 0000 80B5     		push	{r7, lr}
 797              	.LCFI83:
 798              		.cfi_def_cfa_offset 8
 799              		.cfi_offset 7, -8
 800              		.cfi_offset 14, -4
 801 0002 82B0     		sub	sp, sp, #8
 802              	.LCFI84:
 803              		.cfi_def_cfa_offset 16
 804 0004 00AF     		add	r7, sp, #0
 805              	.LCFI85:
 806              		.cfi_def_cfa_register 7
 807 0006 7860     		str	r0, [r7, #4]
  30:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	context->Parent = 0;
 808              		.loc 4 30 0
 809 0008 7B68     		ldr	r3, [r7, #4]
 810 000a 0022     		movs	r2, #0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s 			page 20


 811 000c 1A60     		str	r2, [r3]
  31:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	context->Theme = Ft_Esd_Slider_Theme__Default;
 812              		.loc 4 31 0
 813 000e 7B68     		ldr	r3, [r7, #4]
 814 0010 194A     		ldr	r2, .L42
 815 0012 5A60     		str	r2, [r3, #4]
  32:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	Ft_Esd_TouchTag__Initializer(&context->TouchTag);
 816              		.loc 4 32 0
 817 0014 7B68     		ldr	r3, [r7, #4]
 818 0016 0833     		adds	r3, r3, #8
 819 0018 1846     		mov	r0, r3
 820 001a FFF7FEFF 		bl	Ft_Esd_TouchTag__Initializer
  33:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	context->TouchTag.Parent = context;
 821              		.loc 4 33 0
 822 001e 7B68     		ldr	r3, [r7, #4]
 823 0020 7A68     		ldr	r2, [r7, #4]
 824 0022 9A60     		str	r2, [r3, #8]
  34:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	context->TouchTag.Down = Ft_Esd_Slider_TouchTag_Down__Signal;
 825              		.loc 4 34 0
 826 0024 7B68     		ldr	r3, [r7, #4]
 827 0026 154A     		ldr	r2, .L42+4
 828 0028 DA60     		str	r2, [r3, #12]
  35:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	context->X = Ft_Esd_Slider_X__Default;
 829              		.loc 4 35 0
 830 002a 7B68     		ldr	r3, [r7, #4]
 831 002c 144A     		ldr	r2, .L42+8
 832 002e 1A62     		str	r2, [r3, #32]
  36:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	context->Y = Ft_Esd_Slider_Y__Default;
 833              		.loc 4 36 0
 834 0030 7B68     		ldr	r3, [r7, #4]
 835 0032 144A     		ldr	r2, .L42+12
 836 0034 5A62     		str	r2, [r3, #36]
  37:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	context->Width = Ft_Esd_Slider_Width__Default;
 837              		.loc 4 37 0
 838 0036 7B68     		ldr	r3, [r7, #4]
 839 0038 134A     		ldr	r2, .L42+16
 840 003a 9A62     		str	r2, [r3, #40]
  38:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	context->Height = Ft_Esd_Slider_Height__Default;
 841              		.loc 4 38 0
 842 003c 7B68     		ldr	r3, [r7, #4]
 843 003e 134A     		ldr	r2, .L42+20
 844 0040 DA62     		str	r2, [r3, #44]
  39:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	context->Alpha = Ft_Esd_Slider_Alpha__Default;
 845              		.loc 4 39 0
 846 0042 7B68     		ldr	r3, [r7, #4]
 847 0044 124A     		ldr	r2, .L42+24
 848 0046 1A63     		str	r2, [r3, #48]
  40:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	context->Value = 0;
 849              		.loc 4 40 0
 850 0048 7B68     		ldr	r3, [r7, #4]
 851 004a 0022     		movs	r2, #0
 852 004c 9A86     		strh	r2, [r3, #52]	@ movhi
  41:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	context->Changed = Ft_Esd_Slider_Changed__Noop;
 853              		.loc 4 41 0
 854 004e 7B68     		ldr	r3, [r7, #4]
 855 0050 104A     		ldr	r2, .L42+28
 856 0052 9A63     		str	r2, [r3, #56]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s 			page 21


  42:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	context->PreviousValue = 0;
 857              		.loc 4 42 0
 858 0054 7B68     		ldr	r3, [r7, #4]
 859 0056 0022     		movs	r2, #0
 860 0058 9A87     		strh	r2, [r3, #60]	@ movhi
  43:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	context->PreviousX = 0;
 861              		.loc 4 43 0
 862 005a 7B68     		ldr	r3, [r7, #4]
 863 005c 0022     		movs	r2, #0
 864 005e DA87     		strh	r2, [r3, #62]	@ movhi
  44:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	context->Range = Ft_Esd_Slider_Range__Default;
 865              		.loc 4 44 0
 866 0060 7B68     		ldr	r3, [r7, #4]
 867 0062 0D4A     		ldr	r2, .L42+32
 868 0064 1A64     		str	r2, [r3, #64]
  45:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	context->PreviousY = 0;
 869              		.loc 4 45 0
 870 0066 7B68     		ldr	r3, [r7, #4]
 871 0068 0022     		movs	r2, #0
 872 006a A3F84420 		strh	r2, [r3, #68]	@ movhi
  46:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** }
 873              		.loc 4 46 0
 874 006e 00BF     		nop
 875 0070 0837     		adds	r7, r7, #8
 876              	.LCFI86:
 877              		.cfi_def_cfa_offset 8
 878 0072 BD46     		mov	sp, r7
 879              	.LCFI87:
 880              		.cfi_def_cfa_register 13
 881              		@ sp needed
 882 0074 80BD     		pop	{r7, pc}
 883              	.L43:
 884 0076 00BF     		.align	2
 885              	.L42:
 886 0078 00000000 		.word	Ft_Esd_Slider_Theme__Default
 887 007c 00000000 		.word	Ft_Esd_Slider_TouchTag_Down__Signal
 888 0080 00000000 		.word	Ft_Esd_Slider_X__Default
 889 0084 00000000 		.word	Ft_Esd_Slider_Y__Default
 890 0088 00000000 		.word	Ft_Esd_Slider_Width__Default
 891 008c 00000000 		.word	Ft_Esd_Slider_Height__Default
 892 0090 00000000 		.word	Ft_Esd_Slider_Alpha__Default
 893 0094 00000000 		.word	Ft_Esd_Slider_Changed__Noop
 894 0098 00000000 		.word	Ft_Esd_Slider_Range__Default
 895              		.cfi_endproc
 896              	.LFE31:
 898              		.section	.text.Ft_Esd_Slider_Render,"ax",%progbits
 899              		.align	1
 900              		.global	Ft_Esd_Slider_Render
 901              		.syntax unified
 902              		.thumb
 903              		.thumb_func
 904              		.fpu fpv5-sp-d16
 906              	Ft_Esd_Slider_Render:
 907              	.LFB32:
  47:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 
  48:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** static ft_rgb32_t Ft_Esd_Slider_Get_Primary_Color__return(Ft_Esd_Slider *context);
  49:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** static ft_int16_t Ft_Esd_Slider_Ft_Esd_Slider_ClampedValue__return(Ft_Esd_Slider *context);
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s 			page 22


  50:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 
  51:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** ft_void_t Ft_Gpu_CoCmd_BgColor(Ft_Gpu_Hal_Context_t *, ft_rgb32_t);
  52:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** ft_void_t Ft_Gpu_CoCmd_FgColor(Ft_Gpu_Hal_Context_t *, ft_rgb32_t);
  53:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** void Ft_Esd_Slider_Update_Signal(Ft_Esd_Slider *context);
  54:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** ft_int16_t Ft_Esd_Slider_ClampedValue(Ft_Esd_Slider *context);
  55:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** ft_void_t Ft_Gpu_CoCmd_Slider(Ft_Gpu_Hal_Context_t *, ft_int16_t, ft_int16_t, ft_int16_t, ft_int16_
  56:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 
  57:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** void Ft_Esd_Slider_Render(Ft_Esd_Slider *context)
  58:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** {
 908              		.loc 4 58 0
 909              		.cfi_startproc
 910              		@ args = 0, pretend = 0, frame = 80
 911              		@ frame_needed = 1, uses_anonymous_args = 0
 912 0000 90B5     		push	{r4, r7, lr}
 913              	.LCFI88:
 914              		.cfi_def_cfa_offset 12
 915              		.cfi_offset 4, -12
 916              		.cfi_offset 7, -8
 917              		.cfi_offset 14, -4
 918 0002 99B0     		sub	sp, sp, #100
 919              	.LCFI89:
 920              		.cfi_def_cfa_offset 112
 921 0004 04AF     		add	r7, sp, #16
 922              	.LCFI90:
 923              		.cfi_def_cfa 7, 96
 924 0006 7860     		str	r0, [r7, #4]
  59:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	void *parent = context->Parent;
 925              		.loc 4 59 0
 926 0008 7B68     		ldr	r3, [r7, #4]
 927 000a 1B68     		ldr	r3, [r3]
 928 000c BB64     		str	r3, [r7, #72]
  60:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	ft_uint8_t alpha = context->Alpha(parent);
 929              		.loc 4 60 0
 930 000e 7B68     		ldr	r3, [r7, #4]
 931 0010 1B6B     		ldr	r3, [r3, #48]
 932 0012 B86C     		ldr	r0, [r7, #72]
 933 0014 9847     		blx	r3
 934              	.LVL0:
 935 0016 0346     		mov	r3, r0
 936 0018 87F84730 		strb	r3, [r7, #71]
  61:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	Ft_Esd_Dl_COLOR_A(alpha);
 937              		.loc 4 61 0
 938 001c 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 939 0020 1846     		mov	r0, r3
 940 0022 FFF7FEFF 		bl	Ft_Esd_Dl_COLOR_A
  62:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	ft_bool_t if_1 = Ft_Esd_TouchTag_Touching(&context->TouchTag);
 941              		.loc 4 62 0
 942 0026 7B68     		ldr	r3, [r7, #4]
 943 0028 0833     		adds	r3, r3, #8
 944 002a 1846     		mov	r0, r3
 945 002c FFF7FEFF 		bl	Ft_Esd_TouchTag_Touching
 946 0030 0346     		mov	r3, r0
 947 0032 87F84630 		strb	r3, [r7, #70]
  63:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	ft_rgb32_t c;
  64:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	if (if_1)
 948              		.loc 4 64 0
 949 0036 97F84630 		ldrb	r3, [r7, #70]	@ zero_extendqisi2
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s 			page 23


 950 003a 002B     		cmp	r3, #0
 951 003c 04D0     		beq	.L45
  65:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	{
  66:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 		c = Ft_Esd_Slider_Get_Primary_Color__return(context);
 952              		.loc 4 66 0
 953 003e 7868     		ldr	r0, [r7, #4]
 954 0040 FFF7FEFF 		bl	Ft_Esd_Slider_Get_Primary_Color__return
 955 0044 F864     		str	r0, [r7, #76]
 956 0046 08E0     		b	.L46
 957              	.L45:
 958              	.LBB2:
  67:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	}
  68:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	else
  69:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	{
  70:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 		Ft_Esd_Theme * theme = context->Theme(parent);
 959              		.loc 4 70 0
 960 0048 7B68     		ldr	r3, [r7, #4]
 961 004a 5B68     		ldr	r3, [r3, #4]
 962 004c B86C     		ldr	r0, [r7, #72]
 963 004e 9847     		blx	r3
 964              	.LVL1:
 965 0050 3864     		str	r0, [r7, #64]
  71:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 		c = Ft_Esd_Theme_GetCurrentColor(theme);
 966              		.loc 4 71 0
 967 0052 386C     		ldr	r0, [r7, #64]
 968 0054 FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrentColor
 969 0058 F864     		str	r0, [r7, #76]
 970              	.L46:
 971              	.LBE2:
  72:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	}
  73:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	Ft_Esd_Dl_COLOR_RGB(c);
 972              		.loc 4 73 0
 973 005a F86C     		ldr	r0, [r7, #76]
 974 005c FFF7FEFF 		bl	Ft_Esd_Dl_COLOR_RGB
  74:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	Ft_Gpu_Hal_Context_t * phost = Ft_Esd_GetHost();
 975              		.loc 4 74 0
 976 0060 FFF7FEFF 		bl	Ft_Esd_GetHost
 977 0064 F863     		str	r0, [r7, #60]
  75:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	Ft_Esd_Theme * theme_1 = context->Theme(parent);
 978              		.loc 4 75 0
 979 0066 7B68     		ldr	r3, [r7, #4]
 980 0068 5B68     		ldr	r3, [r3, #4]
 981 006a B86C     		ldr	r0, [r7, #72]
 982 006c 9847     		blx	r3
 983              	.LVL2:
 984 006e B863     		str	r0, [r7, #56]
  76:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	ft_rgb32_t c_1 = Ft_Esd_Theme_GetBackColor(theme_1);
 985              		.loc 4 76 0
 986 0070 B86B     		ldr	r0, [r7, #56]
 987 0072 FFF7FEFF 		bl	Ft_Esd_Theme_GetBackColor
 988 0076 7863     		str	r0, [r7, #52]
  77:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	Ft_Gpu_CoCmd_BgColor(phost, c_1);
 989              		.loc 4 77 0
 990 0078 796B     		ldr	r1, [r7, #52]
 991 007a F86B     		ldr	r0, [r7, #60]
 992 007c FFF7FEFF 		bl	Ft_Gpu_CoCmd_BgColor
  78:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	Ft_Gpu_Hal_Context_t * phost_1 = Ft_Esd_GetHost();
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s 			page 24


 993              		.loc 4 78 0
 994 0080 FFF7FEFF 		bl	Ft_Esd_GetHost
 995 0084 3863     		str	r0, [r7, #48]
  79:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	ft_rgb32_t c_2 = Ft_Esd_Slider_Get_Primary_Color__return(context);
 996              		.loc 4 79 0
 997 0086 7868     		ldr	r0, [r7, #4]
 998 0088 FFF7FEFF 		bl	Ft_Esd_Slider_Get_Primary_Color__return
 999 008c F862     		str	r0, [r7, #44]
  80:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	Ft_Gpu_CoCmd_FgColor(phost_1, c_2);
 1000              		.loc 4 80 0
 1001 008e F96A     		ldr	r1, [r7, #44]
 1002 0090 386B     		ldr	r0, [r7, #48]
 1003 0092 FFF7FEFF 		bl	Ft_Gpu_CoCmd_FgColor
  81:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	ft_uint8_t s = Ft_Esd_TouchTag_Tag(&context->TouchTag);
 1004              		.loc 4 81 0
 1005 0096 7B68     		ldr	r3, [r7, #4]
 1006 0098 0833     		adds	r3, r3, #8
 1007 009a 1846     		mov	r0, r3
 1008 009c FFF7FEFF 		bl	Ft_Esd_TouchTag_Tag
 1009 00a0 0346     		mov	r3, r0
 1010 00a2 87F82B30 		strb	r3, [r7, #43]
  82:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	Ft_Esd_Dl_TAG(s);
 1011              		.loc 4 82 0
 1012 00a6 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1013 00aa 1846     		mov	r0, r3
 1014 00ac FFF7FEFF 		bl	Ft_Esd_Dl_TAG
  83:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	Ft_Gpu_Hal_Context_t * phost_2 = Ft_Esd_GetHost();
 1015              		.loc 4 83 0
 1016 00b0 FFF7FEFF 		bl	Ft_Esd_GetHost
 1017 00b4 7862     		str	r0, [r7, #36]
  84:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	ft_int16_t left = context->X(parent);
 1018              		.loc 4 84 0
 1019 00b6 7B68     		ldr	r3, [r7, #4]
 1020 00b8 1B6A     		ldr	r3, [r3, #32]
 1021 00ba B86C     		ldr	r0, [r7, #72]
 1022 00bc 9847     		blx	r3
 1023              	.LVL3:
 1024 00be 0346     		mov	r3, r0
 1025 00c0 7B84     		strh	r3, [r7, #34]	@ movhi
  85:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	ft_int16_t left_1 = context->Height(parent);
 1026              		.loc 4 85 0
 1027 00c2 7B68     		ldr	r3, [r7, #4]
 1028 00c4 DB6A     		ldr	r3, [r3, #44]
 1029 00c6 B86C     		ldr	r0, [r7, #72]
 1030 00c8 9847     		blx	r3
 1031              	.LVL4:
 1032 00ca 0346     		mov	r3, r0
 1033 00cc 3B84     		strh	r3, [r7, #32]	@ movhi
  86:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	ft_int16_t right_1 = 2;
 1034              		.loc 4 86 0
 1035 00ce 0223     		movs	r3, #2
 1036 00d0 FB83     		strh	r3, [r7, #30]	@ movhi
  87:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	ft_int16_t right = left_1 / right_1;
 1037              		.loc 4 87 0
 1038 00d2 B7F92020 		ldrsh	r2, [r7, #32]
 1039 00d6 B7F91E30 		ldrsh	r3, [r7, #30]
 1040 00da 92FBF3F3 		sdiv	r3, r2, r3
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s 			page 25


 1041 00de BB83     		strh	r3, [r7, #28]	@ movhi
  88:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	ft_int16_t x = left + right;
 1042              		.loc 4 88 0
 1043 00e0 7A8C     		ldrh	r2, [r7, #34]
 1044 00e2 BB8B     		ldrh	r3, [r7, #28]
 1045 00e4 1344     		add	r3, r3, r2
 1046 00e6 9BB2     		uxth	r3, r3
 1047 00e8 7B83     		strh	r3, [r7, #26]	@ movhi
  89:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	ft_int16_t y = context->Y(parent);
 1048              		.loc 4 89 0
 1049 00ea 7B68     		ldr	r3, [r7, #4]
 1050 00ec 5B6A     		ldr	r3, [r3, #36]
 1051 00ee B86C     		ldr	r0, [r7, #72]
 1052 00f0 9847     		blx	r3
 1053              	.LVL5:
 1054 00f2 0346     		mov	r3, r0
 1055 00f4 3B83     		strh	r3, [r7, #24]	@ movhi
  90:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	ft_int16_t left_2 = context->Width(parent);
 1056              		.loc 4 90 0
 1057 00f6 7B68     		ldr	r3, [r7, #4]
 1058 00f8 9B6A     		ldr	r3, [r3, #40]
 1059 00fa B86C     		ldr	r0, [r7, #72]
 1060 00fc 9847     		blx	r3
 1061              	.LVL6:
 1062 00fe 0346     		mov	r3, r0
 1063 0100 FB82     		strh	r3, [r7, #22]	@ movhi
  91:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	ft_int16_t right_2 = context->Height(parent);
 1064              		.loc 4 91 0
 1065 0102 7B68     		ldr	r3, [r7, #4]
 1066 0104 DB6A     		ldr	r3, [r3, #44]
 1067 0106 B86C     		ldr	r0, [r7, #72]
 1068 0108 9847     		blx	r3
 1069              	.LVL7:
 1070 010a 0346     		mov	r3, r0
 1071 010c BB82     		strh	r3, [r7, #20]	@ movhi
  92:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	ft_int16_t width = left_2 - right_2;
 1072              		.loc 4 92 0
 1073 010e FA8A     		ldrh	r2, [r7, #22]
 1074 0110 BB8A     		ldrh	r3, [r7, #20]
 1075 0112 D31A     		subs	r3, r2, r3
 1076 0114 9BB2     		uxth	r3, r3
 1077 0116 7B82     		strh	r3, [r7, #18]	@ movhi
  93:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	ft_int16_t height = context->Height(parent);
 1078              		.loc 4 93 0
 1079 0118 7B68     		ldr	r3, [r7, #4]
 1080 011a DB6A     		ldr	r3, [r3, #44]
 1081 011c B86C     		ldr	r0, [r7, #72]
 1082 011e 9847     		blx	r3
 1083              	.LVL8:
 1084 0120 0346     		mov	r3, r0
 1085 0122 3B82     		strh	r3, [r7, #16]	@ movhi
  94:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	ft_uint16_t options = 0;
 1086              		.loc 4 94 0
 1087 0124 0023     		movs	r3, #0
 1088 0126 FB81     		strh	r3, [r7, #14]	@ movhi
  95:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	ft_int16_t val = Ft_Esd_Slider_Ft_Esd_Slider_ClampedValue__return(context);
 1089              		.loc 4 95 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s 			page 26


 1090 0128 7868     		ldr	r0, [r7, #4]
 1091 012a FFF7FEFF 		bl	Ft_Esd_Slider_Ft_Esd_Slider_ClampedValue__return
 1092 012e 0346     		mov	r3, r0
 1093 0130 BB81     		strh	r3, [r7, #12]	@ movhi
  96:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	ft_int16_t range = context->Range(parent);
 1094              		.loc 4 96 0
 1095 0132 7B68     		ldr	r3, [r7, #4]
 1096 0134 1B6C     		ldr	r3, [r3, #64]
 1097 0136 B86C     		ldr	r0, [r7, #72]
 1098 0138 9847     		blx	r3
 1099              	.LVL9:
 1100 013a 0346     		mov	r3, r0
 1101 013c 7B81     		strh	r3, [r7, #10]	@ movhi
  97:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	Ft_Gpu_CoCmd_Slider(phost_2, x, y, width, height, options, val, range);
 1102              		.loc 4 97 0
 1103 013e BB89     		ldrh	r3, [r7, #12]
 1104 0140 7A89     		ldrh	r2, [r7, #10]
 1105 0142 B7F91240 		ldrsh	r4, [r7, #18]
 1106 0146 B7F91800 		ldrsh	r0, [r7, #24]
 1107 014a B7F91A10 		ldrsh	r1, [r7, #26]
 1108 014e 0392     		str	r2, [sp, #12]
 1109 0150 0293     		str	r3, [sp, #8]
 1110 0152 FB89     		ldrh	r3, [r7, #14]
 1111 0154 0193     		str	r3, [sp, #4]
 1112 0156 B7F91030 		ldrsh	r3, [r7, #16]
 1113 015a 0093     		str	r3, [sp]
 1114 015c 2346     		mov	r3, r4
 1115 015e 0246     		mov	r2, r0
 1116 0160 786A     		ldr	r0, [r7, #36]
 1117 0162 FFF7FEFF 		bl	Ft_Gpu_CoCmd_Slider
  98:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	ft_uint8_t s_1 = 255;
 1118              		.loc 4 98 0
 1119 0166 FF23     		movs	r3, #255
 1120 0168 7B72     		strb	r3, [r7, #9]
  99:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	Ft_Esd_Dl_TAG(s_1);
 1121              		.loc 4 99 0
 1122 016a 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 1123 016c 1846     		mov	r0, r3
 1124 016e FFF7FEFF 		bl	Ft_Esd_Dl_TAG
 100:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** }
 1125              		.loc 4 100 0
 1126 0172 00BF     		nop
 1127 0174 5437     		adds	r7, r7, #84
 1128              	.LCFI91:
 1129              		.cfi_def_cfa_offset 12
 1130 0176 BD46     		mov	sp, r7
 1131              	.LCFI92:
 1132              		.cfi_def_cfa_register 13
 1133              		@ sp needed
 1134 0178 90BD     		pop	{r4, r7, pc}
 1135              		.cfi_endproc
 1136              	.LFE32:
 1138              		.section	.text.Ft_Esd_Slider_Start,"ax",%progbits
 1139              		.align	1
 1140              		.global	Ft_Esd_Slider_Start
 1141              		.syntax unified
 1142              		.thumb
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s 			page 27


 1143              		.thumb_func
 1144              		.fpu fpv5-sp-d16
 1146              	Ft_Esd_Slider_Start:
 1147              	.LFB33:
 101:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 
 102:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** void Ft_Esd_Slider_Start(Ft_Esd_Slider *context)
 103:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** {
 1148              		.loc 4 103 0
 1149              		.cfi_startproc
 1150              		@ args = 0, pretend = 0, frame = 16
 1151              		@ frame_needed = 1, uses_anonymous_args = 0
 1152 0000 80B5     		push	{r7, lr}
 1153              	.LCFI93:
 1154              		.cfi_def_cfa_offset 8
 1155              		.cfi_offset 7, -8
 1156              		.cfi_offset 14, -4
 1157 0002 84B0     		sub	sp, sp, #16
 1158              	.LCFI94:
 1159              		.cfi_def_cfa_offset 24
 1160 0004 00AF     		add	r7, sp, #0
 1161              	.LCFI95:
 1162              		.cfi_def_cfa_register 7
 1163 0006 7860     		str	r0, [r7, #4]
 104:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	void *parent = context->Parent;
 1164              		.loc 4 104 0
 1165 0008 7B68     		ldr	r3, [r7, #4]
 1166 000a 1B68     		ldr	r3, [r3]
 1167 000c FB60     		str	r3, [r7, #12]
 105:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	Ft_Esd_TouchTag_Start(&context->TouchTag);
 1168              		.loc 4 105 0
 1169 000e 7B68     		ldr	r3, [r7, #4]
 1170 0010 0833     		adds	r3, r3, #8
 1171 0012 1846     		mov	r0, r3
 1172 0014 FFF7FEFF 		bl	Ft_Esd_TouchTag_Start
 106:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** }
 1173              		.loc 4 106 0
 1174 0018 00BF     		nop
 1175 001a 1037     		adds	r7, r7, #16
 1176              	.LCFI96:
 1177              		.cfi_def_cfa_offset 8
 1178 001c BD46     		mov	sp, r7
 1179              	.LCFI97:
 1180              		.cfi_def_cfa_register 13
 1181              		@ sp needed
 1182 001e 80BD     		pop	{r7, pc}
 1183              		.cfi_endproc
 1184              	.LFE33:
 1186              		.section	.text.Ft_Esd_Slider_Update,"ax",%progbits
 1187              		.align	1
 1188              		.global	Ft_Esd_Slider_Update
 1189              		.syntax unified
 1190              		.thumb
 1191              		.thumb_func
 1192              		.fpu fpv5-sp-d16
 1194              	Ft_Esd_Slider_Update:
 1195              	.LFB34:
 107:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s 			page 28


 108:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** void Ft_Esd_Slider_Update(Ft_Esd_Slider *context)
 109:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** {
 1196              		.loc 4 109 0
 1197              		.cfi_startproc
 1198              		@ args = 0, pretend = 0, frame = 16
 1199              		@ frame_needed = 1, uses_anonymous_args = 0
 1200 0000 80B5     		push	{r7, lr}
 1201              	.LCFI98:
 1202              		.cfi_def_cfa_offset 8
 1203              		.cfi_offset 7, -8
 1204              		.cfi_offset 14, -4
 1205 0002 84B0     		sub	sp, sp, #16
 1206              	.LCFI99:
 1207              		.cfi_def_cfa_offset 24
 1208 0004 00AF     		add	r7, sp, #0
 1209              	.LCFI100:
 1210              		.cfi_def_cfa_register 7
 1211 0006 7860     		str	r0, [r7, #4]
 110:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	void *parent = context->Parent;
 1212              		.loc 4 110 0
 1213 0008 7B68     		ldr	r3, [r7, #4]
 1214 000a 1B68     		ldr	r3, [r3]
 1215 000c FB60     		str	r3, [r7, #12]
 111:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	Ft_Esd_TouchTag_Update(&context->TouchTag);
 1216              		.loc 4 111 0
 1217 000e 7B68     		ldr	r3, [r7, #4]
 1218 0010 0833     		adds	r3, r3, #8
 1219 0012 1846     		mov	r0, r3
 1220 0014 FFF7FEFF 		bl	Ft_Esd_TouchTag_Update
 112:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	Ft_Esd_Slider_Update_Signal(context);
 1221              		.loc 4 112 0
 1222 0018 7868     		ldr	r0, [r7, #4]
 1223 001a FFF7FEFF 		bl	Ft_Esd_Slider_Update_Signal
 113:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** }
 1224              		.loc 4 113 0
 1225 001e 00BF     		nop
 1226 0020 1037     		adds	r7, r7, #16
 1227              	.LCFI101:
 1228              		.cfi_def_cfa_offset 8
 1229 0022 BD46     		mov	sp, r7
 1230              	.LCFI102:
 1231              		.cfi_def_cfa_register 13
 1232              		@ sp needed
 1233 0024 80BD     		pop	{r7, pc}
 1234              		.cfi_endproc
 1235              	.LFE34:
 1237              		.section	.text.Ft_Esd_Slider_End,"ax",%progbits
 1238              		.align	1
 1239              		.global	Ft_Esd_Slider_End
 1240              		.syntax unified
 1241              		.thumb
 1242              		.thumb_func
 1243              		.fpu fpv5-sp-d16
 1245              	Ft_Esd_Slider_End:
 1246              	.LFB35:
 114:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 
 115:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** void Ft_Esd_Slider_End(Ft_Esd_Slider *context)
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s 			page 29


 116:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** {
 1247              		.loc 4 116 0
 1248              		.cfi_startproc
 1249              		@ args = 0, pretend = 0, frame = 16
 1250              		@ frame_needed = 1, uses_anonymous_args = 0
 1251 0000 80B5     		push	{r7, lr}
 1252              	.LCFI103:
 1253              		.cfi_def_cfa_offset 8
 1254              		.cfi_offset 7, -8
 1255              		.cfi_offset 14, -4
 1256 0002 84B0     		sub	sp, sp, #16
 1257              	.LCFI104:
 1258              		.cfi_def_cfa_offset 24
 1259 0004 00AF     		add	r7, sp, #0
 1260              	.LCFI105:
 1261              		.cfi_def_cfa_register 7
 1262 0006 7860     		str	r0, [r7, #4]
 117:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	void *parent = context->Parent;
 1263              		.loc 4 117 0
 1264 0008 7B68     		ldr	r3, [r7, #4]
 1265 000a 1B68     		ldr	r3, [r3]
 1266 000c FB60     		str	r3, [r7, #12]
 118:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	Ft_Esd_TouchTag_End(&context->TouchTag);
 1267              		.loc 4 118 0
 1268 000e 7B68     		ldr	r3, [r7, #4]
 1269 0010 0833     		adds	r3, r3, #8
 1270 0012 1846     		mov	r0, r3
 1271 0014 FFF7FEFF 		bl	Ft_Esd_TouchTag_End
 119:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** }
 1272              		.loc 4 119 0
 1273 0018 00BF     		nop
 1274 001a 1037     		adds	r7, r7, #16
 1275              	.LCFI106:
 1276              		.cfi_def_cfa_offset 8
 1277 001c BD46     		mov	sp, r7
 1278              	.LCFI107:
 1279              		.cfi_def_cfa_register 13
 1280              		@ sp needed
 1281 001e 80BD     		pop	{r7, pc}
 1282              		.cfi_endproc
 1283              	.LFE35:
 1285              		.section	.text.Ft_Esd_Slider_Get_Primary_Color__return,"ax",%progbits
 1286              		.align	1
 1287              		.syntax unified
 1288              		.thumb
 1289              		.thumb_func
 1290              		.fpu fpv5-sp-d16
 1292              	Ft_Esd_Slider_Get_Primary_Color__return:
 1293              	.LFB36:
 120:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 
 121:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** ft_rgb32_t Ft_Esd_Slider_Get_Primary_Color__return(Ft_Esd_Slider *context)
 122:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** {
 1294              		.loc 4 122 0
 1295              		.cfi_startproc
 1296              		@ args = 0, pretend = 0, frame = 16
 1297              		@ frame_needed = 1, uses_anonymous_args = 0
 1298 0000 80B5     		push	{r7, lr}
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s 			page 30


 1299              	.LCFI108:
 1300              		.cfi_def_cfa_offset 8
 1301              		.cfi_offset 7, -8
 1302              		.cfi_offset 14, -4
 1303 0002 84B0     		sub	sp, sp, #16
 1304              	.LCFI109:
 1305              		.cfi_def_cfa_offset 24
 1306 0004 00AF     		add	r7, sp, #0
 1307              	.LCFI110:
 1308              		.cfi_def_cfa_register 7
 1309 0006 7860     		str	r0, [r7, #4]
 123:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	void *parent = context->Parent;
 1310              		.loc 4 123 0
 1311 0008 7B68     		ldr	r3, [r7, #4]
 1312 000a 1B68     		ldr	r3, [r3]
 1313 000c FB60     		str	r3, [r7, #12]
 124:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	Ft_Esd_Theme * theme_2 = context->Theme(parent);
 1314              		.loc 4 124 0
 1315 000e 7B68     		ldr	r3, [r7, #4]
 1316 0010 5B68     		ldr	r3, [r3, #4]
 1317 0012 F868     		ldr	r0, [r7, #12]
 1318 0014 9847     		blx	r3
 1319              	.LVL10:
 1320 0016 B860     		str	r0, [r7, #8]
 125:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	return Ft_Esd_Theme_GetPrimaryColor(theme_2);
 1321              		.loc 4 125 0
 1322 0018 B868     		ldr	r0, [r7, #8]
 1323 001a FFF7FEFF 		bl	Ft_Esd_Theme_GetPrimaryColor
 1324 001e 0346     		mov	r3, r0
 126:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** }
 1325              		.loc 4 126 0
 1326 0020 1846     		mov	r0, r3
 1327 0022 1037     		adds	r7, r7, #16
 1328              	.LCFI111:
 1329              		.cfi_def_cfa_offset 8
 1330 0024 BD46     		mov	sp, r7
 1331              	.LCFI112:
 1332              		.cfi_def_cfa_register 13
 1333              		@ sp needed
 1334 0026 80BD     		pop	{r7, pc}
 1335              		.cfi_endproc
 1336              	.LFE36:
 1338              		.section	.text.Ft_Esd_Slider_TouchTag_Down__Signal,"ax",%progbits
 1339              		.align	1
 1340              		.syntax unified
 1341              		.thumb
 1342              		.thumb_func
 1343              		.fpu fpv5-sp-d16
 1345              	Ft_Esd_Slider_TouchTag_Down__Signal:
 1346              	.LFB37:
 127:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 
 128:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** void Ft_Esd_Slider_TouchTag_Down__Signal(void *c)
 129:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** {
 1347              		.loc 4 129 0
 1348              		.cfi_startproc
 1349              		@ args = 0, pretend = 0, frame = 24
 1350              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s 			page 31


 1351 0000 80B5     		push	{r7, lr}
 1352              	.LCFI113:
 1353              		.cfi_def_cfa_offset 8
 1354              		.cfi_offset 7, -8
 1355              		.cfi_offset 14, -4
 1356 0002 86B0     		sub	sp, sp, #24
 1357              	.LCFI114:
 1358              		.cfi_def_cfa_offset 32
 1359 0004 00AF     		add	r7, sp, #0
 1360              	.LCFI115:
 1361              		.cfi_def_cfa_register 7
 1362 0006 7860     		str	r0, [r7, #4]
 130:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	Ft_Esd_Slider *context = (Ft_Esd_Slider *)c;
 1363              		.loc 4 130 0
 1364 0008 7B68     		ldr	r3, [r7, #4]
 1365 000a 7B61     		str	r3, [r7, #20]
 131:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	void *parent = context->Parent;
 1366              		.loc 4 131 0
 1367 000c 7B69     		ldr	r3, [r7, #20]
 1368 000e 1B68     		ldr	r3, [r3]
 1369 0010 3B61     		str	r3, [r7, #16]
 132:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	ft_int16_t set_variable = Ft_Esd_Slider_Ft_Esd_Slider_ClampedValue__return(context);
 1370              		.loc 4 132 0
 1371 0012 7869     		ldr	r0, [r7, #20]
 1372 0014 FFF7FEFF 		bl	Ft_Esd_Slider_Ft_Esd_Slider_ClampedValue__return
 1373 0018 0346     		mov	r3, r0
 1374 001a FB81     		strh	r3, [r7, #14]	@ movhi
 133:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	context->PreviousValue = set_variable;
 1375              		.loc 4 133 0
 1376 001c 7B69     		ldr	r3, [r7, #20]
 1377 001e FA89     		ldrh	r2, [r7, #14]	@ movhi
 1378 0020 9A87     		strh	r2, [r3, #60]	@ movhi
 134:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	ft_int16_t set_variable_1 = Ft_Esd_TouchTag_TouchX(&context->TouchTag);
 1379              		.loc 4 134 0
 1380 0022 7B69     		ldr	r3, [r7, #20]
 1381 0024 0833     		adds	r3, r3, #8
 1382 0026 1846     		mov	r0, r3
 1383 0028 FFF7FEFF 		bl	Ft_Esd_TouchTag_TouchX
 1384 002c 0346     		mov	r3, r0
 1385 002e BB81     		strh	r3, [r7, #12]	@ movhi
 135:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	context->PreviousX = set_variable_1;
 1386              		.loc 4 135 0
 1387 0030 7B69     		ldr	r3, [r7, #20]
 1388 0032 BA89     		ldrh	r2, [r7, #12]	@ movhi
 1389 0034 DA87     		strh	r2, [r3, #62]	@ movhi
 136:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	ft_int16_t set_variable_2 = Ft_Esd_TouchTag_TouchY(&context->TouchTag);
 1390              		.loc 4 136 0
 1391 0036 7B69     		ldr	r3, [r7, #20]
 1392 0038 0833     		adds	r3, r3, #8
 1393 003a 1846     		mov	r0, r3
 1394 003c FFF7FEFF 		bl	Ft_Esd_TouchTag_TouchY
 1395 0040 0346     		mov	r3, r0
 1396 0042 7B81     		strh	r3, [r7, #10]	@ movhi
 137:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	context->PreviousY = set_variable_2;
 1397              		.loc 4 137 0
 1398 0044 7B69     		ldr	r3, [r7, #20]
 1399 0046 7A89     		ldrh	r2, [r7, #10]	@ movhi
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s 			page 32


 1400 0048 A3F84420 		strh	r2, [r3, #68]	@ movhi
 138:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** }
 1401              		.loc 4 138 0
 1402 004c 00BF     		nop
 1403 004e 1837     		adds	r7, r7, #24
 1404              	.LCFI116:
 1405              		.cfi_def_cfa_offset 8
 1406 0050 BD46     		mov	sp, r7
 1407              	.LCFI117:
 1408              		.cfi_def_cfa_register 13
 1409              		@ sp needed
 1410 0052 80BD     		pop	{r7, pc}
 1411              		.cfi_endproc
 1412              	.LFE37:
 1414              		.section	.text.Ft_Esd_Slider_Ft_Esd_Slider_ClampedValue__return,"ax",%progbits
 1415              		.align	1
 1416              		.syntax unified
 1417              		.thumb
 1418              		.thumb_func
 1419              		.fpu fpv5-sp-d16
 1421              	Ft_Esd_Slider_Ft_Esd_Slider_ClampedValue__return:
 1422              	.LFB38:
 139:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 
 140:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** ft_int16_t Ft_Esd_Slider_Ft_Esd_Slider_ClampedValue__return(Ft_Esd_Slider *context)
 141:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** {
 1423              		.loc 4 141 0
 1424              		.cfi_startproc
 1425              		@ args = 0, pretend = 0, frame = 16
 1426              		@ frame_needed = 1, uses_anonymous_args = 0
 1427 0000 80B5     		push	{r7, lr}
 1428              	.LCFI118:
 1429              		.cfi_def_cfa_offset 8
 1430              		.cfi_offset 7, -8
 1431              		.cfi_offset 14, -4
 1432 0002 84B0     		sub	sp, sp, #16
 1433              	.LCFI119:
 1434              		.cfi_def_cfa_offset 24
 1435 0004 00AF     		add	r7, sp, #0
 1436              	.LCFI120:
 1437              		.cfi_def_cfa_register 7
 1438 0006 7860     		str	r0, [r7, #4]
 142:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	void *parent = context->Parent;
 1439              		.loc 4 142 0
 1440 0008 7B68     		ldr	r3, [r7, #4]
 1441 000a 1B68     		ldr	r3, [r3]
 1442 000c FB60     		str	r3, [r7, #12]
 143:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** 	return Ft_Esd_Slider_ClampedValue(context);
 1443              		.loc 4 143 0
 1444 000e 7868     		ldr	r0, [r7, #4]
 1445 0010 FFF7FEFF 		bl	Ft_Esd_Slider_ClampedValue
 1446 0014 0346     		mov	r3, r0
 144:FT_Esd_Widgets/Ft_Esd_Slider__Generated.c **** }
 1447              		.loc 4 144 0
 1448 0016 1846     		mov	r0, r3
 1449 0018 1037     		adds	r7, r7, #16
 1450              	.LCFI121:
 1451              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s 			page 33


 1452 001a BD46     		mov	sp, r7
 1453              	.LCFI122:
 1454              		.cfi_def_cfa_register 13
 1455              		@ sp needed
 1456 001c 80BD     		pop	{r7, pc}
 1457              		.cfi_endproc
 1458              	.LFE38:
 1460              		.text
 1461              	.Letext0:
 1462              		.file 5 "FT_Eve_Hal/FT_DataTypes.h"
 1463              		.file 6 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/lock.h"
 1464              		.file 7 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_types.h"
 1465              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 1466              		.file 9 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/unistd.h"
 1467              		.file 10 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/reent.h"
 1468              		.file 11 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/stdlib.h"
 1469              		.file 12 "FT_Eve_Hal/FT_Gpu_Hal.h"
 1470              		.file 13 "FT_Esd_Framework/Ft_Esd.h"
 1471              		.file 14 "FT_Esd_Framework/Ft_Esd_TouchTag.h"
 1472              		.file 15 "FT_Esd_Widgets/Ft_Esd_Slider.h"
 1473              		.file 16 "FT_Esd_Framework/FT_Esd_CoPro_Cmds.h"
 1474              		.file 17 "FT_Esd_Framework/Ft_Esd_GpuAlloc.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s 			page 34


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Ft_Esd_Slider__Generated.c
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:18     .text.Ft_Esd_Theme_GetBackColor:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:24     .text.Ft_Esd_Theme_GetBackColor:0000000000000000 Ft_Esd_Theme_GetBackColor
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:71     .text.Ft_Esd_Theme_GetCurrentColor:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:77     .text.Ft_Esd_Theme_GetCurrentColor:0000000000000000 Ft_Esd_Theme_GetCurrentColor
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:123    .text.Ft_Esd_Theme_GetPrimaryColor:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:129    .text.Ft_Esd_Theme_GetPrimaryColor:0000000000000000 Ft_Esd_Theme_GetPrimaryColor
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:175    .text.Ft_Esd_BitmapCell_GetInfo:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:181    .text.Ft_Esd_BitmapCell_GetInfo:0000000000000000 Ft_Esd_BitmapCell_GetInfo
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:230    .text.Ft_Esd_Dl_TAG:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:236    .text.Ft_Esd_Dl_TAG:0000000000000000 Ft_Esd_Dl_TAG
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:277    .text.Ft_Esd_Dl_TAG:0000000000000024 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:282    .text.Ft_Esd_Dl_COLOR_RGB:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:288    .text.Ft_Esd_Dl_COLOR_RGB:0000000000000000 Ft_Esd_Dl_COLOR_RGB
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:352    .text.Ft_Esd_Dl_COLOR_RGB:0000000000000050 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:359    .text.Ft_Esd_Dl_COLOR_A:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:365    .text.Ft_Esd_Dl_COLOR_A:0000000000000000 Ft_Esd_Dl_COLOR_A
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:426    .text.Ft_Esd_Dl_COLOR_A:0000000000000048 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:433    .text.Ft_Esd_Slider_Theme__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:440    .text.Ft_Esd_Slider_Theme__Default:0000000000000000 Ft_Esd_Slider_Theme__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:475    .text.Ft_Esd_Slider_X__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:482    .text.Ft_Esd_Slider_X__Default:0000000000000000 Ft_Esd_Slider_X__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:519    .text.Ft_Esd_Slider_Y__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:526    .text.Ft_Esd_Slider_Y__Default:0000000000000000 Ft_Esd_Slider_Y__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:563    .text.Ft_Esd_Slider_Width__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:570    .text.Ft_Esd_Slider_Width__Default:0000000000000000 Ft_Esd_Slider_Width__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:607    .text.Ft_Esd_Slider_Height__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:614    .text.Ft_Esd_Slider_Height__Default:0000000000000000 Ft_Esd_Slider_Height__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:651    .text.Ft_Esd_Slider_Alpha__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:658    .text.Ft_Esd_Slider_Alpha__Default:0000000000000000 Ft_Esd_Slider_Alpha__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:695    .text.Ft_Esd_Slider_Changed__Noop:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:702    .text.Ft_Esd_Slider_Changed__Noop:0000000000000000 Ft_Esd_Slider_Changed__Noop
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:739    .text.Ft_Esd_Slider_Range__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:746    .text.Ft_Esd_Slider_Range__Default:0000000000000000 Ft_Esd_Slider_Range__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:783    .text.Ft_Esd_Slider__Initializer:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:790    .text.Ft_Esd_Slider__Initializer:0000000000000000 Ft_Esd_Slider__Initializer
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:886    .text.Ft_Esd_Slider__Initializer:0000000000000078 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:1345   .text.Ft_Esd_Slider_TouchTag_Down__Signal:0000000000000000 Ft_Esd_Slider_TouchTag_Down__Signal
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:899    .text.Ft_Esd_Slider_Render:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:906    .text.Ft_Esd_Slider_Render:0000000000000000 Ft_Esd_Slider_Render
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:1292   .text.Ft_Esd_Slider_Get_Primary_Color__return:0000000000000000 Ft_Esd_Slider_Get_Primary_Color__return
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:1421   .text.Ft_Esd_Slider_Ft_Esd_Slider_ClampedValue__return:0000000000000000 Ft_Esd_Slider_Ft_Esd_Slider_ClampedValue__return
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:1139   .text.Ft_Esd_Slider_Start:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:1146   .text.Ft_Esd_Slider_Start:0000000000000000 Ft_Esd_Slider_Start
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:1187   .text.Ft_Esd_Slider_Update:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:1194   .text.Ft_Esd_Slider_Update:0000000000000000 Ft_Esd_Slider_Update
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:1238   .text.Ft_Esd_Slider_End:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:1245   .text.Ft_Esd_Slider_End:0000000000000000 Ft_Esd_Slider_End
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:1286   .text.Ft_Esd_Slider_Get_Primary_Color__return:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:1339   .text.Ft_Esd_Slider_TouchTag_Down__Signal:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s:1415   .text.Ft_Esd_Slider_Ft_Esd_Slider_ClampedValue__return:0000000000000000 $t

UNDEFINED SYMBOLS
Ft_Esd_Theme_GetCurrent
Ft_Gpu_Hal_WrCmd32
Ft_Esd_Host
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccExJwgr.s 			page 35


Ft_Esd_GpuState_I
Ft_Esd_GpuState
Ft_Esd_TouchTag__Initializer
Ft_Esd_TouchTag_Touching
Ft_Esd_GetHost
Ft_Gpu_CoCmd_BgColor
Ft_Gpu_CoCmd_FgColor
Ft_Esd_TouchTag_Tag
Ft_Gpu_CoCmd_Slider
Ft_Esd_TouchTag_Start
Ft_Esd_TouchTag_Update
Ft_Esd_Slider_Update_Signal
Ft_Esd_TouchTag_End
Ft_Esd_TouchTag_TouchX
Ft_Esd_TouchTag_TouchY
Ft_Esd_Slider_ClampedValue
