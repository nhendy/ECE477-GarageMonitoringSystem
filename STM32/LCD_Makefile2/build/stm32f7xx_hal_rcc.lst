ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_hal_rcc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_RCC_DeInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-sp-d16
  25              	HAL_RCC_DeInit:
  26              	.LFB138:
  27              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @file    stm32f7xx_hal_rcc.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   @verbatim
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     [..]
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (HSI 16MHz) with Flash 0 wait state, Flash prefetch buffer, D-Cache
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       and I-Cache are disabled, and all peripherals are off except internal
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       SRAM, Flash and JTAG.
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) busses;
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           all peripherals mapped on these busses are running at HSI speed.
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     [..]
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       Once the device started from reset, the user application has to:
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (+) Configure the AHB and APB busses prescalers
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 2


  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals which clocks are not
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           derived from the System clock (I2S, RTC, ADC, USB OTG FS/SDIO/RNG)
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****                       ##### RCC Limitations #####
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   ==============================================================================
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     [..]
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       from/to registers.
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (+) If peripheral is mapped on AHB: the delay is 2 AHB clock cycle
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (+) If peripheral is mapped on APB: the delay is 2 APB clock cycle
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     [..]
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       Implemented Workaround:
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (+) For AHB & APB peripherals, a dummy read to the peripheral register has been
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   @endverbatim
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   ******************************************************************************
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @attention
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * Redistribution and use in source and binary forms, with or without modification,
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * are permitted provided that the following conditions are met:
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer.
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer in the documentation
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *      and/or other materials provided with the distribution.
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *      may be used to endorse or promote products derived from this software
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *      without specific prior written permission.
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   ******************************************************************************
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #include "stm32f7xx_hal.h"
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /** @addtogroup STM32F7xx_HAL_Driver
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @{
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 3


  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /** @defgroup RCC RCC
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @brief RCC HAL module driver
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @{
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @{
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #define MCO1_CLK_ENABLE()   __HAL_RCC_GPIOA_CLK_ENABLE()
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #define MCO2_CLK_ENABLE()   __HAL_RCC_GPIOC_CLK_ENABLE()
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #define MCO2_GPIO_PORT         GPIOC
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #define MCO2_PIN               GPIO_PIN_9
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /**
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @}
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @{
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /**
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @}
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /* Exported functions ---------------------------------------------------------*/
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @{
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   @verbatim
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   ===============================================================================
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** ##### Initialization and de-initialization functions #####
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   ===============================================================================
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     [..]
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System buses clocks (SYSCLK, AHB, APB1
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       and APB2).
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (#) HSI (high-speed internal), 16 MHz factory-trimmed RC used directly or through
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 4


 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           the PLL as System clock source.
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (#) LSI (low-speed internal), 32 KHz low consumption RC used as IWDG and/or RTC
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           clock source.
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (#) HSE (high-speed external), 4 to 26 MHz crystal oscillator used directly or
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           through the PLL as System clock source. Can be used also as RTC clock source.
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (#) PLL (clocked by HSI or HSE), featuring two different output clocks:
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         (++) The first output is used to generate the high speed system clock (up to 216 MHz)
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         (++) The second output is used to generate the clock for the USB OTG FS (48 MHz),
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****              the random analog generator (<=48 MHz) and the SDIO (<= 48 MHz).
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (#) CSS (Clock security system), once enable using the function HAL_RCC_EnableCSS()
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           and if a HSE clock failure occurs(HSE used directly or through PLL as System
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           clock source), the System clock is automatically switched to HSI and an interrupt
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           is generated if enabled. The interrupt is linked to the Cortex-M7 NMI
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (Non-Maskable Interrupt) exception vector.
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (#) MCO1 (microcontroller clock output), used to output HSI, LSE, HSE or PLL
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           clock (through a configurable prescaler) on PA8 pin.
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (#) MCO2 (microcontroller clock output), used to output HSE, PLL, SYSCLK or PLLI2S
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           clock (through a configurable prescaler) on PC9 pin.
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     [..] System, AHB and APB busses clocks configuration
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           HSE and PLL.
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           The AHB clock (HCLK) is derived from System clock through configurable
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           prescaler and used to clock the CPU, memory and peripherals mapped
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           from AHB clock through configurable prescalers and used to clock
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           the peripherals mapped on these busses. You can use
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           "HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       -@- All the peripheral clocks are derived from the System clock (SYSCLK) except:
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (+@) I2S: the I2S clock can be derived either from a specific PLL (PLLI2S) or
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****               from an external clock mapped on the I2S_CKIN pin.
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****               You have to use __HAL_RCC_PLLI2S_CONFIG() macro to configure this clock.
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (+@)  SAI: the SAI clock can be derived either from a specific PLL (PLLI2S) or (PLLSAI) o
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****               from an external clock mapped on the I2S_CKIN pin.
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****                You have to use __HAL_RCC_PLLI2S_CONFIG() macro to configure this clock.
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (+@) RTC: the RTC clock can be derived either from the LSI, LSE or HSE clock
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****               divided by 2 to 31. You have to use __HAL_RCC_RTC_CONFIG() and __HAL_RCC_RTC_ENABLE()
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****               macros to configure this clock.
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (+@) USB OTG FS, SDIO and RTC: USB OTG FS require a frequency equal to 48 MHz
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****               to work correctly, while the SDIO require a frequency equal or lower than
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****               to 48. This clock is derived of the main PLL through PLLQ divider.
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (+@) IWDG clock which is always the LSI clock.
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** @endverbatim
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @{
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /**
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 5


 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            - HSE, PLL, PLLI2S and PLLSAI OFF
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            - CSS, MCO1 and MCO2 OFF
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            - All interrupts disabled
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   This function doesn't modify the configuration of the
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            - Peripheral clocks
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @retval None
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_DeInit(void)
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** {
  28              		.loc 1 215 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 82B0     		sub	sp, sp, #8
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   uint32_t tickstart;
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get Start Tick */
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   tickstart = HAL_GetTick();
  43              		.loc 1 219 0
  44 0006 FFF7FEFF 		bl	HAL_GetTick
  45 000a 7860     		str	r0, [r7, #4]
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Set HSION bit to the reset value */
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_HSION);
  46              		.loc 1 222 0
  47 000c 654B     		ldr	r3, .L16
  48 000e 1B68     		ldr	r3, [r3]
  49 0010 644A     		ldr	r2, .L16
  50 0012 43F00103 		orr	r3, r3, #1
  51 0016 1360     		str	r3, [r2]
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Wait till HSI is ready */
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == RESET)
  52              		.loc 1 225 0
  53 0018 08E0     		b	.L2
  54              	.L4:
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
  55              		.loc 1 227 0
  56 001a FFF7FEFF 		bl	HAL_GetTick
  57 001e 0246     		mov	r2, r0
  58 0020 7B68     		ldr	r3, [r7, #4]
  59 0022 D31A     		subs	r3, r2, r3
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 6


  60 0024 022B     		cmp	r3, #2
  61 0026 01D9     		bls	.L2
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       return HAL_TIMEOUT;
  62              		.loc 1 229 0
  63 0028 0323     		movs	r3, #3
  64 002a B6E0     		b	.L3
  65              	.L2:
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
  66              		.loc 1 225 0
  67 002c 5D4B     		ldr	r3, .L16
  68 002e 1B68     		ldr	r3, [r3]
  69 0030 03F00203 		and	r3, r3, #2
  70 0034 002B     		cmp	r3, #0
  71 0036 F0D0     		beq	.L4
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Set HSITRIM[4:0] bits to the reset value */
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_HSITRIM_4);
  72              		.loc 1 234 0
  73 0038 5A4B     		ldr	r3, .L16
  74 003a 1B68     		ldr	r3, [r3]
  75 003c 594A     		ldr	r2, .L16
  76 003e 43F08003 		orr	r3, r3, #128
  77 0042 1360     		str	r3, [r2]
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get Start Tick */
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   tickstart = HAL_GetTick();
  78              		.loc 1 237 0
  79 0044 FFF7FEFF 		bl	HAL_GetTick
  80 0048 7860     		str	r0, [r7, #4]
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Reset CFGR register */
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
  81              		.loc 1 240 0
  82 004a 564B     		ldr	r3, .L16
  83 004c 0022     		movs	r2, #0
  84 004e 9A60     		str	r2, [r3, #8]
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Wait till clock switch is ready */
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   while (READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != RESET)
  85              		.loc 1 243 0
  86 0050 0AE0     		b	.L5
  87              	.L6:
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
  88              		.loc 1 245 0
  89 0052 FFF7FEFF 		bl	HAL_GetTick
  90 0056 0246     		mov	r2, r0
  91 0058 7B68     		ldr	r3, [r7, #4]
  92 005a D31A     		subs	r3, r2, r3
  93 005c 41F28832 		movw	r2, #5000
  94 0060 9342     		cmp	r3, r2
  95 0062 01D9     		bls	.L5
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       return HAL_TIMEOUT;
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 7


  96              		.loc 1 247 0
  97 0064 0323     		movs	r3, #3
  98 0066 98E0     		b	.L3
  99              	.L5:
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 100              		.loc 1 243 0
 101 0068 4E4B     		ldr	r3, .L16
 102 006a 9B68     		ldr	r3, [r3, #8]
 103 006c 03F00C03 		and	r3, r3, #12
 104 0070 002B     		cmp	r3, #0
 105 0072 EED1     		bne	.L6
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get Start Tick */
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 106              		.loc 1 252 0
 107 0074 FFF7FEFF 		bl	HAL_GetTick
 108 0078 7860     		str	r0, [r7, #4]
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Clear HSEON, HSEBYP and CSSON bits */
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON | RCC_CR_HSEBYP | RCC_CR_CSSON);
 109              		.loc 1 255 0
 110 007a 4A4B     		ldr	r3, .L16
 111 007c 1B68     		ldr	r3, [r3]
 112 007e 494A     		ldr	r2, .L16
 113 0080 23F45023 		bic	r3, r3, #851968
 114 0084 1360     		str	r3, [r2]
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Wait till HSE is disabled */
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != RESET)
 115              		.loc 1 258 0
 116 0086 08E0     		b	.L7
 117              	.L8:
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 118              		.loc 1 260 0
 119 0088 FFF7FEFF 		bl	HAL_GetTick
 120 008c 0246     		mov	r2, r0
 121 008e 7B68     		ldr	r3, [r7, #4]
 122 0090 D31A     		subs	r3, r2, r3
 123 0092 642B     		cmp	r3, #100
 124 0094 01D9     		bls	.L7
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       return HAL_TIMEOUT;
 125              		.loc 1 262 0
 126 0096 0323     		movs	r3, #3
 127 0098 7FE0     		b	.L3
 128              	.L7:
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 129              		.loc 1 258 0
 130 009a 424B     		ldr	r3, .L16
 131 009c 1B68     		ldr	r3, [r3]
 132 009e 03F40033 		and	r3, r3, #131072
 133 00a2 002B     		cmp	r3, #0
 134 00a4 F0D1     		bne	.L8
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 8


 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get Start Tick */
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 135              		.loc 1 267 0
 136 00a6 FFF7FEFF 		bl	HAL_GetTick
 137 00aa 7860     		str	r0, [r7, #4]
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Clear PLLON bit */
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLON);
 138              		.loc 1 270 0
 139 00ac 3D4B     		ldr	r3, .L16
 140 00ae 1B68     		ldr	r3, [r3]
 141 00b0 3C4A     		ldr	r2, .L16
 142 00b2 23F08073 		bic	r3, r3, #16777216
 143 00b6 1360     		str	r3, [r2]
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Wait till PLL is disabled */
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != RESET)
 144              		.loc 1 273 0
 145 00b8 08E0     		b	.L9
 146              	.L10:
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 147              		.loc 1 275 0
 148 00ba FFF7FEFF 		bl	HAL_GetTick
 149 00be 0246     		mov	r2, r0
 150 00c0 7B68     		ldr	r3, [r7, #4]
 151 00c2 D31A     		subs	r3, r2, r3
 152 00c4 022B     		cmp	r3, #2
 153 00c6 01D9     		bls	.L9
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       return HAL_TIMEOUT;
 154              		.loc 1 277 0
 155 00c8 0323     		movs	r3, #3
 156 00ca 66E0     		b	.L3
 157              	.L9:
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 158              		.loc 1 273 0
 159 00cc 354B     		ldr	r3, .L16
 160 00ce 1B68     		ldr	r3, [r3]
 161 00d0 03F00073 		and	r3, r3, #33554432
 162 00d4 002B     		cmp	r3, #0
 163 00d6 F0D1     		bne	.L10
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get Start Tick */
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 164              		.loc 1 282 0
 165 00d8 FFF7FEFF 		bl	HAL_GetTick
 166 00dc 7860     		str	r0, [r7, #4]
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Reset PLLI2SON bit */
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLI2SON);
 167              		.loc 1 285 0
 168 00de 314B     		ldr	r3, .L16
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 9


 169 00e0 1B68     		ldr	r3, [r3]
 170 00e2 304A     		ldr	r2, .L16
 171 00e4 23F08063 		bic	r3, r3, #67108864
 172 00e8 1360     		str	r3, [r2]
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Wait till PLLI2S is disabled */
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLLI2SRDY) != RESET)
 173              		.loc 1 288 0
 174 00ea 08E0     		b	.L11
 175              	.L12:
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 176              		.loc 1 290 0
 177 00ec FFF7FEFF 		bl	HAL_GetTick
 178 00f0 0246     		mov	r2, r0
 179 00f2 7B68     		ldr	r3, [r7, #4]
 180 00f4 D31A     		subs	r3, r2, r3
 181 00f6 642B     		cmp	r3, #100
 182 00f8 01D9     		bls	.L11
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       return HAL_TIMEOUT;
 183              		.loc 1 292 0
 184 00fa 0323     		movs	r3, #3
 185 00fc 4DE0     		b	.L3
 186              	.L11:
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 187              		.loc 1 288 0
 188 00fe 294B     		ldr	r3, .L16
 189 0100 1B68     		ldr	r3, [r3]
 190 0102 03F00063 		and	r3, r3, #134217728
 191 0106 002B     		cmp	r3, #0
 192 0108 F0D1     		bne	.L12
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get Start Tick */
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 193              		.loc 1 297 0
 194 010a FFF7FEFF 		bl	HAL_GetTick
 195 010e 7860     		str	r0, [r7, #4]
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Reset PLLSAI bit */
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLSAION);
 196              		.loc 1 300 0
 197 0110 244B     		ldr	r3, .L16
 198 0112 1B68     		ldr	r3, [r3]
 199 0114 234A     		ldr	r2, .L16
 200 0116 23F08053 		bic	r3, r3, #268435456
 201 011a 1360     		str	r3, [r2]
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Wait till PLLSAI is disabled */
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLLSAIRDY) != RESET)
 202              		.loc 1 303 0
 203 011c 08E0     		b	.L13
 204              	.L14:
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 10


 205              		.loc 1 305 0
 206 011e FFF7FEFF 		bl	HAL_GetTick
 207 0122 0246     		mov	r2, r0
 208 0124 7B68     		ldr	r3, [r7, #4]
 209 0126 D31A     		subs	r3, r2, r3
 210 0128 642B     		cmp	r3, #100
 211 012a 01D9     		bls	.L13
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       return HAL_TIMEOUT;
 212              		.loc 1 307 0
 213 012c 0323     		movs	r3, #3
 214 012e 34E0     		b	.L3
 215              	.L13:
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 216              		.loc 1 303 0
 217 0130 1C4B     		ldr	r3, .L16
 218 0132 1B68     		ldr	r3, [r3]
 219 0134 03F00053 		and	r3, r3, #536870912
 220 0138 002B     		cmp	r3, #0
 221 013a F0D1     		bne	.L14
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Once PLL, PLLI2S and PLLSAI are OFF, reset PLLCFGR register to default value */
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   RCC->PLLCFGR = RCC_PLLCFGR_PLLM_4 | RCC_PLLCFGR_PLLN_6 | RCC_PLLCFGR_PLLN_7 | RCC_PLLCFGR_PLLQ_2 
 222              		.loc 1 312 0
 223 013c 194B     		ldr	r3, .L16
 224 013e 1A4A     		ldr	r2, .L16+4
 225 0140 5A60     		str	r2, [r3, #4]
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Reset PLLI2SCFGR register to default value */
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   RCC->PLLI2SCFGR = RCC_PLLI2SCFGR_PLLI2SN_6 | RCC_PLLI2SCFGR_PLLI2SN_7 | RCC_PLLI2SCFGR_PLLI2SQ_2 
 226              		.loc 1 315 0
 227 0142 184B     		ldr	r3, .L16
 228 0144 194A     		ldr	r2, .L16+8
 229 0146 C3F88420 		str	r2, [r3, #132]
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Reset PLLSAICFGR register to default value */
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   RCC->PLLSAICFGR = RCC_PLLSAICFGR_PLLSAIN_6 | RCC_PLLSAICFGR_PLLSAIN_7 | RCC_PLLSAICFGR_PLLSAIQ_2 
 230              		.loc 1 318 0
 231 014a 164B     		ldr	r3, .L16
 232 014c 174A     		ldr	r2, .L16+8
 233 014e C3F88820 		str	r2, [r3, #136]
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Disable all interrupts */
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CIR, RCC_CIR_LSIRDYIE | RCC_CIR_LSERDYIE | RCC_CIR_HSIRDYIE | RCC_CIR_HSERDYIE | R
 234              		.loc 1 321 0
 235 0152 144B     		ldr	r3, .L16
 236 0154 DB68     		ldr	r3, [r3, #12]
 237 0156 134A     		ldr	r2, .L16
 238 0158 23F4FE43 		bic	r3, r3, #32512
 239 015c D360     		str	r3, [r2, #12]
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Clear all interrupt flags */
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   SET_BIT(RCC->CIR, RCC_CIR_LSIRDYC | RCC_CIR_LSERDYC | RCC_CIR_HSIRDYC | RCC_CIR_HSERDYC | RCC_CIR
 240              		.loc 1 324 0
 241 015e 114B     		ldr	r3, .L16
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 11


 242 0160 DB68     		ldr	r3, [r3, #12]
 243 0162 104A     		ldr	r2, .L16
 244 0164 43F47F03 		orr	r3, r3, #16711680
 245 0168 D360     		str	r3, [r2, #12]
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Clear LSION bit */
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CSR, RCC_CSR_LSION);
 246              		.loc 1 327 0
 247 016a 0E4B     		ldr	r3, .L16
 248 016c 5B6F     		ldr	r3, [r3, #116]
 249 016e 0D4A     		ldr	r2, .L16
 250 0170 23F00103 		bic	r3, r3, #1
 251 0174 5367     		str	r3, [r2, #116]
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Reset all CSR flags */
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   SET_BIT(RCC->CSR, RCC_CSR_RMVF);
 252              		.loc 1 330 0
 253 0176 0B4B     		ldr	r3, .L16
 254 0178 5B6F     		ldr	r3, [r3, #116]
 255 017a 0A4A     		ldr	r2, .L16
 256 017c 43F08073 		orr	r3, r3, #16777216
 257 0180 5367     		str	r3, [r2, #116]
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
 258              		.loc 1 333 0
 259 0182 0B4B     		ldr	r3, .L16+12
 260 0184 0B4A     		ldr	r2, .L16+16
 261 0186 1A60     		str	r2, [r3]
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Adapt Systick interrupt period */
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 262              		.loc 1 336 0
 263 0188 0020     		movs	r0, #0
 264 018a FFF7FEFF 		bl	HAL_InitTick
 265 018e 0346     		mov	r3, r0
 266 0190 002B     		cmp	r3, #0
 267 0192 01D0     		beq	.L15
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     return HAL_ERROR;
 268              		.loc 1 338 0
 269 0194 0123     		movs	r3, #1
 270 0196 00E0     		b	.L3
 271              	.L15:
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   else
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     return HAL_OK;
 272              		.loc 1 342 0
 273 0198 0023     		movs	r3, #0
 274              	.L3:
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** }
 275              		.loc 1 344 0
 276 019a 1846     		mov	r0, r3
 277 019c 0837     		adds	r7, r7, #8
 278              	.LCFI3:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 12


 279              		.cfi_def_cfa_offset 8
 280 019e BD46     		mov	sp, r7
 281              	.LCFI4:
 282              		.cfi_def_cfa_register 13
 283              		@ sp needed
 284 01a0 80BD     		pop	{r7, pc}
 285              	.L17:
 286 01a2 00BF     		.align	2
 287              	.L16:
 288 01a4 00380240 		.word	1073887232
 289 01a8 10300024 		.word	603992080
 290 01ac 00300024 		.word	603992064
 291 01b0 00000000 		.word	SystemCoreClock
 292 01b4 0024F400 		.word	16000000
 293              		.cfi_endproc
 294              	.LFE138:
 296              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 297              		.align	1
 298              		.global	HAL_RCC_OscConfig
 299              		.syntax unified
 300              		.thumb
 301              		.thumb_func
 302              		.fpu fpv5-sp-d16
 304              	HAL_RCC_OscConfig:
 305              	.LFB139:
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /**
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         supported by this function. User should request a transition to LSE Off
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         supported by this function. User should request a transition to HSE Off
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @retval HAL status
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** {
 306              		.loc 1 361 0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 24
 309              		@ frame_needed = 1, uses_anonymous_args = 0
 310 0000 80B5     		push	{r7, lr}
 311              	.LCFI5:
 312              		.cfi_def_cfa_offset 8
 313              		.cfi_offset 7, -8
 314              		.cfi_offset 14, -4
 315 0002 86B0     		sub	sp, sp, #24
 316              	.LCFI6:
 317              		.cfi_def_cfa_offset 32
 318 0004 00AF     		add	r7, sp, #0
 319              	.LCFI7:
 320              		.cfi_def_cfa_register 7
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 13


 321 0006 7860     		str	r0, [r7, #4]
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   uint32_t tickstart;
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   FlagStatus pwrclkchanged = RESET;
 322              		.loc 1 363 0
 323 0008 0023     		movs	r3, #0
 324 000a FB75     		strb	r3, [r7, #23]
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Check Null pointer */
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if(RCC_OscInitStruct == NULL)
 325              		.loc 1 366 0
 326 000c 7B68     		ldr	r3, [r7, #4]
 327 000e 002B     		cmp	r3, #0
 328 0010 01D1     		bne	.L19
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     return HAL_ERROR;
 329              		.loc 1 368 0
 330 0012 0123     		movs	r3, #1
 331 0014 5CE2     		b	.L20
 332              	.L19:
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Check the parameters */
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 333              		.loc 1 375 0
 334 0016 7B68     		ldr	r3, [r7, #4]
 335 0018 1B68     		ldr	r3, [r3]
 336 001a 03F00103 		and	r3, r3, #1
 337 001e 002B     		cmp	r3, #0
 338 0020 00F08780 		beq	.L21
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Check the parameters */
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL, It can not be disabled */
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 339              		.loc 1 380 0
 340 0024 964B     		ldr	r3, .L74
 341 0026 9B68     		ldr	r3, [r3, #8]
 342 0028 03F00C03 		and	r3, r3, #12
 343 002c 042B     		cmp	r3, #4
 344 002e 0CD0     		beq	.L22
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RC
 345              		.loc 1 381 0
 346 0030 934B     		ldr	r3, .L74
 347 0032 9B68     		ldr	r3, [r3, #8]
 348 0034 03F00C03 		and	r3, r3, #12
 349 0038 082B     		cmp	r3, #8
 350 003a 12D1     		bne	.L23
 351              		.loc 1 381 0 is_stmt 0 discriminator 1
 352 003c 904B     		ldr	r3, .L74
 353 003e 5B68     		ldr	r3, [r3, #4]
 354 0040 03F48003 		and	r3, r3, #4194304
 355 0044 B3F5800F 		cmp	r3, #4194304
 356 0048 0BD1     		bne	.L23
 357              	.L22:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 14


 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 358              		.loc 1 383 0 is_stmt 1
 359 004a 8D4B     		ldr	r3, .L74
 360 004c 1B68     		ldr	r3, [r3]
 361 004e 03F40033 		and	r3, r3, #131072
 362 0052 002B     		cmp	r3, #0
 363 0054 6CD0     		beq	.L73
 364              		.loc 1 383 0 is_stmt 0 discriminator 1
 365 0056 7B68     		ldr	r3, [r7, #4]
 366 0058 5B68     		ldr	r3, [r3, #4]
 367 005a 002B     		cmp	r3, #0
 368 005c 68D1     		bne	.L73
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         return HAL_ERROR;
 369              		.loc 1 385 0 is_stmt 1
 370 005e 0123     		movs	r3, #1
 371 0060 36E2     		b	.L20
 372              	.L23:
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     else
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 373              		.loc 1 391 0
 374 0062 7B68     		ldr	r3, [r7, #4]
 375 0064 5B68     		ldr	r3, [r3, #4]
 376 0066 B3F5803F 		cmp	r3, #65536
 377 006a 06D1     		bne	.L25
 378              		.loc 1 391 0 is_stmt 0 discriminator 1
 379 006c 844B     		ldr	r3, .L74
 380 006e 1B68     		ldr	r3, [r3]
 381 0070 834A     		ldr	r2, .L74
 382 0072 43F48033 		orr	r3, r3, #65536
 383 0076 1360     		str	r3, [r2]
 384 0078 2EE0     		b	.L26
 385              	.L25:
 386              		.loc 1 391 0 discriminator 2
 387 007a 7B68     		ldr	r3, [r7, #4]
 388 007c 5B68     		ldr	r3, [r3, #4]
 389 007e 002B     		cmp	r3, #0
 390 0080 0CD1     		bne	.L27
 391              		.loc 1 391 0 discriminator 3
 392 0082 7F4B     		ldr	r3, .L74
 393 0084 1B68     		ldr	r3, [r3]
 394 0086 7E4A     		ldr	r2, .L74
 395 0088 23F48033 		bic	r3, r3, #65536
 396 008c 1360     		str	r3, [r2]
 397 008e 7C4B     		ldr	r3, .L74
 398 0090 1B68     		ldr	r3, [r3]
 399 0092 7B4A     		ldr	r2, .L74
 400 0094 23F48023 		bic	r3, r3, #262144
 401 0098 1360     		str	r3, [r2]
 402 009a 1DE0     		b	.L26
 403              	.L27:
 404              		.loc 1 391 0 discriminator 4
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 15


 405 009c 7B68     		ldr	r3, [r7, #4]
 406 009e 5B68     		ldr	r3, [r3, #4]
 407 00a0 B3F5A02F 		cmp	r3, #327680
 408 00a4 0CD1     		bne	.L28
 409              		.loc 1 391 0 discriminator 5
 410 00a6 764B     		ldr	r3, .L74
 411 00a8 1B68     		ldr	r3, [r3]
 412 00aa 754A     		ldr	r2, .L74
 413 00ac 43F48023 		orr	r3, r3, #262144
 414 00b0 1360     		str	r3, [r2]
 415 00b2 734B     		ldr	r3, .L74
 416 00b4 1B68     		ldr	r3, [r3]
 417 00b6 724A     		ldr	r2, .L74
 418 00b8 43F48033 		orr	r3, r3, #65536
 419 00bc 1360     		str	r3, [r2]
 420 00be 0BE0     		b	.L26
 421              	.L28:
 422              		.loc 1 391 0 discriminator 6
 423 00c0 6F4B     		ldr	r3, .L74
 424 00c2 1B68     		ldr	r3, [r3]
 425 00c4 6E4A     		ldr	r2, .L74
 426 00c6 23F48033 		bic	r3, r3, #65536
 427 00ca 1360     		str	r3, [r2]
 428 00cc 6C4B     		ldr	r3, .L74
 429 00ce 1B68     		ldr	r3, [r3]
 430 00d0 6B4A     		ldr	r2, .L74
 431 00d2 23F48023 		bic	r3, r3, #262144
 432 00d6 1360     		str	r3, [r2]
 433              	.L26:
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Check the HSE State */
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 434              		.loc 1 394 0 is_stmt 1
 435 00d8 7B68     		ldr	r3, [r7, #4]
 436 00da 5B68     		ldr	r3, [r3, #4]
 437 00dc 002B     		cmp	r3, #0
 438 00de 13D0     		beq	.L29
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Get Start Tick*/
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 439              		.loc 1 397 0
 440 00e0 FFF7FEFF 		bl	HAL_GetTick
 441 00e4 3861     		str	r0, [r7, #16]
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Wait till HSE is ready */
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 442              		.loc 1 400 0
 443 00e6 08E0     		b	.L30
 444              	.L31:
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 445              		.loc 1 402 0
 446 00e8 FFF7FEFF 		bl	HAL_GetTick
 447 00ec 0246     		mov	r2, r0
 448 00ee 3B69     		ldr	r3, [r7, #16]
 449 00f0 D31A     		subs	r3, r2, r3
 450 00f2 642B     		cmp	r3, #100
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 16


 451 00f4 01D9     		bls	.L30
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           {
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 452              		.loc 1 404 0
 453 00f6 0323     		movs	r3, #3
 454 00f8 EAE1     		b	.L20
 455              	.L30:
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 456              		.loc 1 400 0
 457 00fa 614B     		ldr	r3, .L74
 458 00fc 1B68     		ldr	r3, [r3]
 459 00fe 03F40033 		and	r3, r3, #131072
 460 0102 002B     		cmp	r3, #0
 461 0104 F0D0     		beq	.L31
 462 0106 14E0     		b	.L21
 463              	.L29:
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           }
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         }
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       else
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Get Start Tick*/
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 464              		.loc 1 411 0
 465 0108 FFF7FEFF 		bl	HAL_GetTick
 466 010c 3861     		str	r0, [r7, #16]
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Wait till HSE is bypassed or disabled */
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 467              		.loc 1 414 0
 468 010e 08E0     		b	.L32
 469              	.L33:
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****            if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 470              		.loc 1 416 0
 471 0110 FFF7FEFF 		bl	HAL_GetTick
 472 0114 0246     		mov	r2, r0
 473 0116 3B69     		ldr	r3, [r7, #16]
 474 0118 D31A     		subs	r3, r2, r3
 475 011a 642B     		cmp	r3, #100
 476 011c 01D9     		bls	.L32
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           {
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 477              		.loc 1 418 0
 478 011e 0323     		movs	r3, #3
 479 0120 D6E1     		b	.L20
 480              	.L32:
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 481              		.loc 1 414 0
 482 0122 574B     		ldr	r3, .L74
 483 0124 1B68     		ldr	r3, [r3]
 484 0126 03F40033 		and	r3, r3, #131072
 485 012a 002B     		cmp	r3, #0
 486 012c F0D1     		bne	.L33
 487 012e 00E0     		b	.L21
 488              	.L73:
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 17


 489              		.loc 1 383 0
 490 0130 00BF     		nop
 491              	.L21:
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           }
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         }
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 492              		.loc 1 425 0
 493 0132 7B68     		ldr	r3, [r7, #4]
 494 0134 1B68     		ldr	r3, [r3]
 495 0136 03F00203 		and	r3, r3, #2
 496 013a 002B     		cmp	r3, #0
 497 013c 69D0     		beq	.L34
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Check the parameters */
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 498              		.loc 1 432 0
 499 013e 504B     		ldr	r3, .L74
 500 0140 9B68     		ldr	r3, [r3, #8]
 501 0142 03F00C03 		and	r3, r3, #12
 502 0146 002B     		cmp	r3, #0
 503 0148 0BD0     		beq	.L35
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RC
 504              		.loc 1 433 0
 505 014a 4D4B     		ldr	r3, .L74
 506 014c 9B68     		ldr	r3, [r3, #8]
 507 014e 03F00C03 		and	r3, r3, #12
 508 0152 082B     		cmp	r3, #8
 509 0154 1CD1     		bne	.L36
 510              		.loc 1 433 0 is_stmt 0 discriminator 1
 511 0156 4A4B     		ldr	r3, .L74
 512 0158 5B68     		ldr	r3, [r3, #4]
 513 015a 03F48003 		and	r3, r3, #4194304
 514 015e 002B     		cmp	r3, #0
 515 0160 16D1     		bne	.L36
 516              	.L35:
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 517              		.loc 1 436 0 is_stmt 1
 518 0162 474B     		ldr	r3, .L74
 519 0164 1B68     		ldr	r3, [r3]
 520 0166 03F00203 		and	r3, r3, #2
 521 016a 002B     		cmp	r3, #0
 522 016c 05D0     		beq	.L37
 523              		.loc 1 436 0 is_stmt 0 discriminator 1
 524 016e 7B68     		ldr	r3, [r7, #4]
 525 0170 DB68     		ldr	r3, [r3, #12]
 526 0172 012B     		cmp	r3, #1
 527 0174 01D0     		beq	.L37
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 18


 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         return HAL_ERROR;
 528              		.loc 1 438 0 is_stmt 1
 529 0176 0123     		movs	r3, #1
 530 0178 AAE1     		b	.L20
 531              	.L37:
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       else
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 532              		.loc 1 444 0
 533 017a 414B     		ldr	r3, .L74
 534 017c 1B68     		ldr	r3, [r3]
 535 017e 23F0F802 		bic	r2, r3, #248
 536 0182 7B68     		ldr	r3, [r7, #4]
 537 0184 1B69     		ldr	r3, [r3, #16]
 538 0186 DB00     		lsls	r3, r3, #3
 539 0188 3D49     		ldr	r1, .L74
 540 018a 1343     		orrs	r3, r3, r2
 541 018c 0B60     		str	r3, [r1]
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 542              		.loc 1 436 0
 543 018e 40E0     		b	.L34
 544              	.L36:
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     else
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Check the HSI State */
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 545              		.loc 1 450 0
 546 0190 7B68     		ldr	r3, [r7, #4]
 547 0192 DB68     		ldr	r3, [r3, #12]
 548 0194 002B     		cmp	r3, #0
 549 0196 23D0     		beq	.L38
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI). */
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 550              		.loc 1 453 0
 551 0198 394B     		ldr	r3, .L74
 552 019a 1B68     		ldr	r3, [r3]
 553 019c 384A     		ldr	r2, .L74
 554 019e 43F00103 		orr	r3, r3, #1
 555 01a2 1360     		str	r3, [r2]
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Get Start Tick*/
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 556              		.loc 1 456 0
 557 01a4 FFF7FEFF 		bl	HAL_GetTick
 558 01a8 3861     		str	r0, [r7, #16]
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Wait till HSI is ready */
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 559              		.loc 1 459 0
 560 01aa 08E0     		b	.L39
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 19


 561              	.L40:
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 562              		.loc 1 461 0
 563 01ac FFF7FEFF 		bl	HAL_GetTick
 564 01b0 0246     		mov	r2, r0
 565 01b2 3B69     		ldr	r3, [r7, #16]
 566 01b4 D31A     		subs	r3, r2, r3
 567 01b6 022B     		cmp	r3, #2
 568 01b8 01D9     		bls	.L39
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           {
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 569              		.loc 1 463 0
 570 01ba 0323     		movs	r3, #3
 571 01bc 88E1     		b	.L20
 572              	.L39:
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 573              		.loc 1 459 0
 574 01be 304B     		ldr	r3, .L74
 575 01c0 1B68     		ldr	r3, [r3]
 576 01c2 03F00203 		and	r3, r3, #2
 577 01c6 002B     		cmp	r3, #0
 578 01c8 F0D0     		beq	.L40
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           }
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         }
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 579              		.loc 1 468 0
 580 01ca 2D4B     		ldr	r3, .L74
 581 01cc 1B68     		ldr	r3, [r3]
 582 01ce 23F0F802 		bic	r2, r3, #248
 583 01d2 7B68     		ldr	r3, [r7, #4]
 584 01d4 1B69     		ldr	r3, [r3, #16]
 585 01d6 DB00     		lsls	r3, r3, #3
 586 01d8 2949     		ldr	r1, .L74
 587 01da 1343     		orrs	r3, r3, r2
 588 01dc 0B60     		str	r3, [r1]
 589 01de 18E0     		b	.L34
 590              	.L38:
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       else
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 591              		.loc 1 473 0
 592 01e0 274B     		ldr	r3, .L74
 593 01e2 1B68     		ldr	r3, [r3]
 594 01e4 264A     		ldr	r2, .L74
 595 01e6 23F00103 		bic	r3, r3, #1
 596 01ea 1360     		str	r3, [r2]
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Get Start Tick*/
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 597              		.loc 1 476 0
 598 01ec FFF7FEFF 		bl	HAL_GetTick
 599 01f0 3861     		str	r0, [r7, #16]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 20


 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Wait till HSI is ready */
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 600              		.loc 1 479 0
 601 01f2 08E0     		b	.L41
 602              	.L42:
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 603              		.loc 1 481 0
 604 01f4 FFF7FEFF 		bl	HAL_GetTick
 605 01f8 0246     		mov	r2, r0
 606 01fa 3B69     		ldr	r3, [r7, #16]
 607 01fc D31A     		subs	r3, r2, r3
 608 01fe 022B     		cmp	r3, #2
 609 0200 01D9     		bls	.L41
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           {
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 610              		.loc 1 483 0
 611 0202 0323     		movs	r3, #3
 612 0204 64E1     		b	.L20
 613              	.L41:
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 614              		.loc 1 479 0
 615 0206 1E4B     		ldr	r3, .L74
 616 0208 1B68     		ldr	r3, [r3]
 617 020a 03F00203 		and	r3, r3, #2
 618 020e 002B     		cmp	r3, #0
 619 0210 F0D1     		bne	.L42
 620              	.L34:
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           }
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         }
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 621              		.loc 1 490 0
 622 0212 7B68     		ldr	r3, [r7, #4]
 623 0214 1B68     		ldr	r3, [r3]
 624 0216 03F00803 		and	r3, r3, #8
 625 021a 002B     		cmp	r3, #0
 626 021c 38D0     		beq	.L43
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Check the parameters */
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Check the LSI State */
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 627              		.loc 1 496 0
 628 021e 7B68     		ldr	r3, [r7, #4]
 629 0220 5B69     		ldr	r3, [r3, #20]
 630 0222 002B     		cmp	r3, #0
 631 0224 19D0     		beq	.L44
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 632              		.loc 1 499 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 21


 633 0226 164B     		ldr	r3, .L74
 634 0228 5B6F     		ldr	r3, [r3, #116]
 635 022a 154A     		ldr	r2, .L74
 636 022c 43F00103 		orr	r3, r3, #1
 637 0230 5367     		str	r3, [r2, #116]
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Get Start Tick*/
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 638              		.loc 1 502 0
 639 0232 FFF7FEFF 		bl	HAL_GetTick
 640 0236 3861     		str	r0, [r7, #16]
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Wait till LSI is ready */
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 641              		.loc 1 505 0
 642 0238 08E0     		b	.L45
 643              	.L46:
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 644              		.loc 1 507 0
 645 023a FFF7FEFF 		bl	HAL_GetTick
 646 023e 0246     		mov	r2, r0
 647 0240 3B69     		ldr	r3, [r7, #16]
 648 0242 D31A     		subs	r3, r2, r3
 649 0244 022B     		cmp	r3, #2
 650 0246 01D9     		bls	.L45
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           return HAL_TIMEOUT;
 651              		.loc 1 509 0
 652 0248 0323     		movs	r3, #3
 653 024a 41E1     		b	.L20
 654              	.L45:
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 655              		.loc 1 505 0
 656 024c 0C4B     		ldr	r3, .L74
 657 024e 5B6F     		ldr	r3, [r3, #116]
 658 0250 03F00203 		and	r3, r3, #2
 659 0254 002B     		cmp	r3, #0
 660 0256 F0D0     		beq	.L46
 661 0258 1AE0     		b	.L43
 662              	.L44:
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         }
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     else
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 663              		.loc 1 516 0
 664 025a 094B     		ldr	r3, .L74
 665 025c 5B6F     		ldr	r3, [r3, #116]
 666 025e 084A     		ldr	r2, .L74
 667 0260 23F00103 		bic	r3, r3, #1
 668 0264 5367     		str	r3, [r2, #116]
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Get Start Tick*/
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 22


 669              		.loc 1 519 0
 670 0266 FFF7FEFF 		bl	HAL_GetTick
 671 026a 3861     		str	r0, [r7, #16]
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Wait till LSI is ready */
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 672              		.loc 1 522 0
 673 026c 0AE0     		b	.L47
 674              	.L48:
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 675              		.loc 1 524 0
 676 026e FFF7FEFF 		bl	HAL_GetTick
 677 0272 0246     		mov	r2, r0
 678 0274 3B69     		ldr	r3, [r7, #16]
 679 0276 D31A     		subs	r3, r2, r3
 680 0278 022B     		cmp	r3, #2
 681 027a 03D9     		bls	.L47
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           return HAL_TIMEOUT;
 682              		.loc 1 526 0
 683 027c 0323     		movs	r3, #3
 684 027e 27E1     		b	.L20
 685              	.L75:
 686              		.align	2
 687              	.L74:
 688 0280 00380240 		.word	1073887232
 689              	.L47:
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 690              		.loc 1 522 0
 691 0284 944B     		ldr	r3, .L76
 692 0286 5B6F     		ldr	r3, [r3, #116]
 693 0288 03F00203 		and	r3, r3, #2
 694 028c 002B     		cmp	r3, #0
 695 028e EED1     		bne	.L48
 696              	.L43:
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         }
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 697              		.loc 1 532 0
 698 0290 7B68     		ldr	r3, [r7, #4]
 699 0292 1B68     		ldr	r3, [r3]
 700 0294 03F00403 		and	r3, r3, #4
 701 0298 002B     		cmp	r3, #0
 702 029a 00F0A480 		beq	.L49
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Check the parameters */
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 703              		.loc 1 539 0
 704 029e 8E4B     		ldr	r3, .L76
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 23


 705 02a0 1B6C     		ldr	r3, [r3, #64]
 706 02a2 03F08053 		and	r3, r3, #268435456
 707 02a6 002B     		cmp	r3, #0
 708 02a8 0DD1     		bne	.L50
 709              	.LBB2:
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Enable Power Clock*/
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 710              		.loc 1 542 0
 711 02aa 8B4B     		ldr	r3, .L76
 712 02ac 1B6C     		ldr	r3, [r3, #64]
 713 02ae 8A4A     		ldr	r2, .L76
 714 02b0 43F08053 		orr	r3, r3, #268435456
 715 02b4 1364     		str	r3, [r2, #64]
 716 02b6 884B     		ldr	r3, .L76
 717 02b8 1B6C     		ldr	r3, [r3, #64]
 718 02ba 03F08053 		and	r3, r3, #268435456
 719 02be FB60     		str	r3, [r7, #12]
 720 02c0 FB68     		ldr	r3, [r7, #12]
 721              	.LBE2:
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       pwrclkchanged = SET;
 722              		.loc 1 543 0
 723 02c2 0123     		movs	r3, #1
 724 02c4 FB75     		strb	r3, [r7, #23]
 725              	.L50:
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 726              		.loc 1 546 0
 727 02c6 854B     		ldr	r3, .L76+4
 728 02c8 1B68     		ldr	r3, [r3]
 729 02ca 03F48073 		and	r3, r3, #256
 730 02ce 002B     		cmp	r3, #0
 731 02d0 18D1     		bne	.L51
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       PWR->CR1 |= PWR_CR1_DBP;
 732              		.loc 1 549 0
 733 02d2 824B     		ldr	r3, .L76+4
 734 02d4 1B68     		ldr	r3, [r3]
 735 02d6 814A     		ldr	r2, .L76+4
 736 02d8 43F48073 		orr	r3, r3, #256
 737 02dc 1360     		str	r3, [r2]
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 738              		.loc 1 552 0
 739 02de FFF7FEFF 		bl	HAL_GetTick
 740 02e2 3861     		str	r0, [r7, #16]
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 741              		.loc 1 554 0
 742 02e4 08E0     		b	.L52
 743              	.L53:
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 744              		.loc 1 556 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 24


 745 02e6 FFF7FEFF 		bl	HAL_GetTick
 746 02ea 0246     		mov	r2, r0
 747 02ec 3B69     		ldr	r3, [r7, #16]
 748 02ee D31A     		subs	r3, r2, r3
 749 02f0 642B     		cmp	r3, #100
 750 02f2 01D9     		bls	.L52
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           return HAL_TIMEOUT;
 751              		.loc 1 558 0
 752 02f4 0323     		movs	r3, #3
 753 02f6 EBE0     		b	.L20
 754              	.L52:
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 755              		.loc 1 554 0
 756 02f8 784B     		ldr	r3, .L76+4
 757 02fa 1B68     		ldr	r3, [r3]
 758 02fc 03F48073 		and	r3, r3, #256
 759 0300 002B     		cmp	r3, #0
 760 0302 F0D0     		beq	.L53
 761              	.L51:
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         }
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 762              		.loc 1 564 0
 763 0304 7B68     		ldr	r3, [r7, #4]
 764 0306 9B68     		ldr	r3, [r3, #8]
 765 0308 012B     		cmp	r3, #1
 766 030a 06D1     		bne	.L54
 767              		.loc 1 564 0 is_stmt 0 discriminator 1
 768 030c 724B     		ldr	r3, .L76
 769 030e 1B6F     		ldr	r3, [r3, #112]
 770 0310 714A     		ldr	r2, .L76
 771 0312 43F00103 		orr	r3, r3, #1
 772 0316 1367     		str	r3, [r2, #112]
 773 0318 2DE0     		b	.L55
 774              	.L54:
 775              		.loc 1 564 0 discriminator 2
 776 031a 7B68     		ldr	r3, [r7, #4]
 777 031c 9B68     		ldr	r3, [r3, #8]
 778 031e 002B     		cmp	r3, #0
 779 0320 0CD1     		bne	.L56
 780              		.loc 1 564 0 discriminator 3
 781 0322 6D4B     		ldr	r3, .L76
 782 0324 1B6F     		ldr	r3, [r3, #112]
 783 0326 6C4A     		ldr	r2, .L76
 784 0328 23F00103 		bic	r3, r3, #1
 785 032c 1367     		str	r3, [r2, #112]
 786 032e 6A4B     		ldr	r3, .L76
 787 0330 1B6F     		ldr	r3, [r3, #112]
 788 0332 694A     		ldr	r2, .L76
 789 0334 23F00403 		bic	r3, r3, #4
 790 0338 1367     		str	r3, [r2, #112]
 791 033a 1CE0     		b	.L55
 792              	.L56:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 25


 793              		.loc 1 564 0 discriminator 4
 794 033c 7B68     		ldr	r3, [r7, #4]
 795 033e 9B68     		ldr	r3, [r3, #8]
 796 0340 052B     		cmp	r3, #5
 797 0342 0CD1     		bne	.L57
 798              		.loc 1 564 0 discriminator 5
 799 0344 644B     		ldr	r3, .L76
 800 0346 1B6F     		ldr	r3, [r3, #112]
 801 0348 634A     		ldr	r2, .L76
 802 034a 43F00403 		orr	r3, r3, #4
 803 034e 1367     		str	r3, [r2, #112]
 804 0350 614B     		ldr	r3, .L76
 805 0352 1B6F     		ldr	r3, [r3, #112]
 806 0354 604A     		ldr	r2, .L76
 807 0356 43F00103 		orr	r3, r3, #1
 808 035a 1367     		str	r3, [r2, #112]
 809 035c 0BE0     		b	.L55
 810              	.L57:
 811              		.loc 1 564 0 discriminator 6
 812 035e 5E4B     		ldr	r3, .L76
 813 0360 1B6F     		ldr	r3, [r3, #112]
 814 0362 5D4A     		ldr	r2, .L76
 815 0364 23F00103 		bic	r3, r3, #1
 816 0368 1367     		str	r3, [r2, #112]
 817 036a 5B4B     		ldr	r3, .L76
 818 036c 1B6F     		ldr	r3, [r3, #112]
 819 036e 5A4A     		ldr	r2, .L76
 820 0370 23F00403 		bic	r3, r3, #4
 821 0374 1367     		str	r3, [r2, #112]
 822              	.L55:
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Check the LSE State */
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 823              		.loc 1 566 0 is_stmt 1
 824 0376 7B68     		ldr	r3, [r7, #4]
 825 0378 9B68     		ldr	r3, [r3, #8]
 826 037a 002B     		cmp	r3, #0
 827 037c 15D0     		beq	.L58
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Get Start Tick*/
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 828              		.loc 1 569 0
 829 037e FFF7FEFF 		bl	HAL_GetTick
 830 0382 3861     		str	r0, [r7, #16]
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Wait till LSE is ready */
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 831              		.loc 1 572 0
 832 0384 0AE0     		b	.L59
 833              	.L60:
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 834              		.loc 1 574 0
 835 0386 FFF7FEFF 		bl	HAL_GetTick
 836 038a 0246     		mov	r2, r0
 837 038c 3B69     		ldr	r3, [r7, #16]
 838 038e D31A     		subs	r3, r2, r3
 839 0390 41F28832 		movw	r2, #5000
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 26


 840 0394 9342     		cmp	r3, r2
 841 0396 01D9     		bls	.L59
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           return HAL_TIMEOUT;
 842              		.loc 1 576 0
 843 0398 0323     		movs	r3, #3
 844 039a 99E0     		b	.L20
 845              	.L59:
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 846              		.loc 1 572 0
 847 039c 4E4B     		ldr	r3, .L76
 848 039e 1B6F     		ldr	r3, [r3, #112]
 849 03a0 03F00203 		and	r3, r3, #2
 850 03a4 002B     		cmp	r3, #0
 851 03a6 EED0     		beq	.L60
 852 03a8 14E0     		b	.L61
 853              	.L58:
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         }
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     else
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Get Start Tick*/
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 854              		.loc 1 583 0
 855 03aa FFF7FEFF 		bl	HAL_GetTick
 856 03ae 3861     		str	r0, [r7, #16]
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Wait till LSE is ready */
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 857              		.loc 1 586 0
 858 03b0 0AE0     		b	.L62
 859              	.L63:
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 860              		.loc 1 588 0
 861 03b2 FFF7FEFF 		bl	HAL_GetTick
 862 03b6 0246     		mov	r2, r0
 863 03b8 3B69     		ldr	r3, [r7, #16]
 864 03ba D31A     		subs	r3, r2, r3
 865 03bc 41F28832 		movw	r2, #5000
 866 03c0 9342     		cmp	r3, r2
 867 03c2 01D9     		bls	.L62
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           return HAL_TIMEOUT;
 868              		.loc 1 590 0
 869 03c4 0323     		movs	r3, #3
 870 03c6 83E0     		b	.L20
 871              	.L62:
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 872              		.loc 1 586 0
 873 03c8 434B     		ldr	r3, .L76
 874 03ca 1B6F     		ldr	r3, [r3, #112]
 875 03cc 03F00203 		and	r3, r3, #2
 876 03d0 002B     		cmp	r3, #0
 877 03d2 EED1     		bne	.L63
 878              	.L61:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 27


 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         }
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Restore clock configuration if changed */
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 879              		.loc 1 596 0
 880 03d4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 881 03d6 012B     		cmp	r3, #1
 882 03d8 05D1     		bne	.L49
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 883              		.loc 1 598 0
 884 03da 3F4B     		ldr	r3, .L76
 885 03dc 1B6C     		ldr	r3, [r3, #64]
 886 03de 3E4A     		ldr	r2, .L76
 887 03e0 23F08053 		bic	r3, r3, #268435456
 888 03e4 1364     		str	r3, [r2, #64]
 889              	.L49:
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Check the parameters */
 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 890              		.loc 1 604 0
 891 03e6 7B68     		ldr	r3, [r7, #4]
 892 03e8 9B69     		ldr	r3, [r3, #24]
 893 03ea 002B     		cmp	r3, #0
 894 03ec 6FD0     		beq	.L64
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 895              		.loc 1 607 0
 896 03ee 3A4B     		ldr	r3, .L76
 897 03f0 9B68     		ldr	r3, [r3, #8]
 898 03f2 03F00C03 		and	r3, r3, #12
 899 03f6 082B     		cmp	r3, #8
 900 03f8 67D0     		beq	.L65
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 901              		.loc 1 609 0
 902 03fa 7B68     		ldr	r3, [r7, #4]
 903 03fc 9B69     		ldr	r3, [r3, #24]
 904 03fe 022B     		cmp	r3, #2
 905 0400 49D1     		bne	.L66
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Check the parameters */
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #if defined (RCC_PLLCFGR_PLLR)
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #endif
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 28


 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Disable the main PLL. */
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 906              		.loc 1 622 0
 907 0402 354B     		ldr	r3, .L76
 908 0404 1B68     		ldr	r3, [r3]
 909 0406 344A     		ldr	r2, .L76
 910 0408 23F08073 		bic	r3, r3, #16777216
 911 040c 1360     		str	r3, [r2]
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Get Start Tick*/
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 912              		.loc 1 625 0
 913 040e FFF7FEFF 		bl	HAL_GetTick
 914 0412 3861     		str	r0, [r7, #16]
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Wait till PLL is ready */
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 915              		.loc 1 628 0
 916 0414 08E0     		b	.L67
 917              	.L68:
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 918              		.loc 1 630 0
 919 0416 FFF7FEFF 		bl	HAL_GetTick
 920 041a 0246     		mov	r2, r0
 921 041c 3B69     		ldr	r3, [r7, #16]
 922 041e D31A     		subs	r3, r2, r3
 923 0420 022B     		cmp	r3, #2
 924 0422 01D9     		bls	.L67
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           {
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 925              		.loc 1 632 0
 926 0424 0323     		movs	r3, #3
 927 0426 53E0     		b	.L20
 928              	.L67:
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 929              		.loc 1 628 0
 930 0428 2B4B     		ldr	r3, .L76
 931 042a 1B68     		ldr	r3, [r3]
 932 042c 03F00073 		and	r3, r3, #33554432
 933 0430 002B     		cmp	r3, #0
 934 0432 F0D1     		bne	.L68
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           }
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         }
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Configure the main PLL clock source, multiplication and division factors. */
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #if defined (RCC_PLLCFGR_PLLR)
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLM,
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLN,
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLP,
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLQ,
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLR);
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #else
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 935              		.loc 1 645 0
 936 0434 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 29


 937 0436 DA69     		ldr	r2, [r3, #28]
 938 0438 7B68     		ldr	r3, [r7, #4]
 939 043a 1B6A     		ldr	r3, [r3, #32]
 940 043c 1A43     		orrs	r2, r2, r3
 941 043e 7B68     		ldr	r3, [r7, #4]
 942 0440 5B6A     		ldr	r3, [r3, #36]
 943 0442 9B01     		lsls	r3, r3, #6
 944 0444 1A43     		orrs	r2, r2, r3
 945 0446 7B68     		ldr	r3, [r7, #4]
 946 0448 9B6A     		ldr	r3, [r3, #40]
 947 044a 5B08     		lsrs	r3, r3, #1
 948 044c 013B     		subs	r3, r3, #1
 949 044e 1B04     		lsls	r3, r3, #16
 950 0450 1A43     		orrs	r2, r2, r3
 951 0452 7B68     		ldr	r3, [r7, #4]
 952 0454 DB6A     		ldr	r3, [r3, #44]
 953 0456 1B06     		lsls	r3, r3, #24
 954 0458 1343     		orrs	r3, r3, r2
 955 045a 1F4A     		ldr	r2, .L76
 956 045c 43F00053 		orr	r3, r3, #536870912
 957 0460 5360     		str	r3, [r2, #4]
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLM,
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLN,
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLP,
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLQ);
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #endif
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Enable the main PLL. */
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 958              		.loc 1 653 0
 959 0462 1D4B     		ldr	r3, .L76
 960 0464 1B68     		ldr	r3, [r3]
 961 0466 1C4A     		ldr	r2, .L76
 962 0468 43F08073 		orr	r3, r3, #16777216
 963 046c 1360     		str	r3, [r2]
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Get Start Tick*/
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 964              		.loc 1 656 0
 965 046e FFF7FEFF 		bl	HAL_GetTick
 966 0472 3861     		str	r0, [r7, #16]
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Wait till PLL is ready */
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 967              		.loc 1 659 0
 968 0474 08E0     		b	.L69
 969              	.L70:
 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 970              		.loc 1 661 0
 971 0476 FFF7FEFF 		bl	HAL_GetTick
 972 047a 0246     		mov	r2, r0
 973 047c 3B69     		ldr	r3, [r7, #16]
 974 047e D31A     		subs	r3, r2, r3
 975 0480 022B     		cmp	r3, #2
 976 0482 01D9     		bls	.L69
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           {
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 30


 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 977              		.loc 1 663 0
 978 0484 0323     		movs	r3, #3
 979 0486 23E0     		b	.L20
 980              	.L69:
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 981              		.loc 1 659 0
 982 0488 134B     		ldr	r3, .L76
 983 048a 1B68     		ldr	r3, [r3]
 984 048c 03F00073 		and	r3, r3, #33554432
 985 0490 002B     		cmp	r3, #0
 986 0492 F0D0     		beq	.L70
 987 0494 1BE0     		b	.L64
 988              	.L66:
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           }
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         }
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       else
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Disable the main PLL. */
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 989              		.loc 1 670 0
 990 0496 104B     		ldr	r3, .L76
 991 0498 1B68     		ldr	r3, [r3]
 992 049a 0F4A     		ldr	r2, .L76
 993 049c 23F08073 		bic	r3, r3, #16777216
 994 04a0 1360     		str	r3, [r2]
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Get Start Tick*/
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 995              		.loc 1 673 0
 996 04a2 FFF7FEFF 		bl	HAL_GetTick
 997 04a6 3861     		str	r0, [r7, #16]
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Wait till PLL is ready */
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 998              		.loc 1 676 0
 999 04a8 08E0     		b	.L71
 1000              	.L72:
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1001              		.loc 1 678 0
 1002 04aa FFF7FEFF 		bl	HAL_GetTick
 1003 04ae 0246     		mov	r2, r0
 1004 04b0 3B69     		ldr	r3, [r7, #16]
 1005 04b2 D31A     		subs	r3, r2, r3
 1006 04b4 022B     		cmp	r3, #2
 1007 04b6 01D9     		bls	.L71
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           {
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1008              		.loc 1 680 0
 1009 04b8 0323     		movs	r3, #3
 1010 04ba 09E0     		b	.L20
 1011              	.L71:
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 1012              		.loc 1 676 0
 1013 04bc 064B     		ldr	r3, .L76
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 31


 1014 04be 1B68     		ldr	r3, [r3]
 1015 04c0 03F00073 		and	r3, r3, #33554432
 1016 04c4 002B     		cmp	r3, #0
 1017 04c6 F0D1     		bne	.L72
 1018 04c8 01E0     		b	.L64
 1019              	.L65:
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           }
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         }
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     else
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       return HAL_ERROR;
 1020              		.loc 1 687 0
 1021 04ca 0123     		movs	r3, #1
 1022 04cc 00E0     		b	.L20
 1023              	.L64:
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   return HAL_OK;
 1024              		.loc 1 690 0
 1025 04ce 0023     		movs	r3, #0
 1026              	.L20:
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** }
 1027              		.loc 1 691 0
 1028 04d0 1846     		mov	r0, r3
 1029 04d2 1837     		adds	r7, r7, #24
 1030              	.LCFI8:
 1031              		.cfi_def_cfa_offset 8
 1032 04d4 BD46     		mov	sp, r7
 1033              	.LCFI9:
 1034              		.cfi_def_cfa_register 13
 1035              		@ sp needed
 1036 04d6 80BD     		pop	{r7, pc}
 1037              	.L77:
 1038              		.align	2
 1039              	.L76:
 1040 04d8 00380240 		.word	1073887232
 1041 04dc 00700040 		.word	1073770496
 1042              		.cfi_endproc
 1043              	.LFE139:
 1045              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1046              		.align	1
 1047              		.global	HAL_RCC_ClockConfig
 1048              		.syntax unified
 1049              		.thumb
 1050              		.thumb_func
 1051              		.fpu fpv5-sp-d16
 1053              	HAL_RCC_ClockConfig:
 1054              	.LFB140:
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /**
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB busses clocks according to the specified
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @param  FLatency FLASH Latency, this parameter depend on device selected
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 32


 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         and updated by HAL_RCC_GetHCLKFreq() function called within this function
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         startup from Reset, wake-up from STOP and STANDBY mode, or in case
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         clock source is ready (clock stable after startup delay or PLL locked).
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         occur when the clock source will be ready.
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         You can use HAL_RCC_GetClockConfig() function to know which clock is
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         currently used as system clock source.
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   Depending on the device voltage range, the software has to set correctly
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         (for more details refer to section above "Initialization/de-initialization functions")
 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @retval None
 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** {
 1055              		.loc 1 720 0
 1056              		.cfi_startproc
 1057              		@ args = 0, pretend = 0, frame = 16
 1058              		@ frame_needed = 1, uses_anonymous_args = 0
 1059 0000 80B5     		push	{r7, lr}
 1060              	.LCFI10:
 1061              		.cfi_def_cfa_offset 8
 1062              		.cfi_offset 7, -8
 1063              		.cfi_offset 14, -4
 1064 0002 84B0     		sub	sp, sp, #16
 1065              	.LCFI11:
 1066              		.cfi_def_cfa_offset 24
 1067 0004 00AF     		add	r7, sp, #0
 1068              	.LCFI12:
 1069              		.cfi_def_cfa_register 7
 1070 0006 7860     		str	r0, [r7, #4]
 1071 0008 3960     		str	r1, [r7]
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   uint32_t tickstart = 0;
 1072              		.loc 1 721 0
 1073 000a 0023     		movs	r3, #0
 1074 000c FB60     		str	r3, [r7, #12]
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Check Null pointer */
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if(RCC_ClkInitStruct == NULL)
 1075              		.loc 1 724 0
 1076 000e 7B68     		ldr	r3, [r7, #4]
 1077 0010 002B     		cmp	r3, #0
 1078 0012 01D1     		bne	.L79
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     return HAL_ERROR;
 1079              		.loc 1 726 0
 1080 0014 0123     		movs	r3, #1
 1081 0016 CEE0     		b	.L80
 1082              	.L79:
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 33


 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Check the parameters */
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****      must be correctly programmed according to the frequency of the CPU clock
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****      (HCLK) and the supply voltage of the device. */
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Increasing the CPU frequency */
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if(FLatency > __HAL_FLASH_GET_LATENCY())
 1083              		.loc 1 738 0
 1084 0018 694B     		ldr	r3, .L94
 1085 001a 1B68     		ldr	r3, [r3]
 1086 001c 03F00F03 		and	r3, r3, #15
 1087 0020 3A68     		ldr	r2, [r7]
 1088 0022 9A42     		cmp	r2, r3
 1089 0024 10D9     		bls	.L81
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1090              		.loc 1 741 0
 1091 0026 664B     		ldr	r3, .L94
 1092 0028 1B68     		ldr	r3, [r3]
 1093 002a 23F00F02 		bic	r2, r3, #15
 1094 002e 6449     		ldr	r1, .L94
 1095 0030 3B68     		ldr	r3, [r7]
 1096 0032 1343     		orrs	r3, r3, r2
 1097 0034 0B60     		str	r3, [r1]
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 1098              		.loc 1 745 0
 1099 0036 624B     		ldr	r3, .L94
 1100 0038 1B68     		ldr	r3, [r3]
 1101 003a 03F00F03 		and	r3, r3, #15
 1102 003e 3A68     		ldr	r2, [r7]
 1103 0040 9A42     		cmp	r2, r3
 1104 0042 01D0     		beq	.L81
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       return HAL_ERROR;
 1105              		.loc 1 747 0
 1106 0044 0123     		movs	r3, #1
 1107 0046 B6E0     		b	.L80
 1108              	.L81:
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 1109              		.loc 1 752 0
 1110 0048 7B68     		ldr	r3, [r7, #4]
 1111 004a 1B68     		ldr	r3, [r3]
 1112 004c 03F00203 		and	r3, r3, #2
 1113 0050 002B     		cmp	r3, #0
 1114 0052 20D0     		beq	.L82
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 34


 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Set the highest APBx dividers in order to ensure that we do not go through
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****        a non-spec phase whatever we decrease or increase HCLK. */
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1115              		.loc 1 756 0
 1116 0054 7B68     		ldr	r3, [r7, #4]
 1117 0056 1B68     		ldr	r3, [r3]
 1118 0058 03F00403 		and	r3, r3, #4
 1119 005c 002B     		cmp	r3, #0
 1120 005e 05D0     		beq	.L83
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 1121              		.loc 1 758 0
 1122 0060 584B     		ldr	r3, .L94+4
 1123 0062 9B68     		ldr	r3, [r3, #8]
 1124 0064 574A     		ldr	r2, .L94+4
 1125 0066 43F4E053 		orr	r3, r3, #7168
 1126 006a 9360     		str	r3, [r2, #8]
 1127              	.L83:
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 1128              		.loc 1 761 0
 1129 006c 7B68     		ldr	r3, [r7, #4]
 1130 006e 1B68     		ldr	r3, [r3]
 1131 0070 03F00803 		and	r3, r3, #8
 1132 0074 002B     		cmp	r3, #0
 1133 0076 05D0     		beq	.L84
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 1134              		.loc 1 763 0
 1135 0078 524B     		ldr	r3, .L94+4
 1136 007a 9B68     		ldr	r3, [r3, #8]
 1137 007c 514A     		ldr	r2, .L94+4
 1138 007e 43F46043 		orr	r3, r3, #57344
 1139 0082 9360     		str	r3, [r2, #8]
 1140              	.L84:
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Set the new HCLK clock divider */
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 1141              		.loc 1 768 0
 1142 0084 4F4B     		ldr	r3, .L94+4
 1143 0086 9B68     		ldr	r3, [r3, #8]
 1144 0088 23F0F002 		bic	r2, r3, #240
 1145 008c 7B68     		ldr	r3, [r7, #4]
 1146 008e 9B68     		ldr	r3, [r3, #8]
 1147 0090 4C49     		ldr	r1, .L94+4
 1148 0092 1343     		orrs	r3, r3, r2
 1149 0094 8B60     		str	r3, [r1, #8]
 1150              	.L82:
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 1151              		.loc 1 772 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 35


 1152 0096 7B68     		ldr	r3, [r7, #4]
 1153 0098 1B68     		ldr	r3, [r3]
 1154 009a 03F00103 		and	r3, r3, #1
 1155 009e 002B     		cmp	r3, #0
 1156 00a0 40D0     		beq	.L85
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 1157              		.loc 1 777 0
 1158 00a2 7B68     		ldr	r3, [r7, #4]
 1159 00a4 5B68     		ldr	r3, [r3, #4]
 1160 00a6 012B     		cmp	r3, #1
 1161 00a8 07D1     		bne	.L86
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Check the HSE ready flag */
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 1162              		.loc 1 780 0
 1163 00aa 464B     		ldr	r3, .L94+4
 1164 00ac 1B68     		ldr	r3, [r3]
 1165 00ae 03F40033 		and	r3, r3, #131072
 1166 00b2 002B     		cmp	r3, #0
 1167 00b4 15D1     		bne	.L87
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         return HAL_ERROR;
 1168              		.loc 1 782 0
 1169 00b6 0123     		movs	r3, #1
 1170 00b8 7DE0     		b	.L80
 1171              	.L86:
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 1172              		.loc 1 786 0
 1173 00ba 7B68     		ldr	r3, [r7, #4]
 1174 00bc 5B68     		ldr	r3, [r3, #4]
 1175 00be 022B     		cmp	r3, #2
 1176 00c0 07D1     		bne	.L88
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Check the PLL ready flag */
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 1177              		.loc 1 789 0
 1178 00c2 404B     		ldr	r3, .L94+4
 1179 00c4 1B68     		ldr	r3, [r3]
 1180 00c6 03F00073 		and	r3, r3, #33554432
 1181 00ca 002B     		cmp	r3, #0
 1182 00cc 09D1     		bne	.L87
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         return HAL_ERROR;
 1183              		.loc 1 791 0
 1184 00ce 0123     		movs	r3, #1
 1185 00d0 71E0     		b	.L80
 1186              	.L88:
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 36


 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     else
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Check the HSI ready flag */
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 1187              		.loc 1 798 0
 1188 00d2 3C4B     		ldr	r3, .L94+4
 1189 00d4 1B68     		ldr	r3, [r3]
 1190 00d6 03F00203 		and	r3, r3, #2
 1191 00da 002B     		cmp	r3, #0
 1192 00dc 01D1     		bne	.L87
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         return HAL_ERROR;
 1193              		.loc 1 800 0
 1194 00de 0123     		movs	r3, #1
 1195 00e0 69E0     		b	.L80
 1196              	.L87:
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 1197              		.loc 1 804 0
 1198 00e2 384B     		ldr	r3, .L94+4
 1199 00e4 9B68     		ldr	r3, [r3, #8]
 1200 00e6 23F00302 		bic	r2, r3, #3
 1201 00ea 7B68     		ldr	r3, [r7, #4]
 1202 00ec 5B68     		ldr	r3, [r3, #4]
 1203 00ee 3549     		ldr	r1, .L94+4
 1204 00f0 1343     		orrs	r3, r3, r2
 1205 00f2 8B60     		str	r3, [r1, #8]
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Get Start Tick*/
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 1206              		.loc 1 807 0
 1207 00f4 FFF7FEFF 		bl	HAL_GetTick
 1208 00f8 F860     		str	r0, [r7, #12]
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 1209              		.loc 1 809 0
 1210 00fa 0AE0     		b	.L89
 1211              	.L90:
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 1212              		.loc 1 811 0
 1213 00fc FFF7FEFF 		bl	HAL_GetTick
 1214 0100 0246     		mov	r2, r0
 1215 0102 FB68     		ldr	r3, [r7, #12]
 1216 0104 D31A     		subs	r3, r2, r3
 1217 0106 41F28832 		movw	r2, #5000
 1218 010a 9342     		cmp	r3, r2
 1219 010c 01D9     		bls	.L89
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         return HAL_TIMEOUT;
 1220              		.loc 1 813 0
 1221 010e 0323     		movs	r3, #3
 1222 0110 51E0     		b	.L80
 1223              	.L89:
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 37


 1224              		.loc 1 809 0
 1225 0112 2C4B     		ldr	r3, .L94+4
 1226 0114 9B68     		ldr	r3, [r3, #8]
 1227 0116 03F00C02 		and	r2, r3, #12
 1228 011a 7B68     		ldr	r3, [r7, #4]
 1229 011c 5B68     		ldr	r3, [r3, #4]
 1230 011e 9B00     		lsls	r3, r3, #2
 1231 0120 9A42     		cmp	r2, r3
 1232 0122 EBD1     		bne	.L90
 1233              	.L85:
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if(FLatency < __HAL_FLASH_GET_LATENCY())
 1234              		.loc 1 819 0
 1235 0124 264B     		ldr	r3, .L94
 1236 0126 1B68     		ldr	r3, [r3]
 1237 0128 03F00F03 		and	r3, r3, #15
 1238 012c 3A68     		ldr	r2, [r7]
 1239 012e 9A42     		cmp	r2, r3
 1240 0130 10D2     		bcs	.L91
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1241              		.loc 1 822 0
 1242 0132 234B     		ldr	r3, .L94
 1243 0134 1B68     		ldr	r3, [r3]
 1244 0136 23F00F02 		bic	r2, r3, #15
 1245 013a 2149     		ldr	r1, .L94
 1246 013c 3B68     		ldr	r3, [r7]
 1247 013e 1343     		orrs	r3, r3, r2
 1248 0140 0B60     		str	r3, [r1]
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 1249              		.loc 1 826 0
 1250 0142 1F4B     		ldr	r3, .L94
 1251 0144 1B68     		ldr	r3, [r3]
 1252 0146 03F00F03 		and	r3, r3, #15
 1253 014a 3A68     		ldr	r2, [r7]
 1254 014c 9A42     		cmp	r2, r3
 1255 014e 01D0     		beq	.L91
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       return HAL_ERROR;
 1256              		.loc 1 828 0
 1257 0150 0123     		movs	r3, #1
 1258 0152 30E0     		b	.L80
 1259              	.L91:
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1260              		.loc 1 833 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 38


 1261 0154 7B68     		ldr	r3, [r7, #4]
 1262 0156 1B68     		ldr	r3, [r3]
 1263 0158 03F00403 		and	r3, r3, #4
 1264 015c 002B     		cmp	r3, #0
 1265 015e 08D0     		beq	.L92
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 1266              		.loc 1 836 0
 1267 0160 184B     		ldr	r3, .L94+4
 1268 0162 9B68     		ldr	r3, [r3, #8]
 1269 0164 23F4E052 		bic	r2, r3, #7168
 1270 0168 7B68     		ldr	r3, [r7, #4]
 1271 016a DB68     		ldr	r3, [r3, #12]
 1272 016c 1549     		ldr	r1, .L94+4
 1273 016e 1343     		orrs	r3, r3, r2
 1274 0170 8B60     		str	r3, [r1, #8]
 1275              	.L92:
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 1276              		.loc 1 840 0
 1277 0172 7B68     		ldr	r3, [r7, #4]
 1278 0174 1B68     		ldr	r3, [r3]
 1279 0176 03F00803 		and	r3, r3, #8
 1280 017a 002B     		cmp	r3, #0
 1281 017c 09D0     		beq	.L93
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 1282              		.loc 1 843 0
 1283 017e 114B     		ldr	r3, .L94+4
 1284 0180 9B68     		ldr	r3, [r3, #8]
 1285 0182 23F46042 		bic	r2, r3, #57344
 1286 0186 7B68     		ldr	r3, [r7, #4]
 1287 0188 1B69     		ldr	r3, [r3, #16]
 1288 018a DB00     		lsls	r3, r3, #3
 1289 018c 0D49     		ldr	r1, .L94+4
 1290 018e 1343     		orrs	r3, r3, r2
 1291 0190 8B60     		str	r3, [r1, #8]
 1292              	.L93:
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 1293              		.loc 1 847 0
 1294 0192 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1295 0196 0146     		mov	r1, r0
 1296 0198 0A4B     		ldr	r3, .L94+4
 1297 019a 9B68     		ldr	r3, [r3, #8]
 1298 019c 1B09     		lsrs	r3, r3, #4
 1299 019e 03F00F03 		and	r3, r3, #15
 1300 01a2 094A     		ldr	r2, .L94+8
 1301 01a4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1302 01a6 21FA03F3 		lsr	r3, r1, r3
 1303 01aa 084A     		ldr	r2, .L94+12
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 39


 1304 01ac 1360     		str	r3, [r2]
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   HAL_InitTick (TICK_INT_PRIORITY);
 1305              		.loc 1 850 0
 1306 01ae 0020     		movs	r0, #0
 1307 01b0 FFF7FEFF 		bl	HAL_InitTick
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   return HAL_OK;
 1308              		.loc 1 852 0
 1309 01b4 0023     		movs	r3, #0
 1310              	.L80:
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** }
 1311              		.loc 1 853 0
 1312 01b6 1846     		mov	r0, r3
 1313 01b8 1037     		adds	r7, r7, #16
 1314              	.LCFI13:
 1315              		.cfi_def_cfa_offset 8
 1316 01ba BD46     		mov	sp, r7
 1317              	.LCFI14:
 1318              		.cfi_def_cfa_register 13
 1319              		@ sp needed
 1320 01bc 80BD     		pop	{r7, pc}
 1321              	.L95:
 1322 01be 00BF     		.align	2
 1323              	.L94:
 1324 01c0 003C0240 		.word	1073888256
 1325 01c4 00380240 		.word	1073887232
 1326 01c8 00000000 		.word	AHBPrescTable
 1327 01cc 00000000 		.word	SystemCoreClock
 1328              		.cfi_endproc
 1329              	.LFE140:
 1331              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1332              		.align	1
 1333              		.global	HAL_RCC_MCOConfig
 1334              		.syntax unified
 1335              		.thumb
 1336              		.thumb_func
 1337              		.fpu fpv5-sp-d16
 1339              	HAL_RCC_MCOConfig:
 1340              	.LFB141:
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /**
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @}
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *  @brief   RCC clocks control functions
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   @verbatim
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   ===============================================================================
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****                   ##### Peripheral Control functions #####
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   ===============================================================================
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     [..]
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     frequencies.
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 40


 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** @endverbatim
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @{
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /**
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO1 pin(PA8) or on MCO2 pin(PC9).
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   PA8/PC9 should be configured in alternate function mode.
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            @arg RCC_MCO1: Clock source to output on MCO1 pin(PA8).
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            @arg RCC_MCO2: Clock source to output on MCO2 pin(PC9).
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSI: HSI clock selected as MCO1 source
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_LSE: LSE clock selected as MCO1 source
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSE: HSE clock selected as MCO1 source
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_PLLCLK: main PLL clock selected as MCO1 source
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_SYSCLK: System clock (SYSCLK) selected as MCO2 source
 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLI2SCLK: PLLI2S clock selected as MCO2 source
 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_HSE: HSE clock selected as MCO2 source
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLCLK: main PLL clock selected as MCO2 source
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCOx prescaler.
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            @arg RCC_MCODIV_1: no division applied to MCOx clock
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            @arg RCC_MCODIV_2: division by 2 applied to MCOx clock
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            @arg RCC_MCODIV_3: division by 3 applied to MCOx clock
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            @arg RCC_MCODIV_4: division by 4 applied to MCOx clock
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            @arg RCC_MCODIV_5: division by 5 applied to MCOx clock
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @retval None
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** {
 1341              		.loc 1 901 0
 1342              		.cfi_startproc
 1343              		@ args = 0, pretend = 0, frame = 48
 1344              		@ frame_needed = 1, uses_anonymous_args = 0
 1345 0000 80B5     		push	{r7, lr}
 1346              	.LCFI15:
 1347              		.cfi_def_cfa_offset 8
 1348              		.cfi_offset 7, -8
 1349              		.cfi_offset 14, -4
 1350 0002 8CB0     		sub	sp, sp, #48
 1351              	.LCFI16:
 1352              		.cfi_def_cfa_offset 56
 1353 0004 00AF     		add	r7, sp, #0
 1354              	.LCFI17:
 1355              		.cfi_def_cfa_register 7
 1356 0006 F860     		str	r0, [r7, #12]
 1357 0008 B960     		str	r1, [r7, #8]
 1358 000a 7A60     		str	r2, [r7, #4]
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Check the parameters */
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* RCC_MCO1 */
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if(RCC_MCOx == RCC_MCO1)
 1359              		.loc 1 907 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 41


 1360 000c FB68     		ldr	r3, [r7, #12]
 1361 000e 002B     		cmp	r3, #0
 1362 0010 27D1     		bne	.L97
 1363              	.LBB3:
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* MCO1 Clock Enable */
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     MCO1_CLK_ENABLE();
 1364              		.loc 1 912 0
 1365 0012 2A4B     		ldr	r3, .L100
 1366 0014 1B6B     		ldr	r3, [r3, #48]
 1367 0016 294A     		ldr	r2, .L100
 1368 0018 43F00103 		orr	r3, r3, #1
 1369 001c 1363     		str	r3, [r2, #48]
 1370 001e 274B     		ldr	r3, .L100
 1371 0020 1B6B     		ldr	r3, [r3, #48]
 1372 0022 03F00103 		and	r3, r3, #1
 1373 0026 BB61     		str	r3, [r7, #24]
 1374 0028 BB69     		ldr	r3, [r7, #24]
 1375              	.LBE3:
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Configure the MCO1 pin in alternate function mode */
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO1_PIN;
 1376              		.loc 1 915 0
 1377 002a 4FF48073 		mov	r3, #256
 1378 002e FB61     		str	r3, [r7, #28]
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1379              		.loc 1 916 0
 1380 0030 0223     		movs	r3, #2
 1381 0032 3B62     		str	r3, [r7, #32]
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
 1382              		.loc 1 917 0
 1383 0034 0323     		movs	r3, #3
 1384 0036 BB62     		str	r3, [r7, #40]
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1385              		.loc 1 918 0
 1386 0038 0023     		movs	r3, #0
 1387 003a 7B62     		str	r3, [r7, #36]
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1388              		.loc 1 919 0
 1389 003c 0023     		movs	r3, #0
 1390 003e FB62     		str	r3, [r7, #44]
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);
 1391              		.loc 1 920 0
 1392 0040 07F11C03 		add	r3, r7, #28
 1393 0044 1946     		mov	r1, r3
 1394 0046 1E48     		ldr	r0, .L100+4
 1395 0048 FFF7FEFF 		bl	HAL_GPIO_Init
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Mask MCO1 and MCO1PRE[2:0] bits then Select MCO1 clock source and prescaler */
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO1 | RCC_CFGR_MCO1PRE), (RCC_MCOSource | RCC_MCODiv));
 1396              		.loc 1 923 0
 1397 004c 1B4B     		ldr	r3, .L100
 1398 004e 9B68     		ldr	r3, [r3, #8]
 1399 0050 23F0EC62 		bic	r2, r3, #123731968
 1400 0054 B968     		ldr	r1, [r7, #8]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 42


 1401 0056 7B68     		ldr	r3, [r7, #4]
 1402 0058 0B43     		orrs	r3, r3, r1
 1403 005a 1849     		ldr	r1, .L100
 1404 005c 1343     		orrs	r3, r3, r2
 1405 005e 8B60     		str	r3, [r1, #8]
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   else
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     assert_param(IS_RCC_MCO2SOURCE(RCC_MCOSource));
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* MCO2 Clock Enable */
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     MCO2_CLK_ENABLE();
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Configure the MCO2 pin in alternate function mode */
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO2_PIN;
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Mask MCO2 and MCO2PRE[2:0] bits then Select MCO2 clock source and prescaler */
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO2 | RCC_CFGR_MCO2PRE), (RCC_MCOSource | (RCC_MCODiv << 3)));
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** }
 1406              		.loc 1 943 0
 1407 0060 27E0     		b	.L99
 1408              	.L97:
 1409              	.LBB4:
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1410              		.loc 1 930 0
 1411 0062 164B     		ldr	r3, .L100
 1412 0064 1B6B     		ldr	r3, [r3, #48]
 1413 0066 154A     		ldr	r2, .L100
 1414 0068 43F00403 		orr	r3, r3, #4
 1415 006c 1363     		str	r3, [r2, #48]
 1416 006e 134B     		ldr	r3, .L100
 1417 0070 1B6B     		ldr	r3, [r3, #48]
 1418 0072 03F00403 		and	r3, r3, #4
 1419 0076 7B61     		str	r3, [r7, #20]
 1420 0078 7B69     		ldr	r3, [r7, #20]
 1421              	.LBE4:
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1422              		.loc 1 933 0
 1423 007a 4FF40073 		mov	r3, #512
 1424 007e FB61     		str	r3, [r7, #28]
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
 1425              		.loc 1 934 0
 1426 0080 0223     		movs	r3, #2
 1427 0082 3B62     		str	r3, [r7, #32]
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1428              		.loc 1 935 0
 1429 0084 0323     		movs	r3, #3
 1430 0086 BB62     		str	r3, [r7, #40]
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1431              		.loc 1 936 0
 1432 0088 0023     		movs	r3, #0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 43


 1433 008a 7B62     		str	r3, [r7, #36]
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 1434              		.loc 1 937 0
 1435 008c 0023     		movs	r3, #0
 1436 008e FB62     		str	r3, [r7, #44]
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1437              		.loc 1 938 0
 1438 0090 07F11C03 		add	r3, r7, #28
 1439 0094 1946     		mov	r1, r3
 1440 0096 0B48     		ldr	r0, .L100+8
 1441 0098 FFF7FEFF 		bl	HAL_GPIO_Init
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 1442              		.loc 1 941 0
 1443 009c 074B     		ldr	r3, .L100
 1444 009e 9B68     		ldr	r3, [r3, #8]
 1445 00a0 23F07842 		bic	r2, r3, #-134217728
 1446 00a4 7B68     		ldr	r3, [r7, #4]
 1447 00a6 D900     		lsls	r1, r3, #3
 1448 00a8 BB68     		ldr	r3, [r7, #8]
 1449 00aa 0B43     		orrs	r3, r3, r1
 1450 00ac 0349     		ldr	r1, .L100
 1451 00ae 1343     		orrs	r3, r3, r2
 1452 00b0 8B60     		str	r3, [r1, #8]
 1453              	.L99:
 1454              		.loc 1 943 0
 1455 00b2 00BF     		nop
 1456 00b4 3037     		adds	r7, r7, #48
 1457              	.LCFI18:
 1458              		.cfi_def_cfa_offset 8
 1459 00b6 BD46     		mov	sp, r7
 1460              	.LCFI19:
 1461              		.cfi_def_cfa_register 13
 1462              		@ sp needed
 1463 00b8 80BD     		pop	{r7, pc}
 1464              	.L101:
 1465 00ba 00BF     		.align	2
 1466              	.L100:
 1467 00bc 00380240 		.word	1073887232
 1468 00c0 00000240 		.word	1073872896
 1469 00c4 00080240 		.word	1073874944
 1470              		.cfi_endproc
 1471              	.LFE141:
 1473              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1474              		.align	1
 1475              		.global	HAL_RCC_EnableCSS
 1476              		.syntax unified
 1477              		.thumb
 1478              		.thumb_func
 1479              		.fpu fpv5-sp-d16
 1481              	HAL_RCC_EnableCSS:
 1482              	.LFB142:
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /**
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 44


 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         the Cortex-M7 NMI (Non-Maskable Interrupt) exception vector.
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @retval None
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** {
 1483              		.loc 1 955 0
 1484              		.cfi_startproc
 1485              		@ args = 0, pretend = 0, frame = 0
 1486              		@ frame_needed = 1, uses_anonymous_args = 0
 1487              		@ link register save eliminated.
 1488 0000 80B4     		push	{r7}
 1489              	.LCFI20:
 1490              		.cfi_def_cfa_offset 4
 1491              		.cfi_offset 7, -4
 1492 0002 00AF     		add	r7, sp, #0
 1493              	.LCFI21:
 1494              		.cfi_def_cfa_register 7
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_CSSON);
 1495              		.loc 1 956 0
 1496 0004 054B     		ldr	r3, .L103
 1497 0006 1B68     		ldr	r3, [r3]
 1498 0008 044A     		ldr	r2, .L103
 1499 000a 43F40023 		orr	r3, r3, #524288
 1500 000e 1360     		str	r3, [r2]
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** }
 1501              		.loc 1 957 0
 1502 0010 00BF     		nop
 1503 0012 BD46     		mov	sp, r7
 1504              	.LCFI22:
 1505              		.cfi_def_cfa_register 13
 1506              		@ sp needed
 1507 0014 5DF8047B 		ldr	r7, [sp], #4
 1508              	.LCFI23:
 1509              		.cfi_restore 7
 1510              		.cfi_def_cfa_offset 0
 1511 0018 7047     		bx	lr
 1512              	.L104:
 1513 001a 00BF     		.align	2
 1514              	.L103:
 1515 001c 00380240 		.word	1073887232
 1516              		.cfi_endproc
 1517              	.LFE142:
 1519              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1520              		.align	1
 1521              		.global	HAL_RCC_DisableCSS
 1522              		.syntax unified
 1523              		.thumb
 1524              		.thumb_func
 1525              		.fpu fpv5-sp-d16
 1527              	HAL_RCC_DisableCSS:
 1528              	.LFB143:
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /**
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @retval None
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 45


 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** {
 1529              		.loc 1 964 0
 1530              		.cfi_startproc
 1531              		@ args = 0, pretend = 0, frame = 0
 1532              		@ frame_needed = 1, uses_anonymous_args = 0
 1533              		@ link register save eliminated.
 1534 0000 80B4     		push	{r7}
 1535              	.LCFI24:
 1536              		.cfi_def_cfa_offset 4
 1537              		.cfi_offset 7, -4
 1538 0002 00AF     		add	r7, sp, #0
 1539              	.LCFI25:
 1540              		.cfi_def_cfa_register 7
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_CSSON);
 1541              		.loc 1 965 0
 1542 0004 054B     		ldr	r3, .L106
 1543 0006 1B68     		ldr	r3, [r3]
 1544 0008 044A     		ldr	r2, .L106
 1545 000a 23F40023 		bic	r3, r3, #524288
 1546 000e 1360     		str	r3, [r2]
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** }
 1547              		.loc 1 966 0
 1548 0010 00BF     		nop
 1549 0012 BD46     		mov	sp, r7
 1550              	.LCFI26:
 1551              		.cfi_def_cfa_register 13
 1552              		@ sp needed
 1553 0014 5DF8047B 		ldr	r7, [sp], #4
 1554              	.LCFI27:
 1555              		.cfi_restore 7
 1556              		.cfi_def_cfa_offset 0
 1557 0018 7047     		bx	lr
 1558              	.L107:
 1559 001a 00BF     		.align	2
 1560              	.L106:
 1561 001c 00380240 		.word	1073887232
 1562              		.cfi_endproc
 1563              	.LFE143:
 1565              		.global	__aeabi_uldivmod
 1566              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1567              		.align	1
 1568              		.global	HAL_RCC_GetSysClockFreq
 1569              		.syntax unified
 1570              		.thumb
 1571              		.thumb_func
 1572              		.fpu fpv5-sp-d16
 1574              	HAL_RCC_GetSysClockFreq:
 1575              	.LFB144:
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /**
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         constant and the selected clock source:
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 46


 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns values based on HSE_VALUE(**)
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns values based on HSE_VALUE(**)
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *           or HSI_VALUE(*) multiplied/divided by the PLL factors.
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f7xx_hal_conf.h file (default value
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *               16 MHz) but the real value may vary depending on the variations
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *               in voltage and temperature.
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f7xx_hal_conf.h file (default value
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *                25 MHz), user has to ensure that HSE_VALUE is same as the real
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *                have wrong result.
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         value for HSE crystal.
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         baudrate for the communication peripherals or configure other parameters.
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @retval SYSCLK frequency
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** {
 1576              		.loc 1 999 0
 1577              		.cfi_startproc
 1578              		@ args = 0, pretend = 0, frame = 16
 1579              		@ frame_needed = 1, uses_anonymous_args = 0
 1580 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1581              	.LCFI28:
 1582              		.cfi_def_cfa_offset 20
 1583              		.cfi_offset 4, -20
 1584              		.cfi_offset 5, -16
 1585              		.cfi_offset 6, -12
 1586              		.cfi_offset 7, -8
 1587              		.cfi_offset 14, -4
 1588 0002 85B0     		sub	sp, sp, #20
 1589              	.LCFI29:
 1590              		.cfi_def_cfa_offset 40
 1591 0004 00AF     		add	r7, sp, #0
 1592              	.LCFI30:
 1593              		.cfi_def_cfa_register 7
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   uint32_t pllm = 0, pllvco = 0, pllp = 0;
 1594              		.loc 1 1000 0
 1595 0006 0023     		movs	r3, #0
 1596 0008 7B60     		str	r3, [r7, #4]
 1597 000a 0023     		movs	r3, #0
 1598 000c FB60     		str	r3, [r7, #12]
 1599 000e 0023     		movs	r3, #0
 1600 0010 3B60     		str	r3, [r7]
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   uint32_t sysclockfreq = 0;
 1601              		.loc 1 1001 0
 1602 0012 0023     		movs	r3, #0
 1603 0014 BB60     		str	r3, [r7, #8]
1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 47


1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 1604              		.loc 1 1004 0
 1605 0016 504B     		ldr	r3, .L118
 1606 0018 9B68     		ldr	r3, [r3, #8]
 1607 001a 03F00C03 		and	r3, r3, #12
 1608 001e 042B     		cmp	r3, #4
 1609 0020 07D0     		beq	.L110
 1610 0022 082B     		cmp	r3, #8
 1611 0024 08D0     		beq	.L111
 1612 0026 002B     		cmp	r3, #0
 1613 0028 40F08D80 		bne	.L117
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 1614              		.loc 1 1008 0
 1615 002c 4B4B     		ldr	r3, .L118+4
 1616 002e BB60     		str	r3, [r7, #8]
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****        break;
 1617              		.loc 1 1009 0
 1618 0030 8CE0     		b	.L113
 1619              	.L110:
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock  source */
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
 1620              		.loc 1 1013 0
 1621 0032 4B4B     		ldr	r3, .L118+8
 1622 0034 BB60     		str	r3, [r7, #8]
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       break;
 1623              		.loc 1 1014 0
 1624 0036 89E0     		b	.L113
 1625              	.L111:
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock  source */
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       SYSCLK = PLL_VCO / PLLP */
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 1626              		.loc 1 1020 0
 1627 0038 474B     		ldr	r3, .L118
 1628 003a 5B68     		ldr	r3, [r3, #4]
 1629 003c 03F03F03 		and	r3, r3, #63
 1630 0040 7B60     		str	r3, [r7, #4]
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 1631              		.loc 1 1021 0
 1632 0042 454B     		ldr	r3, .L118
 1633 0044 5B68     		ldr	r3, [r3, #4]
 1634 0046 03F48003 		and	r3, r3, #4194304
 1635 004a 002B     		cmp	r3, #0
 1636 004c 23D0     		beq	.L114
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* HSE used as PLL clock source */
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN
 1637              		.loc 1 1024 0
 1638 004e 424B     		ldr	r3, .L118
 1639 0050 5B68     		ldr	r3, [r3, #4]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 48


 1640 0052 9B09     		lsrs	r3, r3, #6
 1641 0054 4FF00004 		mov	r4, #0
 1642 0058 40F2FF11 		movw	r1, #511
 1643 005c 4FF00002 		mov	r2, #0
 1644 0060 03EA0105 		and	r5, r3, r1
 1645 0064 04EA0206 		and	r6, r4, r2
 1646 0068 3D4A     		ldr	r2, .L118+8
 1647 006a 02FB06F1 		mul	r1, r2, r6
 1648 006e 0022     		movs	r2, #0
 1649 0070 02FB05F2 		mul	r2, r2, r5
 1650 0074 0A44     		add	r2, r2, r1
 1651 0076 3A49     		ldr	r1, .L118+8
 1652 0078 A5FB0101 		umull	r0, r1, r5, r1
 1653 007c 5318     		adds	r3, r2, r1
 1654 007e 1946     		mov	r1, r3
 1655 0080 7B68     		ldr	r3, [r7, #4]
 1656 0082 4FF00004 		mov	r4, #0
 1657 0086 1A46     		mov	r2, r3
 1658 0088 2346     		mov	r3, r4
 1659 008a FFF7FEFF 		bl	__aeabi_uldivmod
 1660              	.LVL0:
 1661 008e 0346     		mov	r3, r0
 1662 0090 0C46     		mov	r4, r1
 1663 0092 FB60     		str	r3, [r7, #12]
 1664 0094 49E0     		b	.L115
 1665              	.L114:
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       else
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* HSI used as PLL clock source */
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN
 1666              		.loc 1 1029 0
 1667 0096 304B     		ldr	r3, .L118
 1668 0098 5B68     		ldr	r3, [r3, #4]
 1669 009a 9B09     		lsrs	r3, r3, #6
 1670 009c 4FF00004 		mov	r4, #0
 1671 00a0 40F2FF11 		movw	r1, #511
 1672 00a4 4FF00002 		mov	r2, #0
 1673 00a8 03EA0105 		and	r5, r3, r1
 1674 00ac 04EA0206 		and	r6, r4, r2
 1675 00b0 2946     		mov	r1, r5
 1676 00b2 3246     		mov	r2, r6
 1677 00b4 4FF00003 		mov	r3, #0
 1678 00b8 4FF00004 		mov	r4, #0
 1679 00bc 5401     		lsls	r4, r2, #5
 1680 00be 44EAD164 		orr	r4, r4, r1, lsr #27
 1681 00c2 4B01     		lsls	r3, r1, #5
 1682 00c4 1946     		mov	r1, r3
 1683 00c6 2246     		mov	r2, r4
 1684 00c8 491B     		subs	r1, r1, r5
 1685 00ca 62EB0602 		sbc	r2, r2, r6
 1686 00ce 4FF00003 		mov	r3, #0
 1687 00d2 4FF00004 		mov	r4, #0
 1688 00d6 9401     		lsls	r4, r2, #6
 1689 00d8 44EA9164 		orr	r4, r4, r1, lsr #26
 1690 00dc 8B01     		lsls	r3, r1, #6
 1691 00de 5B1A     		subs	r3, r3, r1
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 49


 1692 00e0 64EB0204 		sbc	r4, r4, r2
 1693 00e4 4FF00001 		mov	r1, #0
 1694 00e8 4FF00002 		mov	r2, #0
 1695 00ec E200     		lsls	r2, r4, #3
 1696 00ee 42EA5372 		orr	r2, r2, r3, lsr #29
 1697 00f2 D900     		lsls	r1, r3, #3
 1698 00f4 0B46     		mov	r3, r1
 1699 00f6 1446     		mov	r4, r2
 1700 00f8 5B19     		adds	r3, r3, r5
 1701 00fa 44EB0604 		adc	r4, r4, r6
 1702 00fe 4FF00001 		mov	r1, #0
 1703 0102 4FF00002 		mov	r2, #0
 1704 0106 A202     		lsls	r2, r4, #10
 1705 0108 42EA9352 		orr	r2, r2, r3, lsr #22
 1706 010c 9902     		lsls	r1, r3, #10
 1707 010e 0B46     		mov	r3, r1
 1708 0110 1446     		mov	r4, r2
 1709 0112 1846     		mov	r0, r3
 1710 0114 2146     		mov	r1, r4
 1711 0116 7B68     		ldr	r3, [r7, #4]
 1712 0118 4FF00004 		mov	r4, #0
 1713 011c 1A46     		mov	r2, r3
 1714 011e 2346     		mov	r3, r4
 1715 0120 FFF7FEFF 		bl	__aeabi_uldivmod
 1716              	.LVL1:
 1717 0124 0346     		mov	r3, r0
 1718 0126 0C46     		mov	r4, r1
 1719 0128 FB60     		str	r3, [r7, #12]
 1720              	.L115:
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1 ) *2);
 1721              		.loc 1 1031 0
 1722 012a 0B4B     		ldr	r3, .L118
 1723 012c 5B68     		ldr	r3, [r3, #4]
 1724 012e 1B0C     		lsrs	r3, r3, #16
 1725 0130 03F00303 		and	r3, r3, #3
 1726 0134 0133     		adds	r3, r3, #1
 1727 0136 5B00     		lsls	r3, r3, #1
 1728 0138 3B60     		str	r3, [r7]
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       sysclockfreq = pllvco/pllp;
 1729              		.loc 1 1033 0
 1730 013a FA68     		ldr	r2, [r7, #12]
 1731 013c 3B68     		ldr	r3, [r7]
 1732 013e B2FBF3F3 		udiv	r3, r2, r3
 1733 0142 BB60     		str	r3, [r7, #8]
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       break;
 1734              		.loc 1 1034 0
 1735 0144 02E0     		b	.L113
 1736              	.L117:
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     default:
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 1737              		.loc 1 1038 0
 1738 0146 054B     		ldr	r3, .L118+4
 1739 0148 BB60     		str	r3, [r7, #8]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 50


1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       break;
 1740              		.loc 1 1039 0
 1741 014a 00BF     		nop
 1742              	.L113:
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   return sysclockfreq;
 1743              		.loc 1 1042 0
 1744 014c BB68     		ldr	r3, [r7, #8]
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** }
 1745              		.loc 1 1043 0
 1746 014e 1846     		mov	r0, r3
 1747 0150 1437     		adds	r7, r7, #20
 1748              	.LCFI31:
 1749              		.cfi_def_cfa_offset 20
 1750 0152 BD46     		mov	sp, r7
 1751              	.LCFI32:
 1752              		.cfi_def_cfa_register 13
 1753              		@ sp needed
 1754 0154 F0BD     		pop	{r4, r5, r6, r7, pc}
 1755              	.L119:
 1756 0156 00BF     		.align	2
 1757              	.L118:
 1758 0158 00380240 		.word	1073887232
 1759 015c 0024F400 		.word	16000000
 1760 0160 40787D01 		.word	25000000
 1761              		.cfi_endproc
 1762              	.LFE144:
 1764              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 1765              		.align	1
 1766              		.global	HAL_RCC_GetHCLKFreq
 1767              		.syntax unified
 1768              		.thumb
 1769              		.thumb_func
 1770              		.fpu fpv5-sp-d16
 1772              	HAL_RCC_GetHCLKFreq:
 1773              	.LFB145:
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /**
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency.
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @retval HCLK frequency
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** {
 1774              		.loc 1 1053 0
 1775              		.cfi_startproc
 1776              		@ args = 0, pretend = 0, frame = 0
 1777              		@ frame_needed = 1, uses_anonymous_args = 0
 1778              		@ link register save eliminated.
 1779 0000 80B4     		push	{r7}
 1780              	.LCFI33:
 1781              		.cfi_def_cfa_offset 4
 1782              		.cfi_offset 7, -4
 1783 0002 00AF     		add	r7, sp, #0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 51


 1784              	.LCFI34:
 1785              		.cfi_def_cfa_register 7
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   return SystemCoreClock;
 1786              		.loc 1 1054 0
 1787 0004 034B     		ldr	r3, .L122
 1788 0006 1B68     		ldr	r3, [r3]
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** }
 1789              		.loc 1 1055 0
 1790 0008 1846     		mov	r0, r3
 1791 000a BD46     		mov	sp, r7
 1792              	.LCFI35:
 1793              		.cfi_def_cfa_register 13
 1794              		@ sp needed
 1795 000c 5DF8047B 		ldr	r7, [sp], #4
 1796              	.LCFI36:
 1797              		.cfi_restore 7
 1798              		.cfi_def_cfa_offset 0
 1799 0010 7047     		bx	lr
 1800              	.L123:
 1801 0012 00BF     		.align	2
 1802              	.L122:
 1803 0014 00000000 		.word	SystemCoreClock
 1804              		.cfi_endproc
 1805              	.LFE145:
 1807              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 1808              		.align	1
 1809              		.global	HAL_RCC_GetPCLK1Freq
 1810              		.syntax unified
 1811              		.thumb
 1812              		.thumb_func
 1813              		.fpu fpv5-sp-d16
 1815              	HAL_RCC_GetPCLK1Freq:
 1816              	.LFB146:
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /**
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency
1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @retval PCLK1 frequency
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** {
 1817              		.loc 1 1064 0
 1818              		.cfi_startproc
 1819              		@ args = 0, pretend = 0, frame = 0
 1820              		@ frame_needed = 1, uses_anonymous_args = 0
 1821 0000 80B5     		push	{r7, lr}
 1822              	.LCFI37:
 1823              		.cfi_def_cfa_offset 8
 1824              		.cfi_offset 7, -8
 1825              		.cfi_offset 14, -4
 1826 0002 00AF     		add	r7, sp, #0
 1827              	.LCFI38:
 1828              		.cfi_def_cfa_register 7
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]
 1829              		.loc 1 1066 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 52


 1830 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1831 0008 0146     		mov	r1, r0
 1832 000a 054B     		ldr	r3, .L126
 1833 000c 9B68     		ldr	r3, [r3, #8]
 1834 000e 9B0A     		lsrs	r3, r3, #10
 1835 0010 03F00703 		and	r3, r3, #7
 1836 0014 034A     		ldr	r2, .L126+4
 1837 0016 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1838 0018 21FA03F3 		lsr	r3, r1, r3
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** }
 1839              		.loc 1 1067 0
 1840 001c 1846     		mov	r0, r3
 1841 001e 80BD     		pop	{r7, pc}
 1842              	.L127:
 1843              		.align	2
 1844              	.L126:
 1845 0020 00380240 		.word	1073887232
 1846 0024 00000000 		.word	APBPrescTable
 1847              		.cfi_endproc
 1848              	.LFE146:
 1850              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 1851              		.align	1
 1852              		.global	HAL_RCC_GetPCLK2Freq
 1853              		.syntax unified
 1854              		.thumb
 1855              		.thumb_func
 1856              		.fpu fpv5-sp-d16
 1858              	HAL_RCC_GetPCLK2Freq:
 1859              	.LFB147:
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /**
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @retval PCLK2 frequency
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** {
 1860              		.loc 1 1076 0
 1861              		.cfi_startproc
 1862              		@ args = 0, pretend = 0, frame = 0
 1863              		@ frame_needed = 1, uses_anonymous_args = 0
 1864 0000 80B5     		push	{r7, lr}
 1865              	.LCFI39:
 1866              		.cfi_def_cfa_offset 8
 1867              		.cfi_offset 7, -8
 1868              		.cfi_offset 14, -4
 1869 0002 00AF     		add	r7, sp, #0
 1870              	.LCFI40:
 1871              		.cfi_def_cfa_register 7
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos])
 1872              		.loc 1 1078 0
 1873 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1874 0008 0146     		mov	r1, r0
 1875 000a 054B     		ldr	r3, .L130
 1876 000c 9B68     		ldr	r3, [r3, #8]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 53


 1877 000e 5B0B     		lsrs	r3, r3, #13
 1878 0010 03F00703 		and	r3, r3, #7
 1879 0014 034A     		ldr	r2, .L130+4
 1880 0016 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1881 0018 21FA03F3 		lsr	r3, r1, r3
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** }
 1882              		.loc 1 1079 0
 1883 001c 1846     		mov	r0, r3
 1884 001e 80BD     		pop	{r7, pc}
 1885              	.L131:
 1886              		.align	2
 1887              	.L130:
 1888 0020 00380240 		.word	1073887232
 1889 0024 00000000 		.word	APBPrescTable
 1890              		.cfi_endproc
 1891              	.LFE147:
 1893              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 1894              		.align	1
 1895              		.global	HAL_RCC_GetOscConfig
 1896              		.syntax unified
 1897              		.thumb
 1898              		.thumb_func
 1899              		.fpu fpv5-sp-d16
 1901              	HAL_RCC_GetOscConfig:
 1902              	.LFB148:
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /**
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * RCC configuration registers.
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * will be configured.
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @retval None
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** {
 1903              		.loc 1 1089 0
 1904              		.cfi_startproc
 1905              		@ args = 0, pretend = 0, frame = 8
 1906              		@ frame_needed = 1, uses_anonymous_args = 0
 1907              		@ link register save eliminated.
 1908 0000 80B4     		push	{r7}
 1909              	.LCFI41:
 1910              		.cfi_def_cfa_offset 4
 1911              		.cfi_offset 7, -4
 1912 0002 83B0     		sub	sp, sp, #12
 1913              	.LCFI42:
 1914              		.cfi_def_cfa_offset 16
 1915 0004 00AF     		add	r7, sp, #0
 1916              	.LCFI43:
 1917              		.cfi_def_cfa_register 7
 1918 0006 7860     		str	r0, [r7, #4]
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI | RCC_OSCILLA
 1919              		.loc 1 1091 0
 1920 0008 7B68     		ldr	r3, [r7, #4]
 1921 000a 0F22     		movs	r2, #15
 1922 000c 1A60     		str	r2, [r3]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 54


1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 1923              		.loc 1 1094 0
 1924 000e 454B     		ldr	r3, .L145
 1925 0010 1B68     		ldr	r3, [r3]
 1926 0012 03F48023 		and	r3, r3, #262144
 1927 0016 B3F5802F 		cmp	r3, #262144
 1928 001a 04D1     		bne	.L133
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 1929              		.loc 1 1096 0
 1930 001c 7B68     		ldr	r3, [r7, #4]
 1931 001e 4FF4A022 		mov	r2, #327680
 1932 0022 5A60     		str	r2, [r3, #4]
 1933 0024 0EE0     		b	.L134
 1934              	.L133:
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
 1935              		.loc 1 1098 0
 1936 0026 3F4B     		ldr	r3, .L145
 1937 0028 1B68     		ldr	r3, [r3]
 1938 002a 03F48033 		and	r3, r3, #65536
 1939 002e B3F5803F 		cmp	r3, #65536
 1940 0032 04D1     		bne	.L135
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
 1941              		.loc 1 1100 0
 1942 0034 7B68     		ldr	r3, [r7, #4]
 1943 0036 4FF48032 		mov	r2, #65536
 1944 003a 5A60     		str	r2, [r3, #4]
 1945 003c 02E0     		b	.L134
 1946              	.L135:
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   else
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 1947              		.loc 1 1104 0
 1948 003e 7B68     		ldr	r3, [r7, #4]
 1949 0040 0022     		movs	r2, #0
 1950 0042 5A60     		str	r2, [r3, #4]
 1951              	.L134:
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 1952              		.loc 1 1108 0
 1953 0044 374B     		ldr	r3, .L145
 1954 0046 1B68     		ldr	r3, [r3]
 1955 0048 03F00103 		and	r3, r3, #1
 1956 004c 012B     		cmp	r3, #1
 1957 004e 03D1     		bne	.L136
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 1958              		.loc 1 1110 0
 1959 0050 7B68     		ldr	r3, [r7, #4]
 1960 0052 0122     		movs	r2, #1
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 55


 1961 0054 DA60     		str	r2, [r3, #12]
 1962 0056 02E0     		b	.L137
 1963              	.L136:
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   else
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 1964              		.loc 1 1114 0
 1965 0058 7B68     		ldr	r3, [r7, #4]
 1966 005a 0022     		movs	r2, #0
 1967 005c DA60     		str	r2, [r3, #12]
 1968              	.L137:
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR &RCC_CR_HSITRIM) >> RCC_CR_HSITRIM_P
 1969              		.loc 1 1117 0
 1970 005e 314B     		ldr	r3, .L145
 1971 0060 1B68     		ldr	r3, [r3]
 1972 0062 DB08     		lsrs	r3, r3, #3
 1973 0064 03F01F02 		and	r2, r3, #31
 1974 0068 7B68     		ldr	r3, [r7, #4]
 1975 006a 1A61     		str	r2, [r3, #16]
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 1976              		.loc 1 1120 0
 1977 006c 2D4B     		ldr	r3, .L145
 1978 006e 1B6F     		ldr	r3, [r3, #112]
 1979 0070 03F00403 		and	r3, r3, #4
 1980 0074 042B     		cmp	r3, #4
 1981 0076 03D1     		bne	.L138
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 1982              		.loc 1 1122 0
 1983 0078 7B68     		ldr	r3, [r7, #4]
 1984 007a 0522     		movs	r2, #5
 1985 007c 9A60     		str	r2, [r3, #8]
 1986 007e 0CE0     		b	.L139
 1987              	.L138:
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 1988              		.loc 1 1124 0
 1989 0080 284B     		ldr	r3, .L145
 1990 0082 1B6F     		ldr	r3, [r3, #112]
 1991 0084 03F00103 		and	r3, r3, #1
 1992 0088 012B     		cmp	r3, #1
 1993 008a 03D1     		bne	.L140
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 1994              		.loc 1 1126 0
 1995 008c 7B68     		ldr	r3, [r7, #4]
 1996 008e 0122     		movs	r2, #1
 1997 0090 9A60     		str	r2, [r3, #8]
 1998 0092 02E0     		b	.L139
 1999              	.L140:
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   else
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 56


1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 2000              		.loc 1 1130 0
 2001 0094 7B68     		ldr	r3, [r7, #4]
 2002 0096 0022     		movs	r2, #0
 2003 0098 9A60     		str	r2, [r3, #8]
 2004              	.L139:
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 2005              		.loc 1 1134 0
 2006 009a 224B     		ldr	r3, .L145
 2007 009c 5B6F     		ldr	r3, [r3, #116]
 2008 009e 03F00103 		and	r3, r3, #1
 2009 00a2 012B     		cmp	r3, #1
 2010 00a4 03D1     		bne	.L141
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 2011              		.loc 1 1136 0
 2012 00a6 7B68     		ldr	r3, [r7, #4]
 2013 00a8 0122     		movs	r2, #1
 2014 00aa 5A61     		str	r2, [r3, #20]
 2015 00ac 02E0     		b	.L142
 2016              	.L141:
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   else
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 2017              		.loc 1 1140 0
 2018 00ae 7B68     		ldr	r3, [r7, #4]
 2019 00b0 0022     		movs	r2, #0
 2020 00b2 5A61     		str	r2, [r3, #20]
 2021              	.L142:
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 2022              		.loc 1 1144 0
 2023 00b4 1B4B     		ldr	r3, .L145
 2024 00b6 1B68     		ldr	r3, [r3]
 2025 00b8 03F08073 		and	r3, r3, #16777216
 2026 00bc B3F1807F 		cmp	r3, #16777216
 2027 00c0 03D1     		bne	.L143
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 2028              		.loc 1 1146 0
 2029 00c2 7B68     		ldr	r3, [r7, #4]
 2030 00c4 0222     		movs	r2, #2
 2031 00c6 9A61     		str	r2, [r3, #24]
 2032 00c8 02E0     		b	.L144
 2033              	.L143:
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   else
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 2034              		.loc 1 1150 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 57


 2035 00ca 7B68     		ldr	r3, [r7, #4]
 2036 00cc 0122     		movs	r2, #1
 2037 00ce 9A61     		str	r2, [r3, #24]
 2038              	.L144:
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 2039              		.loc 1 1152 0
 2040 00d0 144B     		ldr	r3, .L145
 2041 00d2 5B68     		ldr	r3, [r3, #4]
 2042 00d4 03F48002 		and	r2, r3, #4194304
 2043 00d8 7B68     		ldr	r3, [r7, #4]
 2044 00da DA61     		str	r2, [r3, #28]
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLM = (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM);
 2045              		.loc 1 1153 0
 2046 00dc 114B     		ldr	r3, .L145
 2047 00de 5B68     		ldr	r3, [r3, #4]
 2048 00e0 03F03F02 		and	r2, r3, #63
 2049 00e4 7B68     		ldr	r3, [r7, #4]
 2050 00e6 1A62     		str	r2, [r3, #32]
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLN = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Po
 2051              		.loc 1 1154 0
 2052 00e8 0E4B     		ldr	r3, .L145
 2053 00ea 5B68     		ldr	r3, [r3, #4]
 2054 00ec 9B09     		lsrs	r3, r3, #6
 2055 00ee C3F30802 		ubfx	r2, r3, #0, #9
 2056 00f2 7B68     		ldr	r3, [r7, #4]
 2057 00f4 5A62     		str	r2, [r3, #36]
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLP = (uint32_t)((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) + RCC_PLLCFGR_PLLP_0
 2058              		.loc 1 1155 0
 2059 00f6 0B4B     		ldr	r3, .L145
 2060 00f8 5B68     		ldr	r3, [r3, #4]
 2061 00fa 03F44033 		and	r3, r3, #196608
 2062 00fe 03F58033 		add	r3, r3, #65536
 2063 0102 5B00     		lsls	r3, r3, #1
 2064 0104 1A0C     		lsrs	r2, r3, #16
 2065 0106 7B68     		ldr	r3, [r7, #4]
 2066 0108 9A62     		str	r2, [r3, #40]
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLQ = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLQ) >> RCC_PLLCFGR_PLLQ_Po
 2067              		.loc 1 1156 0
 2068 010a 064B     		ldr	r3, .L145
 2069 010c 5B68     		ldr	r3, [r3, #4]
 2070 010e 1B0E     		lsrs	r3, r3, #24
 2071 0110 03F00F02 		and	r2, r3, #15
 2072 0114 7B68     		ldr	r3, [r7, #4]
 2073 0116 DA62     		str	r2, [r3, #44]
1157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #if defined (RCC_PLLCFGR_PLLR)
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLR = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> POSITION_VAL(RCC_PL
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #endif
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** }
 2074              		.loc 1 1160 0
 2075 0118 00BF     		nop
 2076 011a 0C37     		adds	r7, r7, #12
 2077              	.LCFI44:
 2078              		.cfi_def_cfa_offset 4
 2079 011c BD46     		mov	sp, r7
 2080              	.LCFI45:
 2081              		.cfi_def_cfa_register 13
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 58


 2082              		@ sp needed
 2083 011e 5DF8047B 		ldr	r7, [sp], #4
 2084              	.LCFI46:
 2085              		.cfi_restore 7
 2086              		.cfi_def_cfa_offset 0
 2087 0122 7047     		bx	lr
 2088              	.L146:
 2089              		.align	2
 2090              	.L145:
 2091 0124 00380240 		.word	1073887232
 2092              		.cfi_endproc
 2093              	.LFE148:
 2095              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 2096              		.align	1
 2097              		.global	HAL_RCC_GetClockConfig
 2098              		.syntax unified
 2099              		.thumb
 2100              		.thumb_func
 2101              		.fpu fpv5-sp-d16
 2103              	HAL_RCC_GetClockConfig:
 2104              	.LFB149:
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /**
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @brief  Configures the RCC_ClkInitStruct according to the internal
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * RCC configuration registers.
1165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * will be configured.
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @retval None
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** {
 2105              		.loc 1 1171 0
 2106              		.cfi_startproc
 2107              		@ args = 0, pretend = 0, frame = 8
 2108              		@ frame_needed = 1, uses_anonymous_args = 0
 2109              		@ link register save eliminated.
 2110 0000 80B4     		push	{r7}
 2111              	.LCFI47:
 2112              		.cfi_def_cfa_offset 4
 2113              		.cfi_offset 7, -4
 2114 0002 83B0     		sub	sp, sp, #12
 2115              	.LCFI48:
 2116              		.cfi_def_cfa_offset 16
 2117 0004 00AF     		add	r7, sp, #0
 2118              	.LCFI49:
 2119              		.cfi_def_cfa_register 7
 2120 0006 7860     		str	r0, [r7, #4]
 2121 0008 3960     		str	r1, [r7]
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 2122              		.loc 1 1173 0
 2123 000a 7B68     		ldr	r3, [r7, #4]
 2124 000c 0F22     		movs	r2, #15
 2125 000e 1A60     		str	r2, [r3]
1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 59


1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 2126              		.loc 1 1176 0
 2127 0010 124B     		ldr	r3, .L148
 2128 0012 9B68     		ldr	r3, [r3, #8]
 2129 0014 03F00302 		and	r2, r3, #3
 2130 0018 7B68     		ldr	r3, [r7, #4]
 2131 001a 5A60     		str	r2, [r3, #4]
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 2132              		.loc 1 1179 0
 2133 001c 0F4B     		ldr	r3, .L148
 2134 001e 9B68     		ldr	r3, [r3, #8]
 2135 0020 03F0F002 		and	r2, r3, #240
 2136 0024 7B68     		ldr	r3, [r7, #4]
 2137 0026 9A60     		str	r2, [r3, #8]
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 2138              		.loc 1 1182 0
 2139 0028 0C4B     		ldr	r3, .L148
 2140 002a 9B68     		ldr	r3, [r3, #8]
 2141 002c 03F4E052 		and	r2, r3, #7168
 2142 0030 7B68     		ldr	r3, [r7, #4]
 2143 0032 DA60     		str	r2, [r3, #12]
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3);
 2144              		.loc 1 1185 0
 2145 0034 094B     		ldr	r3, .L148
 2146 0036 9B68     		ldr	r3, [r3, #8]
 2147 0038 DB08     		lsrs	r3, r3, #3
 2148 003a 03F4E052 		and	r2, r3, #7168
 2149 003e 7B68     		ldr	r3, [r7, #4]
 2150 0040 1A61     		str	r2, [r3, #16]
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 2151              		.loc 1 1188 0
 2152 0042 074B     		ldr	r3, .L148+4
 2153 0044 1B68     		ldr	r3, [r3]
 2154 0046 03F00F02 		and	r2, r3, #15
 2155 004a 3B68     		ldr	r3, [r7]
 2156 004c 1A60     		str	r2, [r3]
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** }
 2157              		.loc 1 1189 0
 2158 004e 00BF     		nop
 2159 0050 0C37     		adds	r7, r7, #12
 2160              	.LCFI50:
 2161              		.cfi_def_cfa_offset 4
 2162 0052 BD46     		mov	sp, r7
 2163              	.LCFI51:
 2164              		.cfi_def_cfa_register 13
 2165              		@ sp needed
 2166 0054 5DF8047B 		ldr	r7, [sp], #4
 2167              	.LCFI52:
 2168              		.cfi_restore 7
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 60


 2169              		.cfi_def_cfa_offset 0
 2170 0058 7047     		bx	lr
 2171              	.L149:
 2172 005a 00BF     		.align	2
 2173              	.L148:
 2174 005c 00380240 		.word	1073887232
 2175 0060 003C0240 		.word	1073888256
 2176              		.cfi_endproc
 2177              	.LFE149:
 2179              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 2180              		.align	1
 2181              		.global	HAL_RCC_NMI_IRQHandler
 2182              		.syntax unified
 2183              		.thumb
 2184              		.thumb_func
 2185              		.fpu fpv5-sp-d16
 2187              	HAL_RCC_NMI_IRQHandler:
 2188              	.LFB150:
1190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /**
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @retval None
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** {
 2189              		.loc 1 1197 0
 2190              		.cfi_startproc
 2191              		@ args = 0, pretend = 0, frame = 0
 2192              		@ frame_needed = 1, uses_anonymous_args = 0
 2193 0000 80B5     		push	{r7, lr}
 2194              	.LCFI53:
 2195              		.cfi_def_cfa_offset 8
 2196              		.cfi_offset 7, -8
 2197              		.cfi_offset 14, -4
 2198 0002 00AF     		add	r7, sp, #0
 2199              	.LCFI54:
 2200              		.cfi_def_cfa_register 7
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
 2201              		.loc 1 1199 0
 2202 0004 064B     		ldr	r3, .L153
 2203 0006 DB68     		ldr	r3, [r3, #12]
 2204 0008 03F08003 		and	r3, r3, #128
 2205 000c 802B     		cmp	r3, #128
 2206 000e 04D1     		bne	.L152
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
 2207              		.loc 1 1202 0
 2208 0010 FFF7FEFF 		bl	HAL_RCC_CSSCallback
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
 2209              		.loc 1 1205 0
 2210 0014 034B     		ldr	r3, .L153+4
 2211 0016 8022     		movs	r2, #128
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 61


 2212 0018 1A70     		strb	r2, [r3]
 2213              	.L152:
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** }
 2214              		.loc 1 1207 0
 2215 001a 00BF     		nop
 2216 001c 80BD     		pop	{r7, pc}
 2217              	.L154:
 2218 001e 00BF     		.align	2
 2219              	.L153:
 2220 0020 00380240 		.word	1073887232
 2221 0024 0E380240 		.word	1073887246
 2222              		.cfi_endproc
 2223              	.LFE150:
 2225              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2226              		.align	1
 2227              		.weak	HAL_RCC_CSSCallback
 2228              		.syntax unified
 2229              		.thumb
 2230              		.thumb_func
 2231              		.fpu fpv5-sp-d16
 2233              	HAL_RCC_CSSCallback:
 2234              	.LFB151:
1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /**
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @retval None
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** {
 2235              		.loc 1 1214 0
 2236              		.cfi_startproc
 2237              		@ args = 0, pretend = 0, frame = 0
 2238              		@ frame_needed = 1, uses_anonymous_args = 0
 2239              		@ link register save eliminated.
 2240 0000 80B4     		push	{r7}
 2241              	.LCFI55:
 2242              		.cfi_def_cfa_offset 4
 2243              		.cfi_offset 7, -4
 2244 0002 00AF     		add	r7, sp, #0
 2245              	.LCFI56:
 2246              		.cfi_def_cfa_register 7
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****             the HAL_RCC_CSSCallback could be implemented in the user file
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****    */
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** }
 2247              		.loc 1 1218 0
 2248 0004 00BF     		nop
 2249 0006 BD46     		mov	sp, r7
 2250              	.LCFI57:
 2251              		.cfi_def_cfa_register 13
 2252              		@ sp needed
 2253 0008 5DF8047B 		ldr	r7, [sp], #4
 2254              	.LCFI58:
 2255              		.cfi_restore 7
 2256              		.cfi_def_cfa_offset 0
 2257 000c 7047     		bx	lr
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 62


 2258              		.cfi_endproc
 2259              	.LFE151:
 2261              		.text
 2262              	.Letext0:
 2263              		.file 2 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/machine/_default_types
 2264              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_stdint.h"
 2265              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 2266              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 2267              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 2268              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 2269              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/lock.h"
 2270              		.file 9 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_types.h"
 2271              		.file 10 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.
 2272              		.file 11 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/reent.h"
 2273              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 2274              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 2275              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 2276              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s 			page 63


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_rcc.c
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:18     .text.HAL_RCC_DeInit:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:25     .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:288    .text.HAL_RCC_DeInit:00000000000001a4 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:297    .text.HAL_RCC_OscConfig:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:304    .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:688    .text.HAL_RCC_OscConfig:0000000000000280 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:691    .text.HAL_RCC_OscConfig:0000000000000284 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:1040   .text.HAL_RCC_OscConfig:00000000000004d8 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:1046   .text.HAL_RCC_ClockConfig:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:1053   .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:1574   .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:1324   .text.HAL_RCC_ClockConfig:00000000000001c0 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:1332   .text.HAL_RCC_MCOConfig:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:1339   .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:1467   .text.HAL_RCC_MCOConfig:00000000000000bc $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:1474   .text.HAL_RCC_EnableCSS:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:1481   .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:1515   .text.HAL_RCC_EnableCSS:000000000000001c $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:1520   .text.HAL_RCC_DisableCSS:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:1527   .text.HAL_RCC_DisableCSS:0000000000000000 HAL_RCC_DisableCSS
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:1561   .text.HAL_RCC_DisableCSS:000000000000001c $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:1567   .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:1758   .text.HAL_RCC_GetSysClockFreq:0000000000000158 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:1765   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:1772   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:1803   .text.HAL_RCC_GetHCLKFreq:0000000000000014 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:1808   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:1815   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:1845   .text.HAL_RCC_GetPCLK1Freq:0000000000000020 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:1851   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:1858   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:1888   .text.HAL_RCC_GetPCLK2Freq:0000000000000020 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:1894   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:1901   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:2091   .text.HAL_RCC_GetOscConfig:0000000000000124 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:2096   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:2103   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:2174   .text.HAL_RCC_GetClockConfig:000000000000005c $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:2180   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:2187   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:2233   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:2220   .text.HAL_RCC_NMI_IRQHandler:0000000000000020 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccc8tsR7.s:2226   .text.HAL_RCC_CSSCallback:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_GetTick
HAL_InitTick
SystemCoreClock
AHBPrescTable
HAL_GPIO_Init
__aeabi_uldivmod
APBPrescTable
