ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"syscalls.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__env
  18              		.section	.bss.__env,"aw",%nobits
  19              		.align	2
  22              	__env:
  23 0000 00000000 		.space	4
  24              		.global	environ
  25              		.section	.data.environ,"aw",%progbits
  26              		.align	2
  29              	environ:
  30 0000 00000000 		.word	__env
  31              		.section	.text.vprint,"ax",%progbits
  32              		.align	1
  33              		.global	vprint
  34              		.syntax unified
  35              		.thumb
  36              		.thumb_func
  37              		.fpu fpv5-sp-d16
  39              	vprint:
  40              	.LFB154:
  41              		.file 1 "syscalls.c"
   1:syscalls.c    **** /**
   2:syscalls.c    **** *****************************************************************************
   3:syscalls.c    **** **
   4:syscalls.c    **** **  File        : syscalls.c
   5:syscalls.c    **** **
   6:syscalls.c    **** **  Abstract    : System Workbench Minimal System calls file
   7:syscalls.c    **** **
   8:syscalls.c    **** ** 		          For more information about which c-functions
   9:syscalls.c    **** **                need which of these lowlevel functions
  10:syscalls.c    **** **                please consult the Newlib libc-manual
  11:syscalls.c    **** **
  12:syscalls.c    **** **  Environment : System Workbench for MCU
  13:syscalls.c    **** **
  14:syscalls.c    **** **  Distribution: The file is distributed as is without any warranty
  15:syscalls.c    **** **                of any kind.
  16:syscalls.c    **** **
  17:syscalls.c    **** *****************************************************************************
  18:syscalls.c    **** **
  19:syscalls.c    **** ** <h2><center>&copy; COPYRIGHT(c) 2014 Ac6</center></h2>
  20:syscalls.c    **** **
  21:syscalls.c    **** ** Redistribution and use in source and binary forms, with or without modification,
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s 			page 2


  22:syscalls.c    **** ** are permitted provided that the following conditions are met:
  23:syscalls.c    **** **   1. Redistributions of source code must retain the above copyright notice,
  24:syscalls.c    **** **      this list of conditions and the following disclaimer.
  25:syscalls.c    **** **   2. Redistributions in binary form must reproduce the above copyright notice,
  26:syscalls.c    **** **      this list of conditions and the following disclaimer in the documentation
  27:syscalls.c    **** **      and/or other materials provided with the distribution.
  28:syscalls.c    **** **   3. Neither the name of Ac6 nor the names of its contributors
  29:syscalls.c    **** **      may be used to endorse or promote products derived from this software
  30:syscalls.c    **** **      without specific prior written permission.
  31:syscalls.c    **** **
  32:syscalls.c    **** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  33:syscalls.c    **** ** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  34:syscalls.c    **** ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  35:syscalls.c    **** ** DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  36:syscalls.c    **** ** FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  37:syscalls.c    **** ** DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  38:syscalls.c    **** ** SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  39:syscalls.c    **** ** CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  40:syscalls.c    **** ** OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  41:syscalls.c    **** ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  42:syscalls.c    **** **
  43:syscalls.c    **** *****************************************************************************
  44:syscalls.c    **** */
  45:syscalls.c    **** 
  46:syscalls.c    **** /* Includes */
  47:syscalls.c    **** #include <sys/stat.h>
  48:syscalls.c    **** #include <stdlib.h>
  49:syscalls.c    **** #include <errno.h>
  50:syscalls.c    **** #include <stdio.h>
  51:syscalls.c    **** #include <signal.h>
  52:syscalls.c    **** #include <time.h>
  53:syscalls.c    **** #include <sys/time.h>
  54:syscalls.c    **** #include <sys/times.h>
  55:syscalls.c    **** #include "main.h"
  56:syscalls.c    **** #include <stdarg.h>
  57:syscalls.c    **** #include <string.h>
  58:syscalls.c    **** 
  59:syscalls.c    **** 
  60:syscalls.c    **** /* Variables */
  61:syscalls.c    **** //#undef errno
  62:syscalls.c    **** extern int errno;
  63:syscalls.c    **** extern int __io_putchar(int ch) __attribute__((weak));
  64:syscalls.c    **** extern int __io_getchar(void) __attribute__((weak));
  65:syscalls.c    **** extern UART_HandleTypeDef huart6;
  66:syscalls.c    **** 
  67:syscalls.c    **** 
  68:syscalls.c    **** register char * stack_ptr asm("sp");
  69:syscalls.c    **** 
  70:syscalls.c    **** char *__env[1] = { 0 };
  71:syscalls.c    **** char **environ = __env;
  72:syscalls.c    **** 
  73:syscalls.c    **** 
  74:syscalls.c    **** 
  75:syscalls.c    **** void vprint(const char *fmt, va_list argp)
  76:syscalls.c    **** {
  42              		.loc 1 76 0
  43              		.cfi_startproc
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s 			page 3


  44              		@ args = 0, pretend = 0, frame = 208
  45              		@ frame_needed = 1, uses_anonymous_args = 0
  46 0000 80B5     		push	{r7, lr}
  47              	.LCFI0:
  48              		.cfi_def_cfa_offset 8
  49              		.cfi_offset 7, -8
  50              		.cfi_offset 14, -4
  51 0002 B4B0     		sub	sp, sp, #208
  52              	.LCFI1:
  53              		.cfi_def_cfa_offset 216
  54 0004 00AF     		add	r7, sp, #0
  55              	.LCFI2:
  56              		.cfi_def_cfa_register 7
  57 0006 7860     		str	r0, [r7, #4]
  58 0008 3960     		str	r1, [r7]
  77:syscalls.c    ****     char string[200];
  78:syscalls.c    ****     if(0 < vsprintf(string,fmt,argp)) // build string
  59              		.loc 1 78 0
  60 000a 07F10803 		add	r3, r7, #8
  61 000e 3A68     		ldr	r2, [r7]
  62 0010 7968     		ldr	r1, [r7, #4]
  63 0012 1846     		mov	r0, r3
  64 0014 FFF7FEFF 		bl	vsprintf
  65 0018 0346     		mov	r3, r0
  66 001a 002B     		cmp	r3, #0
  67 001c 0DDD     		ble	.L3
  79:syscalls.c    ****     {
  80:syscalls.c    ****         HAL_UART_Transmit(&huart6, (uint8_t*)string, strlen(string), 0xffffff); // send message via
  68              		.loc 1 80 0
  69 001e 07F10803 		add	r3, r7, #8
  70 0022 1846     		mov	r0, r3
  71 0024 FFF7FEFF 		bl	strlen
  72 0028 0346     		mov	r3, r0
  73 002a 9AB2     		uxth	r2, r3
  74 002c 07F10801 		add	r1, r7, #8
  75 0030 6FF07F43 		mvn	r3, #-16777216
  76 0034 0348     		ldr	r0, .L4
  77 0036 FFF7FEFF 		bl	HAL_UART_Transmit
  78              	.L3:
  81:syscalls.c    ****     }
  82:syscalls.c    **** }
  79              		.loc 1 82 0
  80 003a 00BF     		nop
  81 003c D037     		adds	r7, r7, #208
  82              	.LCFI3:
  83              		.cfi_def_cfa_offset 8
  84 003e BD46     		mov	sp, r7
  85              	.LCFI4:
  86              		.cfi_def_cfa_register 13
  87              		@ sp needed
  88 0040 80BD     		pop	{r7, pc}
  89              	.L5:
  90 0042 00BF     		.align	2
  91              	.L4:
  92 0044 00000000 		.word	huart6
  93              		.cfi_endproc
  94              	.LFE154:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s 			page 4


  96              		.section	.text.my_printf,"ax",%progbits
  97              		.align	1
  98              		.global	my_printf
  99              		.syntax unified
 100              		.thumb
 101              		.thumb_func
 102              		.fpu fpv5-sp-d16
 104              	my_printf:
 105              	.LFB155:
  83:syscalls.c    **** 
  84:syscalls.c    **** void my_printf(const char *fmt, ...) // custom printf() function
  85:syscalls.c    **** {
 106              		.loc 1 85 0
 107              		.cfi_startproc
 108              		@ args = 4, pretend = 16, frame = 8
 109              		@ frame_needed = 1, uses_anonymous_args = 1
 110 0000 0FB4     		push	{r0, r1, r2, r3}
 111              	.LCFI5:
 112              		.cfi_def_cfa_offset 16
 113              		.cfi_offset 0, -16
 114              		.cfi_offset 1, -12
 115              		.cfi_offset 2, -8
 116              		.cfi_offset 3, -4
 117 0002 80B5     		push	{r7, lr}
 118              	.LCFI6:
 119              		.cfi_def_cfa_offset 24
 120              		.cfi_offset 7, -24
 121              		.cfi_offset 14, -20
 122 0004 82B0     		sub	sp, sp, #8
 123              	.LCFI7:
 124              		.cfi_def_cfa_offset 32
 125 0006 00AF     		add	r7, sp, #0
 126              	.LCFI8:
 127              		.cfi_def_cfa_register 7
  86:syscalls.c    ****     va_list argp;
  87:syscalls.c    ****     va_start(argp, fmt);
 128              		.loc 1 87 0
 129 0008 07F11403 		add	r3, r7, #20
 130 000c 7B60     		str	r3, [r7, #4]
  88:syscalls.c    ****     vprint(fmt, argp);
 131              		.loc 1 88 0
 132 000e 7968     		ldr	r1, [r7, #4]
 133 0010 3869     		ldr	r0, [r7, #16]
 134 0012 FFF7FEFF 		bl	vprint
  89:syscalls.c    ****     va_end(argp);
  90:syscalls.c    **** }
 135              		.loc 1 90 0
 136 0016 00BF     		nop
 137 0018 0837     		adds	r7, r7, #8
 138              	.LCFI9:
 139              		.cfi_def_cfa_offset 24
 140 001a BD46     		mov	sp, r7
 141              	.LCFI10:
 142              		.cfi_def_cfa_register 13
 143              		@ sp needed
 144 001c BDE88040 		pop	{r7, lr}
 145              	.LCFI11:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s 			page 5


 146              		.cfi_restore 14
 147              		.cfi_restore 7
 148              		.cfi_def_cfa_offset 16
 149 0020 04B0     		add	sp, sp, #16
 150              	.LCFI12:
 151              		.cfi_restore 3
 152              		.cfi_restore 2
 153              		.cfi_restore 1
 154              		.cfi_restore 0
 155              		.cfi_def_cfa_offset 0
 156 0022 7047     		bx	lr
 157              		.cfi_endproc
 158              	.LFE155:
 160              		.section	.text.initialise_monitor_handles,"ax",%progbits
 161              		.align	1
 162              		.global	initialise_monitor_handles
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 166              		.fpu fpv5-sp-d16
 168              	initialise_monitor_handles:
 169              	.LFB156:
  91:syscalls.c    **** 
  92:syscalls.c    **** 
  93:syscalls.c    **** /* Functions */
  94:syscalls.c    **** void initialise_monitor_handles()
  95:syscalls.c    **** {
 170              		.loc 1 95 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 1, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 175 0000 80B4     		push	{r7}
 176              	.LCFI13:
 177              		.cfi_def_cfa_offset 4
 178              		.cfi_offset 7, -4
 179 0002 00AF     		add	r7, sp, #0
 180              	.LCFI14:
 181              		.cfi_def_cfa_register 7
  96:syscalls.c    **** }
 182              		.loc 1 96 0
 183 0004 00BF     		nop
 184 0006 BD46     		mov	sp, r7
 185              	.LCFI15:
 186              		.cfi_def_cfa_register 13
 187              		@ sp needed
 188 0008 5DF8047B 		ldr	r7, [sp], #4
 189              	.LCFI16:
 190              		.cfi_restore 7
 191              		.cfi_def_cfa_offset 0
 192 000c 7047     		bx	lr
 193              		.cfi_endproc
 194              	.LFE156:
 196              		.section	.text._getpid,"ax",%progbits
 197              		.align	1
 198              		.global	_getpid
 199              		.syntax unified
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s 			page 6


 200              		.thumb
 201              		.thumb_func
 202              		.fpu fpv5-sp-d16
 204              	_getpid:
 205              	.LFB157:
  97:syscalls.c    **** 
  98:syscalls.c    **** int _getpid(void)
  99:syscalls.c    **** {
 206              		.loc 1 99 0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 1, uses_anonymous_args = 0
 210              		@ link register save eliminated.
 211 0000 80B4     		push	{r7}
 212              	.LCFI17:
 213              		.cfi_def_cfa_offset 4
 214              		.cfi_offset 7, -4
 215 0002 00AF     		add	r7, sp, #0
 216              	.LCFI18:
 217              		.cfi_def_cfa_register 7
 100:syscalls.c    **** 	return 1;
 218              		.loc 1 100 0
 219 0004 0123     		movs	r3, #1
 101:syscalls.c    **** }
 220              		.loc 1 101 0
 221 0006 1846     		mov	r0, r3
 222 0008 BD46     		mov	sp, r7
 223              	.LCFI19:
 224              		.cfi_def_cfa_register 13
 225              		@ sp needed
 226 000a 5DF8047B 		ldr	r7, [sp], #4
 227              	.LCFI20:
 228              		.cfi_restore 7
 229              		.cfi_def_cfa_offset 0
 230 000e 7047     		bx	lr
 231              		.cfi_endproc
 232              	.LFE157:
 234              		.section	.text._kill,"ax",%progbits
 235              		.align	1
 236              		.global	_kill
 237              		.syntax unified
 238              		.thumb
 239              		.thumb_func
 240              		.fpu fpv5-sp-d16
 242              	_kill:
 243              	.LFB158:
 102:syscalls.c    **** 
 103:syscalls.c    **** int _kill(int pid, int sig)
 104:syscalls.c    **** {
 244              		.loc 1 104 0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 8
 247              		@ frame_needed = 1, uses_anonymous_args = 0
 248 0000 80B5     		push	{r7, lr}
 249              	.LCFI21:
 250              		.cfi_def_cfa_offset 8
 251              		.cfi_offset 7, -8
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s 			page 7


 252              		.cfi_offset 14, -4
 253 0002 82B0     		sub	sp, sp, #8
 254              	.LCFI22:
 255              		.cfi_def_cfa_offset 16
 256 0004 00AF     		add	r7, sp, #0
 257              	.LCFI23:
 258              		.cfi_def_cfa_register 7
 259 0006 7860     		str	r0, [r7, #4]
 260 0008 3960     		str	r1, [r7]
 105:syscalls.c    **** 	errno = EINVAL;
 261              		.loc 1 105 0
 262 000a FFF7FEFF 		bl	__errno
 263 000e 0246     		mov	r2, r0
 264 0010 1623     		movs	r3, #22
 265 0012 1360     		str	r3, [r2]
 106:syscalls.c    **** 	return -1;
 266              		.loc 1 106 0
 267 0014 4FF0FF33 		mov	r3, #-1
 107:syscalls.c    **** }
 268              		.loc 1 107 0
 269 0018 1846     		mov	r0, r3
 270 001a 0837     		adds	r7, r7, #8
 271              	.LCFI24:
 272              		.cfi_def_cfa_offset 8
 273 001c BD46     		mov	sp, r7
 274              	.LCFI25:
 275              		.cfi_def_cfa_register 13
 276              		@ sp needed
 277 001e 80BD     		pop	{r7, pc}
 278              		.cfi_endproc
 279              	.LFE158:
 281              		.section	.text._exit,"ax",%progbits
 282              		.align	1
 283              		.global	_exit
 284              		.syntax unified
 285              		.thumb
 286              		.thumb_func
 287              		.fpu fpv5-sp-d16
 289              	_exit:
 290              	.LFB159:
 108:syscalls.c    **** 
 109:syscalls.c    **** void _exit (int status)
 110:syscalls.c    **** {
 291              		.loc 1 110 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 8
 294              		@ frame_needed = 1, uses_anonymous_args = 0
 295 0000 80B5     		push	{r7, lr}
 296              	.LCFI26:
 297              		.cfi_def_cfa_offset 8
 298              		.cfi_offset 7, -8
 299              		.cfi_offset 14, -4
 300 0002 82B0     		sub	sp, sp, #8
 301              	.LCFI27:
 302              		.cfi_def_cfa_offset 16
 303 0004 00AF     		add	r7, sp, #0
 304              	.LCFI28:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s 			page 8


 305              		.cfi_def_cfa_register 7
 306 0006 7860     		str	r0, [r7, #4]
 111:syscalls.c    **** 	_kill(status, -1);
 307              		.loc 1 111 0
 308 0008 4FF0FF31 		mov	r1, #-1
 309 000c 7868     		ldr	r0, [r7, #4]
 310 000e FFF7FEFF 		bl	_kill
 311              	.L13:
 112:syscalls.c    **** 	while (1) {}		/* Make sure we hang here */
 312              		.loc 1 112 0 discriminator 1
 313 0012 FEE7     		b	.L13
 314              		.cfi_endproc
 315              	.LFE159:
 317              		.section	.text._read,"ax",%progbits
 318              		.align	1
 319              		.global	_read
 320              		.syntax unified
 321              		.thumb
 322              		.thumb_func
 323              		.fpu fpv5-sp-d16
 325              	_read:
 326              	.LFB160:
 113:syscalls.c    **** }
 114:syscalls.c    **** 
 115:syscalls.c    **** int _read (int file, char *ptr, int len)
 116:syscalls.c    **** {
 327              		.loc 1 116 0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 24
 330              		@ frame_needed = 1, uses_anonymous_args = 0
 331 0000 80B5     		push	{r7, lr}
 332              	.LCFI29:
 333              		.cfi_def_cfa_offset 8
 334              		.cfi_offset 7, -8
 335              		.cfi_offset 14, -4
 336 0002 86B0     		sub	sp, sp, #24
 337              	.LCFI30:
 338              		.cfi_def_cfa_offset 32
 339 0004 00AF     		add	r7, sp, #0
 340              	.LCFI31:
 341              		.cfi_def_cfa_register 7
 342 0006 F860     		str	r0, [r7, #12]
 343 0008 B960     		str	r1, [r7, #8]
 344 000a 7A60     		str	r2, [r7, #4]
 117:syscalls.c    **** 	int DataIdx;
 118:syscalls.c    **** 
 119:syscalls.c    **** 	for (DataIdx = 0; DataIdx < len; DataIdx++)
 345              		.loc 1 119 0
 346 000c 0023     		movs	r3, #0
 347 000e 7B61     		str	r3, [r7, #20]
 348 0010 0AE0     		b	.L15
 349              	.L16:
 120:syscalls.c    **** 	{
 121:syscalls.c    **** 		*ptr++ = __io_getchar();
 350              		.loc 1 121 0 discriminator 3
 351 0012 FFF7FEFF 		bl	__io_getchar
 352 0016 0146     		mov	r1, r0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s 			page 9


 353 0018 BB68     		ldr	r3, [r7, #8]
 354 001a 5A1C     		adds	r2, r3, #1
 355 001c BA60     		str	r2, [r7, #8]
 356 001e CAB2     		uxtb	r2, r1
 357 0020 1A70     		strb	r2, [r3]
 119:syscalls.c    **** 	{
 358              		.loc 1 119 0 discriminator 3
 359 0022 7B69     		ldr	r3, [r7, #20]
 360 0024 0133     		adds	r3, r3, #1
 361 0026 7B61     		str	r3, [r7, #20]
 362              	.L15:
 119:syscalls.c    **** 	{
 363              		.loc 1 119 0 is_stmt 0 discriminator 1
 364 0028 7A69     		ldr	r2, [r7, #20]
 365 002a 7B68     		ldr	r3, [r7, #4]
 366 002c 9A42     		cmp	r2, r3
 367 002e F0DB     		blt	.L16
 122:syscalls.c    **** 	}
 123:syscalls.c    **** 
 124:syscalls.c    **** return len;
 368              		.loc 1 124 0 is_stmt 1
 369 0030 7B68     		ldr	r3, [r7, #4]
 125:syscalls.c    **** }
 370              		.loc 1 125 0
 371 0032 1846     		mov	r0, r3
 372 0034 1837     		adds	r7, r7, #24
 373              	.LCFI32:
 374              		.cfi_def_cfa_offset 8
 375 0036 BD46     		mov	sp, r7
 376              	.LCFI33:
 377              		.cfi_def_cfa_register 13
 378              		@ sp needed
 379 0038 80BD     		pop	{r7, pc}
 380              		.cfi_endproc
 381              	.LFE160:
 383              		.section	.text._write,"ax",%progbits
 384              		.align	1
 385              		.global	_write
 386              		.syntax unified
 387              		.thumb
 388              		.thumb_func
 389              		.fpu fpv5-sp-d16
 391              	_write:
 392              	.LFB161:
 126:syscalls.c    **** 
 127:syscalls.c    **** int _write(int file, char *ptr, int len)
 128:syscalls.c    **** {
 393              		.loc 1 128 0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 24
 396              		@ frame_needed = 1, uses_anonymous_args = 0
 397 0000 80B5     		push	{r7, lr}
 398              	.LCFI34:
 399              		.cfi_def_cfa_offset 8
 400              		.cfi_offset 7, -8
 401              		.cfi_offset 14, -4
 402 0002 86B0     		sub	sp, sp, #24
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s 			page 10


 403              	.LCFI35:
 404              		.cfi_def_cfa_offset 32
 405 0004 00AF     		add	r7, sp, #0
 406              	.LCFI36:
 407              		.cfi_def_cfa_register 7
 408 0006 F860     		str	r0, [r7, #12]
 409 0008 B960     		str	r1, [r7, #8]
 410 000a 7A60     		str	r2, [r7, #4]
 129:syscalls.c    **** 	int DataIdx;
 130:syscalls.c    **** 
 131:syscalls.c    **** 	for (DataIdx = 0; DataIdx < len; DataIdx++)
 411              		.loc 1 131 0
 412 000c 0023     		movs	r3, #0
 413 000e 7B61     		str	r3, [r7, #20]
 414 0010 09E0     		b	.L19
 415              	.L20:
 132:syscalls.c    **** 	{
 133:syscalls.c    **** 		__io_putchar(*ptr++);
 416              		.loc 1 133 0 discriminator 3
 417 0012 BB68     		ldr	r3, [r7, #8]
 418 0014 5A1C     		adds	r2, r3, #1
 419 0016 BA60     		str	r2, [r7, #8]
 420 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 421 001a 1846     		mov	r0, r3
 422 001c FFF7FEFF 		bl	__io_putchar
 131:syscalls.c    **** 	{
 423              		.loc 1 131 0 discriminator 3
 424 0020 7B69     		ldr	r3, [r7, #20]
 425 0022 0133     		adds	r3, r3, #1
 426 0024 7B61     		str	r3, [r7, #20]
 427              	.L19:
 131:syscalls.c    **** 	{
 428              		.loc 1 131 0 is_stmt 0 discriminator 1
 429 0026 7A69     		ldr	r2, [r7, #20]
 430 0028 7B68     		ldr	r3, [r7, #4]
 431 002a 9A42     		cmp	r2, r3
 432 002c F1DB     		blt	.L20
 134:syscalls.c    **** 	}
 135:syscalls.c    **** 	return len;
 433              		.loc 1 135 0 is_stmt 1
 434 002e 7B68     		ldr	r3, [r7, #4]
 136:syscalls.c    **** }
 435              		.loc 1 136 0
 436 0030 1846     		mov	r0, r3
 437 0032 1837     		adds	r7, r7, #24
 438              	.LCFI37:
 439              		.cfi_def_cfa_offset 8
 440 0034 BD46     		mov	sp, r7
 441              	.LCFI38:
 442              		.cfi_def_cfa_register 13
 443              		@ sp needed
 444 0036 80BD     		pop	{r7, pc}
 445              		.cfi_endproc
 446              	.LFE161:
 448              		.section	.bss.heap_end.10174,"aw",%nobits
 449              		.align	2
 452              	heap_end.10174:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s 			page 11


 453 0000 00000000 		.space	4
 454              		.section	.text._sbrk,"ax",%progbits
 455              		.align	1
 456              		.global	_sbrk
 457              		.syntax unified
 458              		.thumb
 459              		.thumb_func
 460              		.fpu fpv5-sp-d16
 462              	_sbrk:
 463              	.LFB162:
 137:syscalls.c    **** 
 138:syscalls.c    **** caddr_t _sbrk(int incr)
 139:syscalls.c    **** {
 464              		.loc 1 139 0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 16
 467              		@ frame_needed = 1, uses_anonymous_args = 0
 468 0000 80B5     		push	{r7, lr}
 469              	.LCFI39:
 470              		.cfi_def_cfa_offset 8
 471              		.cfi_offset 7, -8
 472              		.cfi_offset 14, -4
 473 0002 84B0     		sub	sp, sp, #16
 474              	.LCFI40:
 475              		.cfi_def_cfa_offset 24
 476 0004 00AF     		add	r7, sp, #0
 477              	.LCFI41:
 478              		.cfi_def_cfa_register 7
 479 0006 7860     		str	r0, [r7, #4]
 140:syscalls.c    **** 	extern char end asm("end");
 141:syscalls.c    **** 	static char *heap_end;
 142:syscalls.c    **** 	char *prev_heap_end;
 143:syscalls.c    **** 
 144:syscalls.c    **** 	if (heap_end == 0)
 480              		.loc 1 144 0
 481 0008 114B     		ldr	r3, .L26
 482 000a 1B68     		ldr	r3, [r3]
 483 000c 002B     		cmp	r3, #0
 484 000e 02D1     		bne	.L23
 145:syscalls.c    **** 		heap_end = &end;
 485              		.loc 1 145 0
 486 0010 0F4B     		ldr	r3, .L26
 487 0012 104A     		ldr	r2, .L26+4
 488 0014 1A60     		str	r2, [r3]
 489              	.L23:
 146:syscalls.c    **** 
 147:syscalls.c    **** 	prev_heap_end = heap_end;
 490              		.loc 1 147 0
 491 0016 0E4B     		ldr	r3, .L26
 492 0018 1B68     		ldr	r3, [r3]
 493 001a FB60     		str	r3, [r7, #12]
 148:syscalls.c    **** 	if (heap_end + incr > stack_ptr)
 494              		.loc 1 148 0
 495 001c 0C4B     		ldr	r3, .L26
 496 001e 1A68     		ldr	r2, [r3]
 497 0020 7B68     		ldr	r3, [r7, #4]
 498 0022 1344     		add	r3, r3, r2
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s 			page 12


 499 0024 6A46     		mov	r2, sp
 500 0026 9342     		cmp	r3, r2
 501 0028 07D9     		bls	.L24
 149:syscalls.c    **** 	{
 150:syscalls.c    **** //		write(1, "Heap and stack collision\n", 25);
 151:syscalls.c    **** //		abort();
 152:syscalls.c    **** 		errno = ENOMEM;
 502              		.loc 1 152 0
 503 002a FFF7FEFF 		bl	__errno
 504 002e 0246     		mov	r2, r0
 505 0030 0C23     		movs	r3, #12
 506 0032 1360     		str	r3, [r2]
 153:syscalls.c    **** 		return (caddr_t) -1;
 507              		.loc 1 153 0
 508 0034 4FF0FF33 		mov	r3, #-1
 509 0038 06E0     		b	.L25
 510              	.L24:
 154:syscalls.c    **** 	}
 155:syscalls.c    **** 
 156:syscalls.c    **** 	heap_end += incr;
 511              		.loc 1 156 0
 512 003a 054B     		ldr	r3, .L26
 513 003c 1A68     		ldr	r2, [r3]
 514 003e 7B68     		ldr	r3, [r7, #4]
 515 0040 1344     		add	r3, r3, r2
 516 0042 034A     		ldr	r2, .L26
 517 0044 1360     		str	r3, [r2]
 157:syscalls.c    **** 
 158:syscalls.c    **** 	return (caddr_t) prev_heap_end;
 518              		.loc 1 158 0
 519 0046 FB68     		ldr	r3, [r7, #12]
 520              	.L25:
 159:syscalls.c    **** }
 521              		.loc 1 159 0
 522 0048 1846     		mov	r0, r3
 523 004a 1037     		adds	r7, r7, #16
 524              	.LCFI42:
 525              		.cfi_def_cfa_offset 8
 526 004c BD46     		mov	sp, r7
 527              	.LCFI43:
 528              		.cfi_def_cfa_register 13
 529              		@ sp needed
 530 004e 80BD     		pop	{r7, pc}
 531              	.L27:
 532              		.align	2
 533              	.L26:
 534 0050 00000000 		.word	heap_end.10174
 535 0054 00000000 		.word	end
 536              		.cfi_endproc
 537              	.LFE162:
 539              		.section	.text._close,"ax",%progbits
 540              		.align	1
 541              		.global	_close
 542              		.syntax unified
 543              		.thumb
 544              		.thumb_func
 545              		.fpu fpv5-sp-d16
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s 			page 13


 547              	_close:
 548              	.LFB163:
 160:syscalls.c    **** 
 161:syscalls.c    **** int _close(int file)
 162:syscalls.c    **** {
 549              		.loc 1 162 0
 550              		.cfi_startproc
 551              		@ args = 0, pretend = 0, frame = 8
 552              		@ frame_needed = 1, uses_anonymous_args = 0
 553              		@ link register save eliminated.
 554 0000 80B4     		push	{r7}
 555              	.LCFI44:
 556              		.cfi_def_cfa_offset 4
 557              		.cfi_offset 7, -4
 558 0002 83B0     		sub	sp, sp, #12
 559              	.LCFI45:
 560              		.cfi_def_cfa_offset 16
 561 0004 00AF     		add	r7, sp, #0
 562              	.LCFI46:
 563              		.cfi_def_cfa_register 7
 564 0006 7860     		str	r0, [r7, #4]
 163:syscalls.c    **** 	return -1;
 565              		.loc 1 163 0
 566 0008 4FF0FF33 		mov	r3, #-1
 164:syscalls.c    **** }
 567              		.loc 1 164 0
 568 000c 1846     		mov	r0, r3
 569 000e 0C37     		adds	r7, r7, #12
 570              	.LCFI47:
 571              		.cfi_def_cfa_offset 4
 572 0010 BD46     		mov	sp, r7
 573              	.LCFI48:
 574              		.cfi_def_cfa_register 13
 575              		@ sp needed
 576 0012 5DF8047B 		ldr	r7, [sp], #4
 577              	.LCFI49:
 578              		.cfi_restore 7
 579              		.cfi_def_cfa_offset 0
 580 0016 7047     		bx	lr
 581              		.cfi_endproc
 582              	.LFE163:
 584              		.section	.text._fstat,"ax",%progbits
 585              		.align	1
 586              		.global	_fstat
 587              		.syntax unified
 588              		.thumb
 589              		.thumb_func
 590              		.fpu fpv5-sp-d16
 592              	_fstat:
 593              	.LFB164:
 165:syscalls.c    **** 
 166:syscalls.c    **** 
 167:syscalls.c    **** int _fstat(int file, struct stat *st)
 168:syscalls.c    **** {
 594              		.loc 1 168 0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s 			page 14


 597              		@ frame_needed = 1, uses_anonymous_args = 0
 598              		@ link register save eliminated.
 599 0000 80B4     		push	{r7}
 600              	.LCFI50:
 601              		.cfi_def_cfa_offset 4
 602              		.cfi_offset 7, -4
 603 0002 83B0     		sub	sp, sp, #12
 604              	.LCFI51:
 605              		.cfi_def_cfa_offset 16
 606 0004 00AF     		add	r7, sp, #0
 607              	.LCFI52:
 608              		.cfi_def_cfa_register 7
 609 0006 7860     		str	r0, [r7, #4]
 610 0008 3960     		str	r1, [r7]
 169:syscalls.c    **** 	st->st_mode = S_IFCHR;
 611              		.loc 1 169 0
 612 000a 3B68     		ldr	r3, [r7]
 613 000c 4FF40052 		mov	r2, #8192
 614 0010 5A60     		str	r2, [r3, #4]
 170:syscalls.c    **** 	return 0;
 615              		.loc 1 170 0
 616 0012 0023     		movs	r3, #0
 171:syscalls.c    **** }
 617              		.loc 1 171 0
 618 0014 1846     		mov	r0, r3
 619 0016 0C37     		adds	r7, r7, #12
 620              	.LCFI53:
 621              		.cfi_def_cfa_offset 4
 622 0018 BD46     		mov	sp, r7
 623              	.LCFI54:
 624              		.cfi_def_cfa_register 13
 625              		@ sp needed
 626 001a 5DF8047B 		ldr	r7, [sp], #4
 627              	.LCFI55:
 628              		.cfi_restore 7
 629              		.cfi_def_cfa_offset 0
 630 001e 7047     		bx	lr
 631              		.cfi_endproc
 632              	.LFE164:
 634              		.section	.text._isatty,"ax",%progbits
 635              		.align	1
 636              		.global	_isatty
 637              		.syntax unified
 638              		.thumb
 639              		.thumb_func
 640              		.fpu fpv5-sp-d16
 642              	_isatty:
 643              	.LFB165:
 172:syscalls.c    **** 
 173:syscalls.c    **** int _isatty(int file)
 174:syscalls.c    **** {
 644              		.loc 1 174 0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 8
 647              		@ frame_needed = 1, uses_anonymous_args = 0
 648              		@ link register save eliminated.
 649 0000 80B4     		push	{r7}
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s 			page 15


 650              	.LCFI56:
 651              		.cfi_def_cfa_offset 4
 652              		.cfi_offset 7, -4
 653 0002 83B0     		sub	sp, sp, #12
 654              	.LCFI57:
 655              		.cfi_def_cfa_offset 16
 656 0004 00AF     		add	r7, sp, #0
 657              	.LCFI58:
 658              		.cfi_def_cfa_register 7
 659 0006 7860     		str	r0, [r7, #4]
 175:syscalls.c    **** 	return 1;
 660              		.loc 1 175 0
 661 0008 0123     		movs	r3, #1
 176:syscalls.c    **** }
 662              		.loc 1 176 0
 663 000a 1846     		mov	r0, r3
 664 000c 0C37     		adds	r7, r7, #12
 665              	.LCFI59:
 666              		.cfi_def_cfa_offset 4
 667 000e BD46     		mov	sp, r7
 668              	.LCFI60:
 669              		.cfi_def_cfa_register 13
 670              		@ sp needed
 671 0010 5DF8047B 		ldr	r7, [sp], #4
 672              	.LCFI61:
 673              		.cfi_restore 7
 674              		.cfi_def_cfa_offset 0
 675 0014 7047     		bx	lr
 676              		.cfi_endproc
 677              	.LFE165:
 679              		.section	.text._lseek,"ax",%progbits
 680              		.align	1
 681              		.global	_lseek
 682              		.syntax unified
 683              		.thumb
 684              		.thumb_func
 685              		.fpu fpv5-sp-d16
 687              	_lseek:
 688              	.LFB166:
 177:syscalls.c    **** 
 178:syscalls.c    **** int _lseek(int file, int ptr, int dir)
 179:syscalls.c    **** {
 689              		.loc 1 179 0
 690              		.cfi_startproc
 691              		@ args = 0, pretend = 0, frame = 16
 692              		@ frame_needed = 1, uses_anonymous_args = 0
 693              		@ link register save eliminated.
 694 0000 80B4     		push	{r7}
 695              	.LCFI62:
 696              		.cfi_def_cfa_offset 4
 697              		.cfi_offset 7, -4
 698 0002 85B0     		sub	sp, sp, #20
 699              	.LCFI63:
 700              		.cfi_def_cfa_offset 24
 701 0004 00AF     		add	r7, sp, #0
 702              	.LCFI64:
 703              		.cfi_def_cfa_register 7
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s 			page 16


 704 0006 F860     		str	r0, [r7, #12]
 705 0008 B960     		str	r1, [r7, #8]
 706 000a 7A60     		str	r2, [r7, #4]
 180:syscalls.c    **** 	return 0;
 707              		.loc 1 180 0
 708 000c 0023     		movs	r3, #0
 181:syscalls.c    **** }
 709              		.loc 1 181 0
 710 000e 1846     		mov	r0, r3
 711 0010 1437     		adds	r7, r7, #20
 712              	.LCFI65:
 713              		.cfi_def_cfa_offset 4
 714 0012 BD46     		mov	sp, r7
 715              	.LCFI66:
 716              		.cfi_def_cfa_register 13
 717              		@ sp needed
 718 0014 5DF8047B 		ldr	r7, [sp], #4
 719              	.LCFI67:
 720              		.cfi_restore 7
 721              		.cfi_def_cfa_offset 0
 722 0018 7047     		bx	lr
 723              		.cfi_endproc
 724              	.LFE166:
 726              		.section	.text._open,"ax",%progbits
 727              		.align	1
 728              		.global	_open
 729              		.syntax unified
 730              		.thumb
 731              		.thumb_func
 732              		.fpu fpv5-sp-d16
 734              	_open:
 735              	.LFB167:
 182:syscalls.c    **** 
 183:syscalls.c    **** int _open(char *path, int flags, ...)
 184:syscalls.c    **** {
 736              		.loc 1 184 0
 737              		.cfi_startproc
 738              		@ args = 4, pretend = 12, frame = 8
 739              		@ frame_needed = 1, uses_anonymous_args = 1
 740              		@ link register save eliminated.
 741 0000 0EB4     		push	{r1, r2, r3}
 742              	.LCFI68:
 743              		.cfi_def_cfa_offset 12
 744              		.cfi_offset 1, -12
 745              		.cfi_offset 2, -8
 746              		.cfi_offset 3, -4
 747 0002 80B4     		push	{r7}
 748              	.LCFI69:
 749              		.cfi_def_cfa_offset 16
 750              		.cfi_offset 7, -16
 751 0004 82B0     		sub	sp, sp, #8
 752              	.LCFI70:
 753              		.cfi_def_cfa_offset 24
 754 0006 00AF     		add	r7, sp, #0
 755              	.LCFI71:
 756              		.cfi_def_cfa_register 7
 757 0008 7860     		str	r0, [r7, #4]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s 			page 17


 185:syscalls.c    **** 	/* Pretend like we always fail */
 186:syscalls.c    **** 	return -1;
 758              		.loc 1 186 0
 759 000a 4FF0FF33 		mov	r3, #-1
 187:syscalls.c    **** }
 760              		.loc 1 187 0
 761 000e 1846     		mov	r0, r3
 762 0010 0837     		adds	r7, r7, #8
 763              	.LCFI72:
 764              		.cfi_def_cfa_offset 16
 765 0012 BD46     		mov	sp, r7
 766              	.LCFI73:
 767              		.cfi_def_cfa_register 13
 768              		@ sp needed
 769 0014 5DF8047B 		ldr	r7, [sp], #4
 770              	.LCFI74:
 771              		.cfi_restore 7
 772              		.cfi_def_cfa_offset 12
 773 0018 03B0     		add	sp, sp, #12
 774              	.LCFI75:
 775              		.cfi_restore 3
 776              		.cfi_restore 2
 777              		.cfi_restore 1
 778              		.cfi_def_cfa_offset 0
 779 001a 7047     		bx	lr
 780              		.cfi_endproc
 781              	.LFE167:
 783              		.section	.text._wait,"ax",%progbits
 784              		.align	1
 785              		.global	_wait
 786              		.syntax unified
 787              		.thumb
 788              		.thumb_func
 789              		.fpu fpv5-sp-d16
 791              	_wait:
 792              	.LFB168:
 188:syscalls.c    **** 
 189:syscalls.c    **** int _wait(int *status)
 190:syscalls.c    **** {
 793              		.loc 1 190 0
 794              		.cfi_startproc
 795              		@ args = 0, pretend = 0, frame = 8
 796              		@ frame_needed = 1, uses_anonymous_args = 0
 797 0000 80B5     		push	{r7, lr}
 798              	.LCFI76:
 799              		.cfi_def_cfa_offset 8
 800              		.cfi_offset 7, -8
 801              		.cfi_offset 14, -4
 802 0002 82B0     		sub	sp, sp, #8
 803              	.LCFI77:
 804              		.cfi_def_cfa_offset 16
 805 0004 00AF     		add	r7, sp, #0
 806              	.LCFI78:
 807              		.cfi_def_cfa_register 7
 808 0006 7860     		str	r0, [r7, #4]
 191:syscalls.c    **** 	errno = ECHILD;
 809              		.loc 1 191 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s 			page 18


 810 0008 FFF7FEFF 		bl	__errno
 811 000c 0246     		mov	r2, r0
 812 000e 0A23     		movs	r3, #10
 813 0010 1360     		str	r3, [r2]
 192:syscalls.c    **** 	return -1;
 814              		.loc 1 192 0
 815 0012 4FF0FF33 		mov	r3, #-1
 193:syscalls.c    **** }
 816              		.loc 1 193 0
 817 0016 1846     		mov	r0, r3
 818 0018 0837     		adds	r7, r7, #8
 819              	.LCFI79:
 820              		.cfi_def_cfa_offset 8
 821 001a BD46     		mov	sp, r7
 822              	.LCFI80:
 823              		.cfi_def_cfa_register 13
 824              		@ sp needed
 825 001c 80BD     		pop	{r7, pc}
 826              		.cfi_endproc
 827              	.LFE168:
 829              		.section	.text._unlink,"ax",%progbits
 830              		.align	1
 831              		.global	_unlink
 832              		.syntax unified
 833              		.thumb
 834              		.thumb_func
 835              		.fpu fpv5-sp-d16
 837              	_unlink:
 838              	.LFB169:
 194:syscalls.c    **** 
 195:syscalls.c    **** int _unlink(char *name)
 196:syscalls.c    **** {
 839              		.loc 1 196 0
 840              		.cfi_startproc
 841              		@ args = 0, pretend = 0, frame = 8
 842              		@ frame_needed = 1, uses_anonymous_args = 0
 843 0000 80B5     		push	{r7, lr}
 844              	.LCFI81:
 845              		.cfi_def_cfa_offset 8
 846              		.cfi_offset 7, -8
 847              		.cfi_offset 14, -4
 848 0002 82B0     		sub	sp, sp, #8
 849              	.LCFI82:
 850              		.cfi_def_cfa_offset 16
 851 0004 00AF     		add	r7, sp, #0
 852              	.LCFI83:
 853              		.cfi_def_cfa_register 7
 854 0006 7860     		str	r0, [r7, #4]
 197:syscalls.c    **** 	errno = ENOENT;
 855              		.loc 1 197 0
 856 0008 FFF7FEFF 		bl	__errno
 857 000c 0246     		mov	r2, r0
 858 000e 0223     		movs	r3, #2
 859 0010 1360     		str	r3, [r2]
 198:syscalls.c    **** 	return -1;
 860              		.loc 1 198 0
 861 0012 4FF0FF33 		mov	r3, #-1
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s 			page 19


 199:syscalls.c    **** }
 862              		.loc 1 199 0
 863 0016 1846     		mov	r0, r3
 864 0018 0837     		adds	r7, r7, #8
 865              	.LCFI84:
 866              		.cfi_def_cfa_offset 8
 867 001a BD46     		mov	sp, r7
 868              	.LCFI85:
 869              		.cfi_def_cfa_register 13
 870              		@ sp needed
 871 001c 80BD     		pop	{r7, pc}
 872              		.cfi_endproc
 873              	.LFE169:
 875              		.section	.text._times,"ax",%progbits
 876              		.align	1
 877              		.global	_times
 878              		.syntax unified
 879              		.thumb
 880              		.thumb_func
 881              		.fpu fpv5-sp-d16
 883              	_times:
 884              	.LFB170:
 200:syscalls.c    **** 
 201:syscalls.c    **** int _times(struct tms *buf)
 202:syscalls.c    **** {
 885              		.loc 1 202 0
 886              		.cfi_startproc
 887              		@ args = 0, pretend = 0, frame = 8
 888              		@ frame_needed = 1, uses_anonymous_args = 0
 889              		@ link register save eliminated.
 890 0000 80B4     		push	{r7}
 891              	.LCFI86:
 892              		.cfi_def_cfa_offset 4
 893              		.cfi_offset 7, -4
 894 0002 83B0     		sub	sp, sp, #12
 895              	.LCFI87:
 896              		.cfi_def_cfa_offset 16
 897 0004 00AF     		add	r7, sp, #0
 898              	.LCFI88:
 899              		.cfi_def_cfa_register 7
 900 0006 7860     		str	r0, [r7, #4]
 203:syscalls.c    **** 	return -1;
 901              		.loc 1 203 0
 902 0008 4FF0FF33 		mov	r3, #-1
 204:syscalls.c    **** }
 903              		.loc 1 204 0
 904 000c 1846     		mov	r0, r3
 905 000e 0C37     		adds	r7, r7, #12
 906              	.LCFI89:
 907              		.cfi_def_cfa_offset 4
 908 0010 BD46     		mov	sp, r7
 909              	.LCFI90:
 910              		.cfi_def_cfa_register 13
 911              		@ sp needed
 912 0012 5DF8047B 		ldr	r7, [sp], #4
 913              	.LCFI91:
 914              		.cfi_restore 7
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s 			page 20


 915              		.cfi_def_cfa_offset 0
 916 0016 7047     		bx	lr
 917              		.cfi_endproc
 918              	.LFE170:
 920              		.section	.text._stat,"ax",%progbits
 921              		.align	1
 922              		.global	_stat
 923              		.syntax unified
 924              		.thumb
 925              		.thumb_func
 926              		.fpu fpv5-sp-d16
 928              	_stat:
 929              	.LFB171:
 205:syscalls.c    **** 
 206:syscalls.c    **** int _stat(char *file, struct stat *st)
 207:syscalls.c    **** {
 930              		.loc 1 207 0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 8
 933              		@ frame_needed = 1, uses_anonymous_args = 0
 934              		@ link register save eliminated.
 935 0000 80B4     		push	{r7}
 936              	.LCFI92:
 937              		.cfi_def_cfa_offset 4
 938              		.cfi_offset 7, -4
 939 0002 83B0     		sub	sp, sp, #12
 940              	.LCFI93:
 941              		.cfi_def_cfa_offset 16
 942 0004 00AF     		add	r7, sp, #0
 943              	.LCFI94:
 944              		.cfi_def_cfa_register 7
 945 0006 7860     		str	r0, [r7, #4]
 946 0008 3960     		str	r1, [r7]
 208:syscalls.c    **** 	st->st_mode = S_IFCHR;
 947              		.loc 1 208 0
 948 000a 3B68     		ldr	r3, [r7]
 949 000c 4FF40052 		mov	r2, #8192
 950 0010 5A60     		str	r2, [r3, #4]
 209:syscalls.c    **** 	return 0;
 951              		.loc 1 209 0
 952 0012 0023     		movs	r3, #0
 210:syscalls.c    **** }
 953              		.loc 1 210 0
 954 0014 1846     		mov	r0, r3
 955 0016 0C37     		adds	r7, r7, #12
 956              	.LCFI95:
 957              		.cfi_def_cfa_offset 4
 958 0018 BD46     		mov	sp, r7
 959              	.LCFI96:
 960              		.cfi_def_cfa_register 13
 961              		@ sp needed
 962 001a 5DF8047B 		ldr	r7, [sp], #4
 963              	.LCFI97:
 964              		.cfi_restore 7
 965              		.cfi_def_cfa_offset 0
 966 001e 7047     		bx	lr
 967              		.cfi_endproc
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s 			page 21


 968              	.LFE171:
 970              		.section	.text._link,"ax",%progbits
 971              		.align	1
 972              		.global	_link
 973              		.syntax unified
 974              		.thumb
 975              		.thumb_func
 976              		.fpu fpv5-sp-d16
 978              	_link:
 979              	.LFB172:
 211:syscalls.c    **** 
 212:syscalls.c    **** int _link(char *old, char *new)
 213:syscalls.c    **** {
 980              		.loc 1 213 0
 981              		.cfi_startproc
 982              		@ args = 0, pretend = 0, frame = 8
 983              		@ frame_needed = 1, uses_anonymous_args = 0
 984 0000 80B5     		push	{r7, lr}
 985              	.LCFI98:
 986              		.cfi_def_cfa_offset 8
 987              		.cfi_offset 7, -8
 988              		.cfi_offset 14, -4
 989 0002 82B0     		sub	sp, sp, #8
 990              	.LCFI99:
 991              		.cfi_def_cfa_offset 16
 992 0004 00AF     		add	r7, sp, #0
 993              	.LCFI100:
 994              		.cfi_def_cfa_register 7
 995 0006 7860     		str	r0, [r7, #4]
 996 0008 3960     		str	r1, [r7]
 214:syscalls.c    **** 	errno = EMLINK;
 997              		.loc 1 214 0
 998 000a FFF7FEFF 		bl	__errno
 999 000e 0246     		mov	r2, r0
 1000 0010 1F23     		movs	r3, #31
 1001 0012 1360     		str	r3, [r2]
 215:syscalls.c    **** 	return -1;
 1002              		.loc 1 215 0
 1003 0014 4FF0FF33 		mov	r3, #-1
 216:syscalls.c    **** }
 1004              		.loc 1 216 0
 1005 0018 1846     		mov	r0, r3
 1006 001a 0837     		adds	r7, r7, #8
 1007              	.LCFI101:
 1008              		.cfi_def_cfa_offset 8
 1009 001c BD46     		mov	sp, r7
 1010              	.LCFI102:
 1011              		.cfi_def_cfa_register 13
 1012              		@ sp needed
 1013 001e 80BD     		pop	{r7, pc}
 1014              		.cfi_endproc
 1015              	.LFE172:
 1017              		.section	.text._fork,"ax",%progbits
 1018              		.align	1
 1019              		.global	_fork
 1020              		.syntax unified
 1021              		.thumb
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s 			page 22


 1022              		.thumb_func
 1023              		.fpu fpv5-sp-d16
 1025              	_fork:
 1026              	.LFB173:
 217:syscalls.c    **** 
 218:syscalls.c    **** int _fork(void)
 219:syscalls.c    **** {
 1027              		.loc 1 219 0
 1028              		.cfi_startproc
 1029              		@ args = 0, pretend = 0, frame = 0
 1030              		@ frame_needed = 1, uses_anonymous_args = 0
 1031 0000 80B5     		push	{r7, lr}
 1032              	.LCFI103:
 1033              		.cfi_def_cfa_offset 8
 1034              		.cfi_offset 7, -8
 1035              		.cfi_offset 14, -4
 1036 0002 00AF     		add	r7, sp, #0
 1037              	.LCFI104:
 1038              		.cfi_def_cfa_register 7
 220:syscalls.c    **** 	errno = EAGAIN;
 1039              		.loc 1 220 0
 1040 0004 FFF7FEFF 		bl	__errno
 1041 0008 0246     		mov	r2, r0
 1042 000a 0B23     		movs	r3, #11
 1043 000c 1360     		str	r3, [r2]
 221:syscalls.c    **** 	return -1;
 1044              		.loc 1 221 0
 1045 000e 4FF0FF33 		mov	r3, #-1
 222:syscalls.c    **** }
 1046              		.loc 1 222 0
 1047 0012 1846     		mov	r0, r3
 1048 0014 80BD     		pop	{r7, pc}
 1049              		.cfi_endproc
 1050              	.LFE173:
 1052              		.section	.text._execve,"ax",%progbits
 1053              		.align	1
 1054              		.global	_execve
 1055              		.syntax unified
 1056              		.thumb
 1057              		.thumb_func
 1058              		.fpu fpv5-sp-d16
 1060              	_execve:
 1061              	.LFB174:
 223:syscalls.c    **** 
 224:syscalls.c    **** int _execve(char *name, char **argv, char **env)
 225:syscalls.c    **** {
 1062              		.loc 1 225 0
 1063              		.cfi_startproc
 1064              		@ args = 0, pretend = 0, frame = 16
 1065              		@ frame_needed = 1, uses_anonymous_args = 0
 1066 0000 80B5     		push	{r7, lr}
 1067              	.LCFI105:
 1068              		.cfi_def_cfa_offset 8
 1069              		.cfi_offset 7, -8
 1070              		.cfi_offset 14, -4
 1071 0002 84B0     		sub	sp, sp, #16
 1072              	.LCFI106:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s 			page 23


 1073              		.cfi_def_cfa_offset 24
 1074 0004 00AF     		add	r7, sp, #0
 1075              	.LCFI107:
 1076              		.cfi_def_cfa_register 7
 1077 0006 F860     		str	r0, [r7, #12]
 1078 0008 B960     		str	r1, [r7, #8]
 1079 000a 7A60     		str	r2, [r7, #4]
 226:syscalls.c    **** 	errno = ENOMEM;
 1080              		.loc 1 226 0
 1081 000c FFF7FEFF 		bl	__errno
 1082 0010 0246     		mov	r2, r0
 1083 0012 0C23     		movs	r3, #12
 1084 0014 1360     		str	r3, [r2]
 227:syscalls.c    **** 	return -1;
 1085              		.loc 1 227 0
 1086 0016 4FF0FF33 		mov	r3, #-1
 228:syscalls.c    **** }
 1087              		.loc 1 228 0
 1088 001a 1846     		mov	r0, r3
 1089 001c 1037     		adds	r7, r7, #16
 1090              	.LCFI108:
 1091              		.cfi_def_cfa_offset 8
 1092 001e BD46     		mov	sp, r7
 1093              	.LCFI109:
 1094              		.cfi_def_cfa_register 13
 1095              		@ sp needed
 1096 0020 80BD     		pop	{r7, pc}
 1097              		.cfi_endproc
 1098              	.LFE174:
 1100              		.weak	__io_putchar
 1101              		.weak	__io_getchar
 1102              		.text
 1103              	.Letext0:
 1104              		.file 2 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/machine/_default_types
 1105              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/lock.h"
 1106              		.file 4 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_types.h"
 1107              		.file 5 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 1108              		.file 6 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/reent.h"
 1109              		.file 7 "<built-in>"
 1110              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_stdint.h"
 1111              		.file 9 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_timeval.h"
 1112              		.file 10 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/types.h"
 1113              		.file 11 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/time.h"
 1114              		.file 12 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/stat.h"
 1115              		.file 13 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/stdlib.h"
 1116              		.file 14 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/errno.h"
 1117              		.file 15 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stdarg.
 1118              		.file 16 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/stdio.h"
 1119              		.file 17 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/times.h"
 1120              		.file 18 "Drivers/CMSIS/Include/core_cm7.h"
 1121              		.file 19 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1122              		.file 20 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 1123              		.file 21 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1124              		.file 22 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 1125              		.file 23 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 syscalls.c
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:22     .bss.__env:0000000000000000 __env
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:19     .bss.__env:0000000000000000 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:29     .data.environ:0000000000000000 environ
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:26     .data.environ:0000000000000000 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:32     .text.vprint:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:39     .text.vprint:0000000000000000 vprint
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:92     .text.vprint:0000000000000044 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:97     .text.my_printf:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:104    .text.my_printf:0000000000000000 my_printf
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:161    .text.initialise_monitor_handles:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:168    .text.initialise_monitor_handles:0000000000000000 initialise_monitor_handles
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:197    .text._getpid:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:204    .text._getpid:0000000000000000 _getpid
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:235    .text._kill:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:242    .text._kill:0000000000000000 _kill
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:282    .text._exit:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:289    .text._exit:0000000000000000 _exit
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:318    .text._read:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:325    .text._read:0000000000000000 _read
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:384    .text._write:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:391    .text._write:0000000000000000 _write
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:449    .bss.heap_end.10174:0000000000000000 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:452    .bss.heap_end.10174:0000000000000000 heap_end.10174
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:455    .text._sbrk:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:462    .text._sbrk:0000000000000000 _sbrk
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:534    .text._sbrk:0000000000000050 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:540    .text._close:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:547    .text._close:0000000000000000 _close
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:585    .text._fstat:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:592    .text._fstat:0000000000000000 _fstat
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:635    .text._isatty:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:642    .text._isatty:0000000000000000 _isatty
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:680    .text._lseek:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:687    .text._lseek:0000000000000000 _lseek
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:727    .text._open:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:734    .text._open:0000000000000000 _open
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:784    .text._wait:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:791    .text._wait:0000000000000000 _wait
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:830    .text._unlink:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:837    .text._unlink:0000000000000000 _unlink
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:876    .text._times:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:883    .text._times:0000000000000000 _times
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:921    .text._stat:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:928    .text._stat:0000000000000000 _stat
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:971    .text._link:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:978    .text._link:0000000000000000 _link
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:1018   .text._fork:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:1025   .text._fork:0000000000000000 _fork
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:1053   .text._execve:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s:1060   .text._execve:0000000000000000 _execve

UNDEFINED SYMBOLS
vsprintf
strlen
HAL_UART_Transmit
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccZ13kiF.s 			page 25


huart6
__errno
__io_getchar
__io_putchar
end
