ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"Ft_Esd_Clock__Generated.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Ft_Esd_Theme_GetBackColor,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	Ft_Esd_Theme_GetBackColor:
  25              	.LFB4:
  26              		.file 1 "FT_Esd_Widgets/FT_Esd_Theme.h"
   1:FT_Esd_Widgets/FT_Esd_Theme.h **** 
   2:FT_Esd_Widgets/FT_Esd_Theme.h **** #ifndef FT_ESD_THEME_H
   3:FT_Esd_Widgets/FT_Esd_Theme.h **** #define FT_ESD_THEME_H
   4:FT_Esd_Widgets/FT_Esd_Theme.h **** #include "FT_DataTypes.h"
   5:FT_Esd_Widgets/FT_Esd_Theme.h **** #include "Ft_Esd.h"
   6:FT_Esd_Widgets/FT_Esd_Theme.h **** 
   7:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_CATEGORY(EsdTheme, DisplayName = "ESD Theme")
   8:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_CATEGORY(EsdTheme_Themes, DisplayName = "Themes", Category = EsdTheme)
   9:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  10:FT_Esd_Widgets/FT_Esd_Theme.h **** typedef unsigned int ft_uint32_t;
  11:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  12:FT_Esd_Widgets/FT_Esd_Theme.h **** typedef struct
  13:FT_Esd_Widgets/FT_Esd_Theme.h **** {
  14:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t ClearColor;
  15:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t BackColor;
  16:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t TextColor;
  17:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t ButtonTextColor;
  18:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t DefaultColor;
  19:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t PrimaryColor;
  20:FT_Esd_Widgets/FT_Esd_Theme.h **** } Ft_Esd_Theme;
  21:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  22:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_TYPE(Ft_Esd_Theme *, Native = Pointer, Edit = Library)
  23:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  24:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_RENDER(Ft_Esd_Theme_SetCurrent, DisplayName = "Set Current Theme", Category = EsdTheme, Include
  25:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *)
  26:FT_Esd_Widgets/FT_Esd_Theme.h **** void Ft_Esd_Theme_SetCurrent(Ft_Esd_Theme *theme);
  27:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  28:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetCurrent, DisplayName = "Current Theme", Category = EsdTheme, Type = Ft
  29:FT_Esd_Widgets/FT_Esd_Theme.h **** Ft_Esd_Theme *Ft_Esd_Theme_GetCurrent();
  30:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  31:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetClearColor, DisplayName = "Get Clear Color", Category = EsdTheme, Type
  32:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 2


  33:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetClearColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_Es
  34:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  35:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetBackColor, DisplayName = "Get Back Color", Category = EsdTheme, Type =
  36:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  37:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetBackColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_Esd
  27              		.loc 1 37 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
  43              		.loc 1 37 0
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 002B     		cmp	r3, #0
  46 000c 04D1     		bne	.L2
  47              		.loc 1 37 0 is_stmt 0 discriminator 1
  48 000e FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
  49 0012 0346     		mov	r3, r0
  50 0014 5B68     		ldr	r3, [r3, #4]
  51 0016 01E0     		b	.L3
  52              	.L2:
  53              		.loc 1 37 0 discriminator 2
  54 0018 7B68     		ldr	r3, [r7, #4]
  55 001a 5B68     		ldr	r3, [r3, #4]
  56              	.L3:
  57              		.loc 1 37 0
  58 001c 1846     		mov	r0, r3
  59 001e 0837     		adds	r7, r7, #8
  60              	.LCFI3:
  61              		.cfi_def_cfa_offset 8
  62 0020 BD46     		mov	sp, r7
  63              	.LCFI4:
  64              		.cfi_def_cfa_register 13
  65              		@ sp needed
  66 0022 80BD     		pop	{r7, pc}
  67              		.cfi_endproc
  68              	.LFE4:
  70              		.section	.text.Ft_Esd_Theme_GetTextColor,"ax",%progbits
  71              		.align	1
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  75              		.fpu fpv5-sp-d16
  77              	Ft_Esd_Theme_GetTextColor:
  78              	.LFB5:
  38:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  39:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetTextColor, DisplayName = "Get Text Color", Category = EsdTheme, Type =
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 3


  40:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  41:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetTextColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_Esd
  79              		.loc 1 41 0 is_stmt 1
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 8
  82              		@ frame_needed = 1, uses_anonymous_args = 0
  83 0000 80B5     		push	{r7, lr}
  84              	.LCFI5:
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 7, -8
  87              		.cfi_offset 14, -4
  88 0002 82B0     		sub	sp, sp, #8
  89              	.LCFI6:
  90              		.cfi_def_cfa_offset 16
  91 0004 00AF     		add	r7, sp, #0
  92              	.LCFI7:
  93              		.cfi_def_cfa_register 7
  94 0006 7860     		str	r0, [r7, #4]
  95              		.loc 1 41 0
  96 0008 7B68     		ldr	r3, [r7, #4]
  97 000a 002B     		cmp	r3, #0
  98 000c 04D1     		bne	.L5
  99              		.loc 1 41 0 is_stmt 0 discriminator 1
 100 000e FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
 101 0012 0346     		mov	r3, r0
 102 0014 9B68     		ldr	r3, [r3, #8]
 103 0016 01E0     		b	.L6
 104              	.L5:
 105              		.loc 1 41 0 discriminator 2
 106 0018 7B68     		ldr	r3, [r7, #4]
 107 001a 9B68     		ldr	r3, [r3, #8]
 108              	.L6:
 109              		.loc 1 41 0
 110 001c 1846     		mov	r0, r3
 111 001e 0837     		adds	r7, r7, #8
 112              	.LCFI8:
 113              		.cfi_def_cfa_offset 8
 114 0020 BD46     		mov	sp, r7
 115              	.LCFI9:
 116              		.cfi_def_cfa_register 13
 117              		@ sp needed
 118 0022 80BD     		pop	{r7, pc}
 119              		.cfi_endproc
 120              	.LFE5:
 122              		.section	.text.Ft_Esd_Theme_GetPrimaryColor,"ax",%progbits
 123              		.align	1
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 127              		.fpu fpv5-sp-d16
 129              	Ft_Esd_Theme_GetPrimaryColor:
 130              	.LFB8:
  42:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  43:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetButtonTextColor, DisplayName = "Get Button Text Color", Category = Esd
  44:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  45:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetButtonTextColor(Ft_Esd_Theme *theme) { if (!theme) return 
  46:FT_Esd_Widgets/FT_Esd_Theme.h **** 
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 4


  47:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetCurrentColor, DisplayName = "Get Default Color", Category = EsdTheme, 
  48:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  49:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetCurrentColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_
  50:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  51:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetPrimaryColor, DisplayName = "Get Primary Color", Category = EsdTheme, 
  52:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  53:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetPrimaryColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_
 131              		.loc 1 53 0 is_stmt 1
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 8
 134              		@ frame_needed = 1, uses_anonymous_args = 0
 135 0000 80B5     		push	{r7, lr}
 136              	.LCFI10:
 137              		.cfi_def_cfa_offset 8
 138              		.cfi_offset 7, -8
 139              		.cfi_offset 14, -4
 140 0002 82B0     		sub	sp, sp, #8
 141              	.LCFI11:
 142              		.cfi_def_cfa_offset 16
 143 0004 00AF     		add	r7, sp, #0
 144              	.LCFI12:
 145              		.cfi_def_cfa_register 7
 146 0006 7860     		str	r0, [r7, #4]
 147              		.loc 1 53 0
 148 0008 7B68     		ldr	r3, [r7, #4]
 149 000a 002B     		cmp	r3, #0
 150 000c 04D1     		bne	.L8
 151              		.loc 1 53 0 is_stmt 0 discriminator 1
 152 000e FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
 153 0012 0346     		mov	r3, r0
 154 0014 5B69     		ldr	r3, [r3, #20]
 155 0016 01E0     		b	.L9
 156              	.L8:
 157              		.loc 1 53 0 discriminator 2
 158 0018 7B68     		ldr	r3, [r7, #4]
 159 001a 5B69     		ldr	r3, [r3, #20]
 160              	.L9:
 161              		.loc 1 53 0
 162 001c 1846     		mov	r0, r3
 163 001e 0837     		adds	r7, r7, #8
 164              	.LCFI13:
 165              		.cfi_def_cfa_offset 8
 166 0020 BD46     		mov	sp, r7
 167              	.LCFI14:
 168              		.cfi_def_cfa_register 13
 169              		@ sp needed
 170 0022 80BD     		pop	{r7, pc}
 171              		.cfi_endproc
 172              	.LFE8:
 174              		.section	.text.Ft_Esd_BitmapCell_GetInfo,"ax",%progbits
 175              		.align	1
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 179              		.fpu fpv5-sp-d16
 181              	Ft_Esd_BitmapCell_GetInfo:
 182              	.LFB9:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 5


 183              		.file 2 "FT_Esd_Framework/Ft_Esd_BitmapInfo.h"
   1:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** /*
   2:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** Bitmap info structure
   3:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** */
   4:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
   5:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #ifndef FT_ESD_BITMAPINFO_H
   6:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #define FT_ESD_BITMAPINFO_H
   7:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
   8:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "Ft_Esd.h"
   9:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "FT_DataTypes.h"
  10:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "Ft_Esd_GpuAlloc.h"
  11:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  12:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapInfo, Native = Struct) // TODO: Struct support, expose values
  13:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  14:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  15:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Width;
  16:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Height;
  17:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Stride;
  18:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Format;
  19:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Size;
  20:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	const char *File;
  21:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  22:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Handle pointing to the address in RAM_G if it is allocated
  23:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_GpuHandle GpuHandle;
  24:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  25:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Bitmap handle that is being used
  26:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_uint32_t BitmapHandle;
  27:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  28:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	const char *PaletteFile;
  29:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_GpuHandle PaletteGpuHandle;
  30:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  31:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// When this is set, the allocated ram is not free'd automatically
  32:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Use Ft_Esd_GpuAlloc_Free(GpuAlloc, GpuHandle) to free the GPU ram manually
  33:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_bool_t Persistent;
  34:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  35:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_BitmapInfo;
  36:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  37:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapInfo *, Native = Pointer, Edit = Library)
  38:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  39:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapCell, Native = Struct) // TODO: Struct support, expose values
  40:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  41:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  42:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapInfo *Info;
  43:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Cell;
  44:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_BitmapCell;
  45:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  46:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapCell *, Native = Pointer, Edit = Library)
  47:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  48:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // Attempts to load the specified bitmap if it has not been loaded into RAM_G yet.
  49:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // Call during the Update cycle of each frame to keep the bitmap flagged as in use, otherwise the m
  50:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_LoadBitmap, Type = ft_uint32_t, Include = "Ft_Esd_BitmapInfo.h", DisplayName = 
  51:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapInfo, Type = Ft_Esd_BitmapInfo *)
  52:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ft_uint32_t Ft_Esd_LoadBitmap(Ft_Esd_BitmapInfo *bitmapInfo);
  53:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  54:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_LoadPalette, Type = ft_uint32_t, Include = "Ft_Esd_BitmapInfo.h", DisplayName =
  55:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapInfo, Type = Ft_Esd_BitmapInfo *)
  56:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ft_uint32_t Ft_Esd_LoadPalette(Ft_Esd_BitmapInfo *bitmapInfo);
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 6


  57:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  58:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_ENUM(_BitmapResourceFormat, DisplayName = "Bitmap Format")
  59:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB1555)
  60:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L1)
  61:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L2)
  62:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L4)
  63:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L8)
  64:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(RGB332)
  65:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB2)
  66:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB4)
  67:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(RGB565)
  68:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(PALETTED565)
  69:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(PALETTED4444)
  70:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(PALETTED8)
  71:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(JPEG)
  72:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(PNG)
  73:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_END()
  74:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  75:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_LOGIC(Ft_Esd_SwitchBitmapCell, Callback, Include = "Ft_Esd_BitmapInfo.h", DisplayName = "Switch
  76:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  77:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  78:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Callback
  79:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	void *Parent;
  80:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  81:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  82:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Input
  83:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  84:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  85:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ESD_INPUT(BitmapInfo, Type = Ft_Esd_BitmapInfo *, DisplayName = "Bitmap Info")
  86:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapInfo *(* BitmapInfo)(void *context);
  87:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  88:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ESD_INPUT(Cell, Type = ft_uint8_t, DisplayName = "Cell")
  89:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_uint8_t(* Cell)(void *context);
  90:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  91:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  92:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Variables
  93:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  94:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  95:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// BitmapCell object
  96:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapCell BitmapCell;
  97:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  98:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_SwitchBitmapCell;
  99:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 100:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** void Ft_Esd_SwitchBitmapCell__Initializer(Ft_Esd_SwitchBitmapCell *context);
 101:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 102:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_OUTPUT(BitmapCell, Type = Ft_Esd_BitmapCell *, DisplayName = "Bitmap Cell")
 103:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** Ft_Esd_BitmapCell *Ft_Esd_SwitchBitmapCell_BitmapCell(Ft_Esd_SwitchBitmapCell *context);
 104:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 105:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_UPDATE(Ft_Esd_BitmapPersist, DisplayName = "Bitmap Persist", Category = EsdUtilities)
 106:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapCell, Type = Ft_Esd_BitmapCell *)
 107:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** void Ft_Esd_BitmapPersist(Ft_Esd_BitmapCell *bitmapCell);
 108:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 109:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_BitmapCell_GetInfo, Type = Ft_Esd_BitmapInfo *, DisplayName = "ESD BitmapCell G
 110:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapCell, Type = Ft_Esd_BitmapCell *)
 111:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** static Ft_Esd_BitmapInfo *Ft_Esd_BitmapCell_GetInfo(Ft_Esd_BitmapCell *bitmapCell)
 112:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
 184              		.loc 2 112 0 is_stmt 1
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 7


 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 8
 187              		@ frame_needed = 1, uses_anonymous_args = 0
 188              		@ link register save eliminated.
 189 0000 80B4     		push	{r7}
 190              	.LCFI15:
 191              		.cfi_def_cfa_offset 4
 192              		.cfi_offset 7, -4
 193 0002 83B0     		sub	sp, sp, #12
 194              	.LCFI16:
 195              		.cfi_def_cfa_offset 16
 196 0004 00AF     		add	r7, sp, #0
 197              	.LCFI17:
 198              		.cfi_def_cfa_register 7
 199 0006 7860     		str	r0, [r7, #4]
 113:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	if (!bitmapCell) return 0;
 200              		.loc 2 113 0
 201 0008 7B68     		ldr	r3, [r7, #4]
 202 000a 002B     		cmp	r3, #0
 203 000c 01D1     		bne	.L11
 204              		.loc 2 113 0 is_stmt 0 discriminator 1
 205 000e 0023     		movs	r3, #0
 206 0010 01E0     		b	.L12
 207              	.L11:
 114:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	return bitmapCell->Info;
 208              		.loc 2 114 0 is_stmt 1
 209 0012 7B68     		ldr	r3, [r7, #4]
 210 0014 1B68     		ldr	r3, [r3]
 211              	.L12:
 115:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** }
 212              		.loc 2 115 0
 213 0016 1846     		mov	r0, r3
 214 0018 0C37     		adds	r7, r7, #12
 215              	.LCFI18:
 216              		.cfi_def_cfa_offset 4
 217 001a BD46     		mov	sp, r7
 218              	.LCFI19:
 219              		.cfi_def_cfa_register 13
 220              		@ sp needed
 221 001c 5DF8047B 		ldr	r7, [sp], #4
 222              	.LCFI20:
 223              		.cfi_restore 7
 224              		.cfi_def_cfa_offset 0
 225 0020 7047     		bx	lr
 226              		.cfi_endproc
 227              	.LFE9:
 229              		.section	.text.Ft_Esd_Dl_TAG,"ax",%progbits
 230              		.align	1
 231              		.syntax unified
 232              		.thumb
 233              		.thumb_func
 234              		.fpu fpv5-sp-d16
 236              	Ft_Esd_Dl_TAG:
 237              	.LFB12:
 238              		.file 3 "FT_Esd_Framework/FT_Esd_Dl.h"
   1:FT_Esd_Framework/FT_Esd_Dl.h **** 
   2:FT_Esd_Framework/FT_Esd_Dl.h **** #ifndef FT_ESD_DL_H
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 8


   3:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_DL_H
   4:FT_Esd_Framework/FT_Esd_Dl.h **** 
   5:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_DataTypes.h"
   6:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_Platform.h"
   7:FT_Esd_Framework/FT_Esd_Dl.h **** #include "Ft_Esd.h"
   8:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_Gpu.h"
   9:FT_Esd_Framework/FT_Esd_Dl.h **** #include "Ft_Esd_BitmapInfo.h"
  10:FT_Esd_Framework/FT_Esd_Dl.h **** 
  11:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_CATEGORY(EsdUtilities, DisplayName = "ESD Utilities")
  12:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_CATEGORY(EveRenderFunctions, DisplayName = "EVE Render Functions")
  13:FT_Esd_Framework/FT_Esd_Dl.h **** 
  14:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_TYPE(Ft_Gpu_Hal_Context_t *, Native = Pointer, Edit = Library)
  15:FT_Esd_Framework/FT_Esd_Dl.h **** 
  16:FT_Esd_Framework/FT_Esd_Dl.h **** // Keep cache of displaylist values that don't often change but are generally set by every widget t
  17:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_OPTIMIZE_DISPLAYLIST 1
  18:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_STATE_STACK_SIZE 5
  19:FT_Esd_Framework/FT_Esd_Dl.h **** 
  20:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_BITMAPHANDLE_INVALID 255
  21:FT_Esd_Framework/FT_Esd_Dl.h **** 
  22:FT_Esd_Framework/FT_Esd_Dl.h **** //
  23:FT_Esd_Framework/FT_Esd_Dl.h **** // Structs
  24:FT_Esd_Framework/FT_Esd_Dl.h **** //
  25:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_ESD_OPTIMIZE_DISPLAYLIST
  26:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_STATE Ft_Esd_GpuState[Ft_Esd_GpuState_I]
  27:FT_Esd_Framework/FT_Esd_Dl.h **** typedef struct
  28:FT_Esd_Framework/FT_Esd_Dl.h **** {
  29:FT_Esd_Framework/FT_Esd_Dl.h **** 	// Keep to a minimum
  30:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_81X_ENABLE
  31:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint32_t PaletteSource;
  32:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  33:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint32_t ColorRGB;
  34:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t ColorA;
  35:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t Handle;         // Current handle
  36:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t Cell;           // Current cell
  37:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_bool_t BitmapTransform; // BitmapTransform other than default is set
  38:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_81X_ENABLE
  39:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t VertexFormat;   // Current vertex format
  40:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  41:FT_Esd_Framework/FT_Esd_Dl.h **** } Ft_Esd_GpuState_T;
  42:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  43:FT_Esd_Framework/FT_Esd_Dl.h **** 
  44:FT_Esd_Framework/FT_Esd_Dl.h **** //
  45:FT_Esd_Framework/FT_Esd_Dl.h **** // Globals
  46:FT_Esd_Framework/FT_Esd_Dl.h **** //
  47:FT_Esd_Framework/FT_Esd_Dl.h **** extern Ft_Gpu_Hal_Context_t *Ft_Esd_Host;
  48:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint16_t Ft_Esd_FontHeight[32];
  49:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_ESD_OPTIMIZE_DISPLAYLIST
  50:FT_Esd_Framework/FT_Esd_Dl.h **** extern Ft_Esd_GpuState_T Ft_Esd_GpuState[FT_ESD_STATE_STACK_SIZE];
  51:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint8_t Ft_Esd_GpuState_I;
  52:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint32_t Ft_Esd_CoFgColor;
  53:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint32_t Ft_Esd_CoBgColor;
  54:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  55:FT_Esd_Framework/FT_Esd_Dl.h **** 
  56:FT_Esd_Framework/FT_Esd_Dl.h **** //Get the height of builtin font
  57:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_GetFontHeight, Type = ft_uint16_t ,DisplayName = "Get Font Height", Category = 
  58:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(i, Type = int, DisplayName = "Bitmap Handle", Default = 0, Min = 0, Max = 31)
  59:FT_Esd_Framework/FT_Esd_Dl.h **** // inline static ft_uint16_t Ft_Esd_GetFontHeight(int i) { return Ft_Esd_FontHeight[i]; }
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 9


  60:FT_Esd_Framework/FT_Esd_Dl.h **** #define Ft_Esd_GetFontHeight(i) (Ft_Esd_FontHeight[i]);
  61:FT_Esd_Framework/FT_Esd_Dl.h **** 
  62:FT_Esd_Framework/FT_Esd_Dl.h **** // Reset any cached state
  63:FT_Esd_Framework/FT_Esd_Dl.h **** void Ft_Esd_ResetGpuState();
  64:FT_Esd_Framework/FT_Esd_Dl.h **** void Ft_Esd_ResetCoState();
  65:FT_Esd_Framework/FT_Esd_Dl.h **** 
  66:FT_Esd_Framework/FT_Esd_Dl.h **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotalUsed();
  67:FT_Esd_Framework/FT_Esd_Dl.h **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotal();
  68:FT_Esd_Framework/FT_Esd_Dl.h **** 
  69:FT_Esd_Framework/FT_Esd_Dl.h **** /// Set current tag. Must be returned to 255 after usage, to ensure next widgets don't draw with in
  70:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_TAG, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  71:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(s, Type = ft_uint8_t, DisplayName = "Tag", Default = 255, Min = 0, Max = 255)
  72:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_TAG(ft_uint8_t s)
  73:FT_Esd_Framework/FT_Esd_Dl.h **** {
 239              		.loc 3 73 0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 8
 242              		@ frame_needed = 1, uses_anonymous_args = 0
 243 0000 80B5     		push	{r7, lr}
 244              	.LCFI21:
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 7, -8
 247              		.cfi_offset 14, -4
 248 0002 82B0     		sub	sp, sp, #8
 249              	.LCFI22:
 250              		.cfi_def_cfa_offset 16
 251 0004 00AF     		add	r7, sp, #0
 252              	.LCFI23:
 253              		.cfi_def_cfa_register 7
 254 0006 0346     		mov	r3, r0
 255 0008 FB71     		strb	r3, [r7, #7]
  74:FT_Esd_Framework/FT_Esd_Dl.h **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, TAG(s));
 256              		.loc 3 74 0
 257 000a 064B     		ldr	r3, .L14
 258 000c 1A68     		ldr	r2, [r3]
 259 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 260 0010 43F04073 		orr	r3, r3, #50331648
 261 0014 1946     		mov	r1, r3
 262 0016 1046     		mov	r0, r2
 263 0018 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  75:FT_Esd_Framework/FT_Esd_Dl.h **** }
 264              		.loc 3 75 0
 265 001c 00BF     		nop
 266 001e 0837     		adds	r7, r7, #8
 267              	.LCFI24:
 268              		.cfi_def_cfa_offset 8
 269 0020 BD46     		mov	sp, r7
 270              	.LCFI25:
 271              		.cfi_def_cfa_register 13
 272              		@ sp needed
 273 0022 80BD     		pop	{r7, pc}
 274              	.L15:
 275              		.align	2
 276              	.L14:
 277 0024 00000000 		.word	Ft_Esd_Host
 278              		.cfi_endproc
 279              	.LFE12:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 10


 281              		.section	.text.Ft_Esd_Dl_COLOR_RGB,"ax",%progbits
 282              		.align	1
 283              		.syntax unified
 284              		.thumb
 285              		.thumb_func
 286              		.fpu fpv5-sp-d16
 288              	Ft_Esd_Dl_COLOR_RGB:
 289              	.LFB13:
  76:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify color RGB
  77:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_RGB, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  78:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(c, Type = ft_rgb32_t, DisplayName = "Color")
  79:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_RGB(ft_rgb32_t c)
  80:FT_Esd_Framework/FT_Esd_Dl.h **** {
 290              		.loc 3 80 0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 16
 293              		@ frame_needed = 1, uses_anonymous_args = 0
 294 0000 80B5     		push	{r7, lr}
 295              	.LCFI26:
 296              		.cfi_def_cfa_offset 8
 297              		.cfi_offset 7, -8
 298              		.cfi_offset 14, -4
 299 0002 84B0     		sub	sp, sp, #16
 300              	.LCFI27:
 301              		.cfi_def_cfa_offset 24
 302 0004 00AF     		add	r7, sp, #0
 303              	.LCFI28:
 304              		.cfi_def_cfa_register 7
 305 0006 7860     		str	r0, [r7, #4]
  81:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  82:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_rgb32_t rgb = c & 0xFFFFFF;
 306              		.loc 3 82 0
 307 0008 7B68     		ldr	r3, [r7, #4]
 308 000a 23F07F43 		bic	r3, r3, #-16777216
 309 000e FB60     		str	r3, [r7, #12]
  83:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (rgb != FT_ESD_STATE.ColorRGB)
 310              		.loc 3 83 0
 311 0010 0F4B     		ldr	r3, .L19
 312 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 313 0014 0F4A     		ldr	r2, .L19+4
 314 0016 1B01     		lsls	r3, r3, #4
 315 0018 1344     		add	r3, r3, r2
 316 001a 0433     		adds	r3, r3, #4
 317 001c 1B68     		ldr	r3, [r3]
 318 001e FA68     		ldr	r2, [r7, #12]
 319 0020 9A42     		cmp	r2, r3
 320 0022 10D0     		beq	.L18
  84:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
  85:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  86:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, (4UL << 24) | (rgb));
 321              		.loc 3 86 0
 322 0024 0C4B     		ldr	r3, .L19+8
 323 0026 1A68     		ldr	r2, [r3]
 324 0028 FB68     		ldr	r3, [r7, #12]
 325 002a 43F08063 		orr	r3, r3, #67108864
 326 002e 1946     		mov	r1, r3
 327 0030 1046     		mov	r0, r2
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 11


 328 0032 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  87:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  88:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.ColorRGB = rgb;
 329              		.loc 3 88 0
 330 0036 064B     		ldr	r3, .L19
 331 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 332 003a 064A     		ldr	r2, .L19+4
 333 003c 1B01     		lsls	r3, r3, #4
 334 003e 1344     		add	r3, r3, r2
 335 0040 0433     		adds	r3, r3, #4
 336 0042 FA68     		ldr	r2, [r7, #12]
 337 0044 1A60     		str	r2, [r3]
 338              	.L18:
  89:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
  90:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  91:FT_Esd_Framework/FT_Esd_Dl.h **** }
 339              		.loc 3 91 0
 340 0046 00BF     		nop
 341 0048 1037     		adds	r7, r7, #16
 342              	.LCFI29:
 343              		.cfi_def_cfa_offset 8
 344 004a BD46     		mov	sp, r7
 345              	.LCFI30:
 346              		.cfi_def_cfa_register 13
 347              		@ sp needed
 348 004c 80BD     		pop	{r7, pc}
 349              	.L20:
 350 004e 00BF     		.align	2
 351              	.L19:
 352 0050 00000000 		.word	Ft_Esd_GpuState_I
 353 0054 00000000 		.word	Ft_Esd_GpuState
 354 0058 00000000 		.word	Ft_Esd_Host
 355              		.cfi_endproc
 356              	.LFE13:
 358              		.section	.text.Ft_Esd_Dl_COLOR_A,"ax",%progbits
 359              		.align	1
 360              		.syntax unified
 361              		.thumb
 362              		.thumb_func
 363              		.fpu fpv5-sp-d16
 365              	Ft_Esd_Dl_COLOR_A:
 366              	.LFB14:
  92:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify alpha channel
  93:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_A, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  94:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(alpha, Type = ft_uint8_t, Default = 255, Min = 0, Max = 255)
  95:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_A(ft_uint8_t alpha)
  96:FT_Esd_Framework/FT_Esd_Dl.h **** {
 367              		.loc 3 96 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 8
 370              		@ frame_needed = 1, uses_anonymous_args = 0
 371 0000 80B5     		push	{r7, lr}
 372              	.LCFI31:
 373              		.cfi_def_cfa_offset 8
 374              		.cfi_offset 7, -8
 375              		.cfi_offset 14, -4
 376 0002 82B0     		sub	sp, sp, #8
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 12


 377              	.LCFI32:
 378              		.cfi_def_cfa_offset 16
 379 0004 00AF     		add	r7, sp, #0
 380              	.LCFI33:
 381              		.cfi_def_cfa_register 7
 382 0006 0346     		mov	r3, r0
 383 0008 FB71     		strb	r3, [r7, #7]
  97:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  98:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (alpha != FT_ESD_STATE.ColorA)
 384              		.loc 3 98 0
 385 000a 0F4B     		ldr	r3, .L24
 386 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 387 000e 0F4A     		ldr	r2, .L24+4
 388 0010 1B01     		lsls	r3, r3, #4
 389 0012 1344     		add	r3, r3, r2
 390 0014 0833     		adds	r3, r3, #8
 391 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 392 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 393 001a 9A42     		cmp	r2, r3
 394 001c 10D0     		beq	.L23
  99:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
 100:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 101:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, COLOR_A(alpha));
 395              		.loc 3 101 0
 396 001e 0C4B     		ldr	r3, .L24+8
 397 0020 1A68     		ldr	r2, [r3]
 398 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 399 0024 43F08053 		orr	r3, r3, #268435456
 400 0028 1946     		mov	r1, r3
 401 002a 1046     		mov	r0, r2
 402 002c FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 102:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 103:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.ColorA = alpha;
 403              		.loc 3 103 0
 404 0030 054B     		ldr	r3, .L24
 405 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 406 0034 054A     		ldr	r2, .L24+4
 407 0036 1B01     		lsls	r3, r3, #4
 408 0038 1344     		add	r3, r3, r2
 409 003a 0833     		adds	r3, r3, #8
 410 003c FA79     		ldrb	r2, [r7, #7]
 411 003e 1A70     		strb	r2, [r3]
 412              	.L23:
 104:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
 105:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 106:FT_Esd_Framework/FT_Esd_Dl.h **** }
 413              		.loc 3 106 0
 414 0040 00BF     		nop
 415 0042 0837     		adds	r7, r7, #8
 416              	.LCFI34:
 417              		.cfi_def_cfa_offset 8
 418 0044 BD46     		mov	sp, r7
 419              	.LCFI35:
 420              		.cfi_def_cfa_register 13
 421              		@ sp needed
 422 0046 80BD     		pop	{r7, pc}
 423              	.L25:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 13


 424              		.align	2
 425              	.L24:
 426 0048 00000000 		.word	Ft_Esd_GpuState_I
 427 004c 00000000 		.word	Ft_Esd_GpuState
 428 0050 00000000 		.word	Ft_Esd_Host
 429              		.cfi_endproc
 430              	.LFE14:
 432              		.section	.text.Ft_Esd_Clock_Theme__Default,"ax",%progbits
 433              		.align	1
 434              		.global	Ft_Esd_Clock_Theme__Default
 435              		.syntax unified
 436              		.thumb
 437              		.thumb_func
 438              		.fpu fpv5-sp-d16
 440              	Ft_Esd_Clock_Theme__Default:
 441              	.LFB23:
 442              		.file 4 "FT_Esd_Widgets/Ft_Esd_Clock__Generated.c"
   1:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** /*
   2:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** This file is automatically generated
   3:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** Ft_Esd_Clock
   4:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** C Source
   5:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** */
   6:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 
   7:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** #include "Ft_Esd_Clock.h"
   8:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 
   9:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** #include "FT_Esd_CoPro_Cmds.h"
  10:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** #include "FT_Esd_Dl.h"
  11:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** #include "FT_Gpu.h"
  12:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 
  13:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** extern void Ft_Esd_Noop(void *context);
  14:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** Ft_Esd_Theme * Ft_Esd_Clock_Theme__Default(void *context) { return Ft_Esd_Theme_GetCurrent(); }
 443              		.loc 4 14 0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 8
 446              		@ frame_needed = 1, uses_anonymous_args = 0
 447 0000 80B5     		push	{r7, lr}
 448              	.LCFI36:
 449              		.cfi_def_cfa_offset 8
 450              		.cfi_offset 7, -8
 451              		.cfi_offset 14, -4
 452 0002 82B0     		sub	sp, sp, #8
 453              	.LCFI37:
 454              		.cfi_def_cfa_offset 16
 455 0004 00AF     		add	r7, sp, #0
 456              	.LCFI38:
 457              		.cfi_def_cfa_register 7
 458 0006 7860     		str	r0, [r7, #4]
 459              		.loc 4 14 0
 460 0008 FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
 461 000c 0346     		mov	r3, r0
 462 000e 1846     		mov	r0, r3
 463 0010 0837     		adds	r7, r7, #8
 464              	.LCFI39:
 465              		.cfi_def_cfa_offset 8
 466 0012 BD46     		mov	sp, r7
 467              	.LCFI40:
 468              		.cfi_def_cfa_register 13
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 14


 469              		@ sp needed
 470 0014 80BD     		pop	{r7, pc}
 471              		.cfi_endproc
 472              	.LFE23:
 474              		.section	.text.Ft_Esd_Clock_X__Default,"ax",%progbits
 475              		.align	1
 476              		.global	Ft_Esd_Clock_X__Default
 477              		.syntax unified
 478              		.thumb
 479              		.thumb_func
 480              		.fpu fpv5-sp-d16
 482              	Ft_Esd_Clock_X__Default:
 483              	.LFB24:
  15:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** ft_int16_t Ft_Esd_Clock_X__Default(void *context) { return 0; }
 484              		.loc 4 15 0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 8
 487              		@ frame_needed = 1, uses_anonymous_args = 0
 488              		@ link register save eliminated.
 489 0000 80B4     		push	{r7}
 490              	.LCFI41:
 491              		.cfi_def_cfa_offset 4
 492              		.cfi_offset 7, -4
 493 0002 83B0     		sub	sp, sp, #12
 494              	.LCFI42:
 495              		.cfi_def_cfa_offset 16
 496 0004 00AF     		add	r7, sp, #0
 497              	.LCFI43:
 498              		.cfi_def_cfa_register 7
 499 0006 7860     		str	r0, [r7, #4]
 500              		.loc 4 15 0
 501 0008 0023     		movs	r3, #0
 502 000a 1846     		mov	r0, r3
 503 000c 0C37     		adds	r7, r7, #12
 504              	.LCFI44:
 505              		.cfi_def_cfa_offset 4
 506 000e BD46     		mov	sp, r7
 507              	.LCFI45:
 508              		.cfi_def_cfa_register 13
 509              		@ sp needed
 510 0010 5DF8047B 		ldr	r7, [sp], #4
 511              	.LCFI46:
 512              		.cfi_restore 7
 513              		.cfi_def_cfa_offset 0
 514 0014 7047     		bx	lr
 515              		.cfi_endproc
 516              	.LFE24:
 518              		.section	.text.Ft_Esd_Clock_Y__Default,"ax",%progbits
 519              		.align	1
 520              		.global	Ft_Esd_Clock_Y__Default
 521              		.syntax unified
 522              		.thumb
 523              		.thumb_func
 524              		.fpu fpv5-sp-d16
 526              	Ft_Esd_Clock_Y__Default:
 527              	.LFB25:
  16:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** ft_int16_t Ft_Esd_Clock_Y__Default(void *context) { return 0; }
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 15


 528              		.loc 4 16 0
 529              		.cfi_startproc
 530              		@ args = 0, pretend = 0, frame = 8
 531              		@ frame_needed = 1, uses_anonymous_args = 0
 532              		@ link register save eliminated.
 533 0000 80B4     		push	{r7}
 534              	.LCFI47:
 535              		.cfi_def_cfa_offset 4
 536              		.cfi_offset 7, -4
 537 0002 83B0     		sub	sp, sp, #12
 538              	.LCFI48:
 539              		.cfi_def_cfa_offset 16
 540 0004 00AF     		add	r7, sp, #0
 541              	.LCFI49:
 542              		.cfi_def_cfa_register 7
 543 0006 7860     		str	r0, [r7, #4]
 544              		.loc 4 16 0
 545 0008 0023     		movs	r3, #0
 546 000a 1846     		mov	r0, r3
 547 000c 0C37     		adds	r7, r7, #12
 548              	.LCFI50:
 549              		.cfi_def_cfa_offset 4
 550 000e BD46     		mov	sp, r7
 551              	.LCFI51:
 552              		.cfi_def_cfa_register 13
 553              		@ sp needed
 554 0010 5DF8047B 		ldr	r7, [sp], #4
 555              	.LCFI52:
 556              		.cfi_restore 7
 557              		.cfi_def_cfa_offset 0
 558 0014 7047     		bx	lr
 559              		.cfi_endproc
 560              	.LFE25:
 562              		.section	.text.Ft_Esd_Clock_Width__Default,"ax",%progbits
 563              		.align	1
 564              		.global	Ft_Esd_Clock_Width__Default
 565              		.syntax unified
 566              		.thumb
 567              		.thumb_func
 568              		.fpu fpv5-sp-d16
 570              	Ft_Esd_Clock_Width__Default:
 571              	.LFB26:
  17:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** ft_int16_t Ft_Esd_Clock_Width__Default(void *context) { return 144; }
 572              		.loc 4 17 0
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 8
 575              		@ frame_needed = 1, uses_anonymous_args = 0
 576              		@ link register save eliminated.
 577 0000 80B4     		push	{r7}
 578              	.LCFI53:
 579              		.cfi_def_cfa_offset 4
 580              		.cfi_offset 7, -4
 581 0002 83B0     		sub	sp, sp, #12
 582              	.LCFI54:
 583              		.cfi_def_cfa_offset 16
 584 0004 00AF     		add	r7, sp, #0
 585              	.LCFI55:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 16


 586              		.cfi_def_cfa_register 7
 587 0006 7860     		str	r0, [r7, #4]
 588              		.loc 4 17 0
 589 0008 9023     		movs	r3, #144
 590 000a 1846     		mov	r0, r3
 591 000c 0C37     		adds	r7, r7, #12
 592              	.LCFI56:
 593              		.cfi_def_cfa_offset 4
 594 000e BD46     		mov	sp, r7
 595              	.LCFI57:
 596              		.cfi_def_cfa_register 13
 597              		@ sp needed
 598 0010 5DF8047B 		ldr	r7, [sp], #4
 599              	.LCFI58:
 600              		.cfi_restore 7
 601              		.cfi_def_cfa_offset 0
 602 0014 7047     		bx	lr
 603              		.cfi_endproc
 604              	.LFE26:
 606              		.section	.text.Ft_Esd_Clock_Height__Default,"ax",%progbits
 607              		.align	1
 608              		.global	Ft_Esd_Clock_Height__Default
 609              		.syntax unified
 610              		.thumb
 611              		.thumb_func
 612              		.fpu fpv5-sp-d16
 614              	Ft_Esd_Clock_Height__Default:
 615              	.LFB27:
  18:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** ft_int16_t Ft_Esd_Clock_Height__Default(void *context) { return 144; }
 616              		.loc 4 18 0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 8
 619              		@ frame_needed = 1, uses_anonymous_args = 0
 620              		@ link register save eliminated.
 621 0000 80B4     		push	{r7}
 622              	.LCFI59:
 623              		.cfi_def_cfa_offset 4
 624              		.cfi_offset 7, -4
 625 0002 83B0     		sub	sp, sp, #12
 626              	.LCFI60:
 627              		.cfi_def_cfa_offset 16
 628 0004 00AF     		add	r7, sp, #0
 629              	.LCFI61:
 630              		.cfi_def_cfa_register 7
 631 0006 7860     		str	r0, [r7, #4]
 632              		.loc 4 18 0
 633 0008 9023     		movs	r3, #144
 634 000a 1846     		mov	r0, r3
 635 000c 0C37     		adds	r7, r7, #12
 636              	.LCFI62:
 637              		.cfi_def_cfa_offset 4
 638 000e BD46     		mov	sp, r7
 639              	.LCFI63:
 640              		.cfi_def_cfa_register 13
 641              		@ sp needed
 642 0010 5DF8047B 		ldr	r7, [sp], #4
 643              	.LCFI64:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 17


 644              		.cfi_restore 7
 645              		.cfi_def_cfa_offset 0
 646 0014 7047     		bx	lr
 647              		.cfi_endproc
 648              	.LFE27:
 650              		.section	.text.Ft_Esd_Clock_Alpha__Default,"ax",%progbits
 651              		.align	1
 652              		.global	Ft_Esd_Clock_Alpha__Default
 653              		.syntax unified
 654              		.thumb
 655              		.thumb_func
 656              		.fpu fpv5-sp-d16
 658              	Ft_Esd_Clock_Alpha__Default:
 659              	.LFB28:
  19:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** uint8_t Ft_Esd_Clock_Alpha__Default(void *context) { return 255; }
 660              		.loc 4 19 0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 8
 663              		@ frame_needed = 1, uses_anonymous_args = 0
 664              		@ link register save eliminated.
 665 0000 80B4     		push	{r7}
 666              	.LCFI65:
 667              		.cfi_def_cfa_offset 4
 668              		.cfi_offset 7, -4
 669 0002 83B0     		sub	sp, sp, #12
 670              	.LCFI66:
 671              		.cfi_def_cfa_offset 16
 672 0004 00AF     		add	r7, sp, #0
 673              	.LCFI67:
 674              		.cfi_def_cfa_register 7
 675 0006 7860     		str	r0, [r7, #4]
 676              		.loc 4 19 0
 677 0008 FF23     		movs	r3, #255
 678 000a 1846     		mov	r0, r3
 679 000c 0C37     		adds	r7, r7, #12
 680              	.LCFI68:
 681              		.cfi_def_cfa_offset 4
 682 000e BD46     		mov	sp, r7
 683              	.LCFI69:
 684              		.cfi_def_cfa_register 13
 685              		@ sp needed
 686 0010 5DF8047B 		ldr	r7, [sp], #4
 687              	.LCFI70:
 688              		.cfi_restore 7
 689              		.cfi_def_cfa_offset 0
 690 0014 7047     		bx	lr
 691              		.cfi_endproc
 692              	.LFE28:
 694              		.section	.text.Ft_Esd_Clock_H__Default,"ax",%progbits
 695              		.align	1
 696              		.global	Ft_Esd_Clock_H__Default
 697              		.syntax unified
 698              		.thumb
 699              		.thumb_func
 700              		.fpu fpv5-sp-d16
 702              	Ft_Esd_Clock_H__Default:
 703              	.LFB29:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 18


  20:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** ft_uint16_t Ft_Esd_Clock_H__Default(void *context) { return 0U; }
 704              		.loc 4 20 0
 705              		.cfi_startproc
 706              		@ args = 0, pretend = 0, frame = 8
 707              		@ frame_needed = 1, uses_anonymous_args = 0
 708              		@ link register save eliminated.
 709 0000 80B4     		push	{r7}
 710              	.LCFI71:
 711              		.cfi_def_cfa_offset 4
 712              		.cfi_offset 7, -4
 713 0002 83B0     		sub	sp, sp, #12
 714              	.LCFI72:
 715              		.cfi_def_cfa_offset 16
 716 0004 00AF     		add	r7, sp, #0
 717              	.LCFI73:
 718              		.cfi_def_cfa_register 7
 719 0006 7860     		str	r0, [r7, #4]
 720              		.loc 4 20 0
 721 0008 0023     		movs	r3, #0
 722 000a 1846     		mov	r0, r3
 723 000c 0C37     		adds	r7, r7, #12
 724              	.LCFI74:
 725              		.cfi_def_cfa_offset 4
 726 000e BD46     		mov	sp, r7
 727              	.LCFI75:
 728              		.cfi_def_cfa_register 13
 729              		@ sp needed
 730 0010 5DF8047B 		ldr	r7, [sp], #4
 731              	.LCFI76:
 732              		.cfi_restore 7
 733              		.cfi_def_cfa_offset 0
 734 0014 7047     		bx	lr
 735              		.cfi_endproc
 736              	.LFE29:
 738              		.section	.text.Ft_Esd_Clock_M__Default,"ax",%progbits
 739              		.align	1
 740              		.global	Ft_Esd_Clock_M__Default
 741              		.syntax unified
 742              		.thumb
 743              		.thumb_func
 744              		.fpu fpv5-sp-d16
 746              	Ft_Esd_Clock_M__Default:
 747              	.LFB30:
  21:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** ft_uint16_t Ft_Esd_Clock_M__Default(void *context) { return 0U; }
 748              		.loc 4 21 0
 749              		.cfi_startproc
 750              		@ args = 0, pretend = 0, frame = 8
 751              		@ frame_needed = 1, uses_anonymous_args = 0
 752              		@ link register save eliminated.
 753 0000 80B4     		push	{r7}
 754              	.LCFI77:
 755              		.cfi_def_cfa_offset 4
 756              		.cfi_offset 7, -4
 757 0002 83B0     		sub	sp, sp, #12
 758              	.LCFI78:
 759              		.cfi_def_cfa_offset 16
 760 0004 00AF     		add	r7, sp, #0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 19


 761              	.LCFI79:
 762              		.cfi_def_cfa_register 7
 763 0006 7860     		str	r0, [r7, #4]
 764              		.loc 4 21 0
 765 0008 0023     		movs	r3, #0
 766 000a 1846     		mov	r0, r3
 767 000c 0C37     		adds	r7, r7, #12
 768              	.LCFI80:
 769              		.cfi_def_cfa_offset 4
 770 000e BD46     		mov	sp, r7
 771              	.LCFI81:
 772              		.cfi_def_cfa_register 13
 773              		@ sp needed
 774 0010 5DF8047B 		ldr	r7, [sp], #4
 775              	.LCFI82:
 776              		.cfi_restore 7
 777              		.cfi_def_cfa_offset 0
 778 0014 7047     		bx	lr
 779              		.cfi_endproc
 780              	.LFE30:
 782              		.section	.text.Ft_Esd_Clock_S__Default,"ax",%progbits
 783              		.align	1
 784              		.global	Ft_Esd_Clock_S__Default
 785              		.syntax unified
 786              		.thumb
 787              		.thumb_func
 788              		.fpu fpv5-sp-d16
 790              	Ft_Esd_Clock_S__Default:
 791              	.LFB31:
  22:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** ft_uint16_t Ft_Esd_Clock_S__Default(void *context) { return 0U; }
 792              		.loc 4 22 0
 793              		.cfi_startproc
 794              		@ args = 0, pretend = 0, frame = 8
 795              		@ frame_needed = 1, uses_anonymous_args = 0
 796              		@ link register save eliminated.
 797 0000 80B4     		push	{r7}
 798              	.LCFI83:
 799              		.cfi_def_cfa_offset 4
 800              		.cfi_offset 7, -4
 801 0002 83B0     		sub	sp, sp, #12
 802              	.LCFI84:
 803              		.cfi_def_cfa_offset 16
 804 0004 00AF     		add	r7, sp, #0
 805              	.LCFI85:
 806              		.cfi_def_cfa_register 7
 807 0006 7860     		str	r0, [r7, #4]
 808              		.loc 4 22 0
 809 0008 0023     		movs	r3, #0
 810 000a 1846     		mov	r0, r3
 811 000c 0C37     		adds	r7, r7, #12
 812              	.LCFI86:
 813              		.cfi_def_cfa_offset 4
 814 000e BD46     		mov	sp, r7
 815              	.LCFI87:
 816              		.cfi_def_cfa_register 13
 817              		@ sp needed
 818 0010 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 20


 819              	.LCFI88:
 820              		.cfi_restore 7
 821              		.cfi_def_cfa_offset 0
 822 0014 7047     		bx	lr
 823              		.cfi_endproc
 824              	.LFE31:
 826              		.section	.text.Ft_Esd_Clock_Ms__Default,"ax",%progbits
 827              		.align	1
 828              		.global	Ft_Esd_Clock_Ms__Default
 829              		.syntax unified
 830              		.thumb
 831              		.thumb_func
 832              		.fpu fpv5-sp-d16
 834              	Ft_Esd_Clock_Ms__Default:
 835              	.LFB32:
  23:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** ft_uint32_t Ft_Esd_Clock_Ms__Default(void *context) { return 0UL; }
 836              		.loc 4 23 0
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 8
 839              		@ frame_needed = 1, uses_anonymous_args = 0
 840              		@ link register save eliminated.
 841 0000 80B4     		push	{r7}
 842              	.LCFI89:
 843              		.cfi_def_cfa_offset 4
 844              		.cfi_offset 7, -4
 845 0002 83B0     		sub	sp, sp, #12
 846              	.LCFI90:
 847              		.cfi_def_cfa_offset 16
 848 0004 00AF     		add	r7, sp, #0
 849              	.LCFI91:
 850              		.cfi_def_cfa_register 7
 851 0006 7860     		str	r0, [r7, #4]
 852              		.loc 4 23 0
 853 0008 0023     		movs	r3, #0
 854 000a 1846     		mov	r0, r3
 855 000c 0C37     		adds	r7, r7, #12
 856              	.LCFI92:
 857              		.cfi_def_cfa_offset 4
 858 000e BD46     		mov	sp, r7
 859              	.LCFI93:
 860              		.cfi_def_cfa_register 13
 861              		@ sp needed
 862 0010 5DF8047B 		ldr	r7, [sp], #4
 863              	.LCFI94:
 864              		.cfi_restore 7
 865              		.cfi_def_cfa_offset 0
 866 0014 7047     		bx	lr
 867              		.cfi_endproc
 868              	.LFE32:
 870              		.section	.text.Ft_Esd_Clock_Interactive__Default,"ax",%progbits
 871              		.align	1
 872              		.global	Ft_Esd_Clock_Interactive__Default
 873              		.syntax unified
 874              		.thumb
 875              		.thumb_func
 876              		.fpu fpv5-sp-d16
 878              	Ft_Esd_Clock_Interactive__Default:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 21


 879              	.LFB33:
  24:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** ft_bool_t Ft_Esd_Clock_Interactive__Default(void *context) { return 0; }
 880              		.loc 4 24 0
 881              		.cfi_startproc
 882              		@ args = 0, pretend = 0, frame = 8
 883              		@ frame_needed = 1, uses_anonymous_args = 0
 884              		@ link register save eliminated.
 885 0000 80B4     		push	{r7}
 886              	.LCFI95:
 887              		.cfi_def_cfa_offset 4
 888              		.cfi_offset 7, -4
 889 0002 83B0     		sub	sp, sp, #12
 890              	.LCFI96:
 891              		.cfi_def_cfa_offset 16
 892 0004 00AF     		add	r7, sp, #0
 893              	.LCFI97:
 894              		.cfi_def_cfa_register 7
 895 0006 7860     		str	r0, [r7, #4]
 896              		.loc 4 24 0
 897 0008 0023     		movs	r3, #0
 898 000a 1846     		mov	r0, r3
 899 000c 0C37     		adds	r7, r7, #12
 900              	.LCFI98:
 901              		.cfi_def_cfa_offset 4
 902 000e BD46     		mov	sp, r7
 903              	.LCFI99:
 904              		.cfi_def_cfa_register 13
 905              		@ sp needed
 906 0010 5DF8047B 		ldr	r7, [sp], #4
 907              	.LCFI100:
 908              		.cfi_restore 7
 909              		.cfi_def_cfa_offset 0
 910 0014 7047     		bx	lr
 911              		.cfi_endproc
 912              	.LFE33:
 914              		.section	.text.Ft_Esd_Clock__Initializer,"ax",%progbits
 915              		.align	1
 916              		.global	Ft_Esd_Clock__Initializer
 917              		.syntax unified
 918              		.thumb
 919              		.thumb_func
 920              		.fpu fpv5-sp-d16
 922              	Ft_Esd_Clock__Initializer:
 923              	.LFB34:
  25:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 
  26:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** Ft_Esd_Theme * Ft_Esd_Theme_GetCurrent();
  27:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** Ft_Gpu_Hal_Context_t * Ft_Esd_GetHost();
  28:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** static ft_int16_t Ft_Esd_Clock_Ft_Esd_PosSizeToRadius_X__Property(void *context);
  29:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** static ft_int16_t Ft_Esd_Clock_Ft_Esd_PosSizeToRadius_Y__Property(void *context);
  30:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** static ft_int16_t Ft_Esd_Clock_Ft_Esd_PosSizeToRadius_Width__Property(void *context);
  31:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** static ft_int16_t Ft_Esd_Clock_Ft_Esd_PosSizeToRadius_Height__Property(void *context);
  32:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 
  33:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 
  34:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** void Ft_Esd_Clock__Initializer(Ft_Esd_Clock *context)
  35:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** {
 924              		.loc 4 35 0
 925              		.cfi_startproc
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 22


 926              		@ args = 0, pretend = 0, frame = 8
 927              		@ frame_needed = 1, uses_anonymous_args = 0
 928 0000 80B5     		push	{r7, lr}
 929              	.LCFI101:
 930              		.cfi_def_cfa_offset 8
 931              		.cfi_offset 7, -8
 932              		.cfi_offset 14, -4
 933 0002 82B0     		sub	sp, sp, #8
 934              	.LCFI102:
 935              		.cfi_def_cfa_offset 16
 936 0004 00AF     		add	r7, sp, #0
 937              	.LCFI103:
 938              		.cfi_def_cfa_register 7
 939 0006 7860     		str	r0, [r7, #4]
  36:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	context->Parent = 0;
 940              		.loc 4 36 0
 941 0008 7B68     		ldr	r3, [r7, #4]
 942 000a 0022     		movs	r2, #0
 943 000c 1A60     		str	r2, [r3]
  37:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	context->Theme = Ft_Esd_Clock_Theme__Default;
 944              		.loc 4 37 0
 945 000e 7B68     		ldr	r3, [r7, #4]
 946 0010 1F4A     		ldr	r2, .L49
 947 0012 5A60     		str	r2, [r3, #4]
  38:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	context->X = Ft_Esd_Clock_X__Default;
 948              		.loc 4 38 0
 949 0014 7B68     		ldr	r3, [r7, #4]
 950 0016 1F4A     		ldr	r2, .L49+4
 951 0018 9A60     		str	r2, [r3, #8]
  39:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	context->Y = Ft_Esd_Clock_Y__Default;
 952              		.loc 4 39 0
 953 001a 7B68     		ldr	r3, [r7, #4]
 954 001c 1E4A     		ldr	r2, .L49+8
 955 001e DA60     		str	r2, [r3, #12]
  40:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	Ft_Esd_PosSizeToRadius__Initializer(&context->Ft_Esd_PosSizeToRadius);
 956              		.loc 4 40 0
 957 0020 7B68     		ldr	r3, [r7, #4]
 958 0022 1033     		adds	r3, r3, #16
 959 0024 1846     		mov	r0, r3
 960 0026 FFF7FEFF 		bl	Ft_Esd_PosSizeToRadius__Initializer
  41:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	context->Ft_Esd_PosSizeToRadius.Parent = context;
 961              		.loc 4 41 0
 962 002a 7B68     		ldr	r3, [r7, #4]
 963 002c 7A68     		ldr	r2, [r7, #4]
 964 002e 1A61     		str	r2, [r3, #16]
  42:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	context->Ft_Esd_PosSizeToRadius.X = Ft_Esd_Clock_Ft_Esd_PosSizeToRadius_X__Property;
 965              		.loc 4 42 0
 966 0030 7B68     		ldr	r3, [r7, #4]
 967 0032 1A4A     		ldr	r2, .L49+12
 968 0034 5A61     		str	r2, [r3, #20]
  43:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	context->Ft_Esd_PosSizeToRadius.Y = Ft_Esd_Clock_Ft_Esd_PosSizeToRadius_Y__Property;
 969              		.loc 4 43 0
 970 0036 7B68     		ldr	r3, [r7, #4]
 971 0038 194A     		ldr	r2, .L49+16
 972 003a 9A61     		str	r2, [r3, #24]
  44:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	context->Ft_Esd_PosSizeToRadius.Width = Ft_Esd_Clock_Ft_Esd_PosSizeToRadius_Width__Property;
 973              		.loc 4 44 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 23


 974 003c 7B68     		ldr	r3, [r7, #4]
 975 003e 194A     		ldr	r2, .L49+20
 976 0040 DA61     		str	r2, [r3, #28]
  45:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	context->Ft_Esd_PosSizeToRadius.Height = Ft_Esd_Clock_Ft_Esd_PosSizeToRadius_Height__Property;
 977              		.loc 4 45 0
 978 0042 7B68     		ldr	r3, [r7, #4]
 979 0044 184A     		ldr	r2, .L49+24
 980 0046 1A62     		str	r2, [r3, #32]
  46:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	context->Width = Ft_Esd_Clock_Width__Default;
 981              		.loc 4 46 0
 982 0048 7B68     		ldr	r3, [r7, #4]
 983 004a 184A     		ldr	r2, .L49+28
 984 004c 5A62     		str	r2, [r3, #36]
  47:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	context->Height = Ft_Esd_Clock_Height__Default;
 985              		.loc 4 47 0
 986 004e 7B68     		ldr	r3, [r7, #4]
 987 0050 174A     		ldr	r2, .L49+32
 988 0052 9A62     		str	r2, [r3, #40]
  48:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	context->Alpha = Ft_Esd_Clock_Alpha__Default;
 989              		.loc 4 48 0
 990 0054 7B68     		ldr	r3, [r7, #4]
 991 0056 174A     		ldr	r2, .L49+36
 992 0058 DA62     		str	r2, [r3, #44]
  49:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	context->H = Ft_Esd_Clock_H__Default;
 993              		.loc 4 49 0
 994 005a 7B68     		ldr	r3, [r7, #4]
 995 005c 164A     		ldr	r2, .L49+40
 996 005e 1A63     		str	r2, [r3, #48]
  50:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	context->M = Ft_Esd_Clock_M__Default;
 997              		.loc 4 50 0
 998 0060 7B68     		ldr	r3, [r7, #4]
 999 0062 164A     		ldr	r2, .L49+44
 1000 0064 5A63     		str	r2, [r3, #52]
  51:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	context->S = Ft_Esd_Clock_S__Default;
 1001              		.loc 4 51 0
 1002 0066 7B68     		ldr	r3, [r7, #4]
 1003 0068 154A     		ldr	r2, .L49+48
 1004 006a 9A63     		str	r2, [r3, #56]
  52:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	context->Ms = Ft_Esd_Clock_Ms__Default;
 1005              		.loc 4 52 0
 1006 006c 7B68     		ldr	r3, [r7, #4]
 1007 006e 154A     		ldr	r2, .L49+52
 1008 0070 DA63     		str	r2, [r3, #60]
  53:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	Ft_Esd_TouchTag__Initializer(&context->Touch_Tag);
 1009              		.loc 4 53 0
 1010 0072 7B68     		ldr	r3, [r7, #4]
 1011 0074 4033     		adds	r3, r3, #64
 1012 0076 1846     		mov	r0, r3
 1013 0078 FFF7FEFF 		bl	Ft_Esd_TouchTag__Initializer
  54:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	context->Touch_Tag.Parent = context;
 1014              		.loc 4 54 0
 1015 007c 7B68     		ldr	r3, [r7, #4]
 1016 007e 7A68     		ldr	r2, [r7, #4]
 1017 0080 1A64     		str	r2, [r3, #64]
  55:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	context->Interactive = Ft_Esd_Clock_Interactive__Default;
 1018              		.loc 4 55 0
 1019 0082 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 24


 1020 0084 104A     		ldr	r2, .L49+56
 1021 0086 9A65     		str	r2, [r3, #88]
  56:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** }
 1022              		.loc 4 56 0
 1023 0088 00BF     		nop
 1024 008a 0837     		adds	r7, r7, #8
 1025              	.LCFI104:
 1026              		.cfi_def_cfa_offset 8
 1027 008c BD46     		mov	sp, r7
 1028              	.LCFI105:
 1029              		.cfi_def_cfa_register 13
 1030              		@ sp needed
 1031 008e 80BD     		pop	{r7, pc}
 1032              	.L50:
 1033              		.align	2
 1034              	.L49:
 1035 0090 00000000 		.word	Ft_Esd_Clock_Theme__Default
 1036 0094 00000000 		.word	Ft_Esd_Clock_X__Default
 1037 0098 00000000 		.word	Ft_Esd_Clock_Y__Default
 1038 009c 00000000 		.word	Ft_Esd_Clock_Ft_Esd_PosSizeToRadius_X__Property
 1039 00a0 00000000 		.word	Ft_Esd_Clock_Ft_Esd_PosSizeToRadius_Y__Property
 1040 00a4 00000000 		.word	Ft_Esd_Clock_Ft_Esd_PosSizeToRadius_Width__Property
 1041 00a8 00000000 		.word	Ft_Esd_Clock_Ft_Esd_PosSizeToRadius_Height__Property
 1042 00ac 00000000 		.word	Ft_Esd_Clock_Width__Default
 1043 00b0 00000000 		.word	Ft_Esd_Clock_Height__Default
 1044 00b4 00000000 		.word	Ft_Esd_Clock_Alpha__Default
 1045 00b8 00000000 		.word	Ft_Esd_Clock_H__Default
 1046 00bc 00000000 		.word	Ft_Esd_Clock_M__Default
 1047 00c0 00000000 		.word	Ft_Esd_Clock_S__Default
 1048 00c4 00000000 		.word	Ft_Esd_Clock_Ms__Default
 1049 00c8 00000000 		.word	Ft_Esd_Clock_Interactive__Default
 1050              		.cfi_endproc
 1051              	.LFE34:
 1053              		.section	.text.Ft_Esd_Clock_Render,"ax",%progbits
 1054              		.align	1
 1055              		.global	Ft_Esd_Clock_Render
 1056              		.syntax unified
 1057              		.thumb
 1058              		.thumb_func
 1059              		.fpu fpv5-sp-d16
 1061              	Ft_Esd_Clock_Render:
 1062              	.LFB35:
  57:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 
  58:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** ft_void_t Ft_Gpu_CoCmd_BgColor(Ft_Gpu_Hal_Context_t *, ft_rgb32_t);
  59:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** ft_void_t Ft_Gpu_CoCmd_Clock(Ft_Gpu_Hal_Context_t *, ft_int16_t, ft_int16_t, ft_int16_t, ft_uint16_
  60:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 
  61:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** void Ft_Esd_Clock_Render(Ft_Esd_Clock *context)
  62:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** {
 1063              		.loc 4 62 0
 1064              		.cfi_startproc
 1065              		@ args = 0, pretend = 0, frame = 104
 1066              		@ frame_needed = 1, uses_anonymous_args = 0
 1067 0000 90B5     		push	{r4, r7, lr}
 1068              	.LCFI106:
 1069              		.cfi_def_cfa_offset 12
 1070              		.cfi_offset 4, -12
 1071              		.cfi_offset 7, -8
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 25


 1072              		.cfi_offset 14, -4
 1073 0002 A1B0     		sub	sp, sp, #132
 1074              	.LCFI107:
 1075              		.cfi_def_cfa_offset 144
 1076 0004 06AF     		add	r7, sp, #24
 1077              	.LCFI108:
 1078              		.cfi_def_cfa 7, 120
 1079 0006 7860     		str	r0, [r7, #4]
  63:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	void *parent = context->Parent;
 1080              		.loc 4 63 0
 1081 0008 7B68     		ldr	r3, [r7, #4]
 1082 000a 1B68     		ldr	r3, [r3]
 1083 000c 3B66     		str	r3, [r7, #96]
  64:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	uint8_t alpha = context->Alpha(parent);
 1084              		.loc 4 64 0
 1085 000e 7B68     		ldr	r3, [r7, #4]
 1086 0010 DB6A     		ldr	r3, [r3, #44]
 1087 0012 386E     		ldr	r0, [r7, #96]
 1088 0014 9847     		blx	r3
 1089              	.LVL0:
 1090 0016 0346     		mov	r3, r0
 1091 0018 87F85F30 		strb	r3, [r7, #95]
  65:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	Ft_Esd_Dl_COLOR_A(alpha);
 1092              		.loc 4 65 0
 1093 001c 97F85F30 		ldrb	r3, [r7, #95]	@ zero_extendqisi2
 1094 0020 1846     		mov	r0, r3
 1095 0022 FFF7FEFF 		bl	Ft_Esd_Dl_COLOR_A
  66:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	Ft_Gpu_Hal_Context_t * phost = Ft_Esd_GetHost();
 1096              		.loc 4 66 0
 1097 0026 FFF7FEFF 		bl	Ft_Esd_GetHost
 1098 002a B865     		str	r0, [r7, #88]
  67:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	Ft_Esd_Theme * theme = context->Theme(parent);
 1099              		.loc 4 67 0
 1100 002c 7B68     		ldr	r3, [r7, #4]
 1101 002e 5B68     		ldr	r3, [r3, #4]
 1102 0030 386E     		ldr	r0, [r7, #96]
 1103 0032 9847     		blx	r3
 1104              	.LVL1:
 1105 0034 7865     		str	r0, [r7, #84]
  68:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	ft_rgb32_t c = Ft_Esd_Theme_GetBackColor(theme);
 1106              		.loc 4 68 0
 1107 0036 786D     		ldr	r0, [r7, #84]
 1108 0038 FFF7FEFF 		bl	Ft_Esd_Theme_GetBackColor
 1109 003c 3865     		str	r0, [r7, #80]
  69:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	Ft_Gpu_CoCmd_BgColor(phost, c);
 1110              		.loc 4 69 0
 1111 003e 396D     		ldr	r1, [r7, #80]
 1112 0040 B86D     		ldr	r0, [r7, #88]
 1113 0042 FFF7FEFF 		bl	Ft_Gpu_CoCmd_BgColor
  70:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	ft_bool_t if_1 = Ft_Esd_TouchTag_Touching(&context->Touch_Tag);
 1114              		.loc 4 70 0
 1115 0046 7B68     		ldr	r3, [r7, #4]
 1116 0048 4033     		adds	r3, r3, #64
 1117 004a 1846     		mov	r0, r3
 1118 004c FFF7FEFF 		bl	Ft_Esd_TouchTag_Touching
 1119 0050 0346     		mov	r3, r0
 1120 0052 87F84F30 		strb	r3, [r7, #79]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 26


  71:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	ft_uint32_t c_1;
  72:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	if (if_1)
 1121              		.loc 4 72 0
 1122 0056 97F84F30 		ldrb	r3, [r7, #79]	@ zero_extendqisi2
 1123 005a 002B     		cmp	r3, #0
 1124 005c 09D0     		beq	.L52
 1125              	.LBB2:
  73:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	{
  74:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 		Ft_Esd_Theme * theme_1 = context->Theme(parent);
 1126              		.loc 4 74 0
 1127 005e 7B68     		ldr	r3, [r7, #4]
 1128 0060 5B68     		ldr	r3, [r3, #4]
 1129 0062 386E     		ldr	r0, [r7, #96]
 1130 0064 9847     		blx	r3
 1131              	.LVL2:
 1132 0066 7864     		str	r0, [r7, #68]
  75:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 		c_1 = Ft_Esd_Theme_GetPrimaryColor(theme_1);
 1133              		.loc 4 75 0
 1134 0068 786C     		ldr	r0, [r7, #68]
 1135 006a FFF7FEFF 		bl	Ft_Esd_Theme_GetPrimaryColor
 1136 006e 7866     		str	r0, [r7, #100]
 1137              	.LBE2:
 1138 0070 08E0     		b	.L53
 1139              	.L52:
 1140              	.LBB3:
  76:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	}
  77:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	else
  78:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	{
  79:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 		Ft_Esd_Theme * theme_2 = context->Theme(parent);
 1141              		.loc 4 79 0
 1142 0072 7B68     		ldr	r3, [r7, #4]
 1143 0074 5B68     		ldr	r3, [r3, #4]
 1144 0076 386E     		ldr	r0, [r7, #96]
 1145 0078 9847     		blx	r3
 1146              	.LVL3:
 1147 007a B864     		str	r0, [r7, #72]
  80:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 		c_1 = Ft_Esd_Theme_GetTextColor(theme_2);
 1148              		.loc 4 80 0
 1149 007c B86C     		ldr	r0, [r7, #72]
 1150 007e FFF7FEFF 		bl	Ft_Esd_Theme_GetTextColor
 1151 0082 7866     		str	r0, [r7, #100]
 1152              	.L53:
 1153              	.LBE3:
  81:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	}
  82:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	Ft_Esd_Dl_COLOR_RGB(c_1);
 1154              		.loc 4 82 0
 1155 0084 786E     		ldr	r0, [r7, #100]
 1156 0086 FFF7FEFF 		bl	Ft_Esd_Dl_COLOR_RGB
  83:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	ft_uint8_t s = Ft_Esd_TouchTag_Tag(&context->Touch_Tag);
 1157              		.loc 4 83 0
 1158 008a 7B68     		ldr	r3, [r7, #4]
 1159 008c 4033     		adds	r3, r3, #64
 1160 008e 1846     		mov	r0, r3
 1161 0090 FFF7FEFF 		bl	Ft_Esd_TouchTag_Tag
 1162 0094 0346     		mov	r3, r0
 1163 0096 87F84330 		strb	r3, [r7, #67]
  84:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	Ft_Esd_Dl_TAG(s);
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 27


 1164              		.loc 4 84 0
 1165 009a 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 1166 009e 1846     		mov	r0, r3
 1167 00a0 FFF7FEFF 		bl	Ft_Esd_Dl_TAG
  85:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	Ft_Gpu_Hal_Context_t * phost_1 = Ft_Esd_GetHost();
 1168              		.loc 4 85 0
 1169 00a4 FFF7FEFF 		bl	Ft_Esd_GetHost
 1170 00a8 F863     		str	r0, [r7, #60]
  86:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	ft_int16_t x = Ft_Esd_PosSizeToRadius_CenterX(&context->Ft_Esd_PosSizeToRadius);
 1171              		.loc 4 86 0
 1172 00aa 7B68     		ldr	r3, [r7, #4]
 1173 00ac 1033     		adds	r3, r3, #16
 1174 00ae 1846     		mov	r0, r3
 1175 00b0 FFF7FEFF 		bl	Ft_Esd_PosSizeToRadius_CenterX
 1176 00b4 0346     		mov	r3, r0
 1177 00b6 7B87     		strh	r3, [r7, #58]	@ movhi
  87:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	ft_int16_t y = Ft_Esd_PosSizeToRadius_CenterY(&context->Ft_Esd_PosSizeToRadius);
 1178              		.loc 4 87 0
 1179 00b8 7B68     		ldr	r3, [r7, #4]
 1180 00ba 1033     		adds	r3, r3, #16
 1181 00bc 1846     		mov	r0, r3
 1182 00be FFF7FEFF 		bl	Ft_Esd_PosSizeToRadius_CenterY
 1183 00c2 0346     		mov	r3, r0
 1184 00c4 3B87     		strh	r3, [r7, #56]	@ movhi
  88:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	ft_int16_t r = Ft_Esd_PosSizeToRadius_Radius(&context->Ft_Esd_PosSizeToRadius);
 1185              		.loc 4 88 0
 1186 00c6 7B68     		ldr	r3, [r7, #4]
 1187 00c8 1033     		adds	r3, r3, #16
 1188 00ca 1846     		mov	r0, r3
 1189 00cc FFF7FEFF 		bl	Ft_Esd_PosSizeToRadius_Radius
 1190 00d0 0346     		mov	r3, r0
 1191 00d2 FB86     		strh	r3, [r7, #54]	@ movhi
  89:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	ft_uint16_t options = 0;
 1192              		.loc 4 89 0
 1193 00d4 0023     		movs	r3, #0
 1194 00d6 BB86     		strh	r3, [r7, #52]	@ movhi
  90:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	ft_uint16_t height = context->H(parent);
 1195              		.loc 4 90 0
 1196 00d8 7B68     		ldr	r3, [r7, #4]
 1197 00da 1B6B     		ldr	r3, [r3, #48]
 1198 00dc 386E     		ldr	r0, [r7, #96]
 1199 00de 9847     		blx	r3
 1200              	.LVL4:
 1201 00e0 0346     		mov	r3, r0
 1202 00e2 7B86     		strh	r3, [r7, #50]	@ movhi
  91:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	ft_uint16_t m = context->M(parent);
 1203              		.loc 4 91 0
 1204 00e4 7B68     		ldr	r3, [r7, #4]
 1205 00e6 5B6B     		ldr	r3, [r3, #52]
 1206 00e8 386E     		ldr	r0, [r7, #96]
 1207 00ea 9847     		blx	r3
 1208              	.LVL5:
 1209 00ec 0346     		mov	r3, r0
 1210 00ee 3B86     		strh	r3, [r7, #48]	@ movhi
  92:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	ft_uint16_t left = context->S(parent);
 1211              		.loc 4 92 0
 1212 00f0 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 28


 1213 00f2 9B6B     		ldr	r3, [r3, #56]
 1214 00f4 386E     		ldr	r0, [r7, #96]
 1215 00f6 9847     		blx	r3
 1216              	.LVL6:
 1217 00f8 0346     		mov	r3, r0
 1218 00fa FB85     		strh	r3, [r7, #46]	@ movhi
  93:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	ft_uint32_t left_1 = context->Ms(parent);
 1219              		.loc 4 93 0
 1220 00fc 7B68     		ldr	r3, [r7, #4]
 1221 00fe DB6B     		ldr	r3, [r3, #60]
 1222 0100 386E     		ldr	r0, [r7, #96]
 1223 0102 9847     		blx	r3
 1224              	.LVL7:
 1225 0104 B862     		str	r0, [r7, #40]
  94:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	ft_uint32_t right_1 = 1000UL;
 1226              		.loc 4 94 0
 1227 0106 4FF47A73 		mov	r3, #1000
 1228 010a 7B62     		str	r3, [r7, #36]
  95:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	ft_uint32_t right = left_1 / right_1;
 1229              		.loc 4 95 0
 1230 010c BA6A     		ldr	r2, [r7, #40]
 1231 010e 7B6A     		ldr	r3, [r7, #36]
 1232 0110 B2FBF3F3 		udiv	r3, r2, r3
 1233 0114 3B62     		str	r3, [r7, #32]
  96:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	ft_uint32_t s_1 = left + right;
 1234              		.loc 4 96 0
 1235 0116 FB8D     		ldrh	r3, [r7, #46]
 1236 0118 3A6A     		ldr	r2, [r7, #32]
 1237 011a 1344     		add	r3, r3, r2
 1238 011c FB61     		str	r3, [r7, #28]
  97:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	ft_uint32_t left_2 = context->Ms(parent);
 1239              		.loc 4 97 0
 1240 011e 7B68     		ldr	r3, [r7, #4]
 1241 0120 DB6B     		ldr	r3, [r3, #60]
 1242 0122 386E     		ldr	r0, [r7, #96]
 1243 0124 9847     		blx	r3
 1244              	.LVL8:
 1245 0126 B861     		str	r0, [r7, #24]
  98:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	ft_uint32_t right_2 = 1000UL;
 1246              		.loc 4 98 0
 1247 0128 4FF47A73 		mov	r3, #1000
 1248 012c 7B61     		str	r3, [r7, #20]
  99:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	ft_uint32_t ms = left_2 % right_2;
 1249              		.loc 4 99 0
 1250 012e BB69     		ldr	r3, [r7, #24]
 1251 0130 7A69     		ldr	r2, [r7, #20]
 1252 0132 B3FBF2F2 		udiv	r2, r3, r2
 1253 0136 7969     		ldr	r1, [r7, #20]
 1254 0138 01FB02F2 		mul	r2, r1, r2
 1255 013c 9B1A     		subs	r3, r3, r2
 1256 013e 3B61     		str	r3, [r7, #16]
 100:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	Ft_Gpu_CoCmd_Clock(phost_1, x, y, r, options, height, m, s_1, ms);
 1257              		.loc 4 100 0
 1258 0140 FB69     		ldr	r3, [r7, #28]
 1259 0142 9BB2     		uxth	r3, r3
 1260 0144 3A69     		ldr	r2, [r7, #16]
 1261 0146 92B2     		uxth	r2, r2
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 29


 1262 0148 B7F93640 		ldrsh	r4, [r7, #54]
 1263 014c B7F93800 		ldrsh	r0, [r7, #56]
 1264 0150 B7F93A10 		ldrsh	r1, [r7, #58]
 1265 0154 0492     		str	r2, [sp, #16]
 1266 0156 0393     		str	r3, [sp, #12]
 1267 0158 3B8E     		ldrh	r3, [r7, #48]
 1268 015a 0293     		str	r3, [sp, #8]
 1269 015c 7B8E     		ldrh	r3, [r7, #50]
 1270 015e 0193     		str	r3, [sp, #4]
 1271 0160 BB8E     		ldrh	r3, [r7, #52]
 1272 0162 0093     		str	r3, [sp]
 1273 0164 2346     		mov	r3, r4
 1274 0166 0246     		mov	r2, r0
 1275 0168 F86B     		ldr	r0, [r7, #60]
 1276 016a FFF7FEFF 		bl	Ft_Gpu_CoCmd_Clock
 101:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	ft_uint8_t s_2 = 255;
 1277              		.loc 4 101 0
 1278 016e FF23     		movs	r3, #255
 1279 0170 FB73     		strb	r3, [r7, #15]
 102:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	Ft_Esd_Dl_TAG(s_2);
 1280              		.loc 4 102 0
 1281 0172 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1282 0174 1846     		mov	r0, r3
 1283 0176 FFF7FEFF 		bl	Ft_Esd_Dl_TAG
 103:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** }
 1284              		.loc 4 103 0
 1285 017a 00BF     		nop
 1286 017c 6C37     		adds	r7, r7, #108
 1287              	.LCFI109:
 1288              		.cfi_def_cfa_offset 12
 1289 017e BD46     		mov	sp, r7
 1290              	.LCFI110:
 1291              		.cfi_def_cfa_register 13
 1292              		@ sp needed
 1293 0180 90BD     		pop	{r4, r7, pc}
 1294              		.cfi_endproc
 1295              	.LFE35:
 1297              		.section	.text.Ft_Esd_Clock_Ft_Esd_PosSizeToRadius_X__Property,"ax",%progbits
 1298              		.align	1
 1299              		.syntax unified
 1300              		.thumb
 1301              		.thumb_func
 1302              		.fpu fpv5-sp-d16
 1304              	Ft_Esd_Clock_Ft_Esd_PosSizeToRadius_X__Property:
 1305              	.LFB36:
 104:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 
 105:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** ft_int16_t Ft_Esd_Clock_Ft_Esd_PosSizeToRadius_X__Property(void *c)
 106:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** {
 1306              		.loc 4 106 0
 1307              		.cfi_startproc
 1308              		@ args = 0, pretend = 0, frame = 16
 1309              		@ frame_needed = 1, uses_anonymous_args = 0
 1310 0000 80B5     		push	{r7, lr}
 1311              	.LCFI111:
 1312              		.cfi_def_cfa_offset 8
 1313              		.cfi_offset 7, -8
 1314              		.cfi_offset 14, -4
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 30


 1315 0002 84B0     		sub	sp, sp, #16
 1316              	.LCFI112:
 1317              		.cfi_def_cfa_offset 24
 1318 0004 00AF     		add	r7, sp, #0
 1319              	.LCFI113:
 1320              		.cfi_def_cfa_register 7
 1321 0006 7860     		str	r0, [r7, #4]
 107:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	Ft_Esd_Clock *context = (Ft_Esd_Clock *)c;
 1322              		.loc 4 107 0
 1323 0008 7B68     		ldr	r3, [r7, #4]
 1324 000a FB60     		str	r3, [r7, #12]
 108:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	void *parent = context->Parent;
 1325              		.loc 4 108 0
 1326 000c FB68     		ldr	r3, [r7, #12]
 1327 000e 1B68     		ldr	r3, [r3]
 1328 0010 BB60     		str	r3, [r7, #8]
 109:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	return context->X(parent);
 1329              		.loc 4 109 0
 1330 0012 FB68     		ldr	r3, [r7, #12]
 1331 0014 9B68     		ldr	r3, [r3, #8]
 1332 0016 B868     		ldr	r0, [r7, #8]
 1333 0018 9847     		blx	r3
 1334              	.LVL9:
 1335 001a 0346     		mov	r3, r0
 110:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** }
 1336              		.loc 4 110 0
 1337 001c 1846     		mov	r0, r3
 1338 001e 1037     		adds	r7, r7, #16
 1339              	.LCFI114:
 1340              		.cfi_def_cfa_offset 8
 1341 0020 BD46     		mov	sp, r7
 1342              	.LCFI115:
 1343              		.cfi_def_cfa_register 13
 1344              		@ sp needed
 1345 0022 80BD     		pop	{r7, pc}
 1346              		.cfi_endproc
 1347              	.LFE36:
 1349              		.section	.text.Ft_Esd_Clock_Ft_Esd_PosSizeToRadius_Y__Property,"ax",%progbits
 1350              		.align	1
 1351              		.syntax unified
 1352              		.thumb
 1353              		.thumb_func
 1354              		.fpu fpv5-sp-d16
 1356              	Ft_Esd_Clock_Ft_Esd_PosSizeToRadius_Y__Property:
 1357              	.LFB37:
 111:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 
 112:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** ft_int16_t Ft_Esd_Clock_Ft_Esd_PosSizeToRadius_Y__Property(void *c)
 113:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** {
 1358              		.loc 4 113 0
 1359              		.cfi_startproc
 1360              		@ args = 0, pretend = 0, frame = 16
 1361              		@ frame_needed = 1, uses_anonymous_args = 0
 1362 0000 80B5     		push	{r7, lr}
 1363              	.LCFI116:
 1364              		.cfi_def_cfa_offset 8
 1365              		.cfi_offset 7, -8
 1366              		.cfi_offset 14, -4
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 31


 1367 0002 84B0     		sub	sp, sp, #16
 1368              	.LCFI117:
 1369              		.cfi_def_cfa_offset 24
 1370 0004 00AF     		add	r7, sp, #0
 1371              	.LCFI118:
 1372              		.cfi_def_cfa_register 7
 1373 0006 7860     		str	r0, [r7, #4]
 114:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	Ft_Esd_Clock *context = (Ft_Esd_Clock *)c;
 1374              		.loc 4 114 0
 1375 0008 7B68     		ldr	r3, [r7, #4]
 1376 000a FB60     		str	r3, [r7, #12]
 115:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	void *parent = context->Parent;
 1377              		.loc 4 115 0
 1378 000c FB68     		ldr	r3, [r7, #12]
 1379 000e 1B68     		ldr	r3, [r3]
 1380 0010 BB60     		str	r3, [r7, #8]
 116:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	return context->Y(parent);
 1381              		.loc 4 116 0
 1382 0012 FB68     		ldr	r3, [r7, #12]
 1383 0014 DB68     		ldr	r3, [r3, #12]
 1384 0016 B868     		ldr	r0, [r7, #8]
 1385 0018 9847     		blx	r3
 1386              	.LVL10:
 1387 001a 0346     		mov	r3, r0
 117:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** }
 1388              		.loc 4 117 0
 1389 001c 1846     		mov	r0, r3
 1390 001e 1037     		adds	r7, r7, #16
 1391              	.LCFI119:
 1392              		.cfi_def_cfa_offset 8
 1393 0020 BD46     		mov	sp, r7
 1394              	.LCFI120:
 1395              		.cfi_def_cfa_register 13
 1396              		@ sp needed
 1397 0022 80BD     		pop	{r7, pc}
 1398              		.cfi_endproc
 1399              	.LFE37:
 1401              		.section	.text.Ft_Esd_Clock_Ft_Esd_PosSizeToRadius_Width__Property,"ax",%progbits
 1402              		.align	1
 1403              		.syntax unified
 1404              		.thumb
 1405              		.thumb_func
 1406              		.fpu fpv5-sp-d16
 1408              	Ft_Esd_Clock_Ft_Esd_PosSizeToRadius_Width__Property:
 1409              	.LFB38:
 118:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 
 119:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** ft_int16_t Ft_Esd_Clock_Ft_Esd_PosSizeToRadius_Width__Property(void *c)
 120:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** {
 1410              		.loc 4 120 0
 1411              		.cfi_startproc
 1412              		@ args = 0, pretend = 0, frame = 16
 1413              		@ frame_needed = 1, uses_anonymous_args = 0
 1414 0000 80B5     		push	{r7, lr}
 1415              	.LCFI121:
 1416              		.cfi_def_cfa_offset 8
 1417              		.cfi_offset 7, -8
 1418              		.cfi_offset 14, -4
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 32


 1419 0002 84B0     		sub	sp, sp, #16
 1420              	.LCFI122:
 1421              		.cfi_def_cfa_offset 24
 1422 0004 00AF     		add	r7, sp, #0
 1423              	.LCFI123:
 1424              		.cfi_def_cfa_register 7
 1425 0006 7860     		str	r0, [r7, #4]
 121:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	Ft_Esd_Clock *context = (Ft_Esd_Clock *)c;
 1426              		.loc 4 121 0
 1427 0008 7B68     		ldr	r3, [r7, #4]
 1428 000a FB60     		str	r3, [r7, #12]
 122:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	void *parent = context->Parent;
 1429              		.loc 4 122 0
 1430 000c FB68     		ldr	r3, [r7, #12]
 1431 000e 1B68     		ldr	r3, [r3]
 1432 0010 BB60     		str	r3, [r7, #8]
 123:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	return context->Width(parent);
 1433              		.loc 4 123 0
 1434 0012 FB68     		ldr	r3, [r7, #12]
 1435 0014 5B6A     		ldr	r3, [r3, #36]
 1436 0016 B868     		ldr	r0, [r7, #8]
 1437 0018 9847     		blx	r3
 1438              	.LVL11:
 1439 001a 0346     		mov	r3, r0
 124:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** }
 1440              		.loc 4 124 0
 1441 001c 1846     		mov	r0, r3
 1442 001e 1037     		adds	r7, r7, #16
 1443              	.LCFI124:
 1444              		.cfi_def_cfa_offset 8
 1445 0020 BD46     		mov	sp, r7
 1446              	.LCFI125:
 1447              		.cfi_def_cfa_register 13
 1448              		@ sp needed
 1449 0022 80BD     		pop	{r7, pc}
 1450              		.cfi_endproc
 1451              	.LFE38:
 1453              		.section	.text.Ft_Esd_Clock_Ft_Esd_PosSizeToRadius_Height__Property,"ax",%progbits
 1454              		.align	1
 1455              		.syntax unified
 1456              		.thumb
 1457              		.thumb_func
 1458              		.fpu fpv5-sp-d16
 1460              	Ft_Esd_Clock_Ft_Esd_PosSizeToRadius_Height__Property:
 1461              	.LFB39:
 125:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 
 126:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** ft_int16_t Ft_Esd_Clock_Ft_Esd_PosSizeToRadius_Height__Property(void *c)
 127:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** {
 1462              		.loc 4 127 0
 1463              		.cfi_startproc
 1464              		@ args = 0, pretend = 0, frame = 16
 1465              		@ frame_needed = 1, uses_anonymous_args = 0
 1466 0000 80B5     		push	{r7, lr}
 1467              	.LCFI126:
 1468              		.cfi_def_cfa_offset 8
 1469              		.cfi_offset 7, -8
 1470              		.cfi_offset 14, -4
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 33


 1471 0002 84B0     		sub	sp, sp, #16
 1472              	.LCFI127:
 1473              		.cfi_def_cfa_offset 24
 1474 0004 00AF     		add	r7, sp, #0
 1475              	.LCFI128:
 1476              		.cfi_def_cfa_register 7
 1477 0006 7860     		str	r0, [r7, #4]
 128:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	Ft_Esd_Clock *context = (Ft_Esd_Clock *)c;
 1478              		.loc 4 128 0
 1479 0008 7B68     		ldr	r3, [r7, #4]
 1480 000a FB60     		str	r3, [r7, #12]
 129:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	void *parent = context->Parent;
 1481              		.loc 4 129 0
 1482 000c FB68     		ldr	r3, [r7, #12]
 1483 000e 1B68     		ldr	r3, [r3]
 1484 0010 BB60     		str	r3, [r7, #8]
 130:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	return context->Height(parent);
 1485              		.loc 4 130 0
 1486 0012 FB68     		ldr	r3, [r7, #12]
 1487 0014 9B6A     		ldr	r3, [r3, #40]
 1488 0016 B868     		ldr	r0, [r7, #8]
 1489 0018 9847     		blx	r3
 1490              	.LVL12:
 1491 001a 0346     		mov	r3, r0
 131:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** }
 1492              		.loc 4 131 0
 1493 001c 1846     		mov	r0, r3
 1494 001e 1037     		adds	r7, r7, #16
 1495              	.LCFI129:
 1496              		.cfi_def_cfa_offset 8
 1497 0020 BD46     		mov	sp, r7
 1498              	.LCFI130:
 1499              		.cfi_def_cfa_register 13
 1500              		@ sp needed
 1501 0022 80BD     		pop	{r7, pc}
 1502              		.cfi_endproc
 1503              	.LFE39:
 1505              		.section	.text.Ft_Esd_Clock_Start,"ax",%progbits
 1506              		.align	1
 1507              		.global	Ft_Esd_Clock_Start
 1508              		.syntax unified
 1509              		.thumb
 1510              		.thumb_func
 1511              		.fpu fpv5-sp-d16
 1513              	Ft_Esd_Clock_Start:
 1514              	.LFB40:
 132:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 
 133:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** void Ft_Esd_Clock_Start(Ft_Esd_Clock *context)
 134:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** {
 1515              		.loc 4 134 0
 1516              		.cfi_startproc
 1517              		@ args = 0, pretend = 0, frame = 16
 1518              		@ frame_needed = 1, uses_anonymous_args = 0
 1519 0000 80B5     		push	{r7, lr}
 1520              	.LCFI131:
 1521              		.cfi_def_cfa_offset 8
 1522              		.cfi_offset 7, -8
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 34


 1523              		.cfi_offset 14, -4
 1524 0002 84B0     		sub	sp, sp, #16
 1525              	.LCFI132:
 1526              		.cfi_def_cfa_offset 24
 1527 0004 00AF     		add	r7, sp, #0
 1528              	.LCFI133:
 1529              		.cfi_def_cfa_register 7
 1530 0006 7860     		str	r0, [r7, #4]
 135:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	void *parent = context->Parent;
 1531              		.loc 4 135 0
 1532 0008 7B68     		ldr	r3, [r7, #4]
 1533 000a 1B68     		ldr	r3, [r3]
 1534 000c FB60     		str	r3, [r7, #12]
 136:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	Ft_Esd_TouchTag_Start(&context->Touch_Tag);
 1535              		.loc 4 136 0
 1536 000e 7B68     		ldr	r3, [r7, #4]
 1537 0010 4033     		adds	r3, r3, #64
 1538 0012 1846     		mov	r0, r3
 1539 0014 FFF7FEFF 		bl	Ft_Esd_TouchTag_Start
 137:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** }
 1540              		.loc 4 137 0
 1541 0018 00BF     		nop
 1542 001a 1037     		adds	r7, r7, #16
 1543              	.LCFI134:
 1544              		.cfi_def_cfa_offset 8
 1545 001c BD46     		mov	sp, r7
 1546              	.LCFI135:
 1547              		.cfi_def_cfa_register 13
 1548              		@ sp needed
 1549 001e 80BD     		pop	{r7, pc}
 1550              		.cfi_endproc
 1551              	.LFE40:
 1553              		.section	.text.Ft_Esd_Clock_Update,"ax",%progbits
 1554              		.align	1
 1555              		.global	Ft_Esd_Clock_Update
 1556              		.syntax unified
 1557              		.thumb
 1558              		.thumb_func
 1559              		.fpu fpv5-sp-d16
 1561              	Ft_Esd_Clock_Update:
 1562              	.LFB41:
 138:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 
 139:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** void Ft_Esd_Clock_Update(Ft_Esd_Clock *context)
 140:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** {
 1563              		.loc 4 140 0
 1564              		.cfi_startproc
 1565              		@ args = 0, pretend = 0, frame = 16
 1566              		@ frame_needed = 1, uses_anonymous_args = 0
 1567 0000 80B5     		push	{r7, lr}
 1568              	.LCFI136:
 1569              		.cfi_def_cfa_offset 8
 1570              		.cfi_offset 7, -8
 1571              		.cfi_offset 14, -4
 1572 0002 84B0     		sub	sp, sp, #16
 1573              	.LCFI137:
 1574              		.cfi_def_cfa_offset 24
 1575 0004 00AF     		add	r7, sp, #0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 35


 1576              	.LCFI138:
 1577              		.cfi_def_cfa_register 7
 1578 0006 7860     		str	r0, [r7, #4]
 141:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	void *parent = context->Parent;
 1579              		.loc 4 141 0
 1580 0008 7B68     		ldr	r3, [r7, #4]
 1581 000a 1B68     		ldr	r3, [r3]
 1582 000c FB60     		str	r3, [r7, #12]
 142:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	ft_bool_t if_2 = context->Interactive(parent);
 1583              		.loc 4 142 0
 1584 000e 7B68     		ldr	r3, [r7, #4]
 1585 0010 9B6D     		ldr	r3, [r3, #88]
 1586 0012 F868     		ldr	r0, [r7, #12]
 1587 0014 9847     		blx	r3
 1588              	.LVL13:
 1589 0016 0346     		mov	r3, r0
 1590 0018 FB72     		strb	r3, [r7, #11]
 143:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	if (if_2)
 1591              		.loc 4 143 0
 1592 001a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1593 001c 002B     		cmp	r3, #0
 1594 001e 04D0     		beq	.L65
 144:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	{
 145:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 		Ft_Esd_TouchTag_Update(&context->Touch_Tag);
 1595              		.loc 4 145 0
 1596 0020 7B68     		ldr	r3, [r7, #4]
 1597 0022 4033     		adds	r3, r3, #64
 1598 0024 1846     		mov	r0, r3
 1599 0026 FFF7FEFF 		bl	Ft_Esd_TouchTag_Update
 1600              	.L65:
 146:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	}
 147:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	else
 148:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	{
 149:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	}
 150:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** }
 1601              		.loc 4 150 0
 1602 002a 00BF     		nop
 1603 002c 1037     		adds	r7, r7, #16
 1604              	.LCFI139:
 1605              		.cfi_def_cfa_offset 8
 1606 002e BD46     		mov	sp, r7
 1607              	.LCFI140:
 1608              		.cfi_def_cfa_register 13
 1609              		@ sp needed
 1610 0030 80BD     		pop	{r7, pc}
 1611              		.cfi_endproc
 1612              	.LFE41:
 1614              		.section	.text.Ft_Esd_Clock_End,"ax",%progbits
 1615              		.align	1
 1616              		.global	Ft_Esd_Clock_End
 1617              		.syntax unified
 1618              		.thumb
 1619              		.thumb_func
 1620              		.fpu fpv5-sp-d16
 1622              	Ft_Esd_Clock_End:
 1623              	.LFB42:
 151:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 36


 152:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** void Ft_Esd_Clock_End(Ft_Esd_Clock *context)
 153:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** {
 1624              		.loc 4 153 0
 1625              		.cfi_startproc
 1626              		@ args = 0, pretend = 0, frame = 16
 1627              		@ frame_needed = 1, uses_anonymous_args = 0
 1628 0000 80B5     		push	{r7, lr}
 1629              	.LCFI141:
 1630              		.cfi_def_cfa_offset 8
 1631              		.cfi_offset 7, -8
 1632              		.cfi_offset 14, -4
 1633 0002 84B0     		sub	sp, sp, #16
 1634              	.LCFI142:
 1635              		.cfi_def_cfa_offset 24
 1636 0004 00AF     		add	r7, sp, #0
 1637              	.LCFI143:
 1638              		.cfi_def_cfa_register 7
 1639 0006 7860     		str	r0, [r7, #4]
 154:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	void *parent = context->Parent;
 1640              		.loc 4 154 0
 1641 0008 7B68     		ldr	r3, [r7, #4]
 1642 000a 1B68     		ldr	r3, [r3]
 1643 000c FB60     		str	r3, [r7, #12]
 155:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** 	Ft_Esd_TouchTag_End(&context->Touch_Tag);
 1644              		.loc 4 155 0
 1645 000e 7B68     		ldr	r3, [r7, #4]
 1646 0010 4033     		adds	r3, r3, #64
 1647 0012 1846     		mov	r0, r3
 1648 0014 FFF7FEFF 		bl	Ft_Esd_TouchTag_End
 156:FT_Esd_Widgets/Ft_Esd_Clock__Generated.c **** }
 1649              		.loc 4 156 0
 1650 0018 00BF     		nop
 1651 001a 1037     		adds	r7, r7, #16
 1652              	.LCFI144:
 1653              		.cfi_def_cfa_offset 8
 1654 001c BD46     		mov	sp, r7
 1655              	.LCFI145:
 1656              		.cfi_def_cfa_register 13
 1657              		@ sp needed
 1658 001e 80BD     		pop	{r7, pc}
 1659              		.cfi_endproc
 1660              	.LFE42:
 1662              		.text
 1663              	.Letext0:
 1664              		.file 5 "FT_Eve_Hal/FT_DataTypes.h"
 1665              		.file 6 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/machine/_default_types
 1666              		.file 7 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/lock.h"
 1667              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_types.h"
 1668              		.file 9 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 1669              		.file 10 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_stdint.h"
 1670              		.file 11 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/unistd.h"
 1671              		.file 12 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/reent.h"
 1672              		.file 13 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/stdlib.h"
 1673              		.file 14 "FT_Eve_Hal/FT_Gpu_Hal.h"
 1674              		.file 15 "FT_Esd_Framework/Ft_Esd.h"
 1675              		.file 16 "FT_Esd_Widgets/Ft_Esd_DefaultTheme.h"
 1676              		.file 17 "FT_Esd_Widgets/Ft_Esd_PosSizeToRadius.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 37


 1677              		.file 18 "FT_Esd_Framework/Ft_Esd_TouchTag.h"
 1678              		.file 19 "FT_Esd_Widgets/Ft_Esd_Clock.h"
 1679              		.file 20 "FT_Esd_Framework/FT_Esd_CoPro_Cmds.h"
 1680              		.file 21 "FT_Esd_Framework/Ft_Esd_GpuAlloc.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 38


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Ft_Esd_Clock__Generated.c
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:18     .text.Ft_Esd_Theme_GetBackColor:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:24     .text.Ft_Esd_Theme_GetBackColor:0000000000000000 Ft_Esd_Theme_GetBackColor
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:71     .text.Ft_Esd_Theme_GetTextColor:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:77     .text.Ft_Esd_Theme_GetTextColor:0000000000000000 Ft_Esd_Theme_GetTextColor
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:123    .text.Ft_Esd_Theme_GetPrimaryColor:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:129    .text.Ft_Esd_Theme_GetPrimaryColor:0000000000000000 Ft_Esd_Theme_GetPrimaryColor
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:175    .text.Ft_Esd_BitmapCell_GetInfo:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:181    .text.Ft_Esd_BitmapCell_GetInfo:0000000000000000 Ft_Esd_BitmapCell_GetInfo
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:230    .text.Ft_Esd_Dl_TAG:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:236    .text.Ft_Esd_Dl_TAG:0000000000000000 Ft_Esd_Dl_TAG
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:277    .text.Ft_Esd_Dl_TAG:0000000000000024 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:282    .text.Ft_Esd_Dl_COLOR_RGB:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:288    .text.Ft_Esd_Dl_COLOR_RGB:0000000000000000 Ft_Esd_Dl_COLOR_RGB
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:352    .text.Ft_Esd_Dl_COLOR_RGB:0000000000000050 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:359    .text.Ft_Esd_Dl_COLOR_A:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:365    .text.Ft_Esd_Dl_COLOR_A:0000000000000000 Ft_Esd_Dl_COLOR_A
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:426    .text.Ft_Esd_Dl_COLOR_A:0000000000000048 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:433    .text.Ft_Esd_Clock_Theme__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:440    .text.Ft_Esd_Clock_Theme__Default:0000000000000000 Ft_Esd_Clock_Theme__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:475    .text.Ft_Esd_Clock_X__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:482    .text.Ft_Esd_Clock_X__Default:0000000000000000 Ft_Esd_Clock_X__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:519    .text.Ft_Esd_Clock_Y__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:526    .text.Ft_Esd_Clock_Y__Default:0000000000000000 Ft_Esd_Clock_Y__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:563    .text.Ft_Esd_Clock_Width__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:570    .text.Ft_Esd_Clock_Width__Default:0000000000000000 Ft_Esd_Clock_Width__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:607    .text.Ft_Esd_Clock_Height__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:614    .text.Ft_Esd_Clock_Height__Default:0000000000000000 Ft_Esd_Clock_Height__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:651    .text.Ft_Esd_Clock_Alpha__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:658    .text.Ft_Esd_Clock_Alpha__Default:0000000000000000 Ft_Esd_Clock_Alpha__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:695    .text.Ft_Esd_Clock_H__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:702    .text.Ft_Esd_Clock_H__Default:0000000000000000 Ft_Esd_Clock_H__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:739    .text.Ft_Esd_Clock_M__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:746    .text.Ft_Esd_Clock_M__Default:0000000000000000 Ft_Esd_Clock_M__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:783    .text.Ft_Esd_Clock_S__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:790    .text.Ft_Esd_Clock_S__Default:0000000000000000 Ft_Esd_Clock_S__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:827    .text.Ft_Esd_Clock_Ms__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:834    .text.Ft_Esd_Clock_Ms__Default:0000000000000000 Ft_Esd_Clock_Ms__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:871    .text.Ft_Esd_Clock_Interactive__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:878    .text.Ft_Esd_Clock_Interactive__Default:0000000000000000 Ft_Esd_Clock_Interactive__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:915    .text.Ft_Esd_Clock__Initializer:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:922    .text.Ft_Esd_Clock__Initializer:0000000000000000 Ft_Esd_Clock__Initializer
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:1035   .text.Ft_Esd_Clock__Initializer:0000000000000090 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:1304   .text.Ft_Esd_Clock_Ft_Esd_PosSizeToRadius_X__Property:0000000000000000 Ft_Esd_Clock_Ft_Esd_PosSizeToRadius_X__Property
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:1356   .text.Ft_Esd_Clock_Ft_Esd_PosSizeToRadius_Y__Property:0000000000000000 Ft_Esd_Clock_Ft_Esd_PosSizeToRadius_Y__Property
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:1408   .text.Ft_Esd_Clock_Ft_Esd_PosSizeToRadius_Width__Property:0000000000000000 Ft_Esd_Clock_Ft_Esd_PosSizeToRadius_Width__Property
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:1460   .text.Ft_Esd_Clock_Ft_Esd_PosSizeToRadius_Height__Property:0000000000000000 Ft_Esd_Clock_Ft_Esd_PosSizeToRadius_Height__Property
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:1054   .text.Ft_Esd_Clock_Render:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:1061   .text.Ft_Esd_Clock_Render:0000000000000000 Ft_Esd_Clock_Render
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:1298   .text.Ft_Esd_Clock_Ft_Esd_PosSizeToRadius_X__Property:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:1350   .text.Ft_Esd_Clock_Ft_Esd_PosSizeToRadius_Y__Property:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:1402   .text.Ft_Esd_Clock_Ft_Esd_PosSizeToRadius_Width__Property:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:1454   .text.Ft_Esd_Clock_Ft_Esd_PosSizeToRadius_Height__Property:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:1506   .text.Ft_Esd_Clock_Start:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:1513   .text.Ft_Esd_Clock_Start:0000000000000000 Ft_Esd_Clock_Start
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:1554   .text.Ft_Esd_Clock_Update:0000000000000000 $t
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s 			page 39


/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:1561   .text.Ft_Esd_Clock_Update:0000000000000000 Ft_Esd_Clock_Update
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:1615   .text.Ft_Esd_Clock_End:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cclpsZ3V.s:1622   .text.Ft_Esd_Clock_End:0000000000000000 Ft_Esd_Clock_End

UNDEFINED SYMBOLS
Ft_Esd_Theme_GetCurrent
Ft_Gpu_Hal_WrCmd32
Ft_Esd_Host
Ft_Esd_GpuState_I
Ft_Esd_GpuState
Ft_Esd_PosSizeToRadius__Initializer
Ft_Esd_TouchTag__Initializer
Ft_Esd_GetHost
Ft_Gpu_CoCmd_BgColor
Ft_Esd_TouchTag_Touching
Ft_Esd_TouchTag_Tag
Ft_Esd_PosSizeToRadius_CenterX
Ft_Esd_PosSizeToRadius_CenterY
Ft_Esd_PosSizeToRadius_Radius
Ft_Gpu_CoCmd_Clock
Ft_Esd_TouchTag_Start
Ft_Esd_TouchTag_Update
Ft_Esd_TouchTag_End
