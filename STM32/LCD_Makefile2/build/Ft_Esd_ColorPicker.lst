ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsJmCRD.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"Ft_Esd_ColorPicker.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Ft_Esd_BitmapCell_GetInfo,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	Ft_Esd_BitmapCell_GetInfo:
  25              	.LFB3:
  26              		.file 1 "FT_Esd_Framework/Ft_Esd_BitmapInfo.h"
   1:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** /*
   2:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** Bitmap info structure
   3:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** */
   4:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
   5:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #ifndef FT_ESD_BITMAPINFO_H
   6:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #define FT_ESD_BITMAPINFO_H
   7:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
   8:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "Ft_Esd.h"
   9:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "FT_DataTypes.h"
  10:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "Ft_Esd_GpuAlloc.h"
  11:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  12:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapInfo, Native = Struct) // TODO: Struct support, expose values
  13:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  14:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  15:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Width;
  16:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Height;
  17:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Stride;
  18:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Format;
  19:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Size;
  20:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	const char *File;
  21:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  22:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Handle pointing to the address in RAM_G if it is allocated
  23:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_GpuHandle GpuHandle;
  24:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  25:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Bitmap handle that is being used
  26:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_uint32_t BitmapHandle;
  27:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  28:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	const char *PaletteFile;
  29:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_GpuHandle PaletteGpuHandle;
  30:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  31:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// When this is set, the allocated ram is not free'd automatically
  32:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Use Ft_Esd_GpuAlloc_Free(GpuAlloc, GpuHandle) to free the GPU ram manually
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsJmCRD.s 			page 2


  33:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_bool_t Persistent;
  34:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  35:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_BitmapInfo;
  36:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  37:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapInfo *, Native = Pointer, Edit = Library)
  38:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  39:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapCell, Native = Struct) // TODO: Struct support, expose values
  40:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  41:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  42:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapInfo *Info;
  43:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Cell;
  44:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_BitmapCell;
  45:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  46:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapCell *, Native = Pointer, Edit = Library)
  47:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  48:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // Attempts to load the specified bitmap if it has not been loaded into RAM_G yet.
  49:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // Call during the Update cycle of each frame to keep the bitmap flagged as in use, otherwise the m
  50:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_LoadBitmap, Type = ft_uint32_t, Include = "Ft_Esd_BitmapInfo.h", DisplayName = 
  51:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapInfo, Type = Ft_Esd_BitmapInfo *)
  52:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ft_uint32_t Ft_Esd_LoadBitmap(Ft_Esd_BitmapInfo *bitmapInfo);
  53:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  54:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_LoadPalette, Type = ft_uint32_t, Include = "Ft_Esd_BitmapInfo.h", DisplayName =
  55:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapInfo, Type = Ft_Esd_BitmapInfo *)
  56:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ft_uint32_t Ft_Esd_LoadPalette(Ft_Esd_BitmapInfo *bitmapInfo);
  57:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  58:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_ENUM(_BitmapResourceFormat, DisplayName = "Bitmap Format")
  59:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB1555)
  60:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L1)
  61:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L2)
  62:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L4)
  63:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L8)
  64:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(RGB332)
  65:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB2)
  66:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB4)
  67:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(RGB565)
  68:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(PALETTED565)
  69:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(PALETTED4444)
  70:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(PALETTED8)
  71:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(JPEG)
  72:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(PNG)
  73:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_END()
  74:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  75:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_LOGIC(Ft_Esd_SwitchBitmapCell, Callback, Include = "Ft_Esd_BitmapInfo.h", DisplayName = "Switch
  76:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  77:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  78:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Callback
  79:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	void *Parent;
  80:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  81:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  82:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Input
  83:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  84:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  85:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ESD_INPUT(BitmapInfo, Type = Ft_Esd_BitmapInfo *, DisplayName = "Bitmap Info")
  86:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapInfo *(* BitmapInfo)(void *context);
  87:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  88:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ESD_INPUT(Cell, Type = ft_uint8_t, DisplayName = "Cell")
  89:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_uint8_t(* Cell)(void *context);
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsJmCRD.s 			page 3


  90:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  91:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  92:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Variables
  93:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  94:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  95:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// BitmapCell object
  96:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapCell BitmapCell;
  97:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  98:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_SwitchBitmapCell;
  99:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 100:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** void Ft_Esd_SwitchBitmapCell__Initializer(Ft_Esd_SwitchBitmapCell *context);
 101:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 102:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_OUTPUT(BitmapCell, Type = Ft_Esd_BitmapCell *, DisplayName = "Bitmap Cell")
 103:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** Ft_Esd_BitmapCell *Ft_Esd_SwitchBitmapCell_BitmapCell(Ft_Esd_SwitchBitmapCell *context);
 104:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 105:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_UPDATE(Ft_Esd_BitmapPersist, DisplayName = "Bitmap Persist", Category = EsdUtilities)
 106:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapCell, Type = Ft_Esd_BitmapCell *)
 107:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** void Ft_Esd_BitmapPersist(Ft_Esd_BitmapCell *bitmapCell);
 108:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 109:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_BitmapCell_GetInfo, Type = Ft_Esd_BitmapInfo *, DisplayName = "ESD BitmapCell G
 110:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapCell, Type = Ft_Esd_BitmapCell *)
 111:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** static Ft_Esd_BitmapInfo *Ft_Esd_BitmapCell_GetInfo(Ft_Esd_BitmapCell *bitmapCell)
 112:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  27              		.loc 1 112 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 113:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	if (!bitmapCell) return 0;
  43              		.loc 1 113 0
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 002B     		cmp	r3, #0
  46 000c 01D1     		bne	.L2
  47              		.loc 1 113 0 is_stmt 0 discriminator 1
  48 000e 0023     		movs	r3, #0
  49 0010 01E0     		b	.L3
  50              	.L2:
 114:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	return bitmapCell->Info;
  51              		.loc 1 114 0 is_stmt 1
  52 0012 7B68     		ldr	r3, [r7, #4]
  53 0014 1B68     		ldr	r3, [r3]
  54              	.L3:
 115:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** }
  55              		.loc 1 115 0
  56 0016 1846     		mov	r0, r3
  57 0018 0C37     		adds	r7, r7, #12
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsJmCRD.s 			page 4


  58              	.LCFI3:
  59              		.cfi_def_cfa_offset 4
  60 001a BD46     		mov	sp, r7
  61              	.LCFI4:
  62              		.cfi_def_cfa_register 13
  63              		@ sp needed
  64 001c 5DF8047B 		ldr	r7, [sp], #4
  65              	.LCFI5:
  66              		.cfi_restore 7
  67              		.cfi_def_cfa_offset 0
  68 0020 7047     		bx	lr
  69              		.cfi_endproc
  70              	.LFE3:
  72              		.global	__aeabi_i2d
  73              		.global	__aeabi_dadd
  74              		.global	__aeabi_ddiv
  75              		.section	.text.getSat,"ax",%progbits
  76              		.align	1
  77              		.global	getSat
  78              		.syntax unified
  79              		.thumb
  80              		.thumb_func
  81              		.fpu fpv5-sp-d16
  83              	getSat:
  84              	.LFB6:
  85              		.file 2 "FT_Esd_Widgets/Ft_Esd_ColorPicker.c"
   1:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** #include "Ft_Esd.h"
   2:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** #include "Ft_Esd_ColorPicker.h"
   3:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** #include <math.h>
   4:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 
   5:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** ESD_FUNCTION(getSat, Type = double, DisplayName = "Get Saturation", Category = Ft_Esd_ColorPicker)
   6:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** ESD_PARAMETER(x0, Type = int)
   7:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** ESD_PARAMETER(y0, Type = int)
   8:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** ESD_PARAMETER(x1, Type = int)
   9:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** ESD_PARAMETER(y1, Type = int)
  10:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** ESD_PARAMETER(r, Type = double)
  11:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** double getSat(int x0, int y0, int x1, int y1, double r){
  86              		.loc 2 11 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 40
  89              		@ frame_needed = 1, uses_anonymous_args = 0
  90 0000 90B5     		push	{r4, r7, lr}
  91              	.LCFI6:
  92              		.cfi_def_cfa_offset 12
  93              		.cfi_offset 4, -12
  94              		.cfi_offset 7, -8
  95              		.cfi_offset 14, -4
  96 0002 8BB0     		sub	sp, sp, #44
  97              	.LCFI7:
  98              		.cfi_def_cfa_offset 56
  99 0004 00AF     		add	r7, sp, #0
 100              	.LCFI8:
 101              		.cfi_def_cfa_register 7
 102 0006 7861     		str	r0, [r7, #20]
 103 0008 3961     		str	r1, [r7, #16]
 104 000a FA60     		str	r2, [r7, #12]
 105 000c BB60     		str	r3, [r7, #8]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsJmCRD.s 			page 5


 106 000e 87ED000B 		vstr.64	d0, [r7]
  12:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 	double sizeX = pow((x1-x0),2);
 107              		.loc 2 12 0
 108 0012 FA68     		ldr	r2, [r7, #12]
 109 0014 7B69     		ldr	r3, [r7, #20]
 110 0016 D31A     		subs	r3, r2, r3
 111 0018 1846     		mov	r0, r3
 112 001a FFF7FEFF 		bl	__aeabi_i2d
 113              	.LVL0:
 114 001e 0346     		mov	r3, r0
 115 0020 0C46     		mov	r4, r1
 116 0022 9FED1D1B 		vldr.64	d1, .L6
 117 0026 44EC103B 		vmov	d0, r3, r4
 118 002a FFF7FEFF 		bl	pow
 119 002e 87ED080B 		vstr.64	d0, [r7, #32]
  13:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 	double sizeY = pow((y1-y0),2);
 120              		.loc 2 13 0
 121 0032 BA68     		ldr	r2, [r7, #8]
 122 0034 3B69     		ldr	r3, [r7, #16]
 123 0036 D31A     		subs	r3, r2, r3
 124 0038 1846     		mov	r0, r3
 125 003a FFF7FEFF 		bl	__aeabi_i2d
 126              	.LVL1:
 127 003e 0346     		mov	r3, r0
 128 0040 0C46     		mov	r4, r1
 129 0042 9FED151B 		vldr.64	d1, .L6
 130 0046 44EC103B 		vmov	d0, r3, r4
 131 004a FFF7FEFF 		bl	pow
 132 004e 87ED060B 		vstr.64	d0, [r7, #24]
  14:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 	return sqrt(sizeX + sizeY)/r;
 133              		.loc 2 14 0
 134 0052 D7E90623 		ldrd	r2, [r7, #24]
 135 0056 D7E90801 		ldrd	r0, [r7, #32]
 136 005a FFF7FEFF 		bl	__aeabi_dadd
 137              	.LVL2:
 138 005e 0346     		mov	r3, r0
 139 0060 0C46     		mov	r4, r1
 140 0062 44EC173B 		vmov	d7, r3, r4
 141 0066 B0EE470A 		vmov.f32	s0, s14
 142 006a F0EE670A 		vmov.f32	s1, s15
 143 006e FFF7FEFF 		bl	sqrt
 144 0072 51EC100B 		vmov	r0, r1, d0
 145 0076 D7E90023 		ldrd	r2, [r7]
 146 007a FFF7FEFF 		bl	__aeabi_ddiv
 147              	.LVL3:
 148 007e 0346     		mov	r3, r0
 149 0080 0C46     		mov	r4, r1
 150 0082 44EC173B 		vmov	d7, r3, r4
  15:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** }
 151              		.loc 2 15 0
 152 0086 B0EE470A 		vmov.f32	s0, s14
 153 008a F0EE670A 		vmov.f32	s1, s15
 154 008e 2C37     		adds	r7, r7, #44
 155              	.LCFI9:
 156              		.cfi_def_cfa_offset 12
 157 0090 BD46     		mov	sp, r7
 158              	.LCFI10:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsJmCRD.s 			page 6


 159              		.cfi_def_cfa_register 13
 160              		@ sp needed
 161 0092 90BD     		pop	{r4, r7, pc}
 162              	.L7:
 163 0094 AFF30080 		.align	3
 164              	.L6:
 165 0098 00000000 		.word	0
 166 009c 00000040 		.word	1073741824
 167              		.cfi_endproc
 168              	.LFE6:
 170              		.global	__aeabi_dmul
 171              		.global	__aeabi_dsub
 172              		.section	.text.getHue,"ax",%progbits
 173              		.align	1
 174              		.global	getHue
 175              		.syntax unified
 176              		.thumb
 177              		.thumb_func
 178              		.fpu fpv5-sp-d16
 180              	getHue:
 181              	.LFB7:
  16:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 
  17:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 
  18:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** ESD_FUNCTION(getHue, Type = double, DisplayName = "Get Hue", Category = Ft_Esd_ColorPicker)
  19:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** ESD_PARAMETER(x0, Type = int)
  20:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** ESD_PARAMETER(y0, Type = int)
  21:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** ESD_PARAMETER(x1, Type = int)
  22:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** ESD_PARAMETER(y1, Type = int)
  23:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** double getHue(int x0, int y0, int x1, int y1){
 182              		.loc 2 23 0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 32
 185              		@ frame_needed = 1, uses_anonymous_args = 0
 186 0000 B0B5     		push	{r4, r5, r7, lr}
 187              	.LCFI11:
 188              		.cfi_def_cfa_offset 16
 189              		.cfi_offset 4, -16
 190              		.cfi_offset 5, -12
 191              		.cfi_offset 7, -8
 192              		.cfi_offset 14, -4
 193 0002 88B0     		sub	sp, sp, #32
 194              	.LCFI12:
 195              		.cfi_def_cfa_offset 48
 196 0004 00AF     		add	r7, sp, #0
 197              	.LCFI13:
 198              		.cfi_def_cfa_register 7
 199 0006 F860     		str	r0, [r7, #12]
 200 0008 B960     		str	r1, [r7, #8]
 201 000a 7A60     		str	r2, [r7, #4]
 202 000c 3B60     		str	r3, [r7]
  24:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 	double angleInRadian,angleInDegree;
  25:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 	if (x0 == x1)
 203              		.loc 2 25 0
 204 000e FA68     		ldr	r2, [r7, #12]
 205 0010 7B68     		ldr	r3, [r7, #4]
 206 0012 9A42     		cmp	r2, r3
 207 0014 14D1     		bne	.L9
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsJmCRD.s 			page 7


  26:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 	{
  27:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 		if (y1<y0)
 208              		.loc 2 27 0
 209 0016 3A68     		ldr	r2, [r7]
 210 0018 BB68     		ldr	r3, [r7, #8]
 211 001a 9A42     		cmp	r2, r3
 212 001c 03DA     		bge	.L10
  28:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 			return 90;
 213              		.loc 2 28 0
 214 001e 4FF00003 		mov	r3, #0
 215 0022 7F4C     		ldr	r4, .L18+16
 216 0024 E8E0     		b	.L11
 217              	.L10:
  29:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 		else if (y1>y0)
 218              		.loc 2 29 0
 219 0026 3A68     		ldr	r2, [r7]
 220 0028 BB68     		ldr	r3, [r7, #8]
 221 002a 9A42     		cmp	r2, r3
 222 002c 03DD     		ble	.L12
  30:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 			return 270;
 223              		.loc 2 30 0
 224 002e 78A4     		adr	r4, .L18
 225 0030 D4E90034 		ldrd	r3, [r4]
 226 0034 E0E0     		b	.L11
 227              	.L12:
  31:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 		else
  32:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 			return 0;
 228              		.loc 2 32 0
 229 0036 4FF00003 		mov	r3, #0
 230 003a 4FF00004 		mov	r4, #0
 231 003e DBE0     		b	.L11
 232              	.L9:
  33:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 	} 
  34:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 	else if (x1>x0)
 233              		.loc 2 34 0
 234 0040 7A68     		ldr	r2, [r7, #4]
 235 0042 FB68     		ldr	r3, [r7, #12]
 236 0044 9A42     		cmp	r2, r3
 237 0046 66DD     		ble	.L13
  35:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 	{
  36:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 		if (y1 > y0)
 238              		.loc 2 36 0
 239 0048 3A68     		ldr	r2, [r7]
 240 004a BB68     		ldr	r3, [r7, #8]
 241 004c 9A42     		cmp	r2, r3
 242 004e 35DD     		ble	.L14
  37:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 		{
  38:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 			angleInRadian = atan2((y1-y0),(x1-x0));
 243              		.loc 2 38 0
 244 0050 3A68     		ldr	r2, [r7]
 245 0052 BB68     		ldr	r3, [r7, #8]
 246 0054 D31A     		subs	r3, r2, r3
 247 0056 1846     		mov	r0, r3
 248 0058 FFF7FEFF 		bl	__aeabi_i2d
 249              	.LVL4:
 250 005c 0446     		mov	r4, r0
 251 005e 0D46     		mov	r5, r1
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsJmCRD.s 			page 8


 252 0060 7A68     		ldr	r2, [r7, #4]
 253 0062 FB68     		ldr	r3, [r7, #12]
 254 0064 D31A     		subs	r3, r2, r3
 255 0066 1846     		mov	r0, r3
 256 0068 FFF7FEFF 		bl	__aeabi_i2d
 257              	.LVL5:
 258 006c 0246     		mov	r2, r0
 259 006e 0B46     		mov	r3, r1
 260 0070 43EC112B 		vmov	d1, r2, r3
 261 0074 45EC104B 		vmov	d0, r4, r5
 262 0078 FFF7FEFF 		bl	atan2
 263 007c 87ED040B 		vstr.64	d0, [r7, #16]
  39:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 			angleInDegree = 360 - (angleInRadian * 180 / M_PI);		
 264              		.loc 2 39 0
 265 0080 4FF00002 		mov	r2, #0
 266 0084 674B     		ldr	r3, .L18+20
 267 0086 D7E90401 		ldrd	r0, [r7, #16]
 268 008a FFF7FEFF 		bl	__aeabi_dmul
 269              	.LVL6:
 270 008e 0346     		mov	r3, r0
 271 0090 0C46     		mov	r4, r1
 272 0092 1846     		mov	r0, r3
 273 0094 2146     		mov	r1, r4
 274 0096 60A3     		adr	r3, .L18+8
 275 0098 D3E90023 		ldrd	r2, [r3]
 276 009c FFF7FEFF 		bl	__aeabi_ddiv
 277              	.LVL7:
 278 00a0 0346     		mov	r3, r0
 279 00a2 0C46     		mov	r4, r1
 280 00a4 1A46     		mov	r2, r3
 281 00a6 2346     		mov	r3, r4
 282 00a8 4FF00000 		mov	r0, #0
 283 00ac 5E49     		ldr	r1, .L18+24
 284 00ae FFF7FEFF 		bl	__aeabi_dsub
 285              	.LVL8:
 286 00b2 0346     		mov	r3, r0
 287 00b4 0C46     		mov	r4, r1
 288 00b6 C7E90634 		strd	r3, [r7, #24]
 289 00ba 9BE0     		b	.L16
 290              	.L14:
  40:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 		}
  41:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 		else
  42:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 		{
  43:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 			angleInRadian = atan2((y0-y1),(x1-x0));
 291              		.loc 2 43 0
 292 00bc BA68     		ldr	r2, [r7, #8]
 293 00be 3B68     		ldr	r3, [r7]
 294 00c0 D31A     		subs	r3, r2, r3
 295 00c2 1846     		mov	r0, r3
 296 00c4 FFF7FEFF 		bl	__aeabi_i2d
 297              	.LVL9:
 298 00c8 0446     		mov	r4, r0
 299 00ca 0D46     		mov	r5, r1
 300 00cc 7A68     		ldr	r2, [r7, #4]
 301 00ce FB68     		ldr	r3, [r7, #12]
 302 00d0 D31A     		subs	r3, r2, r3
 303 00d2 1846     		mov	r0, r3
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsJmCRD.s 			page 9


 304 00d4 FFF7FEFF 		bl	__aeabi_i2d
 305              	.LVL10:
 306 00d8 0246     		mov	r2, r0
 307 00da 0B46     		mov	r3, r1
 308 00dc 43EC112B 		vmov	d1, r2, r3
 309 00e0 45EC104B 		vmov	d0, r4, r5
 310 00e4 FFF7FEFF 		bl	atan2
 311 00e8 87ED040B 		vstr.64	d0, [r7, #16]
  44:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 			angleInDegree = angleInRadian * 180 / M_PI;
 312              		.loc 2 44 0
 313 00ec 4FF00002 		mov	r2, #0
 314 00f0 4C4B     		ldr	r3, .L18+20
 315 00f2 D7E90401 		ldrd	r0, [r7, #16]
 316 00f6 FFF7FEFF 		bl	__aeabi_dmul
 317              	.LVL11:
 318 00fa 0346     		mov	r3, r0
 319 00fc 0C46     		mov	r4, r1
 320 00fe 1846     		mov	r0, r3
 321 0100 2146     		mov	r1, r4
 322 0102 45A3     		adr	r3, .L18+8
 323 0104 D3E90023 		ldrd	r2, [r3]
 324 0108 FFF7FEFF 		bl	__aeabi_ddiv
 325              	.LVL12:
 326 010c 0346     		mov	r3, r0
 327 010e 0C46     		mov	r4, r1
 328 0110 C7E90634 		strd	r3, [r7, #24]
 329 0114 6EE0     		b	.L16
 330              	.L13:
  45:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 		}
  46:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 	}
  47:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 	else
  48:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 	{
  49:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 		if (y1 > y0)
 331              		.loc 2 49 0
 332 0116 3A68     		ldr	r2, [r7]
 333 0118 BB68     		ldr	r3, [r7, #8]
 334 011a 9A42     		cmp	r2, r3
 335 011c 35DD     		ble	.L17
  50:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 		{
  51:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 			angleInRadian = atan2((y1-y0),(x0-x1));
 336              		.loc 2 51 0
 337 011e 3A68     		ldr	r2, [r7]
 338 0120 BB68     		ldr	r3, [r7, #8]
 339 0122 D31A     		subs	r3, r2, r3
 340 0124 1846     		mov	r0, r3
 341 0126 FFF7FEFF 		bl	__aeabi_i2d
 342              	.LVL13:
 343 012a 0446     		mov	r4, r0
 344 012c 0D46     		mov	r5, r1
 345 012e FA68     		ldr	r2, [r7, #12]
 346 0130 7B68     		ldr	r3, [r7, #4]
 347 0132 D31A     		subs	r3, r2, r3
 348 0134 1846     		mov	r0, r3
 349 0136 FFF7FEFF 		bl	__aeabi_i2d
 350              	.LVL14:
 351 013a 0246     		mov	r2, r0
 352 013c 0B46     		mov	r3, r1
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsJmCRD.s 			page 10


 353 013e 43EC112B 		vmov	d1, r2, r3
 354 0142 45EC104B 		vmov	d0, r4, r5
 355 0146 FFF7FEFF 		bl	atan2
 356 014a 87ED040B 		vstr.64	d0, [r7, #16]
  52:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 			angleInDegree = 180 + (angleInRadian * 180 / M_PI);		
 357              		.loc 2 52 0
 358 014e 4FF00002 		mov	r2, #0
 359 0152 344B     		ldr	r3, .L18+20
 360 0154 D7E90401 		ldrd	r0, [r7, #16]
 361 0158 FFF7FEFF 		bl	__aeabi_dmul
 362              	.LVL15:
 363 015c 0346     		mov	r3, r0
 364 015e 0C46     		mov	r4, r1
 365 0160 1846     		mov	r0, r3
 366 0162 2146     		mov	r1, r4
 367 0164 2CA3     		adr	r3, .L18+8
 368 0166 D3E90023 		ldrd	r2, [r3]
 369 016a FFF7FEFF 		bl	__aeabi_ddiv
 370              	.LVL16:
 371 016e 0346     		mov	r3, r0
 372 0170 0C46     		mov	r4, r1
 373 0172 1846     		mov	r0, r3
 374 0174 2146     		mov	r1, r4
 375 0176 4FF00002 		mov	r2, #0
 376 017a 2A4B     		ldr	r3, .L18+20
 377 017c FFF7FEFF 		bl	__aeabi_dadd
 378              	.LVL17:
 379 0180 0346     		mov	r3, r0
 380 0182 0C46     		mov	r4, r1
 381 0184 C7E90634 		strd	r3, [r7, #24]
 382 0188 34E0     		b	.L16
 383              	.L17:
  53:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 		}
  54:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 		else
  55:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 		{
  56:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 			angleInRadian = atan2((y0-y1),(x0-x1));
 384              		.loc 2 56 0
 385 018a BA68     		ldr	r2, [r7, #8]
 386 018c 3B68     		ldr	r3, [r7]
 387 018e D31A     		subs	r3, r2, r3
 388 0190 1846     		mov	r0, r3
 389 0192 FFF7FEFF 		bl	__aeabi_i2d
 390              	.LVL18:
 391 0196 0446     		mov	r4, r0
 392 0198 0D46     		mov	r5, r1
 393 019a FA68     		ldr	r2, [r7, #12]
 394 019c 7B68     		ldr	r3, [r7, #4]
 395 019e D31A     		subs	r3, r2, r3
 396 01a0 1846     		mov	r0, r3
 397 01a2 FFF7FEFF 		bl	__aeabi_i2d
 398              	.LVL19:
 399 01a6 0246     		mov	r2, r0
 400 01a8 0B46     		mov	r3, r1
 401 01aa 43EC112B 		vmov	d1, r2, r3
 402 01ae 45EC104B 		vmov	d0, r4, r5
 403 01b2 FFF7FEFF 		bl	atan2
 404 01b6 87ED040B 		vstr.64	d0, [r7, #16]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsJmCRD.s 			page 11


  57:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 			angleInDegree = 180 - (angleInRadian * 180 / M_PI);
 405              		.loc 2 57 0
 406 01ba 4FF00002 		mov	r2, #0
 407 01be 194B     		ldr	r3, .L18+20
 408 01c0 D7E90401 		ldrd	r0, [r7, #16]
 409 01c4 FFF7FEFF 		bl	__aeabi_dmul
 410              	.LVL20:
 411 01c8 0346     		mov	r3, r0
 412 01ca 0C46     		mov	r4, r1
 413 01cc 1846     		mov	r0, r3
 414 01ce 2146     		mov	r1, r4
 415 01d0 11A3     		adr	r3, .L18+8
 416 01d2 D3E90023 		ldrd	r2, [r3]
 417 01d6 FFF7FEFF 		bl	__aeabi_ddiv
 418              	.LVL21:
 419 01da 0346     		mov	r3, r0
 420 01dc 0C46     		mov	r4, r1
 421 01de 1A46     		mov	r2, r3
 422 01e0 2346     		mov	r3, r4
 423 01e2 4FF00000 		mov	r0, #0
 424 01e6 0F49     		ldr	r1, .L18+20
 425 01e8 FFF7FEFF 		bl	__aeabi_dsub
 426              	.LVL22:
 427 01ec 0346     		mov	r3, r0
 428 01ee 0C46     		mov	r4, r1
 429 01f0 C7E90634 		strd	r3, [r7, #24]
 430              	.L16:
  58:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 		}
  59:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 	}
  60:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 	return angleInDegree;
 431              		.loc 2 60 0
 432 01f4 D7E90634 		ldrd	r3, [r7, #24]
 433              	.L11:
 434 01f8 44EC173B 		vmov	d7, r3, r4
  61:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** }
 435              		.loc 2 61 0
 436 01fc B0EE470A 		vmov.f32	s0, s14
 437 0200 F0EE670A 		vmov.f32	s1, s15
 438 0204 2037     		adds	r7, r7, #32
 439              	.LCFI14:
 440              		.cfi_def_cfa_offset 16
 441 0206 BD46     		mov	sp, r7
 442              	.LCFI15:
 443              		.cfi_def_cfa_register 13
 444              		@ sp needed
 445 0208 B0BD     		pop	{r4, r5, r7, pc}
 446              	.L19:
 447 020a 00BFAFF3 		.align	3
 447      0080
 448              	.L18:
 449 0210 00000000 		.word	0
 450 0214 00E07040 		.word	1081139200
 451 0218 182D4454 		.word	1413754136
 452 021c FB210940 		.word	1074340347
 453 0220 00805640 		.word	1079410688
 454 0224 00806640 		.word	1080459264
 455 0228 00807640 		.word	1081507840
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsJmCRD.s 			page 12


 456              		.cfi_endproc
 457              	.LFE7:
 459              		.global	__aeabi_d2iz
 460              		.section	.text.hsvToRgb,"ax",%progbits
 461              		.align	1
 462              		.global	hsvToRgb
 463              		.syntax unified
 464              		.thumb
 465              		.thumb_func
 466              		.fpu fpv5-sp-d16
 468              	hsvToRgb:
 469              	.LFB8:
  62:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 
  63:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 
  64:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** ESD_FUNCTION(hsvToRgb, Type = ft_argb32_t, DisplayName = "HSV to RGB", Category = Ft_Esd_ColorPicke
  65:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** ESD_PARAMETER(h, Type = double)
  66:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** ESD_PARAMETER(s, Type = double)
  67:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** ESD_PARAMETER(v, Type = double)
  68:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** ft_argb32_t hsvToRgb(double h, double s, double v){
 470              		.loc 2 68 0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 104
 473              		@ frame_needed = 1, uses_anonymous_args = 0
 474 0000 B0B5     		push	{r4, r5, r7, lr}
 475              	.LCFI16:
 476              		.cfi_def_cfa_offset 16
 477              		.cfi_offset 4, -16
 478              		.cfi_offset 5, -12
 479              		.cfi_offset 7, -8
 480              		.cfi_offset 14, -4
 481 0002 9AB0     		sub	sp, sp, #104
 482              	.LCFI17:
 483              		.cfi_def_cfa_offset 120
 484 0004 00AF     		add	r7, sp, #0
 485              	.LCFI18:
 486              		.cfi_def_cfa_register 7
 487 0006 87ED040B 		vstr.64	d0, [r7, #16]
 488 000a 87ED021B 		vstr.64	d1, [r7, #8]
 489 000e 87ED002B 		vstr.64	d2, [r7]
  69:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 	double r,g,b;
  70:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 	int R,G,B;
  71:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 	h = h/360.0;
 490              		.loc 2 71 0
 491 0012 4FF00002 		mov	r2, #0
 492 0016 9A4B     		ldr	r3, .L30+8
 493 0018 D7E90401 		ldrd	r0, [r7, #16]
 494 001c FFF7FEFF 		bl	__aeabi_ddiv
 495              	.LVL23:
 496 0020 0346     		mov	r3, r0
 497 0022 0C46     		mov	r4, r1
 498 0024 C7E90434 		strd	r3, [r7, #16]
  72:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 	v = v/255.0;
 499              		.loc 2 72 0
 500 0028 93A3     		adr	r3, .L30
 501 002a D3E90023 		ldrd	r2, [r3]
 502 002e D7E90001 		ldrd	r0, [r7]
 503 0032 FFF7FEFF 		bl	__aeabi_ddiv
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsJmCRD.s 			page 13


 504              	.LVL24:
 505 0036 0346     		mov	r3, r0
 506 0038 0C46     		mov	r4, r1
 507 003a C7E90034 		strd	r3, [r7]
  73:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 	int i = (int)(h * 6);
 508              		.loc 2 73 0
 509 003e 4FF00002 		mov	r2, #0
 510 0042 904B     		ldr	r3, .L30+12
 511 0044 D7E90401 		ldrd	r0, [r7, #16]
 512 0048 FFF7FEFF 		bl	__aeabi_dmul
 513              	.LVL25:
 514 004c 0346     		mov	r3, r0
 515 004e 0C46     		mov	r4, r1
 516 0050 1846     		mov	r0, r3
 517 0052 2146     		mov	r1, r4
 518 0054 FFF7FEFF 		bl	__aeabi_d2iz
 519              	.LVL26:
 520 0058 0346     		mov	r3, r0
 521 005a FB64     		str	r3, [r7, #76]
  74:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 	double f = h * 6 - i;
 522              		.loc 2 74 0
 523 005c 4FF00002 		mov	r2, #0
 524 0060 884B     		ldr	r3, .L30+12
 525 0062 D7E90401 		ldrd	r0, [r7, #16]
 526 0066 FFF7FEFF 		bl	__aeabi_dmul
 527              	.LVL27:
 528 006a 0346     		mov	r3, r0
 529 006c 0C46     		mov	r4, r1
 530 006e 2546     		mov	r5, r4
 531 0070 1C46     		mov	r4, r3
 532 0072 F86C     		ldr	r0, [r7, #76]
 533 0074 FFF7FEFF 		bl	__aeabi_i2d
 534              	.LVL28:
 535 0078 0246     		mov	r2, r0
 536 007a 0B46     		mov	r3, r1
 537 007c 2046     		mov	r0, r4
 538 007e 2946     		mov	r1, r5
 539 0080 FFF7FEFF 		bl	__aeabi_dsub
 540              	.LVL29:
 541 0084 0346     		mov	r3, r0
 542 0086 0C46     		mov	r4, r1
 543 0088 C7E91034 		strd	r3, [r7, #64]
  75:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 	double p = v * (1 - s);
 544              		.loc 2 75 0
 545 008c D7E90223 		ldrd	r2, [r7, #8]
 546 0090 4FF00000 		mov	r0, #0
 547 0094 7C49     		ldr	r1, .L30+16
 548 0096 FFF7FEFF 		bl	__aeabi_dsub
 549              	.LVL30:
 550 009a 0346     		mov	r3, r0
 551 009c 0C46     		mov	r4, r1
 552 009e 1A46     		mov	r2, r3
 553 00a0 2346     		mov	r3, r4
 554 00a2 D7E90001 		ldrd	r0, [r7]
 555 00a6 FFF7FEFF 		bl	__aeabi_dmul
 556              	.LVL31:
 557 00aa 0346     		mov	r3, r0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsJmCRD.s 			page 14


 558 00ac 0C46     		mov	r4, r1
 559 00ae C7E90E34 		strd	r3, [r7, #56]
  76:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 	double q = v * (1 - f * s);
 560              		.loc 2 76 0
 561 00b2 D7E90223 		ldrd	r2, [r7, #8]
 562 00b6 D7E91001 		ldrd	r0, [r7, #64]
 563 00ba FFF7FEFF 		bl	__aeabi_dmul
 564              	.LVL32:
 565 00be 0346     		mov	r3, r0
 566 00c0 0C46     		mov	r4, r1
 567 00c2 1A46     		mov	r2, r3
 568 00c4 2346     		mov	r3, r4
 569 00c6 4FF00000 		mov	r0, #0
 570 00ca 6F49     		ldr	r1, .L30+16
 571 00cc FFF7FEFF 		bl	__aeabi_dsub
 572              	.LVL33:
 573 00d0 0346     		mov	r3, r0
 574 00d2 0C46     		mov	r4, r1
 575 00d4 1A46     		mov	r2, r3
 576 00d6 2346     		mov	r3, r4
 577 00d8 D7E90001 		ldrd	r0, [r7]
 578 00dc FFF7FEFF 		bl	__aeabi_dmul
 579              	.LVL34:
 580 00e0 0346     		mov	r3, r0
 581 00e2 0C46     		mov	r4, r1
 582 00e4 C7E90C34 		strd	r3, [r7, #48]
  77:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 	double t = v * (1 - (1 - f) * s);
 583              		.loc 2 77 0
 584 00e8 D7E91023 		ldrd	r2, [r7, #64]
 585 00ec 4FF00000 		mov	r0, #0
 586 00f0 6549     		ldr	r1, .L30+16
 587 00f2 FFF7FEFF 		bl	__aeabi_dsub
 588              	.LVL35:
 589 00f6 0346     		mov	r3, r0
 590 00f8 0C46     		mov	r4, r1
 591 00fa 1846     		mov	r0, r3
 592 00fc 2146     		mov	r1, r4
 593 00fe D7E90223 		ldrd	r2, [r7, #8]
 594 0102 FFF7FEFF 		bl	__aeabi_dmul
 595              	.LVL36:
 596 0106 0346     		mov	r3, r0
 597 0108 0C46     		mov	r4, r1
 598 010a 1A46     		mov	r2, r3
 599 010c 2346     		mov	r3, r4
 600 010e 4FF00000 		mov	r0, #0
 601 0112 5D49     		ldr	r1, .L30+16
 602 0114 FFF7FEFF 		bl	__aeabi_dsub
 603              	.LVL37:
 604 0118 0346     		mov	r3, r0
 605 011a 0C46     		mov	r4, r1
 606 011c 1A46     		mov	r2, r3
 607 011e 2346     		mov	r3, r4
 608 0120 D7E90001 		ldrd	r0, [r7]
 609 0124 FFF7FEFF 		bl	__aeabi_dmul
 610              	.LVL38:
 611 0128 0346     		mov	r3, r0
 612 012a 0C46     		mov	r4, r1
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsJmCRD.s 			page 15


 613 012c C7E90A34 		strd	r3, [r7, #40]
  78:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 
  79:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 	switch(i % 6)
 614              		.loc 2 79 0
 615 0130 F96C     		ldr	r1, [r7, #76]
 616 0132 564B     		ldr	r3, .L30+20
 617 0134 83FB0132 		smull	r3, r2, r3, r1
 618 0138 CB17     		asrs	r3, r1, #31
 619 013a D21A     		subs	r2, r2, r3
 620 013c 1346     		mov	r3, r2
 621 013e 5B00     		lsls	r3, r3, #1
 622 0140 1344     		add	r3, r3, r2
 623 0142 5B00     		lsls	r3, r3, #1
 624 0144 CA1A     		subs	r2, r1, r3
 625 0146 052A     		cmp	r2, #5
 626 0148 5CD8     		bhi	.L21
 627 014a 01A3     		adr	r3, .L23
 628 014c 53F822F0 		ldr	pc, [r3, r2, lsl #2]
 629              		.p2align 2
 630              	.L23:
 631 0150 69010000 		.word	.L22+1
 632 0154 83010000 		.word	.L24+1
 633 0158 9D010000 		.word	.L25+1
 634 015c B7010000 		.word	.L26+1
 635 0160 D1010000 		.word	.L27+1
 636 0164 EB010000 		.word	.L28+1
 637              		.p2align 1
 638              	.L22:
  80:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 	{
  81:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 		case 0: r = v, g = t, b = p; break;
 639              		.loc 2 81 0
 640 0168 D7E90034 		ldrd	r3, [r7]
 641 016c C7E91834 		strd	r3, [r7, #96]
 642 0170 D7E90A34 		ldrd	r3, [r7, #40]
 643 0174 C7E91634 		strd	r3, [r7, #88]
 644 0178 D7E90E34 		ldrd	r3, [r7, #56]
 645 017c C7E91434 		strd	r3, [r7, #80]
 646 0180 40E0     		b	.L21
 647              	.L24:
  82:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 		case 1: r = q, g = v, b = p; break;
 648              		.loc 2 82 0
 649 0182 D7E90C34 		ldrd	r3, [r7, #48]
 650 0186 C7E91834 		strd	r3, [r7, #96]
 651 018a D7E90034 		ldrd	r3, [r7]
 652 018e C7E91634 		strd	r3, [r7, #88]
 653 0192 D7E90E34 		ldrd	r3, [r7, #56]
 654 0196 C7E91434 		strd	r3, [r7, #80]
 655 019a 33E0     		b	.L21
 656              	.L25:
  83:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 		case 2: r = p, g = v, b = t; break;
 657              		.loc 2 83 0
 658 019c D7E90E34 		ldrd	r3, [r7, #56]
 659 01a0 C7E91834 		strd	r3, [r7, #96]
 660 01a4 D7E90034 		ldrd	r3, [r7]
 661 01a8 C7E91634 		strd	r3, [r7, #88]
 662 01ac D7E90A34 		ldrd	r3, [r7, #40]
 663 01b0 C7E91434 		strd	r3, [r7, #80]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsJmCRD.s 			page 16


 664 01b4 26E0     		b	.L21
 665              	.L26:
  84:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 		case 3: r = p, g = q, b = v; break;
 666              		.loc 2 84 0
 667 01b6 D7E90E34 		ldrd	r3, [r7, #56]
 668 01ba C7E91834 		strd	r3, [r7, #96]
 669 01be D7E90C34 		ldrd	r3, [r7, #48]
 670 01c2 C7E91634 		strd	r3, [r7, #88]
 671 01c6 D7E90034 		ldrd	r3, [r7]
 672 01ca C7E91434 		strd	r3, [r7, #80]
 673 01ce 19E0     		b	.L21
 674              	.L27:
  85:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 		case 4: r = t, g = p, b = v; break;
 675              		.loc 2 85 0
 676 01d0 D7E90A34 		ldrd	r3, [r7, #40]
 677 01d4 C7E91834 		strd	r3, [r7, #96]
 678 01d8 D7E90E34 		ldrd	r3, [r7, #56]
 679 01dc C7E91634 		strd	r3, [r7, #88]
 680 01e0 D7E90034 		ldrd	r3, [r7]
 681 01e4 C7E91434 		strd	r3, [r7, #80]
 682 01e8 0CE0     		b	.L21
 683              	.L28:
  86:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 		case 5: r = v, g = p, b = q; break;
 684              		.loc 2 86 0
 685 01ea D7E90034 		ldrd	r3, [r7]
 686 01ee C7E91834 		strd	r3, [r7, #96]
 687 01f2 D7E90E34 		ldrd	r3, [r7, #56]
 688 01f6 C7E91634 		strd	r3, [r7, #88]
 689 01fa D7E90C34 		ldrd	r3, [r7, #48]
 690 01fe C7E91434 		strd	r3, [r7, #80]
 691 0202 00BF     		nop
 692              	.L21:
  87:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 	}
  88:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 	R = (int)(r*255.0);
 693              		.loc 2 88 0
 694 0204 1CA3     		adr	r3, .L30
 695 0206 D3E90023 		ldrd	r2, [r3]
 696 020a D7E91801 		ldrd	r0, [r7, #96]
 697 020e FFF7FEFF 		bl	__aeabi_dmul
 698              	.LVL39:
 699 0212 0346     		mov	r3, r0
 700 0214 0C46     		mov	r4, r1
 701 0216 1846     		mov	r0, r3
 702 0218 2146     		mov	r1, r4
 703 021a FFF7FEFF 		bl	__aeabi_d2iz
 704              	.LVL40:
 705 021e 0346     		mov	r3, r0
 706 0220 7B62     		str	r3, [r7, #36]
  89:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 	G = (int)(g*255.0);
 707              		.loc 2 89 0
 708 0222 15A3     		adr	r3, .L30
 709 0224 D3E90023 		ldrd	r2, [r3]
 710 0228 D7E91601 		ldrd	r0, [r7, #88]
 711 022c FFF7FEFF 		bl	__aeabi_dmul
 712              	.LVL41:
 713 0230 0346     		mov	r3, r0
 714 0232 0C46     		mov	r4, r1
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsJmCRD.s 			page 17


 715 0234 1846     		mov	r0, r3
 716 0236 2146     		mov	r1, r4
 717 0238 FFF7FEFF 		bl	__aeabi_d2iz
 718              	.LVL42:
 719 023c 0346     		mov	r3, r0
 720 023e 3B62     		str	r3, [r7, #32]
  90:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 	B = (int)(b*255.0);
 721              		.loc 2 90 0
 722 0240 0DA3     		adr	r3, .L30
 723 0242 D3E90023 		ldrd	r2, [r3]
 724 0246 D7E91401 		ldrd	r0, [r7, #80]
 725 024a FFF7FEFF 		bl	__aeabi_dmul
 726              	.LVL43:
 727 024e 0346     		mov	r3, r0
 728 0250 0C46     		mov	r4, r1
 729 0252 1846     		mov	r0, r3
 730 0254 2146     		mov	r1, r4
 731 0256 FFF7FEFF 		bl	__aeabi_d2iz
 732              	.LVL44:
 733 025a 0346     		mov	r3, r0
 734 025c FB61     		str	r3, [r7, #28]
  91:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** 	return (ft_argb32_t)((0xFF<<24)+(R<<16)+(G<<8)+B);
 735              		.loc 2 91 0
 736 025e 7B6A     		ldr	r3, [r7, #36]
 737 0260 1B04     		lsls	r3, r3, #16
 738 0262 03F17F42 		add	r2, r3, #-16777216
 739 0266 3B6A     		ldr	r3, [r7, #32]
 740 0268 1B02     		lsls	r3, r3, #8
 741 026a 1A44     		add	r2, r2, r3
 742 026c FB69     		ldr	r3, [r7, #28]
 743 026e 1344     		add	r3, r3, r2
  92:FT_Esd_Widgets/Ft_Esd_ColorPicker.c **** }
 744              		.loc 2 92 0
 745 0270 1846     		mov	r0, r3
 746 0272 6837     		adds	r7, r7, #104
 747              	.LCFI19:
 748              		.cfi_def_cfa_offset 16
 749 0274 BD46     		mov	sp, r7
 750              	.LCFI20:
 751              		.cfi_def_cfa_register 13
 752              		@ sp needed
 753 0276 B0BD     		pop	{r4, r5, r7, pc}
 754              	.L31:
 755              		.align	3
 756              	.L30:
 757 0278 00000000 		.word	0
 758 027c 00E06F40 		.word	1081073664
 759 0280 00807640 		.word	1081507840
 760 0284 00001840 		.word	1075314688
 761 0288 0000F03F 		.word	1072693248
 762 028c ABAAAA2A 		.word	715827883
 763              		.cfi_endproc
 764              	.LFE8:
 766              		.text
 767              	.Letext0:
 768              		.file 3 "FT_Eve_Hal/FT_DataTypes.h"
 769              		.file 4 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/lock.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsJmCRD.s 			page 18


 770              		.file 5 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_types.h"
 771              		.file 6 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 772              		.file 7 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/unistd.h"
 773              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/reent.h"
 774              		.file 9 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/stdlib.h"
 775              		.file 10 "FT_Esd_Framework/Ft_Esd.h"
 776              		.file 11 "FT_Esd_Framework/Ft_Esd_GpuAlloc.h"
 777              		.file 12 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/math.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsJmCRD.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Ft_Esd_ColorPicker.c
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsJmCRD.s:18     .text.Ft_Esd_BitmapCell_GetInfo:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsJmCRD.s:24     .text.Ft_Esd_BitmapCell_GetInfo:0000000000000000 Ft_Esd_BitmapCell_GetInfo
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsJmCRD.s:76     .text.getSat:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsJmCRD.s:83     .text.getSat:0000000000000000 getSat
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsJmCRD.s:165    .text.getSat:0000000000000098 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsJmCRD.s:173    .text.getHue:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsJmCRD.s:180    .text.getHue:0000000000000000 getHue
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsJmCRD.s:449    .text.getHue:0000000000000210 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsJmCRD.s:461    .text.hsvToRgb:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsJmCRD.s:468    .text.hsvToRgb:0000000000000000 hsvToRgb
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsJmCRD.s:631    .text.hsvToRgb:0000000000000150 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsJmCRD.s:637    .text.hsvToRgb:0000000000000168 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccsJmCRD.s:757    .text.hsvToRgb:0000000000000278 $d

UNDEFINED SYMBOLS
__aeabi_i2d
__aeabi_dadd
__aeabi_ddiv
pow
sqrt
__aeabi_dmul
__aeabi_dsub
atan2
__aeabi_d2iz
