ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"Ft_Esd_ProgressBar__Generated.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Ft_Esd_Theme_GetBackColor,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	Ft_Esd_Theme_GetBackColor:
  25              	.LFB4:
  26              		.file 1 "FT_Esd_Widgets/FT_Esd_Theme.h"
   1:FT_Esd_Widgets/FT_Esd_Theme.h **** 
   2:FT_Esd_Widgets/FT_Esd_Theme.h **** #ifndef FT_ESD_THEME_H
   3:FT_Esd_Widgets/FT_Esd_Theme.h **** #define FT_ESD_THEME_H
   4:FT_Esd_Widgets/FT_Esd_Theme.h **** #include "FT_DataTypes.h"
   5:FT_Esd_Widgets/FT_Esd_Theme.h **** #include "Ft_Esd.h"
   6:FT_Esd_Widgets/FT_Esd_Theme.h **** 
   7:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_CATEGORY(EsdTheme, DisplayName = "ESD Theme")
   8:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_CATEGORY(EsdTheme_Themes, DisplayName = "Themes", Category = EsdTheme)
   9:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  10:FT_Esd_Widgets/FT_Esd_Theme.h **** typedef unsigned int ft_uint32_t;
  11:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  12:FT_Esd_Widgets/FT_Esd_Theme.h **** typedef struct
  13:FT_Esd_Widgets/FT_Esd_Theme.h **** {
  14:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t ClearColor;
  15:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t BackColor;
  16:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t TextColor;
  17:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t ButtonTextColor;
  18:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t DefaultColor;
  19:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t PrimaryColor;
  20:FT_Esd_Widgets/FT_Esd_Theme.h **** } Ft_Esd_Theme;
  21:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  22:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_TYPE(Ft_Esd_Theme *, Native = Pointer, Edit = Library)
  23:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  24:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_RENDER(Ft_Esd_Theme_SetCurrent, DisplayName = "Set Current Theme", Category = EsdTheme, Include
  25:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *)
  26:FT_Esd_Widgets/FT_Esd_Theme.h **** void Ft_Esd_Theme_SetCurrent(Ft_Esd_Theme *theme);
  27:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  28:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetCurrent, DisplayName = "Current Theme", Category = EsdTheme, Type = Ft
  29:FT_Esd_Widgets/FT_Esd_Theme.h **** Ft_Esd_Theme *Ft_Esd_Theme_GetCurrent();
  30:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  31:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetClearColor, DisplayName = "Get Clear Color", Category = EsdTheme, Type
  32:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s 			page 2


  33:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetClearColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_Es
  34:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  35:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetBackColor, DisplayName = "Get Back Color", Category = EsdTheme, Type =
  36:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  37:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetBackColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_Esd
  27              		.loc 1 37 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
  43              		.loc 1 37 0
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 002B     		cmp	r3, #0
  46 000c 04D1     		bne	.L2
  47              		.loc 1 37 0 is_stmt 0 discriminator 1
  48 000e FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
  49 0012 0346     		mov	r3, r0
  50 0014 5B68     		ldr	r3, [r3, #4]
  51 0016 01E0     		b	.L3
  52              	.L2:
  53              		.loc 1 37 0 discriminator 2
  54 0018 7B68     		ldr	r3, [r7, #4]
  55 001a 5B68     		ldr	r3, [r3, #4]
  56              	.L3:
  57              		.loc 1 37 0
  58 001c 1846     		mov	r0, r3
  59 001e 0837     		adds	r7, r7, #8
  60              	.LCFI3:
  61              		.cfi_def_cfa_offset 8
  62 0020 BD46     		mov	sp, r7
  63              	.LCFI4:
  64              		.cfi_def_cfa_register 13
  65              		@ sp needed
  66 0022 80BD     		pop	{r7, pc}
  67              		.cfi_endproc
  68              	.LFE4:
  70              		.section	.text.Ft_Esd_Theme_GetPrimaryColor,"ax",%progbits
  71              		.align	1
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  75              		.fpu fpv5-sp-d16
  77              	Ft_Esd_Theme_GetPrimaryColor:
  78              	.LFB8:
  38:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  39:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetTextColor, DisplayName = "Get Text Color", Category = EsdTheme, Type =
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s 			page 3


  40:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  41:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetTextColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_Esd
  42:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  43:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetButtonTextColor, DisplayName = "Get Button Text Color", Category = Esd
  44:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  45:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetButtonTextColor(Ft_Esd_Theme *theme) { if (!theme) return 
  46:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  47:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetCurrentColor, DisplayName = "Get Default Color", Category = EsdTheme, 
  48:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  49:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetCurrentColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_
  50:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  51:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetPrimaryColor, DisplayName = "Get Primary Color", Category = EsdTheme, 
  52:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  53:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetPrimaryColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_
  79              		.loc 1 53 0 is_stmt 1
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 8
  82              		@ frame_needed = 1, uses_anonymous_args = 0
  83 0000 80B5     		push	{r7, lr}
  84              	.LCFI5:
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 7, -8
  87              		.cfi_offset 14, -4
  88 0002 82B0     		sub	sp, sp, #8
  89              	.LCFI6:
  90              		.cfi_def_cfa_offset 16
  91 0004 00AF     		add	r7, sp, #0
  92              	.LCFI7:
  93              		.cfi_def_cfa_register 7
  94 0006 7860     		str	r0, [r7, #4]
  95              		.loc 1 53 0
  96 0008 7B68     		ldr	r3, [r7, #4]
  97 000a 002B     		cmp	r3, #0
  98 000c 04D1     		bne	.L5
  99              		.loc 1 53 0 is_stmt 0 discriminator 1
 100 000e FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
 101 0012 0346     		mov	r3, r0
 102 0014 5B69     		ldr	r3, [r3, #20]
 103 0016 01E0     		b	.L6
 104              	.L5:
 105              		.loc 1 53 0 discriminator 2
 106 0018 7B68     		ldr	r3, [r7, #4]
 107 001a 5B69     		ldr	r3, [r3, #20]
 108              	.L6:
 109              		.loc 1 53 0
 110 001c 1846     		mov	r0, r3
 111 001e 0837     		adds	r7, r7, #8
 112              	.LCFI8:
 113              		.cfi_def_cfa_offset 8
 114 0020 BD46     		mov	sp, r7
 115              	.LCFI9:
 116              		.cfi_def_cfa_register 13
 117              		@ sp needed
 118 0022 80BD     		pop	{r7, pc}
 119              		.cfi_endproc
 120              	.LFE8:
 122              		.section	.text.Ft_Esd_BitmapCell_GetInfo,"ax",%progbits
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s 			page 4


 123              		.align	1
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 127              		.fpu fpv5-sp-d16
 129              	Ft_Esd_BitmapCell_GetInfo:
 130              	.LFB9:
 131              		.file 2 "FT_Esd_Framework/Ft_Esd_BitmapInfo.h"
   1:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** /*
   2:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** Bitmap info structure
   3:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** */
   4:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
   5:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #ifndef FT_ESD_BITMAPINFO_H
   6:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #define FT_ESD_BITMAPINFO_H
   7:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
   8:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "Ft_Esd.h"
   9:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "FT_DataTypes.h"
  10:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "Ft_Esd_GpuAlloc.h"
  11:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  12:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapInfo, Native = Struct) // TODO: Struct support, expose values
  13:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  14:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  15:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Width;
  16:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Height;
  17:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Stride;
  18:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Format;
  19:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Size;
  20:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	const char *File;
  21:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  22:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Handle pointing to the address in RAM_G if it is allocated
  23:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_GpuHandle GpuHandle;
  24:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  25:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Bitmap handle that is being used
  26:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_uint32_t BitmapHandle;
  27:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  28:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	const char *PaletteFile;
  29:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_GpuHandle PaletteGpuHandle;
  30:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  31:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// When this is set, the allocated ram is not free'd automatically
  32:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Use Ft_Esd_GpuAlloc_Free(GpuAlloc, GpuHandle) to free the GPU ram manually
  33:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_bool_t Persistent;
  34:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  35:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_BitmapInfo;
  36:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  37:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapInfo *, Native = Pointer, Edit = Library)
  38:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  39:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapCell, Native = Struct) // TODO: Struct support, expose values
  40:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  41:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  42:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapInfo *Info;
  43:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Cell;
  44:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_BitmapCell;
  45:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  46:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapCell *, Native = Pointer, Edit = Library)
  47:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  48:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // Attempts to load the specified bitmap if it has not been loaded into RAM_G yet.
  49:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // Call during the Update cycle of each frame to keep the bitmap flagged as in use, otherwise the m
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s 			page 5


  50:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_LoadBitmap, Type = ft_uint32_t, Include = "Ft_Esd_BitmapInfo.h", DisplayName = 
  51:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapInfo, Type = Ft_Esd_BitmapInfo *)
  52:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ft_uint32_t Ft_Esd_LoadBitmap(Ft_Esd_BitmapInfo *bitmapInfo);
  53:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  54:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_LoadPalette, Type = ft_uint32_t, Include = "Ft_Esd_BitmapInfo.h", DisplayName =
  55:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapInfo, Type = Ft_Esd_BitmapInfo *)
  56:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ft_uint32_t Ft_Esd_LoadPalette(Ft_Esd_BitmapInfo *bitmapInfo);
  57:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  58:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_ENUM(_BitmapResourceFormat, DisplayName = "Bitmap Format")
  59:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB1555)
  60:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L1)
  61:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L2)
  62:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L4)
  63:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L8)
  64:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(RGB332)
  65:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB2)
  66:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB4)
  67:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(RGB565)
  68:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(PALETTED565)
  69:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(PALETTED4444)
  70:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(PALETTED8)
  71:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(JPEG)
  72:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(PNG)
  73:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_END()
  74:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  75:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_LOGIC(Ft_Esd_SwitchBitmapCell, Callback, Include = "Ft_Esd_BitmapInfo.h", DisplayName = "Switch
  76:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  77:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  78:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Callback
  79:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	void *Parent;
  80:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  81:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  82:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Input
  83:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  84:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  85:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ESD_INPUT(BitmapInfo, Type = Ft_Esd_BitmapInfo *, DisplayName = "Bitmap Info")
  86:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapInfo *(* BitmapInfo)(void *context);
  87:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  88:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ESD_INPUT(Cell, Type = ft_uint8_t, DisplayName = "Cell")
  89:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_uint8_t(* Cell)(void *context);
  90:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  91:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  92:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Variables
  93:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  94:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  95:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// BitmapCell object
  96:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapCell BitmapCell;
  97:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  98:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_SwitchBitmapCell;
  99:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 100:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** void Ft_Esd_SwitchBitmapCell__Initializer(Ft_Esd_SwitchBitmapCell *context);
 101:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 102:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_OUTPUT(BitmapCell, Type = Ft_Esd_BitmapCell *, DisplayName = "Bitmap Cell")
 103:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** Ft_Esd_BitmapCell *Ft_Esd_SwitchBitmapCell_BitmapCell(Ft_Esd_SwitchBitmapCell *context);
 104:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 105:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_UPDATE(Ft_Esd_BitmapPersist, DisplayName = "Bitmap Persist", Category = EsdUtilities)
 106:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapCell, Type = Ft_Esd_BitmapCell *)
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s 			page 6


 107:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** void Ft_Esd_BitmapPersist(Ft_Esd_BitmapCell *bitmapCell);
 108:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 109:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_BitmapCell_GetInfo, Type = Ft_Esd_BitmapInfo *, DisplayName = "ESD BitmapCell G
 110:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapCell, Type = Ft_Esd_BitmapCell *)
 111:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** static Ft_Esd_BitmapInfo *Ft_Esd_BitmapCell_GetInfo(Ft_Esd_BitmapCell *bitmapCell)
 112:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
 132              		.loc 2 112 0 is_stmt 1
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 8
 135              		@ frame_needed = 1, uses_anonymous_args = 0
 136              		@ link register save eliminated.
 137 0000 80B4     		push	{r7}
 138              	.LCFI10:
 139              		.cfi_def_cfa_offset 4
 140              		.cfi_offset 7, -4
 141 0002 83B0     		sub	sp, sp, #12
 142              	.LCFI11:
 143              		.cfi_def_cfa_offset 16
 144 0004 00AF     		add	r7, sp, #0
 145              	.LCFI12:
 146              		.cfi_def_cfa_register 7
 147 0006 7860     		str	r0, [r7, #4]
 113:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	if (!bitmapCell) return 0;
 148              		.loc 2 113 0
 149 0008 7B68     		ldr	r3, [r7, #4]
 150 000a 002B     		cmp	r3, #0
 151 000c 01D1     		bne	.L8
 152              		.loc 2 113 0 is_stmt 0 discriminator 1
 153 000e 0023     		movs	r3, #0
 154 0010 01E0     		b	.L9
 155              	.L8:
 114:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	return bitmapCell->Info;
 156              		.loc 2 114 0 is_stmt 1
 157 0012 7B68     		ldr	r3, [r7, #4]
 158 0014 1B68     		ldr	r3, [r3]
 159              	.L9:
 115:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** }
 160              		.loc 2 115 0
 161 0016 1846     		mov	r0, r3
 162 0018 0C37     		adds	r7, r7, #12
 163              	.LCFI13:
 164              		.cfi_def_cfa_offset 4
 165 001a BD46     		mov	sp, r7
 166              	.LCFI14:
 167              		.cfi_def_cfa_register 13
 168              		@ sp needed
 169 001c 5DF8047B 		ldr	r7, [sp], #4
 170              	.LCFI15:
 171              		.cfi_restore 7
 172              		.cfi_def_cfa_offset 0
 173 0020 7047     		bx	lr
 174              		.cfi_endproc
 175              	.LFE9:
 177              		.section	.text.Ft_Esd_Dl_COLOR_RGB,"ax",%progbits
 178              		.align	1
 179              		.syntax unified
 180              		.thumb
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s 			page 7


 181              		.thumb_func
 182              		.fpu fpv5-sp-d16
 184              	Ft_Esd_Dl_COLOR_RGB:
 185              	.LFB13:
 186              		.file 3 "FT_Esd_Framework/FT_Esd_Dl.h"
   1:FT_Esd_Framework/FT_Esd_Dl.h **** 
   2:FT_Esd_Framework/FT_Esd_Dl.h **** #ifndef FT_ESD_DL_H
   3:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_DL_H
   4:FT_Esd_Framework/FT_Esd_Dl.h **** 
   5:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_DataTypes.h"
   6:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_Platform.h"
   7:FT_Esd_Framework/FT_Esd_Dl.h **** #include "Ft_Esd.h"
   8:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_Gpu.h"
   9:FT_Esd_Framework/FT_Esd_Dl.h **** #include "Ft_Esd_BitmapInfo.h"
  10:FT_Esd_Framework/FT_Esd_Dl.h **** 
  11:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_CATEGORY(EsdUtilities, DisplayName = "ESD Utilities")
  12:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_CATEGORY(EveRenderFunctions, DisplayName = "EVE Render Functions")
  13:FT_Esd_Framework/FT_Esd_Dl.h **** 
  14:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_TYPE(Ft_Gpu_Hal_Context_t *, Native = Pointer, Edit = Library)
  15:FT_Esd_Framework/FT_Esd_Dl.h **** 
  16:FT_Esd_Framework/FT_Esd_Dl.h **** // Keep cache of displaylist values that don't often change but are generally set by every widget t
  17:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_OPTIMIZE_DISPLAYLIST 1
  18:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_STATE_STACK_SIZE 5
  19:FT_Esd_Framework/FT_Esd_Dl.h **** 
  20:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_BITMAPHANDLE_INVALID 255
  21:FT_Esd_Framework/FT_Esd_Dl.h **** 
  22:FT_Esd_Framework/FT_Esd_Dl.h **** //
  23:FT_Esd_Framework/FT_Esd_Dl.h **** // Structs
  24:FT_Esd_Framework/FT_Esd_Dl.h **** //
  25:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_ESD_OPTIMIZE_DISPLAYLIST
  26:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_STATE Ft_Esd_GpuState[Ft_Esd_GpuState_I]
  27:FT_Esd_Framework/FT_Esd_Dl.h **** typedef struct
  28:FT_Esd_Framework/FT_Esd_Dl.h **** {
  29:FT_Esd_Framework/FT_Esd_Dl.h **** 	// Keep to a minimum
  30:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_81X_ENABLE
  31:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint32_t PaletteSource;
  32:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  33:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint32_t ColorRGB;
  34:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t ColorA;
  35:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t Handle;         // Current handle
  36:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t Cell;           // Current cell
  37:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_bool_t BitmapTransform; // BitmapTransform other than default is set
  38:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_81X_ENABLE
  39:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t VertexFormat;   // Current vertex format
  40:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  41:FT_Esd_Framework/FT_Esd_Dl.h **** } Ft_Esd_GpuState_T;
  42:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  43:FT_Esd_Framework/FT_Esd_Dl.h **** 
  44:FT_Esd_Framework/FT_Esd_Dl.h **** //
  45:FT_Esd_Framework/FT_Esd_Dl.h **** // Globals
  46:FT_Esd_Framework/FT_Esd_Dl.h **** //
  47:FT_Esd_Framework/FT_Esd_Dl.h **** extern Ft_Gpu_Hal_Context_t *Ft_Esd_Host;
  48:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint16_t Ft_Esd_FontHeight[32];
  49:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_ESD_OPTIMIZE_DISPLAYLIST
  50:FT_Esd_Framework/FT_Esd_Dl.h **** extern Ft_Esd_GpuState_T Ft_Esd_GpuState[FT_ESD_STATE_STACK_SIZE];
  51:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint8_t Ft_Esd_GpuState_I;
  52:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint32_t Ft_Esd_CoFgColor;
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s 			page 8


  53:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint32_t Ft_Esd_CoBgColor;
  54:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  55:FT_Esd_Framework/FT_Esd_Dl.h **** 
  56:FT_Esd_Framework/FT_Esd_Dl.h **** //Get the height of builtin font
  57:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_GetFontHeight, Type = ft_uint16_t ,DisplayName = "Get Font Height", Category = 
  58:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(i, Type = int, DisplayName = "Bitmap Handle", Default = 0, Min = 0, Max = 31)
  59:FT_Esd_Framework/FT_Esd_Dl.h **** // inline static ft_uint16_t Ft_Esd_GetFontHeight(int i) { return Ft_Esd_FontHeight[i]; }
  60:FT_Esd_Framework/FT_Esd_Dl.h **** #define Ft_Esd_GetFontHeight(i) (Ft_Esd_FontHeight[i]);
  61:FT_Esd_Framework/FT_Esd_Dl.h **** 
  62:FT_Esd_Framework/FT_Esd_Dl.h **** // Reset any cached state
  63:FT_Esd_Framework/FT_Esd_Dl.h **** void Ft_Esd_ResetGpuState();
  64:FT_Esd_Framework/FT_Esd_Dl.h **** void Ft_Esd_ResetCoState();
  65:FT_Esd_Framework/FT_Esd_Dl.h **** 
  66:FT_Esd_Framework/FT_Esd_Dl.h **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotalUsed();
  67:FT_Esd_Framework/FT_Esd_Dl.h **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotal();
  68:FT_Esd_Framework/FT_Esd_Dl.h **** 
  69:FT_Esd_Framework/FT_Esd_Dl.h **** /// Set current tag. Must be returned to 255 after usage, to ensure next widgets don't draw with in
  70:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_TAG, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  71:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(s, Type = ft_uint8_t, DisplayName = "Tag", Default = 255, Min = 0, Max = 255)
  72:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_TAG(ft_uint8_t s)
  73:FT_Esd_Framework/FT_Esd_Dl.h **** {
  74:FT_Esd_Framework/FT_Esd_Dl.h **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, TAG(s));
  75:FT_Esd_Framework/FT_Esd_Dl.h **** }
  76:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify color RGB
  77:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_RGB, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  78:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(c, Type = ft_rgb32_t, DisplayName = "Color")
  79:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_RGB(ft_rgb32_t c)
  80:FT_Esd_Framework/FT_Esd_Dl.h **** {
 187              		.loc 3 80 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 16
 190              		@ frame_needed = 1, uses_anonymous_args = 0
 191 0000 80B5     		push	{r7, lr}
 192              	.LCFI16:
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 7, -8
 195              		.cfi_offset 14, -4
 196 0002 84B0     		sub	sp, sp, #16
 197              	.LCFI17:
 198              		.cfi_def_cfa_offset 24
 199 0004 00AF     		add	r7, sp, #0
 200              	.LCFI18:
 201              		.cfi_def_cfa_register 7
 202 0006 7860     		str	r0, [r7, #4]
  81:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  82:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_rgb32_t rgb = c & 0xFFFFFF;
 203              		.loc 3 82 0
 204 0008 7B68     		ldr	r3, [r7, #4]
 205 000a 23F07F43 		bic	r3, r3, #-16777216
 206 000e FB60     		str	r3, [r7, #12]
  83:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (rgb != FT_ESD_STATE.ColorRGB)
 207              		.loc 3 83 0
 208 0010 0F4B     		ldr	r3, .L13
 209 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 210 0014 0F4A     		ldr	r2, .L13+4
 211 0016 1B01     		lsls	r3, r3, #4
 212 0018 1344     		add	r3, r3, r2
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s 			page 9


 213 001a 0433     		adds	r3, r3, #4
 214 001c 1B68     		ldr	r3, [r3]
 215 001e FA68     		ldr	r2, [r7, #12]
 216 0020 9A42     		cmp	r2, r3
 217 0022 10D0     		beq	.L12
  84:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
  85:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  86:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, (4UL << 24) | (rgb));
 218              		.loc 3 86 0
 219 0024 0C4B     		ldr	r3, .L13+8
 220 0026 1A68     		ldr	r2, [r3]
 221 0028 FB68     		ldr	r3, [r7, #12]
 222 002a 43F08063 		orr	r3, r3, #67108864
 223 002e 1946     		mov	r1, r3
 224 0030 1046     		mov	r0, r2
 225 0032 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  87:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  88:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.ColorRGB = rgb;
 226              		.loc 3 88 0
 227 0036 064B     		ldr	r3, .L13
 228 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 229 003a 064A     		ldr	r2, .L13+4
 230 003c 1B01     		lsls	r3, r3, #4
 231 003e 1344     		add	r3, r3, r2
 232 0040 0433     		adds	r3, r3, #4
 233 0042 FA68     		ldr	r2, [r7, #12]
 234 0044 1A60     		str	r2, [r3]
 235              	.L12:
  89:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
  90:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  91:FT_Esd_Framework/FT_Esd_Dl.h **** }
 236              		.loc 3 91 0
 237 0046 00BF     		nop
 238 0048 1037     		adds	r7, r7, #16
 239              	.LCFI19:
 240              		.cfi_def_cfa_offset 8
 241 004a BD46     		mov	sp, r7
 242              	.LCFI20:
 243              		.cfi_def_cfa_register 13
 244              		@ sp needed
 245 004c 80BD     		pop	{r7, pc}
 246              	.L14:
 247 004e 00BF     		.align	2
 248              	.L13:
 249 0050 00000000 		.word	Ft_Esd_GpuState_I
 250 0054 00000000 		.word	Ft_Esd_GpuState
 251 0058 00000000 		.word	Ft_Esd_Host
 252              		.cfi_endproc
 253              	.LFE13:
 255              		.section	.text.Ft_Esd_Dl_COLOR_A,"ax",%progbits
 256              		.align	1
 257              		.syntax unified
 258              		.thumb
 259              		.thumb_func
 260              		.fpu fpv5-sp-d16
 262              	Ft_Esd_Dl_COLOR_A:
 263              	.LFB14:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s 			page 10


  92:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify alpha channel
  93:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_A, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  94:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(alpha, Type = ft_uint8_t, Default = 255, Min = 0, Max = 255)
  95:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_A(ft_uint8_t alpha)
  96:FT_Esd_Framework/FT_Esd_Dl.h **** {
 264              		.loc 3 96 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 8
 267              		@ frame_needed = 1, uses_anonymous_args = 0
 268 0000 80B5     		push	{r7, lr}
 269              	.LCFI21:
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 7, -8
 272              		.cfi_offset 14, -4
 273 0002 82B0     		sub	sp, sp, #8
 274              	.LCFI22:
 275              		.cfi_def_cfa_offset 16
 276 0004 00AF     		add	r7, sp, #0
 277              	.LCFI23:
 278              		.cfi_def_cfa_register 7
 279 0006 0346     		mov	r3, r0
 280 0008 FB71     		strb	r3, [r7, #7]
  97:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  98:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (alpha != FT_ESD_STATE.ColorA)
 281              		.loc 3 98 0
 282 000a 0F4B     		ldr	r3, .L18
 283 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 284 000e 0F4A     		ldr	r2, .L18+4
 285 0010 1B01     		lsls	r3, r3, #4
 286 0012 1344     		add	r3, r3, r2
 287 0014 0833     		adds	r3, r3, #8
 288 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 289 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 290 001a 9A42     		cmp	r2, r3
 291 001c 10D0     		beq	.L17
  99:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
 100:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 101:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, COLOR_A(alpha));
 292              		.loc 3 101 0
 293 001e 0C4B     		ldr	r3, .L18+8
 294 0020 1A68     		ldr	r2, [r3]
 295 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 296 0024 43F08053 		orr	r3, r3, #268435456
 297 0028 1946     		mov	r1, r3
 298 002a 1046     		mov	r0, r2
 299 002c FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 102:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 103:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.ColorA = alpha;
 300              		.loc 3 103 0
 301 0030 054B     		ldr	r3, .L18
 302 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 303 0034 054A     		ldr	r2, .L18+4
 304 0036 1B01     		lsls	r3, r3, #4
 305 0038 1344     		add	r3, r3, r2
 306 003a 0833     		adds	r3, r3, #8
 307 003c FA79     		ldrb	r2, [r7, #7]
 308 003e 1A70     		strb	r2, [r3]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s 			page 11


 309              	.L17:
 104:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
 105:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 106:FT_Esd_Framework/FT_Esd_Dl.h **** }
 310              		.loc 3 106 0
 311 0040 00BF     		nop
 312 0042 0837     		adds	r7, r7, #8
 313              	.LCFI24:
 314              		.cfi_def_cfa_offset 8
 315 0044 BD46     		mov	sp, r7
 316              	.LCFI25:
 317              		.cfi_def_cfa_register 13
 318              		@ sp needed
 319 0046 80BD     		pop	{r7, pc}
 320              	.L19:
 321              		.align	2
 322              	.L18:
 323 0048 00000000 		.word	Ft_Esd_GpuState_I
 324 004c 00000000 		.word	Ft_Esd_GpuState
 325 0050 00000000 		.word	Ft_Esd_Host
 326              		.cfi_endproc
 327              	.LFE14:
 329              		.section	.text.Ft_Esd_ProgressBar_Theme__Default,"ax",%progbits
 330              		.align	1
 331              		.global	Ft_Esd_ProgressBar_Theme__Default
 332              		.syntax unified
 333              		.thumb
 334              		.thumb_func
 335              		.fpu fpv5-sp-d16
 337              	Ft_Esd_ProgressBar_Theme__Default:
 338              	.LFB23:
 339              		.file 4 "FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c"
   1:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** /*
   2:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** This file is automatically generated
   3:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** Ft_Esd_ProgressBar
   4:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** C Source
   5:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** */
   6:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 
   7:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** #include "Ft_Esd_ProgressBar.h"
   8:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 
   9:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** #include "FT_Esd_CoPro_Cmds.h"
  10:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** #include "FT_Esd_Dl.h"
  11:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** #include "FT_Gpu.h"
  12:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 
  13:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** extern void Ft_Esd_Noop(void *context);
  14:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** Ft_Esd_Theme * Ft_Esd_ProgressBar_Theme__Default(void *context) { return 0; }
 340              		.loc 4 14 0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 8
 343              		@ frame_needed = 1, uses_anonymous_args = 0
 344              		@ link register save eliminated.
 345 0000 80B4     		push	{r7}
 346              	.LCFI26:
 347              		.cfi_def_cfa_offset 4
 348              		.cfi_offset 7, -4
 349 0002 83B0     		sub	sp, sp, #12
 350              	.LCFI27:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s 			page 12


 351              		.cfi_def_cfa_offset 16
 352 0004 00AF     		add	r7, sp, #0
 353              	.LCFI28:
 354              		.cfi_def_cfa_register 7
 355 0006 7860     		str	r0, [r7, #4]
 356              		.loc 4 14 0
 357 0008 0023     		movs	r3, #0
 358 000a 1846     		mov	r0, r3
 359 000c 0C37     		adds	r7, r7, #12
 360              	.LCFI29:
 361              		.cfi_def_cfa_offset 4
 362 000e BD46     		mov	sp, r7
 363              	.LCFI30:
 364              		.cfi_def_cfa_register 13
 365              		@ sp needed
 366 0010 5DF8047B 		ldr	r7, [sp], #4
 367              	.LCFI31:
 368              		.cfi_restore 7
 369              		.cfi_def_cfa_offset 0
 370 0014 7047     		bx	lr
 371              		.cfi_endproc
 372              	.LFE23:
 374              		.section	.text.Ft_Esd_ProgressBar_X__Default,"ax",%progbits
 375              		.align	1
 376              		.global	Ft_Esd_ProgressBar_X__Default
 377              		.syntax unified
 378              		.thumb
 379              		.thumb_func
 380              		.fpu fpv5-sp-d16
 382              	Ft_Esd_ProgressBar_X__Default:
 383              	.LFB24:
  15:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** ft_int16_t Ft_Esd_ProgressBar_X__Default(void *context) { return 50; }
 384              		.loc 4 15 0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 8
 387              		@ frame_needed = 1, uses_anonymous_args = 0
 388              		@ link register save eliminated.
 389 0000 80B4     		push	{r7}
 390              	.LCFI32:
 391              		.cfi_def_cfa_offset 4
 392              		.cfi_offset 7, -4
 393 0002 83B0     		sub	sp, sp, #12
 394              	.LCFI33:
 395              		.cfi_def_cfa_offset 16
 396 0004 00AF     		add	r7, sp, #0
 397              	.LCFI34:
 398              		.cfi_def_cfa_register 7
 399 0006 7860     		str	r0, [r7, #4]
 400              		.loc 4 15 0
 401 0008 3223     		movs	r3, #50
 402 000a 1846     		mov	r0, r3
 403 000c 0C37     		adds	r7, r7, #12
 404              	.LCFI35:
 405              		.cfi_def_cfa_offset 4
 406 000e BD46     		mov	sp, r7
 407              	.LCFI36:
 408              		.cfi_def_cfa_register 13
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s 			page 13


 409              		@ sp needed
 410 0010 5DF8047B 		ldr	r7, [sp], #4
 411              	.LCFI37:
 412              		.cfi_restore 7
 413              		.cfi_def_cfa_offset 0
 414 0014 7047     		bx	lr
 415              		.cfi_endproc
 416              	.LFE24:
 418              		.section	.text.Ft_Esd_ProgressBar_Y__Default,"ax",%progbits
 419              		.align	1
 420              		.global	Ft_Esd_ProgressBar_Y__Default
 421              		.syntax unified
 422              		.thumb
 423              		.thumb_func
 424              		.fpu fpv5-sp-d16
 426              	Ft_Esd_ProgressBar_Y__Default:
 427              	.LFB25:
  16:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** ft_int16_t Ft_Esd_ProgressBar_Y__Default(void *context) { return 50; }
 428              		.loc 4 16 0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 8
 431              		@ frame_needed = 1, uses_anonymous_args = 0
 432              		@ link register save eliminated.
 433 0000 80B4     		push	{r7}
 434              	.LCFI38:
 435              		.cfi_def_cfa_offset 4
 436              		.cfi_offset 7, -4
 437 0002 83B0     		sub	sp, sp, #12
 438              	.LCFI39:
 439              		.cfi_def_cfa_offset 16
 440 0004 00AF     		add	r7, sp, #0
 441              	.LCFI40:
 442              		.cfi_def_cfa_register 7
 443 0006 7860     		str	r0, [r7, #4]
 444              		.loc 4 16 0
 445 0008 3223     		movs	r3, #50
 446 000a 1846     		mov	r0, r3
 447 000c 0C37     		adds	r7, r7, #12
 448              	.LCFI41:
 449              		.cfi_def_cfa_offset 4
 450 000e BD46     		mov	sp, r7
 451              	.LCFI42:
 452              		.cfi_def_cfa_register 13
 453              		@ sp needed
 454 0010 5DF8047B 		ldr	r7, [sp], #4
 455              	.LCFI43:
 456              		.cfi_restore 7
 457              		.cfi_def_cfa_offset 0
 458 0014 7047     		bx	lr
 459              		.cfi_endproc
 460              	.LFE25:
 462              		.section	.text.Ft_Esd_ProgressBar_Width__Default,"ax",%progbits
 463              		.align	1
 464              		.global	Ft_Esd_ProgressBar_Width__Default
 465              		.syntax unified
 466              		.thumb
 467              		.thumb_func
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s 			page 14


 468              		.fpu fpv5-sp-d16
 470              	Ft_Esd_ProgressBar_Width__Default:
 471              	.LFB26:
  17:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** ft_int16_t Ft_Esd_ProgressBar_Width__Default(void *context) { return 180; }
 472              		.loc 4 17 0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 8
 475              		@ frame_needed = 1, uses_anonymous_args = 0
 476              		@ link register save eliminated.
 477 0000 80B4     		push	{r7}
 478              	.LCFI44:
 479              		.cfi_def_cfa_offset 4
 480              		.cfi_offset 7, -4
 481 0002 83B0     		sub	sp, sp, #12
 482              	.LCFI45:
 483              		.cfi_def_cfa_offset 16
 484 0004 00AF     		add	r7, sp, #0
 485              	.LCFI46:
 486              		.cfi_def_cfa_register 7
 487 0006 7860     		str	r0, [r7, #4]
 488              		.loc 4 17 0
 489 0008 B423     		movs	r3, #180
 490 000a 1846     		mov	r0, r3
 491 000c 0C37     		adds	r7, r7, #12
 492              	.LCFI47:
 493              		.cfi_def_cfa_offset 4
 494 000e BD46     		mov	sp, r7
 495              	.LCFI48:
 496              		.cfi_def_cfa_register 13
 497              		@ sp needed
 498 0010 5DF8047B 		ldr	r7, [sp], #4
 499              	.LCFI49:
 500              		.cfi_restore 7
 501              		.cfi_def_cfa_offset 0
 502 0014 7047     		bx	lr
 503              		.cfi_endproc
 504              	.LFE26:
 506              		.section	.text.Ft_Esd_ProgressBar_Height__Default,"ax",%progbits
 507              		.align	1
 508              		.global	Ft_Esd_ProgressBar_Height__Default
 509              		.syntax unified
 510              		.thumb
 511              		.thumb_func
 512              		.fpu fpv5-sp-d16
 514              	Ft_Esd_ProgressBar_Height__Default:
 515              	.LFB27:
  18:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** ft_int16_t Ft_Esd_ProgressBar_Height__Default(void *context) { return 24; }
 516              		.loc 4 18 0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 8
 519              		@ frame_needed = 1, uses_anonymous_args = 0
 520              		@ link register save eliminated.
 521 0000 80B4     		push	{r7}
 522              	.LCFI50:
 523              		.cfi_def_cfa_offset 4
 524              		.cfi_offset 7, -4
 525 0002 83B0     		sub	sp, sp, #12
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s 			page 15


 526              	.LCFI51:
 527              		.cfi_def_cfa_offset 16
 528 0004 00AF     		add	r7, sp, #0
 529              	.LCFI52:
 530              		.cfi_def_cfa_register 7
 531 0006 7860     		str	r0, [r7, #4]
 532              		.loc 4 18 0
 533 0008 1823     		movs	r3, #24
 534 000a 1846     		mov	r0, r3
 535 000c 0C37     		adds	r7, r7, #12
 536              	.LCFI53:
 537              		.cfi_def_cfa_offset 4
 538 000e BD46     		mov	sp, r7
 539              	.LCFI54:
 540              		.cfi_def_cfa_register 13
 541              		@ sp needed
 542 0010 5DF8047B 		ldr	r7, [sp], #4
 543              	.LCFI55:
 544              		.cfi_restore 7
 545              		.cfi_def_cfa_offset 0
 546 0014 7047     		bx	lr
 547              		.cfi_endproc
 548              	.LFE27:
 550              		.section	.text.Ft_Esd_ProgressBar_Val__Default,"ax",%progbits
 551              		.align	1
 552              		.global	Ft_Esd_ProgressBar_Val__Default
 553              		.syntax unified
 554              		.thumb
 555              		.thumb_func
 556              		.fpu fpv5-sp-d16
 558              	Ft_Esd_ProgressBar_Val__Default:
 559              	.LFB28:
  19:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** ft_uint16_t Ft_Esd_ProgressBar_Val__Default(void *context) { return 0U; }
 560              		.loc 4 19 0
 561              		.cfi_startproc
 562              		@ args = 0, pretend = 0, frame = 8
 563              		@ frame_needed = 1, uses_anonymous_args = 0
 564              		@ link register save eliminated.
 565 0000 80B4     		push	{r7}
 566              	.LCFI56:
 567              		.cfi_def_cfa_offset 4
 568              		.cfi_offset 7, -4
 569 0002 83B0     		sub	sp, sp, #12
 570              	.LCFI57:
 571              		.cfi_def_cfa_offset 16
 572 0004 00AF     		add	r7, sp, #0
 573              	.LCFI58:
 574              		.cfi_def_cfa_register 7
 575 0006 7860     		str	r0, [r7, #4]
 576              		.loc 4 19 0
 577 0008 0023     		movs	r3, #0
 578 000a 1846     		mov	r0, r3
 579 000c 0C37     		adds	r7, r7, #12
 580              	.LCFI59:
 581              		.cfi_def_cfa_offset 4
 582 000e BD46     		mov	sp, r7
 583              	.LCFI60:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s 			page 16


 584              		.cfi_def_cfa_register 13
 585              		@ sp needed
 586 0010 5DF8047B 		ldr	r7, [sp], #4
 587              	.LCFI61:
 588              		.cfi_restore 7
 589              		.cfi_def_cfa_offset 0
 590 0014 7047     		bx	lr
 591              		.cfi_endproc
 592              	.LFE28:
 594              		.section	.text.Ft_Esd_ProgressBar_Range__Default,"ax",%progbits
 595              		.align	1
 596              		.global	Ft_Esd_ProgressBar_Range__Default
 597              		.syntax unified
 598              		.thumb
 599              		.thumb_func
 600              		.fpu fpv5-sp-d16
 602              	Ft_Esd_ProgressBar_Range__Default:
 603              	.LFB29:
  20:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** ft_uint16_t Ft_Esd_ProgressBar_Range__Default(void *context) { return 65535U; }
 604              		.loc 4 20 0
 605              		.cfi_startproc
 606              		@ args = 0, pretend = 0, frame = 8
 607              		@ frame_needed = 1, uses_anonymous_args = 0
 608              		@ link register save eliminated.
 609 0000 80B4     		push	{r7}
 610              	.LCFI62:
 611              		.cfi_def_cfa_offset 4
 612              		.cfi_offset 7, -4
 613 0002 83B0     		sub	sp, sp, #12
 614              	.LCFI63:
 615              		.cfi_def_cfa_offset 16
 616 0004 00AF     		add	r7, sp, #0
 617              	.LCFI64:
 618              		.cfi_def_cfa_register 7
 619 0006 7860     		str	r0, [r7, #4]
 620              		.loc 4 20 0
 621 0008 4FF6FF73 		movw	r3, #65535
 622 000c 1846     		mov	r0, r3
 623 000e 0C37     		adds	r7, r7, #12
 624              	.LCFI65:
 625              		.cfi_def_cfa_offset 4
 626 0010 BD46     		mov	sp, r7
 627              	.LCFI66:
 628              		.cfi_def_cfa_register 13
 629              		@ sp needed
 630 0012 5DF8047B 		ldr	r7, [sp], #4
 631              	.LCFI67:
 632              		.cfi_restore 7
 633              		.cfi_def_cfa_offset 0
 634 0016 7047     		bx	lr
 635              		.cfi_endproc
 636              	.LFE29:
 638              		.section	.text.Ft_Esd_ProgressBar__Initializer,"ax",%progbits
 639              		.align	1
 640              		.global	Ft_Esd_ProgressBar__Initializer
 641              		.syntax unified
 642              		.thumb
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s 			page 17


 643              		.thumb_func
 644              		.fpu fpv5-sp-d16
 646              	Ft_Esd_ProgressBar__Initializer:
 647              	.LFB30:
  21:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 
  22:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** Ft_Esd_Theme * Ft_Esd_Theme_GetCurrent();
  23:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** Ft_Gpu_Hal_Context_t * Ft_Esd_GetHost();
  24:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 
  25:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 
  26:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** void Ft_Esd_ProgressBar__Initializer(Ft_Esd_ProgressBar *context)
  27:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** {
 648              		.loc 4 27 0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 8
 651              		@ frame_needed = 1, uses_anonymous_args = 0
 652              		@ link register save eliminated.
 653 0000 80B4     		push	{r7}
 654              	.LCFI68:
 655              		.cfi_def_cfa_offset 4
 656              		.cfi_offset 7, -4
 657 0002 83B0     		sub	sp, sp, #12
 658              	.LCFI69:
 659              		.cfi_def_cfa_offset 16
 660 0004 00AF     		add	r7, sp, #0
 661              	.LCFI70:
 662              		.cfi_def_cfa_register 7
 663 0006 7860     		str	r0, [r7, #4]
  28:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 	context->Parent = 0;
 664              		.loc 4 28 0
 665 0008 7B68     		ldr	r3, [r7, #4]
 666 000a 0022     		movs	r2, #0
 667 000c 1A60     		str	r2, [r3]
  29:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 	context->Theme = Ft_Esd_ProgressBar_Theme__Default;
 668              		.loc 4 29 0
 669 000e 7B68     		ldr	r3, [r7, #4]
 670 0010 0C4A     		ldr	r2, .L35
 671 0012 5A60     		str	r2, [r3, #4]
  30:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 	context->X = Ft_Esd_ProgressBar_X__Default;
 672              		.loc 4 30 0
 673 0014 7B68     		ldr	r3, [r7, #4]
 674 0016 0C4A     		ldr	r2, .L35+4
 675 0018 9A60     		str	r2, [r3, #8]
  31:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 	context->Y = Ft_Esd_ProgressBar_Y__Default;
 676              		.loc 4 31 0
 677 001a 7B68     		ldr	r3, [r7, #4]
 678 001c 0B4A     		ldr	r2, .L35+8
 679 001e DA60     		str	r2, [r3, #12]
  32:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 	context->Width = Ft_Esd_ProgressBar_Width__Default;
 680              		.loc 4 32 0
 681 0020 7B68     		ldr	r3, [r7, #4]
 682 0022 0B4A     		ldr	r2, .L35+12
 683 0024 1A61     		str	r2, [r3, #16]
  33:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 	context->Height = Ft_Esd_ProgressBar_Height__Default;
 684              		.loc 4 33 0
 685 0026 7B68     		ldr	r3, [r7, #4]
 686 0028 0A4A     		ldr	r2, .L35+16
 687 002a 5A61     		str	r2, [r3, #20]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s 			page 18


  34:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 	context->Val = Ft_Esd_ProgressBar_Val__Default;
 688              		.loc 4 34 0
 689 002c 7B68     		ldr	r3, [r7, #4]
 690 002e 0A4A     		ldr	r2, .L35+20
 691 0030 9A61     		str	r2, [r3, #24]
  35:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 	context->Range = Ft_Esd_ProgressBar_Range__Default;
 692              		.loc 4 35 0
 693 0032 7B68     		ldr	r3, [r7, #4]
 694 0034 094A     		ldr	r2, .L35+24
 695 0036 DA61     		str	r2, [r3, #28]
  36:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** }
 696              		.loc 4 36 0
 697 0038 00BF     		nop
 698 003a 0C37     		adds	r7, r7, #12
 699              	.LCFI71:
 700              		.cfi_def_cfa_offset 4
 701 003c BD46     		mov	sp, r7
 702              	.LCFI72:
 703              		.cfi_def_cfa_register 13
 704              		@ sp needed
 705 003e 5DF8047B 		ldr	r7, [sp], #4
 706              	.LCFI73:
 707              		.cfi_restore 7
 708              		.cfi_def_cfa_offset 0
 709 0042 7047     		bx	lr
 710              	.L36:
 711              		.align	2
 712              	.L35:
 713 0044 00000000 		.word	Ft_Esd_ProgressBar_Theme__Default
 714 0048 00000000 		.word	Ft_Esd_ProgressBar_X__Default
 715 004c 00000000 		.word	Ft_Esd_ProgressBar_Y__Default
 716 0050 00000000 		.word	Ft_Esd_ProgressBar_Width__Default
 717 0054 00000000 		.word	Ft_Esd_ProgressBar_Height__Default
 718 0058 00000000 		.word	Ft_Esd_ProgressBar_Val__Default
 719 005c 00000000 		.word	Ft_Esd_ProgressBar_Range__Default
 720              		.cfi_endproc
 721              	.LFE30:
 723              		.section	.text.Ft_Esd_ProgressBar_Render,"ax",%progbits
 724              		.align	1
 725              		.global	Ft_Esd_ProgressBar_Render
 726              		.syntax unified
 727              		.thumb
 728              		.thumb_func
 729              		.fpu fpv5-sp-d16
 731              	Ft_Esd_ProgressBar_Render:
 732              	.LFB31:
  37:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 
  38:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** ft_void_t Ft_Gpu_CoCmd_BgColor(Ft_Gpu_Hal_Context_t *, ft_rgb32_t);
  39:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** ft_void_t Ft_Gpu_CoCmd_Progress(Ft_Gpu_Hal_Context_t *, ft_int16_t, ft_int16_t, ft_int16_t, ft_int1
  40:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 
  41:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** void Ft_Esd_ProgressBar_Render(Ft_Esd_ProgressBar *context)
  42:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** {
 733              		.loc 4 42 0
 734              		.cfi_startproc
 735              		@ args = 0, pretend = 0, frame = 72
 736              		@ frame_needed = 1, uses_anonymous_args = 0
 737 0000 80B5     		push	{r7, lr}
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s 			page 19


 738              	.LCFI74:
 739              		.cfi_def_cfa_offset 8
 740              		.cfi_offset 7, -8
 741              		.cfi_offset 14, -4
 742 0002 96B0     		sub	sp, sp, #88
 743              	.LCFI75:
 744              		.cfi_def_cfa_offset 96
 745 0004 04AF     		add	r7, sp, #16
 746              	.LCFI76:
 747              		.cfi_def_cfa 7, 80
 748 0006 7860     		str	r0, [r7, #4]
  43:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 	void *parent = context->Parent;
 749              		.loc 4 43 0
 750 0008 7B68     		ldr	r3, [r7, #4]
 751 000a 1B68     		ldr	r3, [r3]
 752 000c 7B64     		str	r3, [r7, #68]
  44:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 	ft_uint8_t alpha = 255;
 753              		.loc 4 44 0
 754 000e FF23     		movs	r3, #255
 755 0010 87F84330 		strb	r3, [r7, #67]
  45:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 	Ft_Esd_Dl_COLOR_A(alpha);
 756              		.loc 4 45 0
 757 0014 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 758 0018 1846     		mov	r0, r3
 759 001a FFF7FEFF 		bl	Ft_Esd_Dl_COLOR_A
  46:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 	Ft_Gpu_Hal_Context_t * phost = Ft_Esd_GetHost();
 760              		.loc 4 46 0
 761 001e FFF7FEFF 		bl	Ft_Esd_GetHost
 762 0022 F863     		str	r0, [r7, #60]
  47:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 	Ft_Esd_Theme * theme = context->Theme(parent);
 763              		.loc 4 47 0
 764 0024 7B68     		ldr	r3, [r7, #4]
 765 0026 5B68     		ldr	r3, [r3, #4]
 766 0028 786C     		ldr	r0, [r7, #68]
 767 002a 9847     		blx	r3
 768              	.LVL0:
 769 002c B863     		str	r0, [r7, #56]
  48:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 	ft_rgb32_t c = Ft_Esd_Theme_GetBackColor(theme);
 770              		.loc 4 48 0
 771 002e B86B     		ldr	r0, [r7, #56]
 772 0030 FFF7FEFF 		bl	Ft_Esd_Theme_GetBackColor
 773 0034 7863     		str	r0, [r7, #52]
  49:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 	Ft_Gpu_CoCmd_BgColor(phost, c);
 774              		.loc 4 49 0
 775 0036 796B     		ldr	r1, [r7, #52]
 776 0038 F86B     		ldr	r0, [r7, #60]
 777 003a FFF7FEFF 		bl	Ft_Gpu_CoCmd_BgColor
  50:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 	Ft_Esd_Theme * theme_1 = context->Theme(parent);
 778              		.loc 4 50 0
 779 003e 7B68     		ldr	r3, [r7, #4]
 780 0040 5B68     		ldr	r3, [r3, #4]
 781 0042 786C     		ldr	r0, [r7, #68]
 782 0044 9847     		blx	r3
 783              	.LVL1:
 784 0046 3863     		str	r0, [r7, #48]
  51:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 	ft_rgb32_t c_1 = Ft_Esd_Theme_GetPrimaryColor(theme_1);
 785              		.loc 4 51 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s 			page 20


 786 0048 386B     		ldr	r0, [r7, #48]
 787 004a FFF7FEFF 		bl	Ft_Esd_Theme_GetPrimaryColor
 788 004e F862     		str	r0, [r7, #44]
  52:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 	Ft_Esd_Dl_COLOR_RGB(c_1);
 789              		.loc 4 52 0
 790 0050 F86A     		ldr	r0, [r7, #44]
 791 0052 FFF7FEFF 		bl	Ft_Esd_Dl_COLOR_RGB
  53:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 	Ft_Gpu_Hal_Context_t * phost_1 = Ft_Esd_GetHost();
 792              		.loc 4 53 0
 793 0056 FFF7FEFF 		bl	Ft_Esd_GetHost
 794 005a B862     		str	r0, [r7, #40]
  54:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 	ft_int16_t left = context->X(parent);
 795              		.loc 4 54 0
 796 005c 7B68     		ldr	r3, [r7, #4]
 797 005e 9B68     		ldr	r3, [r3, #8]
 798 0060 786C     		ldr	r0, [r7, #68]
 799 0062 9847     		blx	r3
 800              	.LVL2:
 801 0064 0346     		mov	r3, r0
 802 0066 FB84     		strh	r3, [r7, #38]	@ movhi
  55:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 	ft_int16_t left_1 = context->Height(parent);
 803              		.loc 4 55 0
 804 0068 7B68     		ldr	r3, [r7, #4]
 805 006a 5B69     		ldr	r3, [r3, #20]
 806 006c 786C     		ldr	r0, [r7, #68]
 807 006e 9847     		blx	r3
 808              	.LVL3:
 809 0070 0346     		mov	r3, r0
 810 0072 BB84     		strh	r3, [r7, #36]	@ movhi
  56:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 	ft_int16_t right_1 = 2;
 811              		.loc 4 56 0
 812 0074 0223     		movs	r3, #2
 813 0076 7B84     		strh	r3, [r7, #34]	@ movhi
  57:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 	ft_int16_t right = left_1 / right_1;
 814              		.loc 4 57 0
 815 0078 B7F92420 		ldrsh	r2, [r7, #36]
 816 007c B7F92230 		ldrsh	r3, [r7, #34]
 817 0080 92FBF3F3 		sdiv	r3, r2, r3
 818 0084 3B84     		strh	r3, [r7, #32]	@ movhi
  58:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 	ft_int16_t x = left + right;
 819              		.loc 4 58 0
 820 0086 FA8C     		ldrh	r2, [r7, #38]
 821 0088 3B8C     		ldrh	r3, [r7, #32]
 822 008a 1344     		add	r3, r3, r2
 823 008c 9BB2     		uxth	r3, r3
 824 008e FB83     		strh	r3, [r7, #30]	@ movhi
  59:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 	ft_int16_t y = context->Y(parent);
 825              		.loc 4 59 0
 826 0090 7B68     		ldr	r3, [r7, #4]
 827 0092 DB68     		ldr	r3, [r3, #12]
 828 0094 786C     		ldr	r0, [r7, #68]
 829 0096 9847     		blx	r3
 830              	.LVL4:
 831 0098 0346     		mov	r3, r0
 832 009a BB83     		strh	r3, [r7, #28]	@ movhi
  60:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 	ft_int16_t left_2 = context->Width(parent);
 833              		.loc 4 60 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s 			page 21


 834 009c 7B68     		ldr	r3, [r7, #4]
 835 009e 1B69     		ldr	r3, [r3, #16]
 836 00a0 786C     		ldr	r0, [r7, #68]
 837 00a2 9847     		blx	r3
 838              	.LVL5:
 839 00a4 0346     		mov	r3, r0
 840 00a6 7B83     		strh	r3, [r7, #26]	@ movhi
  61:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 	ft_int16_t right_2 = context->Height(parent);
 841              		.loc 4 61 0
 842 00a8 7B68     		ldr	r3, [r7, #4]
 843 00aa 5B69     		ldr	r3, [r3, #20]
 844 00ac 786C     		ldr	r0, [r7, #68]
 845 00ae 9847     		blx	r3
 846              	.LVL6:
 847 00b0 0346     		mov	r3, r0
 848 00b2 3B83     		strh	r3, [r7, #24]	@ movhi
  62:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 	ft_int16_t width = left_2 - right_2;
 849              		.loc 4 62 0
 850 00b4 7A8B     		ldrh	r2, [r7, #26]
 851 00b6 3B8B     		ldrh	r3, [r7, #24]
 852 00b8 D31A     		subs	r3, r2, r3
 853 00ba 9BB2     		uxth	r3, r3
 854 00bc FB82     		strh	r3, [r7, #22]	@ movhi
  63:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 	ft_int16_t height = context->Height(parent);
 855              		.loc 4 63 0
 856 00be 7B68     		ldr	r3, [r7, #4]
 857 00c0 5B69     		ldr	r3, [r3, #20]
 858 00c2 786C     		ldr	r0, [r7, #68]
 859 00c4 9847     		blx	r3
 860              	.LVL7:
 861 00c6 0346     		mov	r3, r0
 862 00c8 BB82     		strh	r3, [r7, #20]	@ movhi
  64:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 	ft_uint16_t options = 0;
 863              		.loc 4 64 0
 864 00ca 0023     		movs	r3, #0
 865 00cc 7B82     		strh	r3, [r7, #18]	@ movhi
  65:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 	ft_uint16_t val = context->Val(parent);
 866              		.loc 4 65 0
 867 00ce 7B68     		ldr	r3, [r7, #4]
 868 00d0 9B69     		ldr	r3, [r3, #24]
 869 00d2 786C     		ldr	r0, [r7, #68]
 870 00d4 9847     		blx	r3
 871              	.LVL8:
 872 00d6 0346     		mov	r3, r0
 873 00d8 3B82     		strh	r3, [r7, #16]	@ movhi
  66:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 	ft_uint16_t range = context->Range(parent);
 874              		.loc 4 66 0
 875 00da 7B68     		ldr	r3, [r7, #4]
 876 00dc DB69     		ldr	r3, [r3, #28]
 877 00de 786C     		ldr	r0, [r7, #68]
 878 00e0 9847     		blx	r3
 879              	.LVL9:
 880 00e2 0346     		mov	r3, r0
 881 00e4 FB81     		strh	r3, [r7, #14]	@ movhi
  67:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** 	Ft_Gpu_CoCmd_Progress(phost_1, x, y, width, height, options, val, range);
 882              		.loc 4 67 0
 883 00e6 B7F91600 		ldrsh	r0, [r7, #22]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s 			page 22


 884 00ea B7F91C20 		ldrsh	r2, [r7, #28]
 885 00ee B7F91E10 		ldrsh	r1, [r7, #30]
 886 00f2 FB89     		ldrh	r3, [r7, #14]
 887 00f4 0393     		str	r3, [sp, #12]
 888 00f6 3B8A     		ldrh	r3, [r7, #16]
 889 00f8 0293     		str	r3, [sp, #8]
 890 00fa 7B8A     		ldrh	r3, [r7, #18]
 891 00fc 0193     		str	r3, [sp, #4]
 892 00fe B7F91430 		ldrsh	r3, [r7, #20]
 893 0102 0093     		str	r3, [sp]
 894 0104 0346     		mov	r3, r0
 895 0106 B86A     		ldr	r0, [r7, #40]
 896 0108 FFF7FEFF 		bl	Ft_Gpu_CoCmd_Progress
  68:FT_Esd_Widgets/Ft_Esd_ProgressBar__Generated.c **** }
 897              		.loc 4 68 0
 898 010c 00BF     		nop
 899 010e 4837     		adds	r7, r7, #72
 900              	.LCFI77:
 901              		.cfi_def_cfa_offset 8
 902 0110 BD46     		mov	sp, r7
 903              	.LCFI78:
 904              		.cfi_def_cfa_register 13
 905              		@ sp needed
 906 0112 80BD     		pop	{r7, pc}
 907              		.cfi_endproc
 908              	.LFE31:
 910              		.text
 911              	.Letext0:
 912              		.file 5 "FT_Eve_Hal/FT_DataTypes.h"
 913              		.file 6 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/lock.h"
 914              		.file 7 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_types.h"
 915              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 916              		.file 9 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/unistd.h"
 917              		.file 10 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/reent.h"
 918              		.file 11 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/stdlib.h"
 919              		.file 12 "FT_Eve_Hal/FT_Gpu_Hal.h"
 920              		.file 13 "FT_Esd_Framework/Ft_Esd.h"
 921              		.file 14 "FT_Esd_Widgets/Ft_Esd_DefaultTheme.h"
 922              		.file 15 "FT_Esd_Widgets/Ft_Esd_ProgressBar.h"
 923              		.file 16 "FT_Esd_Framework/FT_Esd_CoPro_Cmds.h"
 924              		.file 17 "FT_Esd_Framework/Ft_Esd_GpuAlloc.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s 			page 23


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Ft_Esd_ProgressBar__Generated.c
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s:18     .text.Ft_Esd_Theme_GetBackColor:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s:24     .text.Ft_Esd_Theme_GetBackColor:0000000000000000 Ft_Esd_Theme_GetBackColor
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s:71     .text.Ft_Esd_Theme_GetPrimaryColor:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s:77     .text.Ft_Esd_Theme_GetPrimaryColor:0000000000000000 Ft_Esd_Theme_GetPrimaryColor
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s:123    .text.Ft_Esd_BitmapCell_GetInfo:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s:129    .text.Ft_Esd_BitmapCell_GetInfo:0000000000000000 Ft_Esd_BitmapCell_GetInfo
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s:178    .text.Ft_Esd_Dl_COLOR_RGB:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s:184    .text.Ft_Esd_Dl_COLOR_RGB:0000000000000000 Ft_Esd_Dl_COLOR_RGB
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s:249    .text.Ft_Esd_Dl_COLOR_RGB:0000000000000050 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s:256    .text.Ft_Esd_Dl_COLOR_A:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s:262    .text.Ft_Esd_Dl_COLOR_A:0000000000000000 Ft_Esd_Dl_COLOR_A
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s:323    .text.Ft_Esd_Dl_COLOR_A:0000000000000048 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s:330    .text.Ft_Esd_ProgressBar_Theme__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s:337    .text.Ft_Esd_ProgressBar_Theme__Default:0000000000000000 Ft_Esd_ProgressBar_Theme__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s:375    .text.Ft_Esd_ProgressBar_X__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s:382    .text.Ft_Esd_ProgressBar_X__Default:0000000000000000 Ft_Esd_ProgressBar_X__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s:419    .text.Ft_Esd_ProgressBar_Y__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s:426    .text.Ft_Esd_ProgressBar_Y__Default:0000000000000000 Ft_Esd_ProgressBar_Y__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s:463    .text.Ft_Esd_ProgressBar_Width__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s:470    .text.Ft_Esd_ProgressBar_Width__Default:0000000000000000 Ft_Esd_ProgressBar_Width__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s:507    .text.Ft_Esd_ProgressBar_Height__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s:514    .text.Ft_Esd_ProgressBar_Height__Default:0000000000000000 Ft_Esd_ProgressBar_Height__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s:551    .text.Ft_Esd_ProgressBar_Val__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s:558    .text.Ft_Esd_ProgressBar_Val__Default:0000000000000000 Ft_Esd_ProgressBar_Val__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s:595    .text.Ft_Esd_ProgressBar_Range__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s:602    .text.Ft_Esd_ProgressBar_Range__Default:0000000000000000 Ft_Esd_ProgressBar_Range__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s:639    .text.Ft_Esd_ProgressBar__Initializer:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s:646    .text.Ft_Esd_ProgressBar__Initializer:0000000000000000 Ft_Esd_ProgressBar__Initializer
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s:713    .text.Ft_Esd_ProgressBar__Initializer:0000000000000044 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s:724    .text.Ft_Esd_ProgressBar_Render:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc9JHOqQ.s:731    .text.Ft_Esd_ProgressBar_Render:0000000000000000 Ft_Esd_ProgressBar_Render

UNDEFINED SYMBOLS
Ft_Esd_Theme_GetCurrent
Ft_Gpu_Hal_WrCmd32
Ft_Esd_GpuState_I
Ft_Esd_GpuState
Ft_Esd_Host
Ft_Esd_GetHost
Ft_Gpu_CoCmd_BgColor
Ft_Gpu_CoCmd_Progress
