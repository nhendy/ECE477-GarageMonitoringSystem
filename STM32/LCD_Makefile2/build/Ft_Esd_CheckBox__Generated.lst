ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"Ft_Esd_CheckBox__Generated.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Ft_Esd_Theme_GetBackColor,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	Ft_Esd_Theme_GetBackColor:
  25              	.LFB4:
  26              		.file 1 "FT_Esd_Widgets/FT_Esd_Theme.h"
   1:FT_Esd_Widgets/FT_Esd_Theme.h **** 
   2:FT_Esd_Widgets/FT_Esd_Theme.h **** #ifndef FT_ESD_THEME_H
   3:FT_Esd_Widgets/FT_Esd_Theme.h **** #define FT_ESD_THEME_H
   4:FT_Esd_Widgets/FT_Esd_Theme.h **** #include "FT_DataTypes.h"
   5:FT_Esd_Widgets/FT_Esd_Theme.h **** #include "Ft_Esd.h"
   6:FT_Esd_Widgets/FT_Esd_Theme.h **** 
   7:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_CATEGORY(EsdTheme, DisplayName = "ESD Theme")
   8:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_CATEGORY(EsdTheme_Themes, DisplayName = "Themes", Category = EsdTheme)
   9:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  10:FT_Esd_Widgets/FT_Esd_Theme.h **** typedef unsigned int ft_uint32_t;
  11:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  12:FT_Esd_Widgets/FT_Esd_Theme.h **** typedef struct
  13:FT_Esd_Widgets/FT_Esd_Theme.h **** {
  14:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t ClearColor;
  15:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t BackColor;
  16:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t TextColor;
  17:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t ButtonTextColor;
  18:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t DefaultColor;
  19:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t PrimaryColor;
  20:FT_Esd_Widgets/FT_Esd_Theme.h **** } Ft_Esd_Theme;
  21:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  22:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_TYPE(Ft_Esd_Theme *, Native = Pointer, Edit = Library)
  23:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  24:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_RENDER(Ft_Esd_Theme_SetCurrent, DisplayName = "Set Current Theme", Category = EsdTheme, Include
  25:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *)
  26:FT_Esd_Widgets/FT_Esd_Theme.h **** void Ft_Esd_Theme_SetCurrent(Ft_Esd_Theme *theme);
  27:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  28:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetCurrent, DisplayName = "Current Theme", Category = EsdTheme, Type = Ft
  29:FT_Esd_Widgets/FT_Esd_Theme.h **** Ft_Esd_Theme *Ft_Esd_Theme_GetCurrent();
  30:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  31:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetClearColor, DisplayName = "Get Clear Color", Category = EsdTheme, Type
  32:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 2


  33:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetClearColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_Es
  34:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  35:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetBackColor, DisplayName = "Get Back Color", Category = EsdTheme, Type =
  36:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  37:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetBackColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_Esd
  27              		.loc 1 37 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
  43              		.loc 1 37 0
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 002B     		cmp	r3, #0
  46 000c 04D1     		bne	.L2
  47              		.loc 1 37 0 is_stmt 0 discriminator 1
  48 000e FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
  49 0012 0346     		mov	r3, r0
  50 0014 5B68     		ldr	r3, [r3, #4]
  51 0016 01E0     		b	.L3
  52              	.L2:
  53              		.loc 1 37 0 discriminator 2
  54 0018 7B68     		ldr	r3, [r7, #4]
  55 001a 5B68     		ldr	r3, [r3, #4]
  56              	.L3:
  57              		.loc 1 37 0
  58 001c 1846     		mov	r0, r3
  59 001e 0837     		adds	r7, r7, #8
  60              	.LCFI3:
  61              		.cfi_def_cfa_offset 8
  62 0020 BD46     		mov	sp, r7
  63              	.LCFI4:
  64              		.cfi_def_cfa_register 13
  65              		@ sp needed
  66 0022 80BD     		pop	{r7, pc}
  67              		.cfi_endproc
  68              	.LFE4:
  70              		.section	.text.Ft_Esd_Theme_GetTextColor,"ax",%progbits
  71              		.align	1
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  75              		.fpu fpv5-sp-d16
  77              	Ft_Esd_Theme_GetTextColor:
  78              	.LFB5:
  38:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  39:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetTextColor, DisplayName = "Get Text Color", Category = EsdTheme, Type =
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 3


  40:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  41:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetTextColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_Esd
  79              		.loc 1 41 0 is_stmt 1
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 8
  82              		@ frame_needed = 1, uses_anonymous_args = 0
  83 0000 80B5     		push	{r7, lr}
  84              	.LCFI5:
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 7, -8
  87              		.cfi_offset 14, -4
  88 0002 82B0     		sub	sp, sp, #8
  89              	.LCFI6:
  90              		.cfi_def_cfa_offset 16
  91 0004 00AF     		add	r7, sp, #0
  92              	.LCFI7:
  93              		.cfi_def_cfa_register 7
  94 0006 7860     		str	r0, [r7, #4]
  95              		.loc 1 41 0
  96 0008 7B68     		ldr	r3, [r7, #4]
  97 000a 002B     		cmp	r3, #0
  98 000c 04D1     		bne	.L5
  99              		.loc 1 41 0 is_stmt 0 discriminator 1
 100 000e FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
 101 0012 0346     		mov	r3, r0
 102 0014 9B68     		ldr	r3, [r3, #8]
 103 0016 01E0     		b	.L6
 104              	.L5:
 105              		.loc 1 41 0 discriminator 2
 106 0018 7B68     		ldr	r3, [r7, #4]
 107 001a 9B68     		ldr	r3, [r3, #8]
 108              	.L6:
 109              		.loc 1 41 0
 110 001c 1846     		mov	r0, r3
 111 001e 0837     		adds	r7, r7, #8
 112              	.LCFI8:
 113              		.cfi_def_cfa_offset 8
 114 0020 BD46     		mov	sp, r7
 115              	.LCFI9:
 116              		.cfi_def_cfa_register 13
 117              		@ sp needed
 118 0022 80BD     		pop	{r7, pc}
 119              		.cfi_endproc
 120              	.LFE5:
 122              		.section	.text.Ft_Esd_Theme_GetPrimaryColor,"ax",%progbits
 123              		.align	1
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 127              		.fpu fpv5-sp-d16
 129              	Ft_Esd_Theme_GetPrimaryColor:
 130              	.LFB8:
  42:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  43:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetButtonTextColor, DisplayName = "Get Button Text Color", Category = Esd
  44:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  45:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetButtonTextColor(Ft_Esd_Theme *theme) { if (!theme) return 
  46:FT_Esd_Widgets/FT_Esd_Theme.h **** 
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 4


  47:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetCurrentColor, DisplayName = "Get Default Color", Category = EsdTheme, 
  48:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  49:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetCurrentColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_
  50:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  51:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetPrimaryColor, DisplayName = "Get Primary Color", Category = EsdTheme, 
  52:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  53:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetPrimaryColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_
 131              		.loc 1 53 0 is_stmt 1
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 8
 134              		@ frame_needed = 1, uses_anonymous_args = 0
 135 0000 80B5     		push	{r7, lr}
 136              	.LCFI10:
 137              		.cfi_def_cfa_offset 8
 138              		.cfi_offset 7, -8
 139              		.cfi_offset 14, -4
 140 0002 82B0     		sub	sp, sp, #8
 141              	.LCFI11:
 142              		.cfi_def_cfa_offset 16
 143 0004 00AF     		add	r7, sp, #0
 144              	.LCFI12:
 145              		.cfi_def_cfa_register 7
 146 0006 7860     		str	r0, [r7, #4]
 147              		.loc 1 53 0
 148 0008 7B68     		ldr	r3, [r7, #4]
 149 000a 002B     		cmp	r3, #0
 150 000c 04D1     		bne	.L8
 151              		.loc 1 53 0 is_stmt 0 discriminator 1
 152 000e FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
 153 0012 0346     		mov	r3, r0
 154 0014 5B69     		ldr	r3, [r3, #20]
 155 0016 01E0     		b	.L9
 156              	.L8:
 157              		.loc 1 53 0 discriminator 2
 158 0018 7B68     		ldr	r3, [r7, #4]
 159 001a 5B69     		ldr	r3, [r3, #20]
 160              	.L9:
 161              		.loc 1 53 0
 162 001c 1846     		mov	r0, r3
 163 001e 0837     		adds	r7, r7, #8
 164              	.LCFI13:
 165              		.cfi_def_cfa_offset 8
 166 0020 BD46     		mov	sp, r7
 167              	.LCFI14:
 168              		.cfi_def_cfa_register 13
 169              		@ sp needed
 170 0022 80BD     		pop	{r7, pc}
 171              		.cfi_endproc
 172              	.LFE8:
 174              		.section	.text.Ft_Esd_BitmapCell_GetInfo,"ax",%progbits
 175              		.align	1
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 179              		.fpu fpv5-sp-d16
 181              	Ft_Esd_BitmapCell_GetInfo:
 182              	.LFB9:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 5


 183              		.file 2 "FT_Esd_Framework/Ft_Esd_BitmapInfo.h"
   1:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** /*
   2:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** Bitmap info structure
   3:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** */
   4:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
   5:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #ifndef FT_ESD_BITMAPINFO_H
   6:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #define FT_ESD_BITMAPINFO_H
   7:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
   8:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "Ft_Esd.h"
   9:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "FT_DataTypes.h"
  10:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "Ft_Esd_GpuAlloc.h"
  11:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  12:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapInfo, Native = Struct) // TODO: Struct support, expose values
  13:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  14:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  15:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Width;
  16:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Height;
  17:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Stride;
  18:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Format;
  19:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Size;
  20:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	const char *File;
  21:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  22:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Handle pointing to the address in RAM_G if it is allocated
  23:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_GpuHandle GpuHandle;
  24:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  25:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Bitmap handle that is being used
  26:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_uint32_t BitmapHandle;
  27:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  28:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	const char *PaletteFile;
  29:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_GpuHandle PaletteGpuHandle;
  30:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  31:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// When this is set, the allocated ram is not free'd automatically
  32:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Use Ft_Esd_GpuAlloc_Free(GpuAlloc, GpuHandle) to free the GPU ram manually
  33:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_bool_t Persistent;
  34:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  35:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_BitmapInfo;
  36:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  37:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapInfo *, Native = Pointer, Edit = Library)
  38:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  39:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapCell, Native = Struct) // TODO: Struct support, expose values
  40:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  41:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  42:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapInfo *Info;
  43:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Cell;
  44:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_BitmapCell;
  45:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  46:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapCell *, Native = Pointer, Edit = Library)
  47:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  48:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // Attempts to load the specified bitmap if it has not been loaded into RAM_G yet.
  49:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // Call during the Update cycle of each frame to keep the bitmap flagged as in use, otherwise the m
  50:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_LoadBitmap, Type = ft_uint32_t, Include = "Ft_Esd_BitmapInfo.h", DisplayName = 
  51:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapInfo, Type = Ft_Esd_BitmapInfo *)
  52:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ft_uint32_t Ft_Esd_LoadBitmap(Ft_Esd_BitmapInfo *bitmapInfo);
  53:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  54:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_LoadPalette, Type = ft_uint32_t, Include = "Ft_Esd_BitmapInfo.h", DisplayName =
  55:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapInfo, Type = Ft_Esd_BitmapInfo *)
  56:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ft_uint32_t Ft_Esd_LoadPalette(Ft_Esd_BitmapInfo *bitmapInfo);
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 6


  57:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  58:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_ENUM(_BitmapResourceFormat, DisplayName = "Bitmap Format")
  59:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB1555)
  60:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L1)
  61:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L2)
  62:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L4)
  63:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L8)
  64:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(RGB332)
  65:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB2)
  66:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB4)
  67:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(RGB565)
  68:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(PALETTED565)
  69:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(PALETTED4444)
  70:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(PALETTED8)
  71:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(JPEG)
  72:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(PNG)
  73:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_END()
  74:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  75:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_LOGIC(Ft_Esd_SwitchBitmapCell, Callback, Include = "Ft_Esd_BitmapInfo.h", DisplayName = "Switch
  76:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  77:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  78:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Callback
  79:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	void *Parent;
  80:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  81:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  82:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Input
  83:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  84:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  85:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ESD_INPUT(BitmapInfo, Type = Ft_Esd_BitmapInfo *, DisplayName = "Bitmap Info")
  86:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapInfo *(* BitmapInfo)(void *context);
  87:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  88:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ESD_INPUT(Cell, Type = ft_uint8_t, DisplayName = "Cell")
  89:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_uint8_t(* Cell)(void *context);
  90:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  91:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  92:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Variables
  93:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  94:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  95:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// BitmapCell object
  96:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapCell BitmapCell;
  97:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  98:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_SwitchBitmapCell;
  99:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 100:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** void Ft_Esd_SwitchBitmapCell__Initializer(Ft_Esd_SwitchBitmapCell *context);
 101:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 102:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_OUTPUT(BitmapCell, Type = Ft_Esd_BitmapCell *, DisplayName = "Bitmap Cell")
 103:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** Ft_Esd_BitmapCell *Ft_Esd_SwitchBitmapCell_BitmapCell(Ft_Esd_SwitchBitmapCell *context);
 104:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 105:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_UPDATE(Ft_Esd_BitmapPersist, DisplayName = "Bitmap Persist", Category = EsdUtilities)
 106:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapCell, Type = Ft_Esd_BitmapCell *)
 107:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** void Ft_Esd_BitmapPersist(Ft_Esd_BitmapCell *bitmapCell);
 108:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 109:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_BitmapCell_GetInfo, Type = Ft_Esd_BitmapInfo *, DisplayName = "ESD BitmapCell G
 110:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapCell, Type = Ft_Esd_BitmapCell *)
 111:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** static Ft_Esd_BitmapInfo *Ft_Esd_BitmapCell_GetInfo(Ft_Esd_BitmapCell *bitmapCell)
 112:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
 184              		.loc 2 112 0 is_stmt 1
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 7


 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 8
 187              		@ frame_needed = 1, uses_anonymous_args = 0
 188              		@ link register save eliminated.
 189 0000 80B4     		push	{r7}
 190              	.LCFI15:
 191              		.cfi_def_cfa_offset 4
 192              		.cfi_offset 7, -4
 193 0002 83B0     		sub	sp, sp, #12
 194              	.LCFI16:
 195              		.cfi_def_cfa_offset 16
 196 0004 00AF     		add	r7, sp, #0
 197              	.LCFI17:
 198              		.cfi_def_cfa_register 7
 199 0006 7860     		str	r0, [r7, #4]
 113:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	if (!bitmapCell) return 0;
 200              		.loc 2 113 0
 201 0008 7B68     		ldr	r3, [r7, #4]
 202 000a 002B     		cmp	r3, #0
 203 000c 01D1     		bne	.L11
 204              		.loc 2 113 0 is_stmt 0 discriminator 1
 205 000e 0023     		movs	r3, #0
 206 0010 01E0     		b	.L12
 207              	.L11:
 114:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	return bitmapCell->Info;
 208              		.loc 2 114 0 is_stmt 1
 209 0012 7B68     		ldr	r3, [r7, #4]
 210 0014 1B68     		ldr	r3, [r3]
 211              	.L12:
 115:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** }
 212              		.loc 2 115 0
 213 0016 1846     		mov	r0, r3
 214 0018 0C37     		adds	r7, r7, #12
 215              	.LCFI18:
 216              		.cfi_def_cfa_offset 4
 217 001a BD46     		mov	sp, r7
 218              	.LCFI19:
 219              		.cfi_def_cfa_register 13
 220              		@ sp needed
 221 001c 5DF8047B 		ldr	r7, [sp], #4
 222              	.LCFI20:
 223              		.cfi_restore 7
 224              		.cfi_def_cfa_offset 0
 225 0020 7047     		bx	lr
 226              		.cfi_endproc
 227              	.LFE9:
 229              		.section	.text.Ft_Esd_Dl_TAG,"ax",%progbits
 230              		.align	1
 231              		.syntax unified
 232              		.thumb
 233              		.thumb_func
 234              		.fpu fpv5-sp-d16
 236              	Ft_Esd_Dl_TAG:
 237              	.LFB12:
 238              		.file 3 "FT_Esd_Framework/FT_Esd_Dl.h"
   1:FT_Esd_Framework/FT_Esd_Dl.h **** 
   2:FT_Esd_Framework/FT_Esd_Dl.h **** #ifndef FT_ESD_DL_H
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 8


   3:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_DL_H
   4:FT_Esd_Framework/FT_Esd_Dl.h **** 
   5:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_DataTypes.h"
   6:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_Platform.h"
   7:FT_Esd_Framework/FT_Esd_Dl.h **** #include "Ft_Esd.h"
   8:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_Gpu.h"
   9:FT_Esd_Framework/FT_Esd_Dl.h **** #include "Ft_Esd_BitmapInfo.h"
  10:FT_Esd_Framework/FT_Esd_Dl.h **** 
  11:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_CATEGORY(EsdUtilities, DisplayName = "ESD Utilities")
  12:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_CATEGORY(EveRenderFunctions, DisplayName = "EVE Render Functions")
  13:FT_Esd_Framework/FT_Esd_Dl.h **** 
  14:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_TYPE(Ft_Gpu_Hal_Context_t *, Native = Pointer, Edit = Library)
  15:FT_Esd_Framework/FT_Esd_Dl.h **** 
  16:FT_Esd_Framework/FT_Esd_Dl.h **** // Keep cache of displaylist values that don't often change but are generally set by every widget t
  17:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_OPTIMIZE_DISPLAYLIST 1
  18:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_STATE_STACK_SIZE 5
  19:FT_Esd_Framework/FT_Esd_Dl.h **** 
  20:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_BITMAPHANDLE_INVALID 255
  21:FT_Esd_Framework/FT_Esd_Dl.h **** 
  22:FT_Esd_Framework/FT_Esd_Dl.h **** //
  23:FT_Esd_Framework/FT_Esd_Dl.h **** // Structs
  24:FT_Esd_Framework/FT_Esd_Dl.h **** //
  25:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_ESD_OPTIMIZE_DISPLAYLIST
  26:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_STATE Ft_Esd_GpuState[Ft_Esd_GpuState_I]
  27:FT_Esd_Framework/FT_Esd_Dl.h **** typedef struct
  28:FT_Esd_Framework/FT_Esd_Dl.h **** {
  29:FT_Esd_Framework/FT_Esd_Dl.h **** 	// Keep to a minimum
  30:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_81X_ENABLE
  31:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint32_t PaletteSource;
  32:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  33:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint32_t ColorRGB;
  34:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t ColorA;
  35:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t Handle;         // Current handle
  36:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t Cell;           // Current cell
  37:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_bool_t BitmapTransform; // BitmapTransform other than default is set
  38:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_81X_ENABLE
  39:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t VertexFormat;   // Current vertex format
  40:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  41:FT_Esd_Framework/FT_Esd_Dl.h **** } Ft_Esd_GpuState_T;
  42:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  43:FT_Esd_Framework/FT_Esd_Dl.h **** 
  44:FT_Esd_Framework/FT_Esd_Dl.h **** //
  45:FT_Esd_Framework/FT_Esd_Dl.h **** // Globals
  46:FT_Esd_Framework/FT_Esd_Dl.h **** //
  47:FT_Esd_Framework/FT_Esd_Dl.h **** extern Ft_Gpu_Hal_Context_t *Ft_Esd_Host;
  48:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint16_t Ft_Esd_FontHeight[32];
  49:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_ESD_OPTIMIZE_DISPLAYLIST
  50:FT_Esd_Framework/FT_Esd_Dl.h **** extern Ft_Esd_GpuState_T Ft_Esd_GpuState[FT_ESD_STATE_STACK_SIZE];
  51:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint8_t Ft_Esd_GpuState_I;
  52:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint32_t Ft_Esd_CoFgColor;
  53:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint32_t Ft_Esd_CoBgColor;
  54:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  55:FT_Esd_Framework/FT_Esd_Dl.h **** 
  56:FT_Esd_Framework/FT_Esd_Dl.h **** //Get the height of builtin font
  57:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_GetFontHeight, Type = ft_uint16_t ,DisplayName = "Get Font Height", Category = 
  58:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(i, Type = int, DisplayName = "Bitmap Handle", Default = 0, Min = 0, Max = 31)
  59:FT_Esd_Framework/FT_Esd_Dl.h **** // inline static ft_uint16_t Ft_Esd_GetFontHeight(int i) { return Ft_Esd_FontHeight[i]; }
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 9


  60:FT_Esd_Framework/FT_Esd_Dl.h **** #define Ft_Esd_GetFontHeight(i) (Ft_Esd_FontHeight[i]);
  61:FT_Esd_Framework/FT_Esd_Dl.h **** 
  62:FT_Esd_Framework/FT_Esd_Dl.h **** // Reset any cached state
  63:FT_Esd_Framework/FT_Esd_Dl.h **** void Ft_Esd_ResetGpuState();
  64:FT_Esd_Framework/FT_Esd_Dl.h **** void Ft_Esd_ResetCoState();
  65:FT_Esd_Framework/FT_Esd_Dl.h **** 
  66:FT_Esd_Framework/FT_Esd_Dl.h **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotalUsed();
  67:FT_Esd_Framework/FT_Esd_Dl.h **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotal();
  68:FT_Esd_Framework/FT_Esd_Dl.h **** 
  69:FT_Esd_Framework/FT_Esd_Dl.h **** /// Set current tag. Must be returned to 255 after usage, to ensure next widgets don't draw with in
  70:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_TAG, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  71:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(s, Type = ft_uint8_t, DisplayName = "Tag", Default = 255, Min = 0, Max = 255)
  72:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_TAG(ft_uint8_t s)
  73:FT_Esd_Framework/FT_Esd_Dl.h **** {
 239              		.loc 3 73 0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 8
 242              		@ frame_needed = 1, uses_anonymous_args = 0
 243 0000 80B5     		push	{r7, lr}
 244              	.LCFI21:
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 7, -8
 247              		.cfi_offset 14, -4
 248 0002 82B0     		sub	sp, sp, #8
 249              	.LCFI22:
 250              		.cfi_def_cfa_offset 16
 251 0004 00AF     		add	r7, sp, #0
 252              	.LCFI23:
 253              		.cfi_def_cfa_register 7
 254 0006 0346     		mov	r3, r0
 255 0008 FB71     		strb	r3, [r7, #7]
  74:FT_Esd_Framework/FT_Esd_Dl.h **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, TAG(s));
 256              		.loc 3 74 0
 257 000a 064B     		ldr	r3, .L14
 258 000c 1A68     		ldr	r2, [r3]
 259 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 260 0010 43F04073 		orr	r3, r3, #50331648
 261 0014 1946     		mov	r1, r3
 262 0016 1046     		mov	r0, r2
 263 0018 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  75:FT_Esd_Framework/FT_Esd_Dl.h **** }
 264              		.loc 3 75 0
 265 001c 00BF     		nop
 266 001e 0837     		adds	r7, r7, #8
 267              	.LCFI24:
 268              		.cfi_def_cfa_offset 8
 269 0020 BD46     		mov	sp, r7
 270              	.LCFI25:
 271              		.cfi_def_cfa_register 13
 272              		@ sp needed
 273 0022 80BD     		pop	{r7, pc}
 274              	.L15:
 275              		.align	2
 276              	.L14:
 277 0024 00000000 		.word	Ft_Esd_Host
 278              		.cfi_endproc
 279              	.LFE12:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 10


 281              		.section	.text.Ft_Esd_Dl_COLOR_A,"ax",%progbits
 282              		.align	1
 283              		.syntax unified
 284              		.thumb
 285              		.thumb_func
 286              		.fpu fpv5-sp-d16
 288              	Ft_Esd_Dl_COLOR_A:
 289              	.LFB14:
  76:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify color RGB
  77:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_RGB, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  78:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(c, Type = ft_rgb32_t, DisplayName = "Color")
  79:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_RGB(ft_rgb32_t c)
  80:FT_Esd_Framework/FT_Esd_Dl.h **** {
  81:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  82:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_rgb32_t rgb = c & 0xFFFFFF;
  83:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (rgb != FT_ESD_STATE.ColorRGB)
  84:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
  85:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  86:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, (4UL << 24) | (rgb));
  87:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  88:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.ColorRGB = rgb;
  89:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
  90:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  91:FT_Esd_Framework/FT_Esd_Dl.h **** }
  92:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify alpha channel
  93:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_A, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  94:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(alpha, Type = ft_uint8_t, Default = 255, Min = 0, Max = 255)
  95:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_A(ft_uint8_t alpha)
  96:FT_Esd_Framework/FT_Esd_Dl.h **** {
 290              		.loc 3 96 0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 8
 293              		@ frame_needed = 1, uses_anonymous_args = 0
 294 0000 80B5     		push	{r7, lr}
 295              	.LCFI26:
 296              		.cfi_def_cfa_offset 8
 297              		.cfi_offset 7, -8
 298              		.cfi_offset 14, -4
 299 0002 82B0     		sub	sp, sp, #8
 300              	.LCFI27:
 301              		.cfi_def_cfa_offset 16
 302 0004 00AF     		add	r7, sp, #0
 303              	.LCFI28:
 304              		.cfi_def_cfa_register 7
 305 0006 0346     		mov	r3, r0
 306 0008 FB71     		strb	r3, [r7, #7]
  97:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  98:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (alpha != FT_ESD_STATE.ColorA)
 307              		.loc 3 98 0
 308 000a 0F4B     		ldr	r3, .L19
 309 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 310 000e 0F4A     		ldr	r2, .L19+4
 311 0010 1B01     		lsls	r3, r3, #4
 312 0012 1344     		add	r3, r3, r2
 313 0014 0833     		adds	r3, r3, #8
 314 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 315 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 11


 316 001a 9A42     		cmp	r2, r3
 317 001c 10D0     		beq	.L18
  99:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
 100:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 101:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, COLOR_A(alpha));
 318              		.loc 3 101 0
 319 001e 0C4B     		ldr	r3, .L19+8
 320 0020 1A68     		ldr	r2, [r3]
 321 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 322 0024 43F08053 		orr	r3, r3, #268435456
 323 0028 1946     		mov	r1, r3
 324 002a 1046     		mov	r0, r2
 325 002c FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 102:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 103:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.ColorA = alpha;
 326              		.loc 3 103 0
 327 0030 054B     		ldr	r3, .L19
 328 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 329 0034 054A     		ldr	r2, .L19+4
 330 0036 1B01     		lsls	r3, r3, #4
 331 0038 1344     		add	r3, r3, r2
 332 003a 0833     		adds	r3, r3, #8
 333 003c FA79     		ldrb	r2, [r7, #7]
 334 003e 1A70     		strb	r2, [r3]
 335              	.L18:
 104:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
 105:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 106:FT_Esd_Framework/FT_Esd_Dl.h **** }
 336              		.loc 3 106 0
 337 0040 00BF     		nop
 338 0042 0837     		adds	r7, r7, #8
 339              	.LCFI29:
 340              		.cfi_def_cfa_offset 8
 341 0044 BD46     		mov	sp, r7
 342              	.LCFI30:
 343              		.cfi_def_cfa_register 13
 344              		@ sp needed
 345 0046 80BD     		pop	{r7, pc}
 346              	.L20:
 347              		.align	2
 348              	.L19:
 349 0048 00000000 		.word	Ft_Esd_GpuState_I
 350 004c 00000000 		.word	Ft_Esd_GpuState
 351 0050 00000000 		.word	Ft_Esd_Host
 352              		.cfi_endproc
 353              	.LFE14:
 355              		.section	.text.Ft_Esd_ColorARGB_Combine,"ax",%progbits
 356              		.align	1
 357              		.syntax unified
 358              		.thumb
 359              		.thumb_func
 360              		.fpu fpv5-sp-d16
 362              	Ft_Esd_ColorARGB_Combine:
 363              	.LFB23:
 364              		.file 4 "FT_Esd_Framework/FT_Esd_Primitives.h"
   1:FT_Esd_Framework/FT_Esd_Primitives.h **** 
   2:FT_Esd_Framework/FT_Esd_Primitives.h **** #ifndef FT_ESD_PRIMITIVES_H
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 12


   3:FT_Esd_Framework/FT_Esd_Primitives.h **** #define FT_ESD_PRIMITIVES_H
   4:FT_Esd_Framework/FT_Esd_Primitives.h **** 
   5:FT_Esd_Framework/FT_Esd_Primitives.h **** #include "Ft_Esd.h"
   6:FT_Esd_Framework/FT_Esd_Primitives.h **** #include "Ft_Esd_Theme.h"
   7:FT_Esd_Framework/FT_Esd_Primitives.h **** #include "Ft_Esd_DefaultTheme.h"
   8:FT_Esd_Framework/FT_Esd_Primitives.h **** #include "Ft_Esd_BitmapInfo.h"
   9:FT_Esd_Framework/FT_Esd_Primitives.h **** 
  10:FT_Esd_Framework/FT_Esd_Primitives.h **** // Ft_Esd_Render_Rectangle
  11:FT_Esd_Framework/FT_Esd_Primitives.h **** // Ft_Esd_Render_Line
  12:FT_Esd_Framework/FT_Esd_Primitives.h **** // Ft_Esd_Render_Point
  13:FT_Esd_Framework/FT_Esd_Primitives.h **** // Ft_Esd_Render_Bitmap
  14:FT_Esd_Framework/FT_Esd_Primitives.h **** // Ft_Esd_Render_LineStrip
  15:FT_Esd_Framework/FT_Esd_Primitives.h **** // Ft_Esd_Render_EdgeStrip
  16:FT_Esd_Framework/FT_Esd_Primitives.h **** 
  17:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_CATEGORY(EsdWidgets, DisplayName = "ESD Widgets")
  18:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_CATEGORY(EsdElements, DisplayName = "Elements", Category = EsdWidgets)
  19:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_CATEGORY(EsdPrimitives, DisplayName = "ESD Primitives")
  20:FT_Esd_Framework/FT_Esd_Primitives.h **** 
  21:FT_Esd_Framework/FT_Esd_Primitives.h **** // TODO: Hooking RGB to ARGB should automatically 0xFF the alpha channel in the code generation
  22:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_FUNCTION(Ft_Esd_ColorARGB_Combine, Type = ft_argb32_t, DisplayName = "Color A+RGB Combine", Cat
  23:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(rgb, Type = ft_rgb32_t, Default = #FFFFFF)
  24:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(a, Type = ft_uint8_t, Default = 255)
  25:FT_Esd_Framework/FT_Esd_Primitives.h **** static inline ft_argb32_t Ft_Esd_ColorARGB_Combine(ft_rgb32_t rgb, ft_uint8_t a)
  26:FT_Esd_Framework/FT_Esd_Primitives.h **** { return (rgb & 0xFFFFFF) | (((ft_argb32_t)a) << 24); }
 365              		.loc 4 26 0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 8
 368              		@ frame_needed = 1, uses_anonymous_args = 0
 369              		@ link register save eliminated.
 370 0000 80B4     		push	{r7}
 371              	.LCFI31:
 372              		.cfi_def_cfa_offset 4
 373              		.cfi_offset 7, -4
 374 0002 83B0     		sub	sp, sp, #12
 375              	.LCFI32:
 376              		.cfi_def_cfa_offset 16
 377 0004 00AF     		add	r7, sp, #0
 378              	.LCFI33:
 379              		.cfi_def_cfa_register 7
 380 0006 7860     		str	r0, [r7, #4]
 381 0008 0B46     		mov	r3, r1
 382 000a FB70     		strb	r3, [r7, #3]
 383              		.loc 4 26 0
 384 000c 7B68     		ldr	r3, [r7, #4]
 385 000e 23F07F42 		bic	r2, r3, #-16777216
 386 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 387 0014 1B06     		lsls	r3, r3, #24
 388 0016 1343     		orrs	r3, r3, r2
 389 0018 1846     		mov	r0, r3
 390 001a 0C37     		adds	r7, r7, #12
 391              	.LCFI34:
 392              		.cfi_def_cfa_offset 4
 393 001c BD46     		mov	sp, r7
 394              	.LCFI35:
 395              		.cfi_def_cfa_register 13
 396              		@ sp needed
 397 001e 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 13


 398              	.LCFI36:
 399              		.cfi_restore 7
 400              		.cfi_def_cfa_offset 0
 401 0022 7047     		bx	lr
 402              		.cfi_endproc
 403              	.LFE23:
 405              		.section	.text.Ft_Esd_Render_Line,"ax",%progbits
 406              		.align	1
 407              		.syntax unified
 408              		.thumb
 409              		.thumb_func
 410              		.fpu fpv5-sp-d16
 412              	Ft_Esd_Render_Line:
 413              	.LFB25:
  27:FT_Esd_Framework/FT_Esd_Primitives.h **** 
  28:FT_Esd_Framework/FT_Esd_Primitives.h **** // Basic bitmap rendering
  29:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_RENDER(Ft_Esd_Render_Bitmap, Type = ft_void_t, DisplayName = "ESD Bitmap", Category = EsdPrimit
  30:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(x, Type = ft_int16_t, Default = 0)
  31:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(y, Type = ft_int16_t, Default = 0)
  32:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(bitmapCell, Type = Ft_Esd_BitmapCell *, DisplayName = "Bitmap Cell")
  33:FT_Esd_Framework/FT_Esd_Primitives.h **** // Color to be multiplied with bitmap color, can be used for alpha fade for example
  34:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(c, Type = ft_argb32_t, DisplayName = "Color", Default = #FFFFFFFF)
  35:FT_Esd_Framework/FT_Esd_Primitives.h **** ft_void_t Ft_Esd_Render_Bitmap(ft_int16_t x, ft_int16_t y, Ft_Esd_BitmapCell *bitmapCell, ft_argb32
  36:FT_Esd_Framework/FT_Esd_Primitives.h **** 
  37:FT_Esd_Framework/FT_Esd_Primitives.h **** // Scaled bitmap rendering
  38:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_RENDER(Ft_Esd_Render_BitmapScaled, Type = ft_void_t, DisplayName = "ESD Bitmap Scaled", Categor
  39:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(x, Type = ft_int16_t, Default = 0)
  40:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(y, Type = ft_int16_t, Default = 0)
  41:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(bitmapCell, Type = Ft_Esd_BitmapCell *, DisplayName = "Bitmap Cell")
  42:FT_Esd_Framework/FT_Esd_Primitives.h **** // Color to be multiplied with bitmap color, can be used for alpha fade for example
  43:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(c, Type = ft_argb32_t, DisplayName = "Color", Default = #FFFFFFFF)
  44:FT_Esd_Framework/FT_Esd_Primitives.h **** // Horizontal scaling factor
  45:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(xscale, Type = ft_int32_f16_t, DisplayName = "Horizontal Scale", Default = 1)
  46:FT_Esd_Framework/FT_Esd_Primitives.h **** // Vertical scaling factor
  47:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(yscale, Type = ft_int32_f16_t, DisplayName = "Vertical Scale", Default = 1)
  48:FT_Esd_Framework/FT_Esd_Primitives.h **** // Horizontal offset
  49:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(xoffset, Type = ft_int32_f16_t, DisplayName = "X Offset", Default = 0)
  50:FT_Esd_Framework/FT_Esd_Primitives.h **** // Vertical offset
  51:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(yoffset, Type = ft_int32_f16_t, DisplayName = "Y Offset", Default = 0)
  52:FT_Esd_Framework/FT_Esd_Primitives.h **** // Width used as rendering boundary
  53:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(width, Type = ft_int16_t, DisplayName = "Render Width", Default = 200)
  54:FT_Esd_Framework/FT_Esd_Primitives.h **** // Height used as rendering boundary
  55:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(height, Type = ft_int16_t, DisplayName = "Render Height", Default = 100)
  56:FT_Esd_Framework/FT_Esd_Primitives.h **** ft_void_t Ft_Esd_Render_BitmapScaled(ft_int16_t x, ft_int16_t y, Ft_Esd_BitmapCell *bitmapCell, ft_
  57:FT_Esd_Framework/FT_Esd_Primitives.h **** 
  58:FT_Esd_Framework/FT_Esd_Primitives.h **** 
  59:FT_Esd_Framework/FT_Esd_Primitives.h **** // Rotated bitmap rendering
  60:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_RENDER(Ft_Esd_Render_BitmapRotate, Type = ft_void_t, DisplayName = "ESD Bitmap Rotated", Catego
  61:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(x, Type = ft_int16_t, Default = 0)
  62:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(y, Type = ft_int16_t, Default = 0)
  63:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(bitmapCell, Type = Ft_Esd_BitmapCell *, DisplayName = "Bitmap Cell")
  64:FT_Esd_Framework/FT_Esd_Primitives.h **** // Color to be multiplied with bitmap color, can be used for alpha fade for example
  65:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(c, Type = ft_argb32_t, DisplayName = "Color", Default = #FFFFFFFF)
  66:FT_Esd_Framework/FT_Esd_Primitives.h **** //rotation parameter
  67:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(rotateEffi, Type = ft_int32_t, DisplayName = "rotation angle", Default = 0)
  68:FT_Esd_Framework/FT_Esd_Primitives.h **** // center point X 
  69:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(x_center, Type = ft_int32_f16_t, DisplayName = "X of center point", Default = 0)
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 14


  70:FT_Esd_Framework/FT_Esd_Primitives.h **** // certer point y
  71:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(y_center, Type = ft_int32_f16_t, DisplayName = "Y of center point", Default = 0)
  72:FT_Esd_Framework/FT_Esd_Primitives.h **** // Width used as rendering boundary
  73:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(width, Type = ft_int16_t, DisplayName = "Render Width", Default = 200)
  74:FT_Esd_Framework/FT_Esd_Primitives.h **** // Height used as rendering boundary
  75:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(height, Type = ft_int16_t, DisplayName = "Render Height", Default = 100)
  76:FT_Esd_Framework/FT_Esd_Primitives.h **** //radius of needle
  77:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(radius, Type = ft_int16_t, DisplayName = "rotation radius", Default = 0)
  78:FT_Esd_Framework/FT_Esd_Primitives.h **** ft_void_t Ft_Esd_Render_BitmapRotate(ft_int16_t x, ft_int16_t y, Ft_Esd_BitmapCell *bitmapCell, ft_
  79:FT_Esd_Framework/FT_Esd_Primitives.h **** 
  80:FT_Esd_Framework/FT_Esd_Primitives.h **** 
  81:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_RENDER(Ft_Esd_Render_RectangleF, Type = ft_void_t, DisplayName = "ESD Rectangle (Fixed Point)",
  82:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(x, Type = ft_int32_f4_t, Default = 0)
  83:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(y, Type = ft_int32_f4_t, Default = 0)
  84:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(width, Type = ft_int32_f4_t, Default = 60)
  85:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(height, Type = ft_int32_f4_t, Default = 20)
  86:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(radius, Type = ft_int32_f4_t, Default = 4)
  87:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(color, Type = ft_argb32_t, DisplayName = "Color", Default = #FFFFFFFF)
  88:FT_Esd_Framework/FT_Esd_Primitives.h **** ft_void_t Ft_Esd_Render_RectangleF(ft_int32_f4_t x, ft_int32_f4_t y, ft_int32_f4_t w, ft_int32_f4_t
  89:FT_Esd_Framework/FT_Esd_Primitives.h **** 
  90:FT_Esd_Framework/FT_Esd_Primitives.h **** // Basic rectangle rendering
  91:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_RENDER(Ft_Esd_Render_Rectangle, Type = ft_void_t, DisplayName = "ESD Rectangle (Integer)", Incl
  92:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(x, Type = ft_int32_t, Default = 0)
  93:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(y, Type = ft_int32_t, Default = 0)
  94:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(width, Type = ft_int32_t, Default = 60)
  95:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(height, Type = ft_int32_t, Default = 20)
  96:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(radius, Type = ft_int32_t, Default = 4)
  97:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(color, Type = ft_argb32_t, DisplayName = "Color", Default = #FFFFFFFF)
  98:FT_Esd_Framework/FT_Esd_Primitives.h **** static inline ft_void_t Ft_Esd_Render_Rectangle(ft_int32_t x, ft_int32_t y, ft_int32_f4_t w, ft_int
  99:FT_Esd_Framework/FT_Esd_Primitives.h **** { Ft_Esd_Render_RectangleF(x << 4, y << 4, w << 4, h << 4, radius << 4, color); }
 100:FT_Esd_Framework/FT_Esd_Primitives.h **** 
 101:FT_Esd_Framework/FT_Esd_Primitives.h **** 
 102:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_RENDER(Ft_Esd_Render_LineF, Type = ft_void_t, DisplayName = "ESD Line (Fixed Point)", Include =
 103:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(x0, Type = ft_int32_f4_t, Default = 0)
 104:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(y0, Type = ft_int32_f4_t, Default = 0)
 105:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(x1, Type = ft_int32_f4_t, Default = 60)
 106:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(y1, Type = ft_int32_f4_t, Default = 20)
 107:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(width, Type = ft_int32_f3_t, Default = 2, EditRole = None)
 108:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(color, Type = ft_argb32_t, DisplayName = "Color", Default = #FFFFFFFF)
 109:FT_Esd_Framework/FT_Esd_Primitives.h **** ft_void_t Ft_Esd_Render_LineF(ft_int32_f4_t x0, ft_int32_f4_t y0, ft_int32_f4_t x1, ft_int32_f4_t y
 110:FT_Esd_Framework/FT_Esd_Primitives.h **** 
 111:FT_Esd_Framework/FT_Esd_Primitives.h **** // Basic line rendering
 112:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_RENDER(Ft_Esd_Render_Line, Type = ft_void_t, DisplayName = "ESD Line (Integer)", Include = "FT_
 113:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(x0, Type = ft_int32_t, Default = 0)
 114:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(y0, Type = ft_int32_t, Default = 0)
 115:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(x1, Type = ft_int32_t, Default = 60)
 116:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(y1, Type = ft_int32_t, Default = 20)
 117:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(width, Type = ft_int32_t, Default = 4, EditRole = None)
 118:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(color, Type = ft_argb32_t, DisplayName = "Color", Default = #FFFFFFFF)
 119:FT_Esd_Framework/FT_Esd_Primitives.h **** static inline ft_void_t Ft_Esd_Render_Line(ft_int32_t x0, ft_int32_t y0, ft_int32_t x1, ft_int32_t 
 120:FT_Esd_Framework/FT_Esd_Primitives.h **** { Ft_Esd_Render_LineF(x0 << 4, y0 << 4, x1 << 4, y1 << 4, width << 3, color); }
 414              		.loc 4 120 0
 415              		.cfi_startproc
 416              		@ args = 8, pretend = 0, frame = 16
 417              		@ frame_needed = 1, uses_anonymous_args = 0
 418 0000 B0B5     		push	{r4, r5, r7, lr}
 419              	.LCFI37:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 15


 420              		.cfi_def_cfa_offset 16
 421              		.cfi_offset 4, -16
 422              		.cfi_offset 5, -12
 423              		.cfi_offset 7, -8
 424              		.cfi_offset 14, -4
 425 0002 86B0     		sub	sp, sp, #24
 426              	.LCFI38:
 427              		.cfi_def_cfa_offset 40
 428 0004 02AF     		add	r7, sp, #8
 429              	.LCFI39:
 430              		.cfi_def_cfa 7, 32
 431 0006 F860     		str	r0, [r7, #12]
 432 0008 B960     		str	r1, [r7, #8]
 433 000a 7A60     		str	r2, [r7, #4]
 434 000c 3B60     		str	r3, [r7]
 435              		.loc 4 120 0
 436 000e FB68     		ldr	r3, [r7, #12]
 437 0010 1801     		lsls	r0, r3, #4
 438 0012 BB68     		ldr	r3, [r7, #8]
 439 0014 1901     		lsls	r1, r3, #4
 440 0016 7B68     		ldr	r3, [r7, #4]
 441 0018 1C01     		lsls	r4, r3, #4
 442 001a 3B68     		ldr	r3, [r7]
 443 001c 1D01     		lsls	r5, r3, #4
 444 001e 3B6A     		ldr	r3, [r7, #32]
 445 0020 DB00     		lsls	r3, r3, #3
 446 0022 7A6A     		ldr	r2, [r7, #36]
 447 0024 0192     		str	r2, [sp, #4]
 448 0026 0093     		str	r3, [sp]
 449 0028 2B46     		mov	r3, r5
 450 002a 2246     		mov	r2, r4
 451 002c FFF7FEFF 		bl	Ft_Esd_Render_LineF
 452 0030 00BF     		nop
 453 0032 1037     		adds	r7, r7, #16
 454              	.LCFI40:
 455              		.cfi_def_cfa_offset 16
 456 0034 BD46     		mov	sp, r7
 457              	.LCFI41:
 458              		.cfi_def_cfa_register 13
 459              		@ sp needed
 460 0036 B0BD     		pop	{r4, r5, r7, pc}
 461              		.cfi_endproc
 462              	.LFE25:
 464              		.section	.text.Ft_Esd_CheckBox_Theme__Default,"ax",%progbits
 465              		.align	1
 466              		.global	Ft_Esd_CheckBox_Theme__Default
 467              		.syntax unified
 468              		.thumb
 469              		.thumb_func
 470              		.fpu fpv5-sp-d16
 472              	Ft_Esd_CheckBox_Theme__Default:
 473              	.LFB30:
 474              		.file 5 "FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c"
   1:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** /*
   2:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** This file is automatically generated
   3:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** Ft_Esd_CheckBox
   4:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** C Source
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 16


   5:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** */
   6:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
   7:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** #include "Ft_Esd_CheckBox.h"
   8:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
   9:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** #include "FT_Esd_Dl.h"
  10:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** #include "FT_Esd_Primitives.h"
  11:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** #include "Ft_Esd_Elements.h"
  12:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
  13:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** extern void Ft_Esd_Noop(void *context);
  14:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** Ft_Esd_Theme * Ft_Esd_CheckBox_Theme__Default(void *context) { return Ft_Esd_Theme_GetCurrent(); }
 475              		.loc 5 14 0
 476              		.cfi_startproc
 477              		@ args = 0, pretend = 0, frame = 8
 478              		@ frame_needed = 1, uses_anonymous_args = 0
 479 0000 80B5     		push	{r7, lr}
 480              	.LCFI42:
 481              		.cfi_def_cfa_offset 8
 482              		.cfi_offset 7, -8
 483              		.cfi_offset 14, -4
 484 0002 82B0     		sub	sp, sp, #8
 485              	.LCFI43:
 486              		.cfi_def_cfa_offset 16
 487 0004 00AF     		add	r7, sp, #0
 488              	.LCFI44:
 489              		.cfi_def_cfa_register 7
 490 0006 7860     		str	r0, [r7, #4]
 491              		.loc 5 14 0
 492 0008 FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
 493 000c 0346     		mov	r3, r0
 494 000e 1846     		mov	r0, r3
 495 0010 0837     		adds	r7, r7, #8
 496              	.LCFI45:
 497              		.cfi_def_cfa_offset 8
 498 0012 BD46     		mov	sp, r7
 499              	.LCFI46:
 500              		.cfi_def_cfa_register 13
 501              		@ sp needed
 502 0014 80BD     		pop	{r7, pc}
 503              		.cfi_endproc
 504              	.LFE30:
 506              		.section	.text.Ft_Esd_CheckBox_Font__Default,"ax",%progbits
 507              		.align	1
 508              		.global	Ft_Esd_CheckBox_Font__Default
 509              		.syntax unified
 510              		.thumb
 511              		.thumb_func
 512              		.fpu fpv5-sp-d16
 514              	Ft_Esd_CheckBox_Font__Default:
 515              	.LFB31:
  15:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** ft_uint8_t Ft_Esd_CheckBox_Font__Default(void *context) { return 27; }
 516              		.loc 5 15 0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 8
 519              		@ frame_needed = 1, uses_anonymous_args = 0
 520              		@ link register save eliminated.
 521 0000 80B4     		push	{r7}
 522              	.LCFI47:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 17


 523              		.cfi_def_cfa_offset 4
 524              		.cfi_offset 7, -4
 525 0002 83B0     		sub	sp, sp, #12
 526              	.LCFI48:
 527              		.cfi_def_cfa_offset 16
 528 0004 00AF     		add	r7, sp, #0
 529              	.LCFI49:
 530              		.cfi_def_cfa_register 7
 531 0006 7860     		str	r0, [r7, #4]
 532              		.loc 5 15 0
 533 0008 1B23     		movs	r3, #27
 534 000a 1846     		mov	r0, r3
 535 000c 0C37     		adds	r7, r7, #12
 536              	.LCFI50:
 537              		.cfi_def_cfa_offset 4
 538 000e BD46     		mov	sp, r7
 539              	.LCFI51:
 540              		.cfi_def_cfa_register 13
 541              		@ sp needed
 542 0010 5DF8047B 		ldr	r7, [sp], #4
 543              	.LCFI52:
 544              		.cfi_restore 7
 545              		.cfi_def_cfa_offset 0
 546 0014 7047     		bx	lr
 547              		.cfi_endproc
 548              	.LFE31:
 550              		.section	.text.Ft_Esd_CheckBox_X__Default,"ax",%progbits
 551              		.align	1
 552              		.global	Ft_Esd_CheckBox_X__Default
 553              		.syntax unified
 554              		.thumb
 555              		.thumb_func
 556              		.fpu fpv5-sp-d16
 558              	Ft_Esd_CheckBox_X__Default:
 559              	.LFB32:
  16:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** int Ft_Esd_CheckBox_X__Default(void *context) { return 0L; }
 560              		.loc 5 16 0
 561              		.cfi_startproc
 562              		@ args = 0, pretend = 0, frame = 8
 563              		@ frame_needed = 1, uses_anonymous_args = 0
 564              		@ link register save eliminated.
 565 0000 80B4     		push	{r7}
 566              	.LCFI53:
 567              		.cfi_def_cfa_offset 4
 568              		.cfi_offset 7, -4
 569 0002 83B0     		sub	sp, sp, #12
 570              	.LCFI54:
 571              		.cfi_def_cfa_offset 16
 572 0004 00AF     		add	r7, sp, #0
 573              	.LCFI55:
 574              		.cfi_def_cfa_register 7
 575 0006 7860     		str	r0, [r7, #4]
 576              		.loc 5 16 0
 577 0008 0023     		movs	r3, #0
 578 000a 1846     		mov	r0, r3
 579 000c 0C37     		adds	r7, r7, #12
 580              	.LCFI56:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 18


 581              		.cfi_def_cfa_offset 4
 582 000e BD46     		mov	sp, r7
 583              	.LCFI57:
 584              		.cfi_def_cfa_register 13
 585              		@ sp needed
 586 0010 5DF8047B 		ldr	r7, [sp], #4
 587              	.LCFI58:
 588              		.cfi_restore 7
 589              		.cfi_def_cfa_offset 0
 590 0014 7047     		bx	lr
 591              		.cfi_endproc
 592              	.LFE32:
 594              		.section	.text.Ft_Esd_CheckBox_Y__Default,"ax",%progbits
 595              		.align	1
 596              		.global	Ft_Esd_CheckBox_Y__Default
 597              		.syntax unified
 598              		.thumb
 599              		.thumb_func
 600              		.fpu fpv5-sp-d16
 602              	Ft_Esd_CheckBox_Y__Default:
 603              	.LFB33:
  17:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** int Ft_Esd_CheckBox_Y__Default(void *context) { return 0L; }
 604              		.loc 5 17 0
 605              		.cfi_startproc
 606              		@ args = 0, pretend = 0, frame = 8
 607              		@ frame_needed = 1, uses_anonymous_args = 0
 608              		@ link register save eliminated.
 609 0000 80B4     		push	{r7}
 610              	.LCFI59:
 611              		.cfi_def_cfa_offset 4
 612              		.cfi_offset 7, -4
 613 0002 83B0     		sub	sp, sp, #12
 614              	.LCFI60:
 615              		.cfi_def_cfa_offset 16
 616 0004 00AF     		add	r7, sp, #0
 617              	.LCFI61:
 618              		.cfi_def_cfa_register 7
 619 0006 7860     		str	r0, [r7, #4]
 620              		.loc 5 17 0
 621 0008 0023     		movs	r3, #0
 622 000a 1846     		mov	r0, r3
 623 000c 0C37     		adds	r7, r7, #12
 624              	.LCFI62:
 625              		.cfi_def_cfa_offset 4
 626 000e BD46     		mov	sp, r7
 627              	.LCFI63:
 628              		.cfi_def_cfa_register 13
 629              		@ sp needed
 630 0010 5DF8047B 		ldr	r7, [sp], #4
 631              	.LCFI64:
 632              		.cfi_restore 7
 633              		.cfi_def_cfa_offset 0
 634 0014 7047     		bx	lr
 635              		.cfi_endproc
 636              	.LFE33:
 638              		.section	.text.Ft_Esd_CheckBox_Width__Default,"ax",%progbits
 639              		.align	1
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 19


 640              		.global	Ft_Esd_CheckBox_Width__Default
 641              		.syntax unified
 642              		.thumb
 643              		.thumb_func
 644              		.fpu fpv5-sp-d16
 646              	Ft_Esd_CheckBox_Width__Default:
 647              	.LFB34:
  18:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** int Ft_Esd_CheckBox_Width__Default(void *context) { return 20L; }
 648              		.loc 5 18 0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 8
 651              		@ frame_needed = 1, uses_anonymous_args = 0
 652              		@ link register save eliminated.
 653 0000 80B4     		push	{r7}
 654              	.LCFI65:
 655              		.cfi_def_cfa_offset 4
 656              		.cfi_offset 7, -4
 657 0002 83B0     		sub	sp, sp, #12
 658              	.LCFI66:
 659              		.cfi_def_cfa_offset 16
 660 0004 00AF     		add	r7, sp, #0
 661              	.LCFI67:
 662              		.cfi_def_cfa_register 7
 663 0006 7860     		str	r0, [r7, #4]
 664              		.loc 5 18 0
 665 0008 1423     		movs	r3, #20
 666 000a 1846     		mov	r0, r3
 667 000c 0C37     		adds	r7, r7, #12
 668              	.LCFI68:
 669              		.cfi_def_cfa_offset 4
 670 000e BD46     		mov	sp, r7
 671              	.LCFI69:
 672              		.cfi_def_cfa_register 13
 673              		@ sp needed
 674 0010 5DF8047B 		ldr	r7, [sp], #4
 675              	.LCFI70:
 676              		.cfi_restore 7
 677              		.cfi_def_cfa_offset 0
 678 0014 7047     		bx	lr
 679              		.cfi_endproc
 680              	.LFE34:
 682              		.section	.text.Ft_Esd_CheckBox_Height__Default,"ax",%progbits
 683              		.align	1
 684              		.global	Ft_Esd_CheckBox_Height__Default
 685              		.syntax unified
 686              		.thumb
 687              		.thumb_func
 688              		.fpu fpv5-sp-d16
 690              	Ft_Esd_CheckBox_Height__Default:
 691              	.LFB35:
  19:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** int Ft_Esd_CheckBox_Height__Default(void *context) { return 20L; }
 692              		.loc 5 19 0
 693              		.cfi_startproc
 694              		@ args = 0, pretend = 0, frame = 8
 695              		@ frame_needed = 1, uses_anonymous_args = 0
 696              		@ link register save eliminated.
 697 0000 80B4     		push	{r7}
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 20


 698              	.LCFI71:
 699              		.cfi_def_cfa_offset 4
 700              		.cfi_offset 7, -4
 701 0002 83B0     		sub	sp, sp, #12
 702              	.LCFI72:
 703              		.cfi_def_cfa_offset 16
 704 0004 00AF     		add	r7, sp, #0
 705              	.LCFI73:
 706              		.cfi_def_cfa_register 7
 707 0006 7860     		str	r0, [r7, #4]
 708              		.loc 5 19 0
 709 0008 1423     		movs	r3, #20
 710 000a 1846     		mov	r0, r3
 711 000c 0C37     		adds	r7, r7, #12
 712              	.LCFI74:
 713              		.cfi_def_cfa_offset 4
 714 000e BD46     		mov	sp, r7
 715              	.LCFI75:
 716              		.cfi_def_cfa_register 13
 717              		@ sp needed
 718 0010 5DF8047B 		ldr	r7, [sp], #4
 719              	.LCFI76:
 720              		.cfi_restore 7
 721              		.cfi_def_cfa_offset 0
 722 0014 7047     		bx	lr
 723              		.cfi_endproc
 724              	.LFE35:
 726              		.section	.text.Ft_Esd_CheckBox_Alpha__Default,"ax",%progbits
 727              		.align	1
 728              		.global	Ft_Esd_CheckBox_Alpha__Default
 729              		.syntax unified
 730              		.thumb
 731              		.thumb_func
 732              		.fpu fpv5-sp-d16
 734              	Ft_Esd_CheckBox_Alpha__Default:
 735              	.LFB36:
  20:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** ft_uint8_t Ft_Esd_CheckBox_Alpha__Default(void *context) { return 255; }
 736              		.loc 5 20 0
 737              		.cfi_startproc
 738              		@ args = 0, pretend = 0, frame = 8
 739              		@ frame_needed = 1, uses_anonymous_args = 0
 740              		@ link register save eliminated.
 741 0000 80B4     		push	{r7}
 742              	.LCFI77:
 743              		.cfi_def_cfa_offset 4
 744              		.cfi_offset 7, -4
 745 0002 83B0     		sub	sp, sp, #12
 746              	.LCFI78:
 747              		.cfi_def_cfa_offset 16
 748 0004 00AF     		add	r7, sp, #0
 749              	.LCFI79:
 750              		.cfi_def_cfa_register 7
 751 0006 7860     		str	r0, [r7, #4]
 752              		.loc 5 20 0
 753 0008 FF23     		movs	r3, #255
 754 000a 1846     		mov	r0, r3
 755 000c 0C37     		adds	r7, r7, #12
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 21


 756              	.LCFI80:
 757              		.cfi_def_cfa_offset 4
 758 000e BD46     		mov	sp, r7
 759              	.LCFI81:
 760              		.cfi_def_cfa_register 13
 761              		@ sp needed
 762 0010 5DF8047B 		ldr	r7, [sp], #4
 763              	.LCFI82:
 764              		.cfi_restore 7
 765              		.cfi_def_cfa_offset 0
 766 0014 7047     		bx	lr
 767              		.cfi_endproc
 768              	.LFE36:
 770              		.section	.rodata
 771              		.align	2
 772              	.LC0:
 773 0000 4F707469 		.ascii	"Option\000"
 773      6F6E00
 774              		.section	.text.Ft_Esd_CheckBox_Text__Default,"ax",%progbits
 775              		.align	1
 776              		.global	Ft_Esd_CheckBox_Text__Default
 777              		.syntax unified
 778              		.thumb
 779              		.thumb_func
 780              		.fpu fpv5-sp-d16
 782              	Ft_Esd_CheckBox_Text__Default:
 783              	.LFB37:
  21:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** char * Ft_Esd_CheckBox_Text__Default(void *context) { return "Option"; }
 784              		.loc 5 21 0
 785              		.cfi_startproc
 786              		@ args = 0, pretend = 0, frame = 8
 787              		@ frame_needed = 1, uses_anonymous_args = 0
 788              		@ link register save eliminated.
 789 0000 80B4     		push	{r7}
 790              	.LCFI83:
 791              		.cfi_def_cfa_offset 4
 792              		.cfi_offset 7, -4
 793 0002 83B0     		sub	sp, sp, #12
 794              	.LCFI84:
 795              		.cfi_def_cfa_offset 16
 796 0004 00AF     		add	r7, sp, #0
 797              	.LCFI85:
 798              		.cfi_def_cfa_register 7
 799 0006 7860     		str	r0, [r7, #4]
 800              		.loc 5 21 0
 801 0008 034B     		ldr	r3, .L40
 802 000a 1846     		mov	r0, r3
 803 000c 0C37     		adds	r7, r7, #12
 804              	.LCFI86:
 805              		.cfi_def_cfa_offset 4
 806 000e BD46     		mov	sp, r7
 807              	.LCFI87:
 808              		.cfi_def_cfa_register 13
 809              		@ sp needed
 810 0010 5DF8047B 		ldr	r7, [sp], #4
 811              	.LCFI88:
 812              		.cfi_restore 7
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 22


 813              		.cfi_def_cfa_offset 0
 814 0014 7047     		bx	lr
 815              	.L41:
 816 0016 00BF     		.align	2
 817              	.L40:
 818 0018 00000000 		.word	.LC0
 819              		.cfi_endproc
 820              	.LFE37:
 822              		.section	.text.Ft_Esd_CheckBox_Changed__Noop,"ax",%progbits
 823              		.align	1
 824              		.global	Ft_Esd_CheckBox_Changed__Noop
 825              		.syntax unified
 826              		.thumb
 827              		.thumb_func
 828              		.fpu fpv5-sp-d16
 830              	Ft_Esd_CheckBox_Changed__Noop:
 831              	.LFB38:
  22:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** void Ft_Esd_CheckBox_Changed__Noop(void *context, ft_bool_t value) { }
 832              		.loc 5 22 0
 833              		.cfi_startproc
 834              		@ args = 0, pretend = 0, frame = 8
 835              		@ frame_needed = 1, uses_anonymous_args = 0
 836              		@ link register save eliminated.
 837 0000 80B4     		push	{r7}
 838              	.LCFI89:
 839              		.cfi_def_cfa_offset 4
 840              		.cfi_offset 7, -4
 841 0002 83B0     		sub	sp, sp, #12
 842              	.LCFI90:
 843              		.cfi_def_cfa_offset 16
 844 0004 00AF     		add	r7, sp, #0
 845              	.LCFI91:
 846              		.cfi_def_cfa_register 7
 847 0006 7860     		str	r0, [r7, #4]
 848 0008 0B46     		mov	r3, r1
 849 000a FB70     		strb	r3, [r7, #3]
 850              		.loc 5 22 0
 851 000c 00BF     		nop
 852 000e 0C37     		adds	r7, r7, #12
 853              	.LCFI92:
 854              		.cfi_def_cfa_offset 4
 855 0010 BD46     		mov	sp, r7
 856              	.LCFI93:
 857              		.cfi_def_cfa_register 13
 858              		@ sp needed
 859 0012 5DF8047B 		ldr	r7, [sp], #4
 860              	.LCFI94:
 861              		.cfi_restore 7
 862              		.cfi_def_cfa_offset 0
 863 0016 7047     		bx	lr
 864              		.cfi_endproc
 865              	.LFE38:
 867              		.section	.text.Ft_Esd_CheckBox_ESD_Label_AlignY__Property,"ax",%progbits
 868              		.align	1
 869              		.syntax unified
 870              		.thumb
 871              		.thumb_func
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 23


 872              		.fpu fpv5-sp-d16
 874              	Ft_Esd_CheckBox_ESD_Label_AlignY__Property:
 875              	.LFB39:
  23:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
  24:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** Ft_Esd_Theme * Ft_Esd_Theme_GetCurrent();
  25:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** static Ft_Esd_Theme * Ft_Esd_CheckBox_ESD_Label_Theme__Property(void *context);
  26:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** static ft_int16_t Ft_Esd_CheckBox_ESD_Label_Font__Property(void *context);
  27:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** static const char * Ft_Esd_CheckBox_ESD_Label_Text__Property(void *context);
  28:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** static ft_int16_t Ft_Esd_CheckBox_ESD_Label_X__Property(void *context);
  29:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** static ft_int16_t Ft_Esd_CheckBox_ESD_Label_Y__Property(void *context);
  30:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** static ft_int16_t Ft_Esd_CheckBox_ESD_Label_Width__Property(void *context);
  31:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** static ft_int16_t Ft_Esd_CheckBox_ESD_Label_Height__Property(void *context);
  32:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** static ft_uint16_t Ft_Esd_CheckBox_ESD_Label_AlignY__Property(void *context) { return 1; }
 876              		.loc 5 32 0
 877              		.cfi_startproc
 878              		@ args = 0, pretend = 0, frame = 8
 879              		@ frame_needed = 1, uses_anonymous_args = 0
 880              		@ link register save eliminated.
 881 0000 80B4     		push	{r7}
 882              	.LCFI95:
 883              		.cfi_def_cfa_offset 4
 884              		.cfi_offset 7, -4
 885 0002 83B0     		sub	sp, sp, #12
 886              	.LCFI96:
 887              		.cfi_def_cfa_offset 16
 888 0004 00AF     		add	r7, sp, #0
 889              	.LCFI97:
 890              		.cfi_def_cfa_register 7
 891 0006 7860     		str	r0, [r7, #4]
 892              		.loc 5 32 0
 893 0008 0123     		movs	r3, #1
 894 000a 1846     		mov	r0, r3
 895 000c 0C37     		adds	r7, r7, #12
 896              	.LCFI98:
 897              		.cfi_def_cfa_offset 4
 898 000e BD46     		mov	sp, r7
 899              	.LCFI99:
 900              		.cfi_def_cfa_register 13
 901              		@ sp needed
 902 0010 5DF8047B 		ldr	r7, [sp], #4
 903              	.LCFI100:
 904              		.cfi_restore 7
 905              		.cfi_def_cfa_offset 0
 906 0014 7047     		bx	lr
 907              		.cfi_endproc
 908              	.LFE39:
 910              		.section	.text.Ft_Esd_CheckBox__Initializer,"ax",%progbits
 911              		.align	1
 912              		.global	Ft_Esd_CheckBox__Initializer
 913              		.syntax unified
 914              		.thumb
 915              		.thumb_func
 916              		.fpu fpv5-sp-d16
 918              	Ft_Esd_CheckBox__Initializer:
 919              	.LFB40:
  33:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
  34:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** static void Ft_Esd_CheckBox_Touch_Tag_Tap__Signal(void *context);
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 24


  35:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
  36:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** void Ft_Esd_CheckBox__Initializer(Ft_Esd_CheckBox *context)
  37:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** {
 920              		.loc 5 37 0
 921              		.cfi_startproc
 922              		@ args = 0, pretend = 0, frame = 8
 923              		@ frame_needed = 1, uses_anonymous_args = 0
 924 0000 80B5     		push	{r7, lr}
 925              	.LCFI101:
 926              		.cfi_def_cfa_offset 8
 927              		.cfi_offset 7, -8
 928              		.cfi_offset 14, -4
 929 0002 82B0     		sub	sp, sp, #8
 930              	.LCFI102:
 931              		.cfi_def_cfa_offset 16
 932 0004 00AF     		add	r7, sp, #0
 933              	.LCFI103:
 934              		.cfi_def_cfa_register 7
 935 0006 7860     		str	r0, [r7, #4]
  38:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Parent = 0;
 936              		.loc 5 38 0
 937 0008 7B68     		ldr	r3, [r7, #4]
 938 000a 0022     		movs	r2, #0
 939 000c 1A60     		str	r2, [r3]
  39:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_TouchTag__Initializer(&context->Touch_Tag);
 940              		.loc 5 39 0
 941 000e 7B68     		ldr	r3, [r7, #4]
 942 0010 0433     		adds	r3, r3, #4
 943 0012 1846     		mov	r0, r3
 944 0014 FFF7FEFF 		bl	Ft_Esd_TouchTag__Initializer
  40:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Touch_Tag.Parent = context;
 945              		.loc 5 40 0
 946 0018 7B68     		ldr	r3, [r7, #4]
 947 001a 7A68     		ldr	r2, [r7, #4]
 948 001c 5A60     		str	r2, [r3, #4]
  41:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Touch_Tag.Tap = Ft_Esd_CheckBox_Touch_Tag_Tap__Signal;
 949              		.loc 5 41 0
 950 001e 7B68     		ldr	r3, [r7, #4]
 951 0020 234A     		ldr	r2, .L46
 952 0022 1A61     		str	r2, [r3, #16]
  42:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Theme = Ft_Esd_CheckBox_Theme__Default;
 953              		.loc 5 42 0
 954 0024 7B68     		ldr	r3, [r7, #4]
 955 0026 234A     		ldr	r2, .L46+4
 956 0028 DA61     		str	r2, [r3, #28]
  43:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Font = Ft_Esd_CheckBox_Font__Default;
 957              		.loc 5 43 0
 958 002a 7B68     		ldr	r3, [r7, #4]
 959 002c 224A     		ldr	r2, .L46+8
 960 002e 1A62     		str	r2, [r3, #32]
  44:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->X = Ft_Esd_CheckBox_X__Default;
 961              		.loc 5 44 0
 962 0030 7B68     		ldr	r3, [r7, #4]
 963 0032 224A     		ldr	r2, .L46+12
 964 0034 5A62     		str	r2, [r3, #36]
  45:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Y = Ft_Esd_CheckBox_Y__Default;
 965              		.loc 5 45 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 25


 966 0036 7B68     		ldr	r3, [r7, #4]
 967 0038 214A     		ldr	r2, .L46+16
 968 003a 9A62     		str	r2, [r3, #40]
  46:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Width = Ft_Esd_CheckBox_Width__Default;
 969              		.loc 5 46 0
 970 003c 7B68     		ldr	r3, [r7, #4]
 971 003e 214A     		ldr	r2, .L46+20
 972 0040 DA62     		str	r2, [r3, #44]
  47:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Height = Ft_Esd_CheckBox_Height__Default;
 973              		.loc 5 47 0
 974 0042 7B68     		ldr	r3, [r7, #4]
 975 0044 204A     		ldr	r2, .L46+24
 976 0046 1A63     		str	r2, [r3, #48]
  48:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Alpha = Ft_Esd_CheckBox_Alpha__Default;
 977              		.loc 5 48 0
 978 0048 7B68     		ldr	r3, [r7, #4]
 979 004a 204A     		ldr	r2, .L46+28
 980 004c 5A63     		str	r2, [r3, #52]
  49:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Text = Ft_Esd_CheckBox_Text__Default;
 981              		.loc 5 49 0
 982 004e 7B68     		ldr	r3, [r7, #4]
 983 0050 1F4A     		ldr	r2, .L46+32
 984 0052 9A63     		str	r2, [r3, #56]
  50:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Value = 0;
 985              		.loc 5 50 0
 986 0054 7B68     		ldr	r3, [r7, #4]
 987 0056 0022     		movs	r2, #0
 988 0058 83F83C20 		strb	r2, [r3, #60]
  51:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Toggled = Ft_Esd_Noop;
 989              		.loc 5 51 0
 990 005c 7B68     		ldr	r3, [r7, #4]
 991 005e 1D4A     		ldr	r2, .L46+36
 992 0060 1A64     		str	r2, [r3, #64]
  52:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Changed = Ft_Esd_CheckBox_Changed__Noop;
 993              		.loc 5 52 0
 994 0062 7B68     		ldr	r3, [r7, #4]
 995 0064 1C4A     		ldr	r2, .L46+40
 996 0066 5A64     		str	r2, [r3, #68]
  53:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_Label__Initializer(&context->ESD_Label);
 997              		.loc 5 53 0
 998 0068 7B68     		ldr	r3, [r7, #4]
 999 006a 4833     		adds	r3, r3, #72
 1000 006c 1846     		mov	r0, r3
 1001 006e FFF7FEFF 		bl	Ft_Esd_Label__Initializer
  54:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->ESD_Label.Parent = context;
 1002              		.loc 5 54 0
 1003 0072 7B68     		ldr	r3, [r7, #4]
 1004 0074 7A68     		ldr	r2, [r7, #4]
 1005 0076 9A64     		str	r2, [r3, #72]
  55:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->ESD_Label.Theme = Ft_Esd_CheckBox_ESD_Label_Theme__Property;
 1006              		.loc 5 55 0
 1007 0078 7B68     		ldr	r3, [r7, #4]
 1008 007a 184A     		ldr	r2, .L46+44
 1009 007c DA64     		str	r2, [r3, #76]
  56:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->ESD_Label.Font = Ft_Esd_CheckBox_ESD_Label_Font__Property;
 1010              		.loc 5 56 0
 1011 007e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 26


 1012 0080 174A     		ldr	r2, .L46+48
 1013 0082 1A65     		str	r2, [r3, #80]
  57:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->ESD_Label.Text = Ft_Esd_CheckBox_ESD_Label_Text__Property;
 1014              		.loc 5 57 0
 1015 0084 7B68     		ldr	r3, [r7, #4]
 1016 0086 174A     		ldr	r2, .L46+52
 1017 0088 5A65     		str	r2, [r3, #84]
  58:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->ESD_Label.X = Ft_Esd_CheckBox_ESD_Label_X__Property;
 1018              		.loc 5 58 0
 1019 008a 7B68     		ldr	r3, [r7, #4]
 1020 008c 164A     		ldr	r2, .L46+56
 1021 008e 9A65     		str	r2, [r3, #88]
  59:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->ESD_Label.Y = Ft_Esd_CheckBox_ESD_Label_Y__Property;
 1022              		.loc 5 59 0
 1023 0090 7B68     		ldr	r3, [r7, #4]
 1024 0092 164A     		ldr	r2, .L46+60
 1025 0094 DA65     		str	r2, [r3, #92]
  60:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->ESD_Label.Width = Ft_Esd_CheckBox_ESD_Label_Width__Property;
 1026              		.loc 5 60 0
 1027 0096 7B68     		ldr	r3, [r7, #4]
 1028 0098 154A     		ldr	r2, .L46+64
 1029 009a 1A66     		str	r2, [r3, #96]
  61:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->ESD_Label.Height = Ft_Esd_CheckBox_ESD_Label_Height__Property;
 1030              		.loc 5 61 0
 1031 009c 7B68     		ldr	r3, [r7, #4]
 1032 009e 154A     		ldr	r2, .L46+68
 1033 00a0 5A66     		str	r2, [r3, #100]
  62:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->ESD_Label.AlignY = Ft_Esd_CheckBox_ESD_Label_AlignY__Property;
 1034              		.loc 5 62 0
 1035 00a2 7B68     		ldr	r3, [r7, #4]
 1036 00a4 144A     		ldr	r2, .L46+72
 1037 00a6 DA66     		str	r2, [r3, #108]
  63:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** }
 1038              		.loc 5 63 0
 1039 00a8 00BF     		nop
 1040 00aa 0837     		adds	r7, r7, #8
 1041              	.LCFI104:
 1042              		.cfi_def_cfa_offset 8
 1043 00ac BD46     		mov	sp, r7
 1044              	.LCFI105:
 1045              		.cfi_def_cfa_register 13
 1046              		@ sp needed
 1047 00ae 80BD     		pop	{r7, pc}
 1048              	.L47:
 1049              		.align	2
 1050              	.L46:
 1051 00b0 00000000 		.word	Ft_Esd_CheckBox_Touch_Tag_Tap__Signal
 1052 00b4 00000000 		.word	Ft_Esd_CheckBox_Theme__Default
 1053 00b8 00000000 		.word	Ft_Esd_CheckBox_Font__Default
 1054 00bc 00000000 		.word	Ft_Esd_CheckBox_X__Default
 1055 00c0 00000000 		.word	Ft_Esd_CheckBox_Y__Default
 1056 00c4 00000000 		.word	Ft_Esd_CheckBox_Width__Default
 1057 00c8 00000000 		.word	Ft_Esd_CheckBox_Height__Default
 1058 00cc 00000000 		.word	Ft_Esd_CheckBox_Alpha__Default
 1059 00d0 00000000 		.word	Ft_Esd_CheckBox_Text__Default
 1060 00d4 00000000 		.word	Ft_Esd_Noop
 1061 00d8 00000000 		.word	Ft_Esd_CheckBox_Changed__Noop
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 27


 1062 00dc 00000000 		.word	Ft_Esd_CheckBox_ESD_Label_Theme__Property
 1063 00e0 00000000 		.word	Ft_Esd_CheckBox_ESD_Label_Font__Property
 1064 00e4 00000000 		.word	Ft_Esd_CheckBox_ESD_Label_Text__Property
 1065 00e8 00000000 		.word	Ft_Esd_CheckBox_ESD_Label_X__Property
 1066 00ec 00000000 		.word	Ft_Esd_CheckBox_ESD_Label_Y__Property
 1067 00f0 00000000 		.word	Ft_Esd_CheckBox_ESD_Label_Width__Property
 1068 00f4 00000000 		.word	Ft_Esd_CheckBox_ESD_Label_Height__Property
 1069 00f8 00000000 		.word	Ft_Esd_CheckBox_ESD_Label_AlignY__Property
 1070              		.cfi_endproc
 1071              	.LFE40:
 1073              		.section	.text.Ft_Esd_CheckBox_Render,"ax",%progbits
 1074              		.align	1
 1075              		.global	Ft_Esd_CheckBox_Render
 1076              		.syntax unified
 1077              		.thumb
 1078              		.thumb_func
 1079              		.fpu fpv5-sp-d16
 1081              	Ft_Esd_CheckBox_Render:
 1082              	.LFB41:
  64:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
  65:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** static ft_argb32_t Ft_Esd_CheckBox_Color_A_RGB_Combine__return(Ft_Esd_CheckBox *context);
  66:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
  67:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** void Ft_Esd_Elements_PanelSunken(ft_rgb32_t, ft_int16_t, ft_int16_t, ft_int16_t, ft_int16_t, ft_int
  68:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
  69:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** void Ft_Esd_CheckBox_Render(Ft_Esd_CheckBox *context)
  70:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** {
 1083              		.loc 5 70 0
 1084              		.cfi_startproc
 1085              		@ args = 0, pretend = 0, frame = 592
 1086              		@ frame_needed = 1, uses_anonymous_args = 0
 1087 0000 90B5     		push	{r4, r7, lr}
 1088              	.LCFI106:
 1089              		.cfi_def_cfa_offset 12
 1090              		.cfi_offset 4, -12
 1091              		.cfi_offset 7, -8
 1092              		.cfi_offset 14, -4
 1093 0002 ADF5177D 		sub	sp, sp, #604
 1094              	.LCFI107:
 1095              		.cfi_def_cfa_offset 616
 1096 0006 02AF     		add	r7, sp, #8
 1097              	.LCFI108:
 1098              		.cfi_def_cfa 7, 608
 1099 0008 3B1D     		adds	r3, r7, #4
 1100 000a 1860     		str	r0, [r3]
  71:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	void *parent = context->Parent;
 1101              		.loc 5 71 0
 1102 000c 3B1D     		adds	r3, r7, #4
 1103 000e 1B68     		ldr	r3, [r3]
 1104 0010 1B68     		ldr	r3, [r3]
 1105 0012 C7F80032 		str	r3, [r7, #512]
  72:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	ft_uint8_t alpha = context->Alpha(parent);
 1106              		.loc 5 72 0
 1107 0016 3B1D     		adds	r3, r7, #4
 1108 0018 1B68     		ldr	r3, [r3]
 1109 001a 5B6B     		ldr	r3, [r3, #52]
 1110 001c D7F80002 		ldr	r0, [r7, #512]
 1111 0020 9847     		blx	r3
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 28


 1112              	.LVL0:
 1113 0022 0346     		mov	r3, r0
 1114 0024 87F8FF31 		strb	r3, [r7, #511]
  73:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_Dl_COLOR_A(alpha);
 1115              		.loc 5 73 0
 1116 0028 97F8FF31 		ldrb	r3, [r7, #511]	@ zero_extendqisi2
 1117 002c 1846     		mov	r0, r3
 1118 002e FFF7FEFF 		bl	Ft_Esd_Dl_COLOR_A
  74:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	ft_uint8_t s = Ft_Esd_TouchTag_Tag(&context->Touch_Tag);
 1119              		.loc 5 74 0
 1120 0032 3B1D     		adds	r3, r7, #4
 1121 0034 1B68     		ldr	r3, [r3]
 1122 0036 0433     		adds	r3, r3, #4
 1123 0038 1846     		mov	r0, r3
 1124 003a FFF7FEFF 		bl	Ft_Esd_TouchTag_Tag
 1125 003e 0346     		mov	r3, r0
 1126 0040 87F8FE31 		strb	r3, [r7, #510]
  75:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_Dl_TAG(s);
 1127              		.loc 5 75 0
 1128 0044 97F8FE31 		ldrb	r3, [r7, #510]	@ zero_extendqisi2
 1129 0048 1846     		mov	r0, r3
 1130 004a FFF7FEFF 		bl	Ft_Esd_Dl_TAG
  76:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_Theme * theme = context->Theme(parent);
 1131              		.loc 5 76 0
 1132 004e 3B1D     		adds	r3, r7, #4
 1133 0050 1B68     		ldr	r3, [r3]
 1134 0052 DB69     		ldr	r3, [r3, #28]
 1135 0054 D7F80002 		ldr	r0, [r7, #512]
 1136 0058 9847     		blx	r3
 1137              	.LVL1:
 1138 005a C7F8F801 		str	r0, [r7, #504]
  77:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	ft_rgb32_t color = Ft_Esd_Theme_GetBackColor(theme);
 1139              		.loc 5 77 0
 1140 005e D7F8F801 		ldr	r0, [r7, #504]
 1141 0062 FFF7FEFF 		bl	Ft_Esd_Theme_GetBackColor
 1142 0066 C7F8F401 		str	r0, [r7, #500]
  78:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int x = context->X(parent);
 1143              		.loc 5 78 0
 1144 006a 3B1D     		adds	r3, r7, #4
 1145 006c 1B68     		ldr	r3, [r3]
 1146 006e 5B6A     		ldr	r3, [r3, #36]
 1147 0070 D7F80002 		ldr	r0, [r7, #512]
 1148 0074 9847     		blx	r3
 1149              	.LVL2:
 1150 0076 C7F8F001 		str	r0, [r7, #496]
  79:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int y = context->Y(parent);
 1151              		.loc 5 79 0
 1152 007a 3B1D     		adds	r3, r7, #4
 1153 007c 1B68     		ldr	r3, [r3]
 1154 007e 9B6A     		ldr	r3, [r3, #40]
 1155 0080 D7F80002 		ldr	r0, [r7, #512]
 1156 0084 9847     		blx	r3
 1157              	.LVL3:
 1158 0086 C7F8EC01 		str	r0, [r7, #492]
  80:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int left = context->Width(parent);
 1159              		.loc 5 80 0
 1160 008a 3B1D     		adds	r3, r7, #4
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 29


 1161 008c 1B68     		ldr	r3, [r3]
 1162 008e DB6A     		ldr	r3, [r3, #44]
 1163 0090 D7F80002 		ldr	r0, [r7, #512]
 1164 0094 9847     		blx	r3
 1165              	.LVL4:
 1166 0096 C7F8E801 		str	r0, [r7, #488]
  81:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int right = context->Height(parent);
 1167              		.loc 5 81 0
 1168 009a 3B1D     		adds	r3, r7, #4
 1169 009c 1B68     		ldr	r3, [r3]
 1170 009e 1B6B     		ldr	r3, [r3, #48]
 1171 00a0 D7F80002 		ldr	r0, [r7, #512]
 1172 00a4 9847     		blx	r3
 1173              	.LVL5:
 1174 00a6 C7F8E401 		str	r0, [r7, #484]
  82:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int if_1 = left <= right;
 1175              		.loc 5 82 0
 1176 00aa D7F8E821 		ldr	r2, [r7, #488]
 1177 00ae D7F8E431 		ldr	r3, [r7, #484]
 1178 00b2 9A42     		cmp	r2, r3
 1179 00b4 D4BF     		ite	le
 1180 00b6 0123     		movle	r3, #1
 1181 00b8 0023     		movgt	r3, #0
 1182 00ba DBB2     		uxtb	r3, r3
 1183 00bc C7F8E031 		str	r3, [r7, #480]
  83:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int width;
  84:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	if (if_1)
 1184              		.loc 5 84 0
 1185 00c0 D7F8E031 		ldr	r3, [r7, #480]
 1186 00c4 002B     		cmp	r3, #0
 1187 00c6 08D0     		beq	.L49
  85:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	{
  86:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		width = context->Width(parent);
 1188              		.loc 5 86 0
 1189 00c8 3B1D     		adds	r3, r7, #4
 1190 00ca 1B68     		ldr	r3, [r3]
 1191 00cc DB6A     		ldr	r3, [r3, #44]
 1192 00ce D7F80002 		ldr	r0, [r7, #512]
 1193 00d2 9847     		blx	r3
 1194              	.LVL6:
 1195 00d4 C7F84C02 		str	r0, [r7, #588]
 1196 00d8 07E0     		b	.L50
 1197              	.L49:
  87:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	}
  88:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	else
  89:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	{
  90:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		width = context->Height(parent);
 1198              		.loc 5 90 0
 1199 00da 3B1D     		adds	r3, r7, #4
 1200 00dc 1B68     		ldr	r3, [r3]
 1201 00de 1B6B     		ldr	r3, [r3, #48]
 1202 00e0 D7F80002 		ldr	r0, [r7, #512]
 1203 00e4 9847     		blx	r3
 1204              	.LVL7:
 1205 00e6 C7F84C02 		str	r0, [r7, #588]
 1206              	.L50:
  91:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	}
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 30


  92:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int height = context->Height(parent);
 1207              		.loc 5 92 0
 1208 00ea 3B1D     		adds	r3, r7, #4
 1209 00ec 1B68     		ldr	r3, [r3]
 1210 00ee 1B6B     		ldr	r3, [r3, #48]
 1211 00f0 D7F80002 		ldr	r0, [r7, #512]
 1212 00f4 9847     		blx	r3
 1213              	.LVL8:
 1214 00f6 C7F8DC01 		str	r0, [r7, #476]
  93:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	ft_int16_t radius = 4;
 1215              		.loc 5 93 0
 1216 00fa 0423     		movs	r3, #4
 1217 00fc A7F8DA31 		strh	r3, [r7, #474]	@ movhi
  94:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_Elements_PanelSunken(color, x, y, width, height, radius);
 1218              		.loc 5 94 0
 1219 0100 D7F8F031 		ldr	r3, [r7, #496]
 1220 0104 19B2     		sxth	r1, r3
 1221 0106 D7F8EC31 		ldr	r3, [r7, #492]
 1222 010a 18B2     		sxth	r0, r3
 1223 010c D7F84C32 		ldr	r3, [r7, #588]
 1224 0110 1CB2     		sxth	r4, r3
 1225 0112 D7F8DC31 		ldr	r3, [r7, #476]
 1226 0116 1BB2     		sxth	r3, r3
 1227 0118 B7F9DA21 		ldrsh	r2, [r7, #474]
 1228 011c 0192     		str	r2, [sp, #4]
 1229 011e 0093     		str	r3, [sp]
 1230 0120 2346     		mov	r3, r4
 1231 0122 0246     		mov	r2, r0
 1232 0124 D7F8F401 		ldr	r0, [r7, #500]
 1233 0128 FFF7FEFF 		bl	Ft_Esd_Elements_PanelSunken
  95:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	ft_bool_t left_1 = context->Value;
 1234              		.loc 5 95 0
 1235 012c 3B1D     		adds	r3, r7, #4
 1236 012e 1B68     		ldr	r3, [r3]
 1237 0130 93F83C30 		ldrb	r3, [r3, #60]
 1238 0134 87F8D931 		strb	r3, [r7, #473]
  96:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	ft_bool_t right_1 = Ft_Esd_TouchTag_Inside(&context->Touch_Tag);
 1239              		.loc 5 96 0
 1240 0138 3B1D     		adds	r3, r7, #4
 1241 013a 1B68     		ldr	r3, [r3]
 1242 013c 0433     		adds	r3, r3, #4
 1243 013e 1846     		mov	r0, r3
 1244 0140 FFF7FEFF 		bl	Ft_Esd_TouchTag_Inside
 1245 0144 0346     		mov	r3, r0
 1246 0146 87F8D831 		strb	r3, [r7, #472]
  97:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int if_2 = left_1 || right_1;
 1247              		.loc 5 97 0
 1248 014a 97F8D931 		ldrb	r3, [r7, #473]	@ zero_extendqisi2
 1249 014e 002B     		cmp	r3, #0
 1250 0150 03D1     		bne	.L51
 1251              		.loc 5 97 0 is_stmt 0 discriminator 2
 1252 0152 97F8D831 		ldrb	r3, [r7, #472]	@ zero_extendqisi2
 1253 0156 002B     		cmp	r3, #0
 1254 0158 01D0     		beq	.L52
 1255              	.L51:
 1256              		.loc 5 97 0 discriminator 3
 1257 015a 0123     		movs	r3, #1
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 31


 1258 015c 00E0     		b	.L53
 1259              	.L52:
 1260              		.loc 5 97 0 discriminator 4
 1261 015e 0023     		movs	r3, #0
 1262              	.L53:
 1263              		.loc 5 97 0 discriminator 6
 1264 0160 C7F8D431 		str	r3, [r7, #468]
  98:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	if (if_2)
 1265              		.loc 5 98 0 is_stmt 1 discriminator 6
 1266 0164 D7F8D431 		ldr	r3, [r7, #468]
 1267 0168 002B     		cmp	r3, #0
 1268 016a 00F09B85 		beq	.L54
 1269              	.LBB2:
  99:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	{
 100:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_3 = context->X(parent);
 1270              		.loc 5 100 0
 1271 016e 3B1D     		adds	r3, r7, #4
 1272 0170 1B68     		ldr	r3, [r3]
 1273 0172 5B6A     		ldr	r3, [r3, #36]
 1274 0174 D7F80002 		ldr	r0, [r7, #512]
 1275 0178 9847     		blx	r3
 1276              	.LVL9:
 1277 017a C7F8D001 		str	r0, [r7, #464]
 101:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_5 = context->Width(parent);
 1278              		.loc 5 101 0
 1279 017e 3B1D     		adds	r3, r7, #4
 1280 0180 1B68     		ldr	r3, [r3]
 1281 0182 DB6A     		ldr	r3, [r3, #44]
 1282 0184 D7F80002 		ldr	r0, [r7, #512]
 1283 0188 9847     		blx	r3
 1284              	.LVL10:
 1285 018a C7F8CC01 		str	r0, [r7, #460]
 102:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_3 = context->Height(parent);
 1286              		.loc 5 102 0
 1287 018e 3B1D     		adds	r3, r7, #4
 1288 0190 1B68     		ldr	r3, [r3]
 1289 0192 1B6B     		ldr	r3, [r3, #48]
 1290 0194 D7F80002 		ldr	r0, [r7, #512]
 1291 0198 9847     		blx	r3
 1292              	.LVL11:
 1293 019a C7F8C801 		str	r0, [r7, #456]
 103:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_3 = left_5 <= right_3;
 1294              		.loc 5 103 0
 1295 019e D7F8CC21 		ldr	r2, [r7, #460]
 1296 01a2 D7F8C831 		ldr	r3, [r7, #456]
 1297 01a6 9A42     		cmp	r2, r3
 1298 01a8 D4BF     		ite	le
 1299 01aa 0123     		movle	r3, #1
 1300 01ac 0023     		movgt	r3, #0
 1301 01ae DBB2     		uxtb	r3, r3
 1302 01b0 C7F8C431 		str	r3, [r7, #452]
 104:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_4;
 105:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		if (if_3)
 1303              		.loc 5 105 0
 1304 01b4 D7F8C431 		ldr	r3, [r7, #452]
 1305 01b8 002B     		cmp	r3, #0
 1306 01ba 08D0     		beq	.L55
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 32


 106:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 107:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_4 = context->Width(parent);
 1307              		.loc 5 107 0
 1308 01bc 3B1D     		adds	r3, r7, #4
 1309 01be 1B68     		ldr	r3, [r3]
 1310 01c0 DB6A     		ldr	r3, [r3, #44]
 1311 01c2 D7F80002 		ldr	r0, [r7, #512]
 1312 01c6 9847     		blx	r3
 1313              	.LVL12:
 1314 01c8 C7F84802 		str	r0, [r7, #584]
 1315 01cc 07E0     		b	.L56
 1316              	.L55:
 108:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 109:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		else
 110:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 111:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_4 = context->Height(parent);
 1317              		.loc 5 111 0
 1318 01ce 3B1D     		adds	r3, r7, #4
 1319 01d0 1B68     		ldr	r3, [r3]
 1320 01d2 1B6B     		ldr	r3, [r3, #48]
 1321 01d4 D7F80002 		ldr	r0, [r7, #512]
 1322 01d8 9847     		blx	r3
 1323              	.LVL13:
 1324 01da C7F84802 		str	r0, [r7, #584]
 1325              	.L56:
 112:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 113:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_4 = 10L;
 1326              		.loc 5 113 0
 1327 01de 0A23     		movs	r3, #10
 1328 01e0 C7F8C031 		str	r3, [r7, #448]
 114:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_2 = left_4 / right_4;
 1329              		.loc 5 114 0
 1330 01e4 D7F84822 		ldr	r2, [r7, #584]
 1331 01e8 D7F8C031 		ldr	r3, [r7, #448]
 1332 01ec 92FBF3F3 		sdiv	r3, r2, r3
 1333 01f0 C7F8BC31 		str	r3, [r7, #444]
 115:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_2 = left_3 + right_2;
 1334              		.loc 5 115 0
 1335 01f4 D7F8D021 		ldr	r2, [r7, #464]
 1336 01f8 D7F8BC31 		ldr	r3, [r7, #444]
 1337 01fc 1344     		add	r3, r3, r2
 1338 01fe C7F8B831 		str	r3, [r7, #440]
 116:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_7 = context->Width(parent);
 1339              		.loc 5 116 0
 1340 0202 3B1D     		adds	r3, r7, #4
 1341 0204 1B68     		ldr	r3, [r3]
 1342 0206 DB6A     		ldr	r3, [r3, #44]
 1343 0208 D7F80002 		ldr	r0, [r7, #512]
 1344 020c 9847     		blx	r3
 1345              	.LVL14:
 1346 020e C7F8B401 		str	r0, [r7, #436]
 117:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_6 = context->Height(parent);
 1347              		.loc 5 117 0
 1348 0212 3B1D     		adds	r3, r7, #4
 1349 0214 1B68     		ldr	r3, [r3]
 1350 0216 1B6B     		ldr	r3, [r3, #48]
 1351 0218 D7F80002 		ldr	r0, [r7, #512]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 33


 1352 021c 9847     		blx	r3
 1353              	.LVL15:
 1354 021e C7F8B001 		str	r0, [r7, #432]
 118:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_4 = left_7 <= right_6;
 1355              		.loc 5 118 0
 1356 0222 D7F8B421 		ldr	r2, [r7, #436]
 1357 0226 D7F8B031 		ldr	r3, [r7, #432]
 1358 022a 9A42     		cmp	r2, r3
 1359 022c D4BF     		ite	le
 1360 022e 0123     		movle	r3, #1
 1361 0230 0023     		movgt	r3, #0
 1362 0232 DBB2     		uxtb	r3, r3
 1363 0234 C7F8AC31 		str	r3, [r7, #428]
 119:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_6;
 120:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		if (if_4)
 1364              		.loc 5 120 0
 1365 0238 D7F8AC31 		ldr	r3, [r7, #428]
 1366 023c 002B     		cmp	r3, #0
 1367 023e 08D0     		beq	.L57
 121:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 122:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_6 = context->Width(parent);
 1368              		.loc 5 122 0
 1369 0240 3B1D     		adds	r3, r7, #4
 1370 0242 1B68     		ldr	r3, [r3]
 1371 0244 DB6A     		ldr	r3, [r3, #44]
 1372 0246 D7F80002 		ldr	r0, [r7, #512]
 1373 024a 9847     		blx	r3
 1374              	.LVL16:
 1375 024c C7F84402 		str	r0, [r7, #580]
 1376 0250 07E0     		b	.L58
 1377              	.L57:
 123:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 124:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		else
 125:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 126:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_6 = context->Height(parent);
 1378              		.loc 5 126 0
 1379 0252 3B1D     		adds	r3, r7, #4
 1380 0254 1B68     		ldr	r3, [r3]
 1381 0256 1B6B     		ldr	r3, [r3, #48]
 1382 0258 D7F80002 		ldr	r0, [r7, #512]
 1383 025c 9847     		blx	r3
 1384              	.LVL17:
 1385 025e C7F84402 		str	r0, [r7, #580]
 1386              	.L58:
 127:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 128:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_7 = 10L;
 1387              		.loc 5 128 0
 1388 0262 0A23     		movs	r3, #10
 1389 0264 C7F8A831 		str	r3, [r7, #424]
 129:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_5 = left_6 / right_7;
 1390              		.loc 5 129 0
 1391 0268 D7F84422 		ldr	r2, [r7, #580]
 1392 026c D7F8A831 		ldr	r3, [r7, #424]
 1393 0270 92FBF3F3 		sdiv	r3, r2, r3
 1394 0274 C7F8A431 		str	r3, [r7, #420]
 130:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int x0 = left_2 + right_5;
 1395              		.loc 5 130 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 34


 1396 0278 D7F8B821 		ldr	r2, [r7, #440]
 1397 027c D7F8A431 		ldr	r3, [r7, #420]
 1398 0280 1344     		add	r3, r3, r2
 1399 0282 C7F8A031 		str	r3, [r7, #416]
 131:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_8 = context->Y(parent);
 1400              		.loc 5 131 0
 1401 0286 3B1D     		adds	r3, r7, #4
 1402 0288 1B68     		ldr	r3, [r3]
 1403 028a 9B6A     		ldr	r3, [r3, #40]
 1404 028c D7F80002 		ldr	r0, [r7, #512]
 1405 0290 9847     		blx	r3
 1406              	.LVL18:
 1407 0292 C7F89C01 		str	r0, [r7, #412]
 132:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_10 = context->Width(parent);
 1408              		.loc 5 132 0
 1409 0296 3B1D     		adds	r3, r7, #4
 1410 0298 1B68     		ldr	r3, [r3]
 1411 029a DB6A     		ldr	r3, [r3, #44]
 1412 029c D7F80002 		ldr	r0, [r7, #512]
 1413 02a0 9847     		blx	r3
 1414              	.LVL19:
 1415 02a2 C7F89801 		str	r0, [r7, #408]
 133:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_9 = context->Height(parent);
 1416              		.loc 5 133 0
 1417 02a6 3B1D     		adds	r3, r7, #4
 1418 02a8 1B68     		ldr	r3, [r3]
 1419 02aa 1B6B     		ldr	r3, [r3, #48]
 1420 02ac D7F80002 		ldr	r0, [r7, #512]
 1421 02b0 9847     		blx	r3
 1422              	.LVL20:
 1423 02b2 C7F89401 		str	r0, [r7, #404]
 134:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_5 = left_10 <= right_9;
 1424              		.loc 5 134 0
 1425 02b6 D7F89821 		ldr	r2, [r7, #408]
 1426 02ba D7F89431 		ldr	r3, [r7, #404]
 1427 02be 9A42     		cmp	r2, r3
 1428 02c0 D4BF     		ite	le
 1429 02c2 0123     		movle	r3, #1
 1430 02c4 0023     		movgt	r3, #0
 1431 02c6 DBB2     		uxtb	r3, r3
 1432 02c8 C7F89031 		str	r3, [r7, #400]
 135:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_9;
 136:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		if (if_5)
 1433              		.loc 5 136 0
 1434 02cc D7F89031 		ldr	r3, [r7, #400]
 1435 02d0 002B     		cmp	r3, #0
 1436 02d2 08D0     		beq	.L59
 137:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 138:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_9 = context->Width(parent);
 1437              		.loc 5 138 0
 1438 02d4 3B1D     		adds	r3, r7, #4
 1439 02d6 1B68     		ldr	r3, [r3]
 1440 02d8 DB6A     		ldr	r3, [r3, #44]
 1441 02da D7F80002 		ldr	r0, [r7, #512]
 1442 02de 9847     		blx	r3
 1443              	.LVL21:
 1444 02e0 C7F84002 		str	r0, [r7, #576]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 35


 1445 02e4 07E0     		b	.L60
 1446              	.L59:
 139:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 140:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		else
 141:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 142:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_9 = context->Height(parent);
 1447              		.loc 5 142 0
 1448 02e6 3B1D     		adds	r3, r7, #4
 1449 02e8 1B68     		ldr	r3, [r3]
 1450 02ea 1B6B     		ldr	r3, [r3, #48]
 1451 02ec D7F80002 		ldr	r0, [r7, #512]
 1452 02f0 9847     		blx	r3
 1453              	.LVL22:
 1454 02f2 C7F84002 		str	r0, [r7, #576]
 1455              	.L60:
 143:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 144:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_10 = 2L;
 1456              		.loc 5 144 0
 1457 02f6 0223     		movs	r3, #2
 1458 02f8 C7F88C31 		str	r3, [r7, #396]
 145:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_8 = left_9 / right_10;
 1459              		.loc 5 145 0
 1460 02fc D7F84022 		ldr	r2, [r7, #576]
 1461 0300 D7F88C31 		ldr	r3, [r7, #396]
 1462 0304 92FBF3F3 		sdiv	r3, r2, r3
 1463 0308 C7F88831 		str	r3, [r7, #392]
 146:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int y0 = left_8 + right_8;
 1464              		.loc 5 146 0
 1465 030c D7F89C21 		ldr	r2, [r7, #412]
 1466 0310 D7F88831 		ldr	r3, [r7, #392]
 1467 0314 1344     		add	r3, r3, r2
 1468 0316 C7F88431 		str	r3, [r7, #388]
 147:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_11 = context->X(parent);
 1469              		.loc 5 147 0
 1470 031a 3B1D     		adds	r3, r7, #4
 1471 031c 1B68     		ldr	r3, [r3]
 1472 031e 5B6A     		ldr	r3, [r3, #36]
 1473 0320 D7F80002 		ldr	r0, [r7, #512]
 1474 0324 9847     		blx	r3
 1475              	.LVL23:
 1476 0326 C7F88001 		str	r0, [r7, #384]
 148:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_13 = context->Width(parent);
 1477              		.loc 5 148 0
 1478 032a 3B1D     		adds	r3, r7, #4
 1479 032c 1B68     		ldr	r3, [r3]
 1480 032e DB6A     		ldr	r3, [r3, #44]
 1481 0330 D7F80002 		ldr	r0, [r7, #512]
 1482 0334 9847     		blx	r3
 1483              	.LVL24:
 1484 0336 C7F87C01 		str	r0, [r7, #380]
 149:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_12 = context->Height(parent);
 1485              		.loc 5 149 0
 1486 033a 3B1D     		adds	r3, r7, #4
 1487 033c 1B68     		ldr	r3, [r3]
 1488 033e 1B6B     		ldr	r3, [r3, #48]
 1489 0340 D7F80002 		ldr	r0, [r7, #512]
 1490 0344 9847     		blx	r3
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 36


 1491              	.LVL25:
 1492 0346 C7F87801 		str	r0, [r7, #376]
 150:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_6 = left_13 <= right_12;
 1493              		.loc 5 150 0
 1494 034a D7F87C21 		ldr	r2, [r7, #380]
 1495 034e D7F87831 		ldr	r3, [r7, #376]
 1496 0352 9A42     		cmp	r2, r3
 1497 0354 D4BF     		ite	le
 1498 0356 0123     		movle	r3, #1
 1499 0358 0023     		movgt	r3, #0
 1500 035a DBB2     		uxtb	r3, r3
 1501 035c C7F87431 		str	r3, [r7, #372]
 151:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_12;
 152:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		if (if_6)
 1502              		.loc 5 152 0
 1503 0360 D7F87431 		ldr	r3, [r7, #372]
 1504 0364 002B     		cmp	r3, #0
 1505 0366 08D0     		beq	.L61
 153:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 154:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_12 = context->Width(parent);
 1506              		.loc 5 154 0
 1507 0368 3B1D     		adds	r3, r7, #4
 1508 036a 1B68     		ldr	r3, [r3]
 1509 036c DB6A     		ldr	r3, [r3, #44]
 1510 036e D7F80002 		ldr	r0, [r7, #512]
 1511 0372 9847     		blx	r3
 1512              	.LVL26:
 1513 0374 C7F83C02 		str	r0, [r7, #572]
 1514 0378 07E0     		b	.L62
 1515              	.L61:
 155:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 156:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		else
 157:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 158:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_12 = context->Height(parent);
 1516              		.loc 5 158 0
 1517 037a 3B1D     		adds	r3, r7, #4
 1518 037c 1B68     		ldr	r3, [r3]
 1519 037e 1B6B     		ldr	r3, [r3, #48]
 1520 0380 D7F80002 		ldr	r0, [r7, #512]
 1521 0384 9847     		blx	r3
 1522              	.LVL27:
 1523 0386 C7F83C02 		str	r0, [r7, #572]
 1524              	.L62:
 159:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 160:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_13 = 3L;
 1525              		.loc 5 160 0
 1526 038a 0323     		movs	r3, #3
 1527 038c C7F87031 		str	r3, [r7, #368]
 161:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_11 = left_12 / right_13;
 1528              		.loc 5 161 0
 1529 0390 D7F83C22 		ldr	r2, [r7, #572]
 1530 0394 D7F87031 		ldr	r3, [r7, #368]
 1531 0398 92FBF3F3 		sdiv	r3, r2, r3
 1532 039c C7F86C31 		str	r3, [r7, #364]
 162:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int x1 = left_11 + right_11;
 1533              		.loc 5 162 0
 1534 03a0 D7F88021 		ldr	r2, [r7, #384]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 37


 1535 03a4 D7F86C31 		ldr	r3, [r7, #364]
 1536 03a8 1344     		add	r3, r3, r2
 1537 03aa C7F86831 		str	r3, [r7, #360]
 163:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_16 = context->Y(parent);
 1538              		.loc 5 163 0
 1539 03ae 3B1D     		adds	r3, r7, #4
 1540 03b0 1B68     		ldr	r3, [r3]
 1541 03b2 9B6A     		ldr	r3, [r3, #40]
 1542 03b4 D7F80002 		ldr	r0, [r7, #512]
 1543 03b8 9847     		blx	r3
 1544              	.LVL28:
 1545 03ba C7F86401 		str	r0, [r7, #356]
 164:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_17 = context->Width(parent);
 1546              		.loc 5 164 0
 1547 03be 3B1D     		adds	r3, r7, #4
 1548 03c0 1B68     		ldr	r3, [r3]
 1549 03c2 DB6A     		ldr	r3, [r3, #44]
 1550 03c4 D7F80002 		ldr	r0, [r7, #512]
 1551 03c8 9847     		blx	r3
 1552              	.LVL29:
 1553 03ca C7F86001 		str	r0, [r7, #352]
 165:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_15 = context->Height(parent);
 1554              		.loc 5 165 0
 1555 03ce 3B1D     		adds	r3, r7, #4
 1556 03d0 1B68     		ldr	r3, [r3]
 1557 03d2 1B6B     		ldr	r3, [r3, #48]
 1558 03d4 D7F80002 		ldr	r0, [r7, #512]
 1559 03d8 9847     		blx	r3
 1560              	.LVL30:
 1561 03da C7F85C01 		str	r0, [r7, #348]
 166:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_7 = left_17 <= right_15;
 1562              		.loc 5 166 0
 1563 03de D7F86021 		ldr	r2, [r7, #352]
 1564 03e2 D7F85C31 		ldr	r3, [r7, #348]
 1565 03e6 9A42     		cmp	r2, r3
 1566 03e8 D4BF     		ite	le
 1567 03ea 0123     		movle	r3, #1
 1568 03ec 0023     		movgt	r3, #0
 1569 03ee DBB2     		uxtb	r3, r3
 1570 03f0 C7F85831 		str	r3, [r7, #344]
 167:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_14;
 168:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		if (if_7)
 1571              		.loc 5 168 0
 1572 03f4 D7F85831 		ldr	r3, [r7, #344]
 1573 03f8 002B     		cmp	r3, #0
 1574 03fa 08D0     		beq	.L63
 169:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 170:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			right_14 = context->Width(parent);
 1575              		.loc 5 170 0
 1576 03fc 3B1D     		adds	r3, r7, #4
 1577 03fe 1B68     		ldr	r3, [r3]
 1578 0400 DB6A     		ldr	r3, [r3, #44]
 1579 0402 D7F80002 		ldr	r0, [r7, #512]
 1580 0406 9847     		blx	r3
 1581              	.LVL31:
 1582 0408 C7F83802 		str	r0, [r7, #568]
 1583 040c 07E0     		b	.L64
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 38


 1584              	.L63:
 171:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 172:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		else
 173:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 174:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			right_14 = context->Height(parent);
 1585              		.loc 5 174 0
 1586 040e 3B1D     		adds	r3, r7, #4
 1587 0410 1B68     		ldr	r3, [r3]
 1588 0412 1B6B     		ldr	r3, [r3, #48]
 1589 0414 D7F80002 		ldr	r0, [r7, #512]
 1590 0418 9847     		blx	r3
 1591              	.LVL32:
 1592 041a C7F83802 		str	r0, [r7, #568]
 1593              	.L64:
 175:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 176:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_15 = left_16 + right_14;
 1594              		.loc 5 176 0
 1595 041e D7F86421 		ldr	r2, [r7, #356]
 1596 0422 D7F83832 		ldr	r3, [r7, #568]
 1597 0426 1344     		add	r3, r3, r2
 1598 0428 C7F85431 		str	r3, [r7, #340]
 177:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_19 = context->Width(parent);
 1599              		.loc 5 177 0
 1600 042c 3B1D     		adds	r3, r7, #4
 1601 042e 1B68     		ldr	r3, [r3]
 1602 0430 DB6A     		ldr	r3, [r3, #44]
 1603 0432 07F5A874 		add	r4, r7, #336
 1604 0436 D7F80002 		ldr	r0, [r7, #512]
 1605 043a 9847     		blx	r3
 1606              	.LVL33:
 1607 043c 2060     		str	r0, [r4]
 178:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_17 = context->Height(parent);
 1608              		.loc 5 178 0
 1609 043e 3B1D     		adds	r3, r7, #4
 1610 0440 1B68     		ldr	r3, [r3]
 1611 0442 1B6B     		ldr	r3, [r3, #48]
 1612 0444 07F5A674 		add	r4, r7, #332
 1613 0448 D7F80002 		ldr	r0, [r7, #512]
 1614 044c 9847     		blx	r3
 1615              	.LVL34:
 1616 044e 2060     		str	r0, [r4]
 179:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_8 = left_19 <= right_17;
 1617              		.loc 5 179 0
 1618 0450 07F5A872 		add	r2, r7, #336
 1619 0454 07F5A673 		add	r3, r7, #332
 1620 0458 1268     		ldr	r2, [r2]
 1621 045a 1B68     		ldr	r3, [r3]
 1622 045c 9A42     		cmp	r2, r3
 1623 045e D4BF     		ite	le
 1624 0460 0123     		movle	r3, #1
 1625 0462 0023     		movgt	r3, #0
 1626 0464 DAB2     		uxtb	r2, r3
 1627 0466 07F5A473 		add	r3, r7, #328
 1628 046a 1A60     		str	r2, [r3]
 180:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_18;
 181:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		if (if_8)
 1629              		.loc 5 181 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 39


 1630 046c 07F5A473 		add	r3, r7, #328
 1631 0470 1B68     		ldr	r3, [r3]
 1632 0472 002B     		cmp	r3, #0
 1633 0474 08D0     		beq	.L65
 182:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 183:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_18 = context->Width(parent);
 1634              		.loc 5 183 0
 1635 0476 3B1D     		adds	r3, r7, #4
 1636 0478 1B68     		ldr	r3, [r3]
 1637 047a DB6A     		ldr	r3, [r3, #44]
 1638 047c D7F80002 		ldr	r0, [r7, #512]
 1639 0480 9847     		blx	r3
 1640              	.LVL35:
 1641 0482 C7F83402 		str	r0, [r7, #564]
 1642 0486 07E0     		b	.L66
 1643              	.L65:
 184:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 185:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		else
 186:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 187:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_18 = context->Height(parent);
 1644              		.loc 5 187 0
 1645 0488 3B1D     		adds	r3, r7, #4
 1646 048a 1B68     		ldr	r3, [r3]
 1647 048c 1B6B     		ldr	r3, [r3, #48]
 1648 048e D7F80002 		ldr	r0, [r7, #512]
 1649 0492 9847     		blx	r3
 1650              	.LVL36:
 1651 0494 C7F83402 		str	r0, [r7, #564]
 1652              	.L66:
 188:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 189:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_18 = 10L;
 1653              		.loc 5 189 0
 1654 0498 07F5A273 		add	r3, r7, #324
 1655 049c 0A22     		movs	r2, #10
 1656 049e 1A60     		str	r2, [r3]
 190:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_16 = left_18 / right_18;
 1657              		.loc 5 190 0
 1658 04a0 07F5A073 		add	r3, r7, #320
 1659 04a4 07F5A272 		add	r2, r7, #324
 1660 04a8 D7F83412 		ldr	r1, [r7, #564]
 1661 04ac 1268     		ldr	r2, [r2]
 1662 04ae 91FBF2F2 		sdiv	r2, r1, r2
 1663 04b2 1A60     		str	r2, [r3]
 191:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_14 = left_15 - right_16;
 1664              		.loc 5 191 0
 1665 04b4 07F59E73 		add	r3, r7, #316
 1666 04b8 07F5A072 		add	r2, r7, #320
 1667 04bc D7F85411 		ldr	r1, [r7, #340]
 1668 04c0 1268     		ldr	r2, [r2]
 1669 04c2 8A1A     		subs	r2, r1, r2
 1670 04c4 1A60     		str	r2, [r3]
 192:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_21 = context->Width(parent);
 1671              		.loc 5 192 0
 1672 04c6 3B1D     		adds	r3, r7, #4
 1673 04c8 1B68     		ldr	r3, [r3]
 1674 04ca DB6A     		ldr	r3, [r3, #44]
 1675 04cc 07F59C74 		add	r4, r7, #312
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 40


 1676 04d0 D7F80002 		ldr	r0, [r7, #512]
 1677 04d4 9847     		blx	r3
 1678              	.LVL37:
 1679 04d6 2060     		str	r0, [r4]
 193:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_20 = context->Height(parent);
 1680              		.loc 5 193 0
 1681 04d8 3B1D     		adds	r3, r7, #4
 1682 04da 1B68     		ldr	r3, [r3]
 1683 04dc 1B6B     		ldr	r3, [r3, #48]
 1684 04de 07F59A74 		add	r4, r7, #308
 1685 04e2 D7F80002 		ldr	r0, [r7, #512]
 1686 04e6 9847     		blx	r3
 1687              	.LVL38:
 1688 04e8 2060     		str	r0, [r4]
 194:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_9 = left_21 <= right_20;
 1689              		.loc 5 194 0
 1690 04ea 07F59C72 		add	r2, r7, #312
 1691 04ee 07F59A73 		add	r3, r7, #308
 1692 04f2 1268     		ldr	r2, [r2]
 1693 04f4 1B68     		ldr	r3, [r3]
 1694 04f6 9A42     		cmp	r2, r3
 1695 04f8 D4BF     		ite	le
 1696 04fa 0123     		movle	r3, #1
 1697 04fc 0023     		movgt	r3, #0
 1698 04fe DAB2     		uxtb	r2, r3
 1699 0500 07F59873 		add	r3, r7, #304
 1700 0504 1A60     		str	r2, [r3]
 195:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_20;
 196:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		if (if_9)
 1701              		.loc 5 196 0
 1702 0506 07F59873 		add	r3, r7, #304
 1703 050a 1B68     		ldr	r3, [r3]
 1704 050c 002B     		cmp	r3, #0
 1705 050e 08D0     		beq	.L67
 197:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 198:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_20 = context->Width(parent);
 1706              		.loc 5 198 0
 1707 0510 3B1D     		adds	r3, r7, #4
 1708 0512 1B68     		ldr	r3, [r3]
 1709 0514 DB6A     		ldr	r3, [r3, #44]
 1710 0516 D7F80002 		ldr	r0, [r7, #512]
 1711 051a 9847     		blx	r3
 1712              	.LVL39:
 1713 051c C7F83002 		str	r0, [r7, #560]
 1714 0520 07E0     		b	.L68
 1715              	.L67:
 199:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 200:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		else
 201:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 202:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_20 = context->Height(parent);
 1716              		.loc 5 202 0
 1717 0522 3B1D     		adds	r3, r7, #4
 1718 0524 1B68     		ldr	r3, [r3]
 1719 0526 1B6B     		ldr	r3, [r3, #48]
 1720 0528 D7F80002 		ldr	r0, [r7, #512]
 1721 052c 9847     		blx	r3
 1722              	.LVL40:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 41


 1723 052e C7F83002 		str	r0, [r7, #560]
 1724              	.L68:
 203:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 204:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_21 = 10L;
 1725              		.loc 5 204 0
 1726 0532 07F59673 		add	r3, r7, #300
 1727 0536 0A22     		movs	r2, #10
 1728 0538 1A60     		str	r2, [r3]
 205:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_19 = left_20 / right_21;
 1729              		.loc 5 205 0
 1730 053a 07F59473 		add	r3, r7, #296
 1731 053e 07F59672 		add	r2, r7, #300
 1732 0542 D7F83012 		ldr	r1, [r7, #560]
 1733 0546 1268     		ldr	r2, [r2]
 1734 0548 91FBF2F2 		sdiv	r2, r1, r2
 1735 054c 1A60     		str	r2, [r3]
 206:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int y1 = left_14 - right_19;
 1736              		.loc 5 206 0
 1737 054e 07F59273 		add	r3, r7, #292
 1738 0552 07F59E71 		add	r1, r7, #316
 1739 0556 07F59472 		add	r2, r7, #296
 1740 055a 0968     		ldr	r1, [r1]
 1741 055c 1268     		ldr	r2, [r2]
 1742 055e 8A1A     		subs	r2, r1, r2
 1743 0560 1A60     		str	r2, [r3]
 207:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_24 = context->Width(parent);
 1744              		.loc 5 207 0
 1745 0562 3B1D     		adds	r3, r7, #4
 1746 0564 1B68     		ldr	r3, [r3]
 1747 0566 DB6A     		ldr	r3, [r3, #44]
 1748 0568 07F59074 		add	r4, r7, #288
 1749 056c D7F80002 		ldr	r0, [r7, #512]
 1750 0570 9847     		blx	r3
 1751              	.LVL41:
 1752 0572 2060     		str	r0, [r4]
 208:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_22 = context->Height(parent);
 1753              		.loc 5 208 0
 1754 0574 3B1D     		adds	r3, r7, #4
 1755 0576 1B68     		ldr	r3, [r3]
 1756 0578 1B6B     		ldr	r3, [r3, #48]
 1757 057a 07F58E74 		add	r4, r7, #284
 1758 057e D7F80002 		ldr	r0, [r7, #512]
 1759 0582 9847     		blx	r3
 1760              	.LVL42:
 1761 0584 2060     		str	r0, [r4]
 209:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_10 = left_24 <= right_22;
 1762              		.loc 5 209 0
 1763 0586 07F59072 		add	r2, r7, #288
 1764 058a 07F58E73 		add	r3, r7, #284
 1765 058e 1268     		ldr	r2, [r2]
 1766 0590 1B68     		ldr	r3, [r3]
 1767 0592 9A42     		cmp	r2, r3
 1768 0594 D4BF     		ite	le
 1769 0596 0123     		movle	r3, #1
 1770 0598 0023     		movgt	r3, #0
 1771 059a DAB2     		uxtb	r2, r3
 1772 059c 07F58C73 		add	r3, r7, #280
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 42


 1773 05a0 1A60     		str	r2, [r3]
 210:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_23;
 211:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		if (if_10)
 1774              		.loc 5 211 0
 1775 05a2 07F58C73 		add	r3, r7, #280
 1776 05a6 1B68     		ldr	r3, [r3]
 1777 05a8 002B     		cmp	r3, #0
 1778 05aa 08D0     		beq	.L69
 212:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 213:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_23 = context->Width(parent);
 1779              		.loc 5 213 0
 1780 05ac 3B1D     		adds	r3, r7, #4
 1781 05ae 1B68     		ldr	r3, [r3]
 1782 05b0 DB6A     		ldr	r3, [r3, #44]
 1783 05b2 D7F80002 		ldr	r0, [r7, #512]
 1784 05b6 9847     		blx	r3
 1785              	.LVL43:
 1786 05b8 C7F82C02 		str	r0, [r7, #556]
 1787 05bc 07E0     		b	.L70
 1788              	.L69:
 214:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 215:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		else
 216:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 217:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_23 = context->Height(parent);
 1789              		.loc 5 217 0
 1790 05be 3B1D     		adds	r3, r7, #4
 1791 05c0 1B68     		ldr	r3, [r3]
 1792 05c2 1B6B     		ldr	r3, [r3, #48]
 1793 05c4 D7F80002 		ldr	r0, [r7, #512]
 1794 05c8 9847     		blx	r3
 1795              	.LVL44:
 1796 05ca C7F82C02 		str	r0, [r7, #556]
 1797              	.L70:
 218:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 219:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_23 = 10L;
 1798              		.loc 5 219 0
 1799 05ce 07F58A73 		add	r3, r7, #276
 1800 05d2 0A22     		movs	r2, #10
 1801 05d4 1A60     		str	r2, [r3]
 220:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_22 = left_23 / right_23;
 1802              		.loc 5 220 0
 1803 05d6 07F58873 		add	r3, r7, #272
 1804 05da 07F58A72 		add	r2, r7, #276
 1805 05de D7F82C12 		ldr	r1, [r7, #556]
 1806 05e2 1268     		ldr	r2, [r2]
 1807 05e4 91FBF2F2 		sdiv	r2, r1, r2
 1808 05e8 1A60     		str	r2, [r3]
 221:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_24 = 2L;
 1809              		.loc 5 221 0
 1810 05ea 07F58673 		add	r3, r7, #268
 1811 05ee 0222     		movs	r2, #2
 1812 05f0 1A60     		str	r2, [r3]
 222:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int width_1 = left_22 * right_24;
 1813              		.loc 5 222 0
 1814 05f2 07F58473 		add	r3, r7, #264
 1815 05f6 07F58872 		add	r2, r7, #272
 1816 05fa 07F58671 		add	r1, r7, #268
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 43


 1817 05fe 1268     		ldr	r2, [r2]
 1818 0600 0968     		ldr	r1, [r1]
 1819 0602 01FB02F2 		mul	r2, r1, r2
 1820 0606 1A60     		str	r2, [r3]
 223:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		ft_argb32_t color_1 = Ft_Esd_CheckBox_Color_A_RGB_Combine__return(context);
 1821              		.loc 5 223 0
 1822 0608 07F58274 		add	r4, r7, #260
 1823 060c 3B1D     		adds	r3, r7, #4
 1824 060e 1868     		ldr	r0, [r3]
 1825 0610 FFF7FEFF 		bl	Ft_Esd_CheckBox_Color_A_RGB_Combine__return
 1826 0614 2060     		str	r0, [r4]
 224:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		Ft_Esd_Render_Line(x0, y0, x1, y1, width_1, color_1);
 1827              		.loc 5 224 0
 1828 0616 07F59273 		add	r3, r7, #292
 1829 061a 07F58272 		add	r2, r7, #260
 1830 061e 1268     		ldr	r2, [r2]
 1831 0620 0192     		str	r2, [sp, #4]
 1832 0622 07F58472 		add	r2, r7, #264
 1833 0626 1268     		ldr	r2, [r2]
 1834 0628 0092     		str	r2, [sp]
 1835 062a 1B68     		ldr	r3, [r3]
 1836 062c D7F86821 		ldr	r2, [r7, #360]
 1837 0630 D7F88411 		ldr	r1, [r7, #388]
 1838 0634 D7F8A001 		ldr	r0, [r7, #416]
 1839 0638 FFF7FEFF 		bl	Ft_Esd_Render_Line
 225:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_25 = context->X(parent);
 1840              		.loc 5 225 0
 1841 063c 3B1D     		adds	r3, r7, #4
 1842 063e 1B68     		ldr	r3, [r3]
 1843 0640 5B6A     		ldr	r3, [r3, #36]
 1844 0642 07F58074 		add	r4, r7, #256
 1845 0646 D7F80002 		ldr	r0, [r7, #512]
 1846 064a 9847     		blx	r3
 1847              	.LVL45:
 1848 064c 2060     		str	r0, [r4]
 226:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_27 = context->Width(parent);
 1849              		.loc 5 226 0
 1850 064e 3B1D     		adds	r3, r7, #4
 1851 0650 1B68     		ldr	r3, [r3]
 1852 0652 DB6A     		ldr	r3, [r3, #44]
 1853 0654 07F1FC04 		add	r4, r7, #252
 1854 0658 D7F80002 		ldr	r0, [r7, #512]
 1855 065c 9847     		blx	r3
 1856              	.LVL46:
 1857 065e 2060     		str	r0, [r4]
 227:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_26 = context->Height(parent);
 1858              		.loc 5 227 0
 1859 0660 3B1D     		adds	r3, r7, #4
 1860 0662 1B68     		ldr	r3, [r3]
 1861 0664 1B6B     		ldr	r3, [r3, #48]
 1862 0666 07F1F804 		add	r4, r7, #248
 1863 066a D7F80002 		ldr	r0, [r7, #512]
 1864 066e 9847     		blx	r3
 1865              	.LVL47:
 1866 0670 2060     		str	r0, [r4]
 228:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_11 = left_27 <= right_26;
 1867              		.loc 5 228 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 44


 1868 0672 07F1FC02 		add	r2, r7, #252
 1869 0676 07F1F803 		add	r3, r7, #248
 1870 067a 1268     		ldr	r2, [r2]
 1871 067c 1B68     		ldr	r3, [r3]
 1872 067e 9A42     		cmp	r2, r3
 1873 0680 D4BF     		ite	le
 1874 0682 0123     		movle	r3, #1
 1875 0684 0023     		movgt	r3, #0
 1876 0686 DAB2     		uxtb	r2, r3
 1877 0688 07F1F403 		add	r3, r7, #244
 1878 068c 1A60     		str	r2, [r3]
 229:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_26;
 230:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		if (if_11)
 1879              		.loc 5 230 0
 1880 068e 07F1F403 		add	r3, r7, #244
 1881 0692 1B68     		ldr	r3, [r3]
 1882 0694 002B     		cmp	r3, #0
 1883 0696 08D0     		beq	.L71
 231:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 232:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_26 = context->Width(parent);
 1884              		.loc 5 232 0
 1885 0698 3B1D     		adds	r3, r7, #4
 1886 069a 1B68     		ldr	r3, [r3]
 1887 069c DB6A     		ldr	r3, [r3, #44]
 1888 069e D7F80002 		ldr	r0, [r7, #512]
 1889 06a2 9847     		blx	r3
 1890              	.LVL48:
 1891 06a4 C7F82802 		str	r0, [r7, #552]
 1892 06a8 07E0     		b	.L72
 1893              	.L71:
 233:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 234:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		else
 235:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 236:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_26 = context->Height(parent);
 1894              		.loc 5 236 0
 1895 06aa 3B1D     		adds	r3, r7, #4
 1896 06ac 1B68     		ldr	r3, [r3]
 1897 06ae 1B6B     		ldr	r3, [r3, #48]
 1898 06b0 D7F80002 		ldr	r0, [r7, #512]
 1899 06b4 9847     		blx	r3
 1900              	.LVL49:
 1901 06b6 C7F82802 		str	r0, [r7, #552]
 1902              	.L72:
 237:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 238:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_27 = 3L;
 1903              		.loc 5 238 0
 1904 06ba 07F1F003 		add	r3, r7, #240
 1905 06be 0322     		movs	r2, #3
 1906 06c0 1A60     		str	r2, [r3]
 239:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_25 = left_26 / right_27;
 1907              		.loc 5 239 0
 1908 06c2 07F1EC03 		add	r3, r7, #236
 1909 06c6 07F1F002 		add	r2, r7, #240
 1910 06ca D7F82812 		ldr	r1, [r7, #552]
 1911 06ce 1268     		ldr	r2, [r2]
 1912 06d0 91FBF2F2 		sdiv	r2, r1, r2
 1913 06d4 1A60     		str	r2, [r3]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 45


 240:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int x0_1 = left_25 + right_25;
 1914              		.loc 5 240 0
 1915 06d6 07F1E803 		add	r3, r7, #232
 1916 06da 07F58071 		add	r1, r7, #256
 1917 06de 07F1EC02 		add	r2, r7, #236
 1918 06e2 0968     		ldr	r1, [r1]
 1919 06e4 1268     		ldr	r2, [r2]
 1920 06e6 0A44     		add	r2, r2, r1
 1921 06e8 1A60     		str	r2, [r3]
 241:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_30 = context->Y(parent);
 1922              		.loc 5 241 0
 1923 06ea 3B1D     		adds	r3, r7, #4
 1924 06ec 1B68     		ldr	r3, [r3]
 1925 06ee 9B6A     		ldr	r3, [r3, #40]
 1926 06f0 07F1E404 		add	r4, r7, #228
 1927 06f4 D7F80002 		ldr	r0, [r7, #512]
 1928 06f8 9847     		blx	r3
 1929              	.LVL50:
 1930 06fa 2060     		str	r0, [r4]
 242:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_31 = context->Width(parent);
 1931              		.loc 5 242 0
 1932 06fc 3B1D     		adds	r3, r7, #4
 1933 06fe 1B68     		ldr	r3, [r3]
 1934 0700 DB6A     		ldr	r3, [r3, #44]
 1935 0702 07F1E004 		add	r4, r7, #224
 1936 0706 D7F80002 		ldr	r0, [r7, #512]
 1937 070a 9847     		blx	r3
 1938              	.LVL51:
 1939 070c 2060     		str	r0, [r4]
 243:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_29 = context->Height(parent);
 1940              		.loc 5 243 0
 1941 070e 3B1D     		adds	r3, r7, #4
 1942 0710 1B68     		ldr	r3, [r3]
 1943 0712 1B6B     		ldr	r3, [r3, #48]
 1944 0714 07F1DC04 		add	r4, r7, #220
 1945 0718 D7F80002 		ldr	r0, [r7, #512]
 1946 071c 9847     		blx	r3
 1947              	.LVL52:
 1948 071e 2060     		str	r0, [r4]
 244:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_12 = left_31 <= right_29;
 1949              		.loc 5 244 0
 1950 0720 07F1E002 		add	r2, r7, #224
 1951 0724 07F1DC03 		add	r3, r7, #220
 1952 0728 1268     		ldr	r2, [r2]
 1953 072a 1B68     		ldr	r3, [r3]
 1954 072c 9A42     		cmp	r2, r3
 1955 072e D4BF     		ite	le
 1956 0730 0123     		movle	r3, #1
 1957 0732 0023     		movgt	r3, #0
 1958 0734 DAB2     		uxtb	r2, r3
 1959 0736 07F1D803 		add	r3, r7, #216
 1960 073a 1A60     		str	r2, [r3]
 245:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_28;
 246:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		if (if_12)
 1961              		.loc 5 246 0
 1962 073c 07F1D803 		add	r3, r7, #216
 1963 0740 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 46


 1964 0742 002B     		cmp	r3, #0
 1965 0744 08D0     		beq	.L73
 247:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 248:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			right_28 = context->Width(parent);
 1966              		.loc 5 248 0
 1967 0746 3B1D     		adds	r3, r7, #4
 1968 0748 1B68     		ldr	r3, [r3]
 1969 074a DB6A     		ldr	r3, [r3, #44]
 1970 074c D7F80002 		ldr	r0, [r7, #512]
 1971 0750 9847     		blx	r3
 1972              	.LVL53:
 1973 0752 C7F82402 		str	r0, [r7, #548]
 1974 0756 07E0     		b	.L74
 1975              	.L73:
 249:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 250:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		else
 251:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 252:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			right_28 = context->Height(parent);
 1976              		.loc 5 252 0
 1977 0758 3B1D     		adds	r3, r7, #4
 1978 075a 1B68     		ldr	r3, [r3]
 1979 075c 1B6B     		ldr	r3, [r3, #48]
 1980 075e D7F80002 		ldr	r0, [r7, #512]
 1981 0762 9847     		blx	r3
 1982              	.LVL54:
 1983 0764 C7F82402 		str	r0, [r7, #548]
 1984              	.L74:
 253:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 254:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_29 = left_30 + right_28;
 1985              		.loc 5 254 0
 1986 0768 07F1D403 		add	r3, r7, #212
 1987 076c 07F1E402 		add	r2, r7, #228
 1988 0770 1168     		ldr	r1, [r2]
 1989 0772 D7F82422 		ldr	r2, [r7, #548]
 1990 0776 0A44     		add	r2, r2, r1
 1991 0778 1A60     		str	r2, [r3]
 255:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_33 = context->Width(parent);
 1992              		.loc 5 255 0
 1993 077a 3B1D     		adds	r3, r7, #4
 1994 077c 1B68     		ldr	r3, [r3]
 1995 077e DB6A     		ldr	r3, [r3, #44]
 1996 0780 07F1D004 		add	r4, r7, #208
 1997 0784 D7F80002 		ldr	r0, [r7, #512]
 1998 0788 9847     		blx	r3
 1999              	.LVL55:
 2000 078a 2060     		str	r0, [r4]
 256:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_31 = context->Height(parent);
 2001              		.loc 5 256 0
 2002 078c 3B1D     		adds	r3, r7, #4
 2003 078e 1B68     		ldr	r3, [r3]
 2004 0790 1B6B     		ldr	r3, [r3, #48]
 2005 0792 07F1CC04 		add	r4, r7, #204
 2006 0796 D7F80002 		ldr	r0, [r7, #512]
 2007 079a 9847     		blx	r3
 2008              	.LVL56:
 2009 079c 2060     		str	r0, [r4]
 257:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_13 = left_33 <= right_31;
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 47


 2010              		.loc 5 257 0
 2011 079e 07F1D002 		add	r2, r7, #208
 2012 07a2 07F1CC03 		add	r3, r7, #204
 2013 07a6 1268     		ldr	r2, [r2]
 2014 07a8 1B68     		ldr	r3, [r3]
 2015 07aa 9A42     		cmp	r2, r3
 2016 07ac D4BF     		ite	le
 2017 07ae 0123     		movle	r3, #1
 2018 07b0 0023     		movgt	r3, #0
 2019 07b2 DAB2     		uxtb	r2, r3
 2020 07b4 07F1C803 		add	r3, r7, #200
 2021 07b8 1A60     		str	r2, [r3]
 258:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_32;
 259:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		if (if_13)
 2022              		.loc 5 259 0
 2023 07ba 07F1C803 		add	r3, r7, #200
 2024 07be 1B68     		ldr	r3, [r3]
 2025 07c0 002B     		cmp	r3, #0
 2026 07c2 08D0     		beq	.L75
 260:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 261:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_32 = context->Width(parent);
 2027              		.loc 5 261 0
 2028 07c4 3B1D     		adds	r3, r7, #4
 2029 07c6 1B68     		ldr	r3, [r3]
 2030 07c8 DB6A     		ldr	r3, [r3, #44]
 2031 07ca D7F80002 		ldr	r0, [r7, #512]
 2032 07ce 9847     		blx	r3
 2033              	.LVL57:
 2034 07d0 C7F82002 		str	r0, [r7, #544]
 2035 07d4 07E0     		b	.L76
 2036              	.L75:
 262:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 263:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		else
 264:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 265:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_32 = context->Height(parent);
 2037              		.loc 5 265 0
 2038 07d6 3B1D     		adds	r3, r7, #4
 2039 07d8 1B68     		ldr	r3, [r3]
 2040 07da 1B6B     		ldr	r3, [r3, #48]
 2041 07dc D7F80002 		ldr	r0, [r7, #512]
 2042 07e0 9847     		blx	r3
 2043              	.LVL58:
 2044 07e2 C7F82002 		str	r0, [r7, #544]
 2045              	.L76:
 266:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 267:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_32 = 10L;
 2046              		.loc 5 267 0
 2047 07e6 07F1C403 		add	r3, r7, #196
 2048 07ea 0A22     		movs	r2, #10
 2049 07ec 1A60     		str	r2, [r3]
 268:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_30 = left_32 / right_32;
 2050              		.loc 5 268 0
 2051 07ee 07F1C003 		add	r3, r7, #192
 2052 07f2 07F1C402 		add	r2, r7, #196
 2053 07f6 D7F82012 		ldr	r1, [r7, #544]
 2054 07fa 1268     		ldr	r2, [r2]
 2055 07fc 91FBF2F2 		sdiv	r2, r1, r2
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 48


 2056 0800 1A60     		str	r2, [r3]
 269:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_28 = left_29 - right_30;
 2057              		.loc 5 269 0
 2058 0802 07F1BC03 		add	r3, r7, #188
 2059 0806 07F1D401 		add	r1, r7, #212
 2060 080a 07F1C002 		add	r2, r7, #192
 2061 080e 0968     		ldr	r1, [r1]
 2062 0810 1268     		ldr	r2, [r2]
 2063 0812 8A1A     		subs	r2, r1, r2
 2064 0814 1A60     		str	r2, [r3]
 270:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_35 = context->Width(parent);
 2065              		.loc 5 270 0
 2066 0816 3B1D     		adds	r3, r7, #4
 2067 0818 1B68     		ldr	r3, [r3]
 2068 081a DB6A     		ldr	r3, [r3, #44]
 2069 081c 07F1B804 		add	r4, r7, #184
 2070 0820 D7F80002 		ldr	r0, [r7, #512]
 2071 0824 9847     		blx	r3
 2072              	.LVL59:
 2073 0826 2060     		str	r0, [r4]
 271:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_34 = context->Height(parent);
 2074              		.loc 5 271 0
 2075 0828 3B1D     		adds	r3, r7, #4
 2076 082a 1B68     		ldr	r3, [r3]
 2077 082c 1B6B     		ldr	r3, [r3, #48]
 2078 082e 07F1B404 		add	r4, r7, #180
 2079 0832 D7F80002 		ldr	r0, [r7, #512]
 2080 0836 9847     		blx	r3
 2081              	.LVL60:
 2082 0838 2060     		str	r0, [r4]
 272:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_14 = left_35 <= right_34;
 2083              		.loc 5 272 0
 2084 083a 07F1B802 		add	r2, r7, #184
 2085 083e 07F1B403 		add	r3, r7, #180
 2086 0842 1268     		ldr	r2, [r2]
 2087 0844 1B68     		ldr	r3, [r3]
 2088 0846 9A42     		cmp	r2, r3
 2089 0848 D4BF     		ite	le
 2090 084a 0123     		movle	r3, #1
 2091 084c 0023     		movgt	r3, #0
 2092 084e DAB2     		uxtb	r2, r3
 2093 0850 07F1B003 		add	r3, r7, #176
 2094 0854 1A60     		str	r2, [r3]
 273:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_34;
 274:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		if (if_14)
 2095              		.loc 5 274 0
 2096 0856 07F1B003 		add	r3, r7, #176
 2097 085a 1B68     		ldr	r3, [r3]
 2098 085c 002B     		cmp	r3, #0
 2099 085e 08D0     		beq	.L77
 275:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 276:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_34 = context->Width(parent);
 2100              		.loc 5 276 0
 2101 0860 3B1D     		adds	r3, r7, #4
 2102 0862 1B68     		ldr	r3, [r3]
 2103 0864 DB6A     		ldr	r3, [r3, #44]
 2104 0866 D7F80002 		ldr	r0, [r7, #512]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 49


 2105 086a 9847     		blx	r3
 2106              	.LVL61:
 2107 086c C7F81C02 		str	r0, [r7, #540]
 2108 0870 07E0     		b	.L78
 2109              	.L77:
 277:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 278:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		else
 279:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 280:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_34 = context->Height(parent);
 2110              		.loc 5 280 0
 2111 0872 3B1D     		adds	r3, r7, #4
 2112 0874 1B68     		ldr	r3, [r3]
 2113 0876 1B6B     		ldr	r3, [r3, #48]
 2114 0878 D7F80002 		ldr	r0, [r7, #512]
 2115 087c 9847     		blx	r3
 2116              	.LVL62:
 2117 087e C7F81C02 		str	r0, [r7, #540]
 2118              	.L78:
 281:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 282:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_35 = 10L;
 2119              		.loc 5 282 0
 2120 0882 07F1AC03 		add	r3, r7, #172
 2121 0886 0A22     		movs	r2, #10
 2122 0888 1A60     		str	r2, [r3]
 283:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_33 = left_34 / right_35;
 2123              		.loc 5 283 0
 2124 088a 07F1A803 		add	r3, r7, #168
 2125 088e 07F1AC02 		add	r2, r7, #172
 2126 0892 D7F81C12 		ldr	r1, [r7, #540]
 2127 0896 1268     		ldr	r2, [r2]
 2128 0898 91FBF2F2 		sdiv	r2, r1, r2
 2129 089c 1A60     		str	r2, [r3]
 284:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int y0_1 = left_28 - right_33;
 2130              		.loc 5 284 0
 2131 089e 07F1A403 		add	r3, r7, #164
 2132 08a2 07F1BC01 		add	r1, r7, #188
 2133 08a6 07F1A802 		add	r2, r7, #168
 2134 08aa 0968     		ldr	r1, [r1]
 2135 08ac 1268     		ldr	r2, [r2]
 2136 08ae 8A1A     		subs	r2, r1, r2
 2137 08b0 1A60     		str	r2, [r3]
 285:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_38 = context->X(parent);
 2138              		.loc 5 285 0
 2139 08b2 3B1D     		adds	r3, r7, #4
 2140 08b4 1B68     		ldr	r3, [r3]
 2141 08b6 5B6A     		ldr	r3, [r3, #36]
 2142 08b8 07F1A004 		add	r4, r7, #160
 2143 08bc D7F80002 		ldr	r0, [r7, #512]
 2144 08c0 9847     		blx	r3
 2145              	.LVL63:
 2146 08c2 2060     		str	r0, [r4]
 286:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_39 = context->Width(parent);
 2147              		.loc 5 286 0
 2148 08c4 3B1D     		adds	r3, r7, #4
 2149 08c6 1B68     		ldr	r3, [r3]
 2150 08c8 DB6A     		ldr	r3, [r3, #44]
 2151 08ca 07F19C04 		add	r4, r7, #156
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 50


 2152 08ce D7F80002 		ldr	r0, [r7, #512]
 2153 08d2 9847     		blx	r3
 2154              	.LVL64:
 2155 08d4 2060     		str	r0, [r4]
 287:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_37 = context->Height(parent);
 2156              		.loc 5 287 0
 2157 08d6 3B1D     		adds	r3, r7, #4
 2158 08d8 1B68     		ldr	r3, [r3]
 2159 08da 1B6B     		ldr	r3, [r3, #48]
 2160 08dc 07F19804 		add	r4, r7, #152
 2161 08e0 D7F80002 		ldr	r0, [r7, #512]
 2162 08e4 9847     		blx	r3
 2163              	.LVL65:
 2164 08e6 2060     		str	r0, [r4]
 288:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_15 = left_39 <= right_37;
 2165              		.loc 5 288 0
 2166 08e8 07F19C02 		add	r2, r7, #156
 2167 08ec 07F19803 		add	r3, r7, #152
 2168 08f0 1268     		ldr	r2, [r2]
 2169 08f2 1B68     		ldr	r3, [r3]
 2170 08f4 9A42     		cmp	r2, r3
 2171 08f6 D4BF     		ite	le
 2172 08f8 0123     		movle	r3, #1
 2173 08fa 0023     		movgt	r3, #0
 2174 08fc DAB2     		uxtb	r2, r3
 2175 08fe 07F19403 		add	r3, r7, #148
 2176 0902 1A60     		str	r2, [r3]
 289:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_36;
 290:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		if (if_15)
 2177              		.loc 5 290 0
 2178 0904 07F19403 		add	r3, r7, #148
 2179 0908 1B68     		ldr	r3, [r3]
 2180 090a 002B     		cmp	r3, #0
 2181 090c 08D0     		beq	.L79
 291:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 292:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			right_36 = context->Width(parent);
 2182              		.loc 5 292 0
 2183 090e 3B1D     		adds	r3, r7, #4
 2184 0910 1B68     		ldr	r3, [r3]
 2185 0912 DB6A     		ldr	r3, [r3, #44]
 2186 0914 D7F80002 		ldr	r0, [r7, #512]
 2187 0918 9847     		blx	r3
 2188              	.LVL66:
 2189 091a C7F81802 		str	r0, [r7, #536]
 2190 091e 07E0     		b	.L80
 2191              	.L79:
 293:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 294:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		else
 295:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 296:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			right_36 = context->Height(parent);
 2192              		.loc 5 296 0
 2193 0920 3B1D     		adds	r3, r7, #4
 2194 0922 1B68     		ldr	r3, [r3]
 2195 0924 1B6B     		ldr	r3, [r3, #48]
 2196 0926 D7F80002 		ldr	r0, [r7, #512]
 2197 092a 9847     		blx	r3
 2198              	.LVL67:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 51


 2199 092c C7F81802 		str	r0, [r7, #536]
 2200              	.L80:
 297:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 298:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_37 = left_38 + right_36;
 2201              		.loc 5 298 0
 2202 0930 07F19003 		add	r3, r7, #144
 2203 0934 07F1A002 		add	r2, r7, #160
 2204 0938 1168     		ldr	r1, [r2]
 2205 093a D7F81822 		ldr	r2, [r7, #536]
 2206 093e 0A44     		add	r2, r2, r1
 2207 0940 1A60     		str	r2, [r3]
 299:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_41 = context->Width(parent);
 2208              		.loc 5 299 0
 2209 0942 3B1D     		adds	r3, r7, #4
 2210 0944 1B68     		ldr	r3, [r3]
 2211 0946 DB6A     		ldr	r3, [r3, #44]
 2212 0948 07F18C04 		add	r4, r7, #140
 2213 094c D7F80002 		ldr	r0, [r7, #512]
 2214 0950 9847     		blx	r3
 2215              	.LVL68:
 2216 0952 2060     		str	r0, [r4]
 300:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_39 = context->Height(parent);
 2217              		.loc 5 300 0
 2218 0954 3B1D     		adds	r3, r7, #4
 2219 0956 1B68     		ldr	r3, [r3]
 2220 0958 1B6B     		ldr	r3, [r3, #48]
 2221 095a 07F18804 		add	r4, r7, #136
 2222 095e D7F80002 		ldr	r0, [r7, #512]
 2223 0962 9847     		blx	r3
 2224              	.LVL69:
 2225 0964 2060     		str	r0, [r4]
 301:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_16 = left_41 <= right_39;
 2226              		.loc 5 301 0
 2227 0966 07F18C02 		add	r2, r7, #140
 2228 096a 07F18803 		add	r3, r7, #136
 2229 096e 1268     		ldr	r2, [r2]
 2230 0970 1B68     		ldr	r3, [r3]
 2231 0972 9A42     		cmp	r2, r3
 2232 0974 D4BF     		ite	le
 2233 0976 0123     		movle	r3, #1
 2234 0978 0023     		movgt	r3, #0
 2235 097a DAB2     		uxtb	r2, r3
 2236 097c 07F18403 		add	r3, r7, #132
 2237 0980 1A60     		str	r2, [r3]
 302:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_40;
 303:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		if (if_16)
 2238              		.loc 5 303 0
 2239 0982 07F18403 		add	r3, r7, #132
 2240 0986 1B68     		ldr	r3, [r3]
 2241 0988 002B     		cmp	r3, #0
 2242 098a 08D0     		beq	.L81
 304:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 305:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_40 = context->Width(parent);
 2243              		.loc 5 305 0
 2244 098c 3B1D     		adds	r3, r7, #4
 2245 098e 1B68     		ldr	r3, [r3]
 2246 0990 DB6A     		ldr	r3, [r3, #44]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 52


 2247 0992 D7F80002 		ldr	r0, [r7, #512]
 2248 0996 9847     		blx	r3
 2249              	.LVL70:
 2250 0998 C7F81402 		str	r0, [r7, #532]
 2251 099c 07E0     		b	.L82
 2252              	.L81:
 306:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 307:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		else
 308:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 309:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_40 = context->Height(parent);
 2253              		.loc 5 309 0
 2254 099e 3B1D     		adds	r3, r7, #4
 2255 09a0 1B68     		ldr	r3, [r3]
 2256 09a2 1B6B     		ldr	r3, [r3, #48]
 2257 09a4 D7F80002 		ldr	r0, [r7, #512]
 2258 09a8 9847     		blx	r3
 2259              	.LVL71:
 2260 09aa C7F81402 		str	r0, [r7, #532]
 2261              	.L82:
 310:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 311:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_40 = 10L;
 2262              		.loc 5 311 0
 2263 09ae 07F18003 		add	r3, r7, #128
 2264 09b2 0A22     		movs	r2, #10
 2265 09b4 1A60     		str	r2, [r3]
 312:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_38 = left_40 / right_40;
 2266              		.loc 5 312 0
 2267 09b6 07F17C03 		add	r3, r7, #124
 2268 09ba 07F18002 		add	r2, r7, #128
 2269 09be D7F81412 		ldr	r1, [r7, #532]
 2270 09c2 1268     		ldr	r2, [r2]
 2271 09c4 91FBF2F2 		sdiv	r2, r1, r2
 2272 09c8 1A60     		str	r2, [r3]
 313:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_36 = left_37 - right_38;
 2273              		.loc 5 313 0
 2274 09ca 07F17803 		add	r3, r7, #120
 2275 09ce 07F19001 		add	r1, r7, #144
 2276 09d2 07F17C02 		add	r2, r7, #124
 2277 09d6 0968     		ldr	r1, [r1]
 2278 09d8 1268     		ldr	r2, [r2]
 2279 09da 8A1A     		subs	r2, r1, r2
 2280 09dc 1A60     		str	r2, [r3]
 314:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_43 = context->Width(parent);
 2281              		.loc 5 314 0
 2282 09de 3B1D     		adds	r3, r7, #4
 2283 09e0 1B68     		ldr	r3, [r3]
 2284 09e2 DB6A     		ldr	r3, [r3, #44]
 2285 09e4 07F17404 		add	r4, r7, #116
 2286 09e8 D7F80002 		ldr	r0, [r7, #512]
 2287 09ec 9847     		blx	r3
 2288              	.LVL72:
 2289 09ee 2060     		str	r0, [r4]
 315:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_42 = context->Height(parent);
 2290              		.loc 5 315 0
 2291 09f0 3B1D     		adds	r3, r7, #4
 2292 09f2 1B68     		ldr	r3, [r3]
 2293 09f4 1B6B     		ldr	r3, [r3, #48]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 53


 2294 09f6 07F17004 		add	r4, r7, #112
 2295 09fa D7F80002 		ldr	r0, [r7, #512]
 2296 09fe 9847     		blx	r3
 2297              	.LVL73:
 2298 0a00 2060     		str	r0, [r4]
 316:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_17 = left_43 <= right_42;
 2299              		.loc 5 316 0
 2300 0a02 07F17402 		add	r2, r7, #116
 2301 0a06 07F17003 		add	r3, r7, #112
 2302 0a0a 1268     		ldr	r2, [r2]
 2303 0a0c 1B68     		ldr	r3, [r3]
 2304 0a0e 9A42     		cmp	r2, r3
 2305 0a10 D4BF     		ite	le
 2306 0a12 0123     		movle	r3, #1
 2307 0a14 0023     		movgt	r3, #0
 2308 0a16 DAB2     		uxtb	r2, r3
 2309 0a18 07F16C03 		add	r3, r7, #108
 2310 0a1c 1A60     		str	r2, [r3]
 317:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_42;
 318:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		if (if_17)
 2311              		.loc 5 318 0
 2312 0a1e 07F16C03 		add	r3, r7, #108
 2313 0a22 1B68     		ldr	r3, [r3]
 2314 0a24 002B     		cmp	r3, #0
 2315 0a26 08D0     		beq	.L83
 319:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 320:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_42 = context->Width(parent);
 2316              		.loc 5 320 0
 2317 0a28 3B1D     		adds	r3, r7, #4
 2318 0a2a 1B68     		ldr	r3, [r3]
 2319 0a2c DB6A     		ldr	r3, [r3, #44]
 2320 0a2e D7F80002 		ldr	r0, [r7, #512]
 2321 0a32 9847     		blx	r3
 2322              	.LVL74:
 2323 0a34 C7F81002 		str	r0, [r7, #528]
 2324 0a38 07E0     		b	.L84
 2325              	.L83:
 321:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 322:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		else
 323:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 324:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_42 = context->Height(parent);
 2326              		.loc 5 324 0
 2327 0a3a 3B1D     		adds	r3, r7, #4
 2328 0a3c 1B68     		ldr	r3, [r3]
 2329 0a3e 1B6B     		ldr	r3, [r3, #48]
 2330 0a40 D7F80002 		ldr	r0, [r7, #512]
 2331 0a44 9847     		blx	r3
 2332              	.LVL75:
 2333 0a46 C7F81002 		str	r0, [r7, #528]
 2334              	.L84:
 325:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 326:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_43 = 10L;
 2335              		.loc 5 326 0
 2336 0a4a 07F16803 		add	r3, r7, #104
 2337 0a4e 0A22     		movs	r2, #10
 2338 0a50 1A60     		str	r2, [r3]
 327:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_41 = left_42 / right_43;
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 54


 2339              		.loc 5 327 0
 2340 0a52 07F16403 		add	r3, r7, #100
 2341 0a56 07F16802 		add	r2, r7, #104
 2342 0a5a D7F81012 		ldr	r1, [r7, #528]
 2343 0a5e 1268     		ldr	r2, [r2]
 2344 0a60 91FBF2F2 		sdiv	r2, r1, r2
 2345 0a64 1A60     		str	r2, [r3]
 328:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int x1_1 = left_36 - right_41;
 2346              		.loc 5 328 0
 2347 0a66 07F16003 		add	r3, r7, #96
 2348 0a6a 07F17801 		add	r1, r7, #120
 2349 0a6e 07F16402 		add	r2, r7, #100
 2350 0a72 0968     		ldr	r1, [r1]
 2351 0a74 1268     		ldr	r2, [r2]
 2352 0a76 8A1A     		subs	r2, r1, r2
 2353 0a78 1A60     		str	r2, [r3]
 329:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_45 = context->Y(parent);
 2354              		.loc 5 329 0
 2355 0a7a 3B1D     		adds	r3, r7, #4
 2356 0a7c 1B68     		ldr	r3, [r3]
 2357 0a7e 9B6A     		ldr	r3, [r3, #40]
 2358 0a80 07F15C04 		add	r4, r7, #92
 2359 0a84 D7F80002 		ldr	r0, [r7, #512]
 2360 0a88 9847     		blx	r3
 2361              	.LVL76:
 2362 0a8a 2060     		str	r0, [r4]
 330:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_47 = context->Width(parent);
 2363              		.loc 5 330 0
 2364 0a8c 3B1D     		adds	r3, r7, #4
 2365 0a8e 1B68     		ldr	r3, [r3]
 2366 0a90 DB6A     		ldr	r3, [r3, #44]
 2367 0a92 07F15804 		add	r4, r7, #88
 2368 0a96 D7F80002 		ldr	r0, [r7, #512]
 2369 0a9a 9847     		blx	r3
 2370              	.LVL77:
 2371 0a9c 2060     		str	r0, [r4]
 331:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_45 = context->Height(parent);
 2372              		.loc 5 331 0
 2373 0a9e 3B1D     		adds	r3, r7, #4
 2374 0aa0 1B68     		ldr	r3, [r3]
 2375 0aa2 1B6B     		ldr	r3, [r3, #48]
 2376 0aa4 07F15404 		add	r4, r7, #84
 2377 0aa8 D7F80002 		ldr	r0, [r7, #512]
 2378 0aac 9847     		blx	r3
 2379              	.LVL78:
 2380 0aae 2060     		str	r0, [r4]
 332:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_18 = left_47 <= right_45;
 2381              		.loc 5 332 0
 2382 0ab0 07F15802 		add	r2, r7, #88
 2383 0ab4 07F15403 		add	r3, r7, #84
 2384 0ab8 1268     		ldr	r2, [r2]
 2385 0aba 1B68     		ldr	r3, [r3]
 2386 0abc 9A42     		cmp	r2, r3
 2387 0abe D4BF     		ite	le
 2388 0ac0 0123     		movle	r3, #1
 2389 0ac2 0023     		movgt	r3, #0
 2390 0ac4 DAB2     		uxtb	r2, r3
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 55


 2391 0ac6 07F15003 		add	r3, r7, #80
 2392 0aca 1A60     		str	r2, [r3]
 333:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_46;
 334:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		if (if_18)
 2393              		.loc 5 334 0
 2394 0acc 07F15003 		add	r3, r7, #80
 2395 0ad0 1B68     		ldr	r3, [r3]
 2396 0ad2 002B     		cmp	r3, #0
 2397 0ad4 08D0     		beq	.L85
 335:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 336:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_46 = context->Width(parent);
 2398              		.loc 5 336 0
 2399 0ad6 3B1D     		adds	r3, r7, #4
 2400 0ad8 1B68     		ldr	r3, [r3]
 2401 0ada DB6A     		ldr	r3, [r3, #44]
 2402 0adc D7F80002 		ldr	r0, [r7, #512]
 2403 0ae0 9847     		blx	r3
 2404              	.LVL79:
 2405 0ae2 C7F80C02 		str	r0, [r7, #524]
 2406 0ae6 07E0     		b	.L86
 2407              	.L85:
 337:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 338:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		else
 339:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 340:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_46 = context->Height(parent);
 2408              		.loc 5 340 0
 2409 0ae8 3B1D     		adds	r3, r7, #4
 2410 0aea 1B68     		ldr	r3, [r3]
 2411 0aec 1B6B     		ldr	r3, [r3, #48]
 2412 0aee D7F80002 		ldr	r0, [r7, #512]
 2413 0af2 9847     		blx	r3
 2414              	.LVL80:
 2415 0af4 C7F80C02 		str	r0, [r7, #524]
 2416              	.L86:
 341:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 342:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_46 = 10L;
 2417              		.loc 5 342 0
 2418 0af8 07F14C03 		add	r3, r7, #76
 2419 0afc 0A22     		movs	r2, #10
 2420 0afe 1A60     		str	r2, [r3]
 343:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_44 = left_46 / right_46;
 2421              		.loc 5 343 0
 2422 0b00 07F14803 		add	r3, r7, #72
 2423 0b04 07F14C02 		add	r2, r7, #76
 2424 0b08 D7F80C12 		ldr	r1, [r7, #524]
 2425 0b0c 1268     		ldr	r2, [r2]
 2426 0b0e 91FBF2F2 		sdiv	r2, r1, r2
 2427 0b12 1A60     		str	r2, [r3]
 344:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_44 = left_45 + right_44;
 2428              		.loc 5 344 0
 2429 0b14 07F14403 		add	r3, r7, #68
 2430 0b18 07F15C01 		add	r1, r7, #92
 2431 0b1c 07F14802 		add	r2, r7, #72
 2432 0b20 0968     		ldr	r1, [r1]
 2433 0b22 1268     		ldr	r2, [r2]
 2434 0b24 0A44     		add	r2, r2, r1
 2435 0b26 1A60     		str	r2, [r3]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 56


 345:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_49 = context->Width(parent);
 2436              		.loc 5 345 0
 2437 0b28 3B1D     		adds	r3, r7, #4
 2438 0b2a 1B68     		ldr	r3, [r3]
 2439 0b2c DB6A     		ldr	r3, [r3, #44]
 2440 0b2e 07F14004 		add	r4, r7, #64
 2441 0b32 D7F80002 		ldr	r0, [r7, #512]
 2442 0b36 9847     		blx	r3
 2443              	.LVL81:
 2444 0b38 2060     		str	r0, [r4]
 346:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_48 = context->Height(parent);
 2445              		.loc 5 346 0
 2446 0b3a 3B1D     		adds	r3, r7, #4
 2447 0b3c 1B68     		ldr	r3, [r3]
 2448 0b3e 1B6B     		ldr	r3, [r3, #48]
 2449 0b40 07F13C04 		add	r4, r7, #60
 2450 0b44 D7F80002 		ldr	r0, [r7, #512]
 2451 0b48 9847     		blx	r3
 2452              	.LVL82:
 2453 0b4a 2060     		str	r0, [r4]
 347:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_19 = left_49 <= right_48;
 2454              		.loc 5 347 0
 2455 0b4c 07F14002 		add	r2, r7, #64
 2456 0b50 07F13C03 		add	r3, r7, #60
 2457 0b54 1268     		ldr	r2, [r2]
 2458 0b56 1B68     		ldr	r3, [r3]
 2459 0b58 9A42     		cmp	r2, r3
 2460 0b5a D4BF     		ite	le
 2461 0b5c 0123     		movle	r3, #1
 2462 0b5e 0023     		movgt	r3, #0
 2463 0b60 DAB2     		uxtb	r2, r3
 2464 0b62 07F13803 		add	r3, r7, #56
 2465 0b66 1A60     		str	r2, [r3]
 348:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_48;
 349:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		if (if_19)
 2466              		.loc 5 349 0
 2467 0b68 07F13803 		add	r3, r7, #56
 2468 0b6c 1B68     		ldr	r3, [r3]
 2469 0b6e 002B     		cmp	r3, #0
 2470 0b70 08D0     		beq	.L87
 350:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 351:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_48 = context->Width(parent);
 2471              		.loc 5 351 0
 2472 0b72 3B1D     		adds	r3, r7, #4
 2473 0b74 1B68     		ldr	r3, [r3]
 2474 0b76 DB6A     		ldr	r3, [r3, #44]
 2475 0b78 D7F80002 		ldr	r0, [r7, #512]
 2476 0b7c 9847     		blx	r3
 2477              	.LVL83:
 2478 0b7e C7F80802 		str	r0, [r7, #520]
 2479 0b82 07E0     		b	.L88
 2480              	.L87:
 352:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 353:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		else
 354:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 355:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_48 = context->Height(parent);
 2481              		.loc 5 355 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 57


 2482 0b84 3B1D     		adds	r3, r7, #4
 2483 0b86 1B68     		ldr	r3, [r3]
 2484 0b88 1B6B     		ldr	r3, [r3, #48]
 2485 0b8a D7F80002 		ldr	r0, [r7, #512]
 2486 0b8e 9847     		blx	r3
 2487              	.LVL84:
 2488 0b90 C7F80802 		str	r0, [r7, #520]
 2489              	.L88:
 356:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 357:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_49 = 10L;
 2490              		.loc 5 357 0
 2491 0b94 07F13403 		add	r3, r7, #52
 2492 0b98 0A22     		movs	r2, #10
 2493 0b9a 1A60     		str	r2, [r3]
 358:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_47 = left_48 / right_49;
 2494              		.loc 5 358 0
 2495 0b9c 07F13003 		add	r3, r7, #48
 2496 0ba0 07F13402 		add	r2, r7, #52
 2497 0ba4 D7F80812 		ldr	r1, [r7, #520]
 2498 0ba8 1268     		ldr	r2, [r2]
 2499 0baa 91FBF2F2 		sdiv	r2, r1, r2
 2500 0bae 1A60     		str	r2, [r3]
 359:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int y1_1 = left_44 + right_47;
 2501              		.loc 5 359 0
 2502 0bb0 07F12C03 		add	r3, r7, #44
 2503 0bb4 07F14401 		add	r1, r7, #68
 2504 0bb8 07F13002 		add	r2, r7, #48
 2505 0bbc 0968     		ldr	r1, [r1]
 2506 0bbe 1268     		ldr	r2, [r2]
 2507 0bc0 0A44     		add	r2, r2, r1
 2508 0bc2 1A60     		str	r2, [r3]
 360:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_52 = context->Width(parent);
 2509              		.loc 5 360 0
 2510 0bc4 3B1D     		adds	r3, r7, #4
 2511 0bc6 1B68     		ldr	r3, [r3]
 2512 0bc8 DB6A     		ldr	r3, [r3, #44]
 2513 0bca 07F12804 		add	r4, r7, #40
 2514 0bce D7F80002 		ldr	r0, [r7, #512]
 2515 0bd2 9847     		blx	r3
 2516              	.LVL85:
 2517 0bd4 2060     		str	r0, [r4]
 361:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_50 = context->Height(parent);
 2518              		.loc 5 361 0
 2519 0bd6 3B1D     		adds	r3, r7, #4
 2520 0bd8 1B68     		ldr	r3, [r3]
 2521 0bda 1B6B     		ldr	r3, [r3, #48]
 2522 0bdc 07F12404 		add	r4, r7, #36
 2523 0be0 D7F80002 		ldr	r0, [r7, #512]
 2524 0be4 9847     		blx	r3
 2525              	.LVL86:
 2526 0be6 2060     		str	r0, [r4]
 362:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_20 = left_52 <= right_50;
 2527              		.loc 5 362 0
 2528 0be8 07F12802 		add	r2, r7, #40
 2529 0bec 07F12403 		add	r3, r7, #36
 2530 0bf0 1268     		ldr	r2, [r2]
 2531 0bf2 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 58


 2532 0bf4 9A42     		cmp	r2, r3
 2533 0bf6 D4BF     		ite	le
 2534 0bf8 0123     		movle	r3, #1
 2535 0bfa 0023     		movgt	r3, #0
 2536 0bfc DAB2     		uxtb	r2, r3
 2537 0bfe 07F12003 		add	r3, r7, #32
 2538 0c02 1A60     		str	r2, [r3]
 363:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_51;
 364:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		if (if_20)
 2539              		.loc 5 364 0
 2540 0c04 07F12003 		add	r3, r7, #32
 2541 0c08 1B68     		ldr	r3, [r3]
 2542 0c0a 002B     		cmp	r3, #0
 2543 0c0c 08D0     		beq	.L89
 365:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 366:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_51 = context->Width(parent);
 2544              		.loc 5 366 0
 2545 0c0e 3B1D     		adds	r3, r7, #4
 2546 0c10 1B68     		ldr	r3, [r3]
 2547 0c12 DB6A     		ldr	r3, [r3, #44]
 2548 0c14 D7F80002 		ldr	r0, [r7, #512]
 2549 0c18 9847     		blx	r3
 2550              	.LVL87:
 2551 0c1a C7F80402 		str	r0, [r7, #516]
 2552 0c1e 07E0     		b	.L90
 2553              	.L89:
 367:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 368:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		else
 369:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 370:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_51 = context->Height(parent);
 2554              		.loc 5 370 0
 2555 0c20 3B1D     		adds	r3, r7, #4
 2556 0c22 1B68     		ldr	r3, [r3]
 2557 0c24 1B6B     		ldr	r3, [r3, #48]
 2558 0c26 D7F80002 		ldr	r0, [r7, #512]
 2559 0c2a 9847     		blx	r3
 2560              	.LVL88:
 2561 0c2c C7F80402 		str	r0, [r7, #516]
 2562              	.L90:
 371:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 372:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_51 = 10L;
 2563              		.loc 5 372 0
 2564 0c30 07F11C03 		add	r3, r7, #28
 2565 0c34 0A22     		movs	r2, #10
 2566 0c36 1A60     		str	r2, [r3]
 373:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_50 = left_51 / right_51;
 2567              		.loc 5 373 0
 2568 0c38 07F11803 		add	r3, r7, #24
 2569 0c3c 07F11C02 		add	r2, r7, #28
 2570 0c40 D7F80412 		ldr	r1, [r7, #516]
 2571 0c44 1268     		ldr	r2, [r2]
 2572 0c46 91FBF2F2 		sdiv	r2, r1, r2
 2573 0c4a 1A60     		str	r2, [r3]
 374:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_52 = 2L;
 2574              		.loc 5 374 0
 2575 0c4c 07F11403 		add	r3, r7, #20
 2576 0c50 0222     		movs	r2, #2
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 59


 2577 0c52 1A60     		str	r2, [r3]
 375:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int width_2 = left_50 * right_52;
 2578              		.loc 5 375 0
 2579 0c54 07F11003 		add	r3, r7, #16
 2580 0c58 07F11802 		add	r2, r7, #24
 2581 0c5c 07F11401 		add	r1, r7, #20
 2582 0c60 1268     		ldr	r2, [r2]
 2583 0c62 0968     		ldr	r1, [r1]
 2584 0c64 01FB02F2 		mul	r2, r1, r2
 2585 0c68 1A60     		str	r2, [r3]
 376:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		ft_argb32_t color_2 = Ft_Esd_CheckBox_Color_A_RGB_Combine__return(context);
 2586              		.loc 5 376 0
 2587 0c6a 07F10C04 		add	r4, r7, #12
 2588 0c6e 3B1D     		adds	r3, r7, #4
 2589 0c70 1868     		ldr	r0, [r3]
 2590 0c72 FFF7FEFF 		bl	Ft_Esd_CheckBox_Color_A_RGB_Combine__return
 2591 0c76 2060     		str	r0, [r4]
 377:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		Ft_Esd_Render_Line(x0_1, y0_1, x1_1, y1_1, width_2, color_2);
 2592              		.loc 5 377 0
 2593 0c78 07F12C03 		add	r3, r7, #44
 2594 0c7c 07F16002 		add	r2, r7, #96
 2595 0c80 07F1A401 		add	r1, r7, #164
 2596 0c84 07F1E800 		add	r0, r7, #232
 2597 0c88 07F10C04 		add	r4, r7, #12
 2598 0c8c 2468     		ldr	r4, [r4]
 2599 0c8e 0194     		str	r4, [sp, #4]
 2600 0c90 07F11004 		add	r4, r7, #16
 2601 0c94 2468     		ldr	r4, [r4]
 2602 0c96 0094     		str	r4, [sp]
 2603 0c98 1B68     		ldr	r3, [r3]
 2604 0c9a 1268     		ldr	r2, [r2]
 2605 0c9c 0968     		ldr	r1, [r1]
 2606 0c9e 0068     		ldr	r0, [r0]
 2607 0ca0 FFF7FEFF 		bl	Ft_Esd_Render_Line
 2608              	.L54:
 2609              	.LBE2:
 378:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	}
 379:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	else
 380:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	{
 381:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	}
 382:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	ft_uint8_t s_1 = 255;
 2610              		.loc 5 382 0
 2611 0ca4 07F10B03 		add	r3, r7, #11
 2612 0ca8 FF22     		movs	r2, #255
 2613 0caa 1A70     		strb	r2, [r3]
 383:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_Dl_TAG(s_1);
 2614              		.loc 5 383 0
 2615 0cac 07F10B03 		add	r3, r7, #11
 2616 0cb0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2617 0cb2 1846     		mov	r0, r3
 2618 0cb4 FFF7FEFF 		bl	Ft_Esd_Dl_TAG
 384:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_Label_Render(&context->ESD_Label);
 2619              		.loc 5 384 0
 2620 0cb8 3B1D     		adds	r3, r7, #4
 2621 0cba 1B68     		ldr	r3, [r3]
 2622 0cbc 4833     		adds	r3, r3, #72
 2623 0cbe 1846     		mov	r0, r3
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 60


 2624 0cc0 FFF7FEFF 		bl	Ft_Esd_Label_Render
 385:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** }
 2625              		.loc 5 385 0
 2626 0cc4 00BF     		nop
 2627 0cc6 07F51577 		add	r7, r7, #596
 2628              	.LCFI109:
 2629              		.cfi_def_cfa_offset 12
 2630 0cca BD46     		mov	sp, r7
 2631              	.LCFI110:
 2632              		.cfi_def_cfa_register 13
 2633              		@ sp needed
 2634 0ccc 90BD     		pop	{r4, r7, pc}
 2635              		.cfi_endproc
 2636              	.LFE41:
 2638              		.section	.text.Ft_Esd_CheckBox_Touch_Tag_Tap__Signal,"ax",%progbits
 2639              		.align	1
 2640              		.syntax unified
 2641              		.thumb
 2642              		.thumb_func
 2643              		.fpu fpv5-sp-d16
 2645              	Ft_Esd_CheckBox_Touch_Tag_Tap__Signal:
 2646              	.LFB42:
 386:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
 387:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** void Ft_Esd_CheckBox_Touch_Tag_Tap__Signal(void *c)
 388:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** {
 2647              		.loc 5 388 0
 2648              		.cfi_startproc
 2649              		@ args = 0, pretend = 0, frame = 24
 2650              		@ frame_needed = 1, uses_anonymous_args = 0
 2651 0000 80B5     		push	{r7, lr}
 2652              	.LCFI111:
 2653              		.cfi_def_cfa_offset 8
 2654              		.cfi_offset 7, -8
 2655              		.cfi_offset 14, -4
 2656 0002 86B0     		sub	sp, sp, #24
 2657              	.LCFI112:
 2658              		.cfi_def_cfa_offset 32
 2659 0004 00AF     		add	r7, sp, #0
 2660              	.LCFI113:
 2661              		.cfi_def_cfa_register 7
 2662 0006 7860     		str	r0, [r7, #4]
 389:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_CheckBox *context = (Ft_Esd_CheckBox *)c;
 2663              		.loc 5 389 0
 2664 0008 7B68     		ldr	r3, [r7, #4]
 2665 000a 7B61     		str	r3, [r7, #20]
 390:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	void *parent = context->Parent;
 2666              		.loc 5 390 0
 2667 000c 7B69     		ldr	r3, [r7, #20]
 2668 000e 1B68     		ldr	r3, [r3]
 2669 0010 3B61     		str	r3, [r7, #16]
 391:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	ft_bool_t value = context->Value;
 2670              		.loc 5 391 0
 2671 0012 7B69     		ldr	r3, [r7, #20]
 2672 0014 93F83C30 		ldrb	r3, [r3, #60]
 2673 0018 FB73     		strb	r3, [r7, #15]
 392:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int set_variable = !value;
 2674              		.loc 5 392 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 61


 2675 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2676 001c 002B     		cmp	r3, #0
 2677 001e 0CBF     		ite	eq
 2678 0020 0123     		moveq	r3, #1
 2679 0022 0023     		movne	r3, #0
 2680 0024 DBB2     		uxtb	r3, r3
 2681 0026 BB60     		str	r3, [r7, #8]
 393:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Value = set_variable;
 2682              		.loc 5 393 0
 2683 0028 BB68     		ldr	r3, [r7, #8]
 2684 002a DAB2     		uxtb	r2, r3
 2685 002c 7B69     		ldr	r3, [r7, #20]
 2686 002e 83F83C20 		strb	r2, [r3, #60]
 394:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Changed(parent, set_variable);
 2687              		.loc 5 394 0
 2688 0032 7B69     		ldr	r3, [r7, #20]
 2689 0034 5B6C     		ldr	r3, [r3, #68]
 2690 0036 BA68     		ldr	r2, [r7, #8]
 2691 0038 D2B2     		uxtb	r2, r2
 2692 003a 1146     		mov	r1, r2
 2693 003c 3869     		ldr	r0, [r7, #16]
 2694 003e 9847     		blx	r3
 2695              	.LVL89:
 395:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Toggled(parent);
 2696              		.loc 5 395 0
 2697 0040 7B69     		ldr	r3, [r7, #20]
 2698 0042 1B6C     		ldr	r3, [r3, #64]
 2699 0044 3869     		ldr	r0, [r7, #16]
 2700 0046 9847     		blx	r3
 2701              	.LVL90:
 396:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** }
 2702              		.loc 5 396 0
 2703 0048 00BF     		nop
 2704 004a 1837     		adds	r7, r7, #24
 2705              	.LCFI114:
 2706              		.cfi_def_cfa_offset 8
 2707 004c BD46     		mov	sp, r7
 2708              	.LCFI115:
 2709              		.cfi_def_cfa_register 13
 2710              		@ sp needed
 2711 004e 80BD     		pop	{r7, pc}
 2712              		.cfi_endproc
 2713              	.LFE42:
 2715              		.section	.text.Ft_Esd_CheckBox_Start,"ax",%progbits
 2716              		.align	1
 2717              		.global	Ft_Esd_CheckBox_Start
 2718              		.syntax unified
 2719              		.thumb
 2720              		.thumb_func
 2721              		.fpu fpv5-sp-d16
 2723              	Ft_Esd_CheckBox_Start:
 2724              	.LFB43:
 397:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
 398:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** void Ft_Esd_CheckBox_Start(Ft_Esd_CheckBox *context)
 399:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** {
 2725              		.loc 5 399 0
 2726              		.cfi_startproc
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 62


 2727              		@ args = 0, pretend = 0, frame = 16
 2728              		@ frame_needed = 1, uses_anonymous_args = 0
 2729 0000 80B5     		push	{r7, lr}
 2730              	.LCFI116:
 2731              		.cfi_def_cfa_offset 8
 2732              		.cfi_offset 7, -8
 2733              		.cfi_offset 14, -4
 2734 0002 84B0     		sub	sp, sp, #16
 2735              	.LCFI117:
 2736              		.cfi_def_cfa_offset 24
 2737 0004 00AF     		add	r7, sp, #0
 2738              	.LCFI118:
 2739              		.cfi_def_cfa_register 7
 2740 0006 7860     		str	r0, [r7, #4]
 400:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	void *parent = context->Parent;
 2741              		.loc 5 400 0
 2742 0008 7B68     		ldr	r3, [r7, #4]
 2743 000a 1B68     		ldr	r3, [r3]
 2744 000c FB60     		str	r3, [r7, #12]
 401:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_TouchTag_Start(&context->Touch_Tag);
 2745              		.loc 5 401 0
 2746 000e 7B68     		ldr	r3, [r7, #4]
 2747 0010 0433     		adds	r3, r3, #4
 2748 0012 1846     		mov	r0, r3
 2749 0014 FFF7FEFF 		bl	Ft_Esd_TouchTag_Start
 402:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** }
 2750              		.loc 5 402 0
 2751 0018 00BF     		nop
 2752 001a 1037     		adds	r7, r7, #16
 2753              	.LCFI119:
 2754              		.cfi_def_cfa_offset 8
 2755 001c BD46     		mov	sp, r7
 2756              	.LCFI120:
 2757              		.cfi_def_cfa_register 13
 2758              		@ sp needed
 2759 001e 80BD     		pop	{r7, pc}
 2760              		.cfi_endproc
 2761              	.LFE43:
 2763              		.section	.text.Ft_Esd_CheckBox_Update,"ax",%progbits
 2764              		.align	1
 2765              		.global	Ft_Esd_CheckBox_Update
 2766              		.syntax unified
 2767              		.thumb
 2768              		.thumb_func
 2769              		.fpu fpv5-sp-d16
 2771              	Ft_Esd_CheckBox_Update:
 2772              	.LFB44:
 403:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
 404:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** void Ft_Esd_CheckBox_Update(Ft_Esd_CheckBox *context)
 405:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** {
 2773              		.loc 5 405 0
 2774              		.cfi_startproc
 2775              		@ args = 0, pretend = 0, frame = 16
 2776              		@ frame_needed = 1, uses_anonymous_args = 0
 2777 0000 80B5     		push	{r7, lr}
 2778              	.LCFI121:
 2779              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 63


 2780              		.cfi_offset 7, -8
 2781              		.cfi_offset 14, -4
 2782 0002 84B0     		sub	sp, sp, #16
 2783              	.LCFI122:
 2784              		.cfi_def_cfa_offset 24
 2785 0004 00AF     		add	r7, sp, #0
 2786              	.LCFI123:
 2787              		.cfi_def_cfa_register 7
 2788 0006 7860     		str	r0, [r7, #4]
 406:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	void *parent = context->Parent;
 2789              		.loc 5 406 0
 2790 0008 7B68     		ldr	r3, [r7, #4]
 2791 000a 1B68     		ldr	r3, [r3]
 2792 000c FB60     		str	r3, [r7, #12]
 407:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_TouchTag_Update(&context->Touch_Tag);
 2793              		.loc 5 407 0
 2794 000e 7B68     		ldr	r3, [r7, #4]
 2795 0010 0433     		adds	r3, r3, #4
 2796 0012 1846     		mov	r0, r3
 2797 0014 FFF7FEFF 		bl	Ft_Esd_TouchTag_Update
 408:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** }
 2798              		.loc 5 408 0
 2799 0018 00BF     		nop
 2800 001a 1037     		adds	r7, r7, #16
 2801              	.LCFI124:
 2802              		.cfi_def_cfa_offset 8
 2803 001c BD46     		mov	sp, r7
 2804              	.LCFI125:
 2805              		.cfi_def_cfa_register 13
 2806              		@ sp needed
 2807 001e 80BD     		pop	{r7, pc}
 2808              		.cfi_endproc
 2809              	.LFE44:
 2811              		.section	.text.Ft_Esd_CheckBox_End,"ax",%progbits
 2812              		.align	1
 2813              		.global	Ft_Esd_CheckBox_End
 2814              		.syntax unified
 2815              		.thumb
 2816              		.thumb_func
 2817              		.fpu fpv5-sp-d16
 2819              	Ft_Esd_CheckBox_End:
 2820              	.LFB45:
 409:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
 410:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** void Ft_Esd_CheckBox_End(Ft_Esd_CheckBox *context)
 411:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** {
 2821              		.loc 5 411 0
 2822              		.cfi_startproc
 2823              		@ args = 0, pretend = 0, frame = 16
 2824              		@ frame_needed = 1, uses_anonymous_args = 0
 2825 0000 80B5     		push	{r7, lr}
 2826              	.LCFI126:
 2827              		.cfi_def_cfa_offset 8
 2828              		.cfi_offset 7, -8
 2829              		.cfi_offset 14, -4
 2830 0002 84B0     		sub	sp, sp, #16
 2831              	.LCFI127:
 2832              		.cfi_def_cfa_offset 24
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 64


 2833 0004 00AF     		add	r7, sp, #0
 2834              	.LCFI128:
 2835              		.cfi_def_cfa_register 7
 2836 0006 7860     		str	r0, [r7, #4]
 412:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	void *parent = context->Parent;
 2837              		.loc 5 412 0
 2838 0008 7B68     		ldr	r3, [r7, #4]
 2839 000a 1B68     		ldr	r3, [r3]
 2840 000c FB60     		str	r3, [r7, #12]
 413:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_TouchTag_End(&context->Touch_Tag);
 2841              		.loc 5 413 0
 2842 000e 7B68     		ldr	r3, [r7, #4]
 2843 0010 0433     		adds	r3, r3, #4
 2844 0012 1846     		mov	r0, r3
 2845 0014 FFF7FEFF 		bl	Ft_Esd_TouchTag_End
 414:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** }
 2846              		.loc 5 414 0
 2847 0018 00BF     		nop
 2848 001a 1037     		adds	r7, r7, #16
 2849              	.LCFI129:
 2850              		.cfi_def_cfa_offset 8
 2851 001c BD46     		mov	sp, r7
 2852              	.LCFI130:
 2853              		.cfi_def_cfa_register 13
 2854              		@ sp needed
 2855 001e 80BD     		pop	{r7, pc}
 2856              		.cfi_endproc
 2857              	.LFE45:
 2859              		.section	.text.Ft_Esd_CheckBox_Color_A_RGB_Combine__return,"ax",%progbits
 2860              		.align	1
 2861              		.syntax unified
 2862              		.thumb
 2863              		.thumb_func
 2864              		.fpu fpv5-sp-d16
 2866              	Ft_Esd_CheckBox_Color_A_RGB_Combine__return:
 2867              	.LFB46:
 415:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
 416:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** ft_argb32_t Ft_Esd_CheckBox_Color_A_RGB_Combine__return(Ft_Esd_CheckBox *context)
 417:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** {
 2868              		.loc 5 417 0
 2869              		.cfi_startproc
 2870              		@ args = 0, pretend = 0, frame = 32
 2871              		@ frame_needed = 1, uses_anonymous_args = 0
 2872 0000 80B5     		push	{r7, lr}
 2873              	.LCFI131:
 2874              		.cfi_def_cfa_offset 8
 2875              		.cfi_offset 7, -8
 2876              		.cfi_offset 14, -4
 2877 0002 88B0     		sub	sp, sp, #32
 2878              	.LCFI132:
 2879              		.cfi_def_cfa_offset 40
 2880 0004 00AF     		add	r7, sp, #0
 2881              	.LCFI133:
 2882              		.cfi_def_cfa_register 7
 2883 0006 7860     		str	r0, [r7, #4]
 418:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	void *parent = context->Parent;
 2884              		.loc 5 418 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 65


 2885 0008 7B68     		ldr	r3, [r7, #4]
 2886 000a 1B68     		ldr	r3, [r3]
 2887 000c BB61     		str	r3, [r7, #24]
 419:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	ft_bool_t if_21 = Ft_Esd_TouchTag_Inside(&context->Touch_Tag);
 2888              		.loc 5 419 0
 2889 000e 7B68     		ldr	r3, [r7, #4]
 2890 0010 0433     		adds	r3, r3, #4
 2891 0012 1846     		mov	r0, r3
 2892 0014 FFF7FEFF 		bl	Ft_Esd_TouchTag_Inside
 2893 0018 0346     		mov	r3, r0
 2894 001a FB75     		strb	r3, [r7, #23]
 420:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	ft_rgb32_t rgb;
 421:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	if (if_21)
 2895              		.loc 5 421 0
 2896 001c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2897 001e 002B     		cmp	r3, #0
 2898 0020 09D0     		beq	.L96
 2899              	.LBB3:
 422:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	{
 423:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		Ft_Esd_Theme * theme_1 = context->Theme(parent);
 2900              		.loc 5 423 0
 2901 0022 7B68     		ldr	r3, [r7, #4]
 2902 0024 DB69     		ldr	r3, [r3, #28]
 2903 0026 B869     		ldr	r0, [r7, #24]
 2904 0028 9847     		blx	r3
 2905              	.LVL91:
 2906 002a F860     		str	r0, [r7, #12]
 424:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		rgb = Ft_Esd_Theme_GetTextColor(theme_1);
 2907              		.loc 5 424 0
 2908 002c F868     		ldr	r0, [r7, #12]
 2909 002e FFF7FEFF 		bl	Ft_Esd_Theme_GetTextColor
 2910 0032 F861     		str	r0, [r7, #28]
 2911              	.LBE3:
 2912 0034 08E0     		b	.L97
 2913              	.L96:
 2914              	.LBB4:
 425:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	}
 426:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	else
 427:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	{
 428:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		Ft_Esd_Theme * theme_2 = context->Theme(parent);
 2915              		.loc 5 428 0
 2916 0036 7B68     		ldr	r3, [r7, #4]
 2917 0038 DB69     		ldr	r3, [r3, #28]
 2918 003a B869     		ldr	r0, [r7, #24]
 2919 003c 9847     		blx	r3
 2920              	.LVL92:
 2921 003e 3861     		str	r0, [r7, #16]
 429:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		rgb = Ft_Esd_Theme_GetPrimaryColor(theme_2);
 2922              		.loc 5 429 0
 2923 0040 3869     		ldr	r0, [r7, #16]
 2924 0042 FFF7FEFF 		bl	Ft_Esd_Theme_GetPrimaryColor
 2925 0046 F861     		str	r0, [r7, #28]
 2926              	.L97:
 2927              	.LBE4:
 430:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	}
 431:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	ft_uint8_t a = context->Alpha(parent);
 2928              		.loc 5 431 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 66


 2929 0048 7B68     		ldr	r3, [r7, #4]
 2930 004a 5B6B     		ldr	r3, [r3, #52]
 2931 004c B869     		ldr	r0, [r7, #24]
 2932 004e 9847     		blx	r3
 2933              	.LVL93:
 2934 0050 0346     		mov	r3, r0
 2935 0052 FB72     		strb	r3, [r7, #11]
 432:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	return Ft_Esd_ColorARGB_Combine(rgb, a);
 2936              		.loc 5 432 0
 2937 0054 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2938 0056 1946     		mov	r1, r3
 2939 0058 F869     		ldr	r0, [r7, #28]
 2940 005a FFF7FEFF 		bl	Ft_Esd_ColorARGB_Combine
 2941 005e 0346     		mov	r3, r0
 433:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** }
 2942              		.loc 5 433 0
 2943 0060 1846     		mov	r0, r3
 2944 0062 2037     		adds	r7, r7, #32
 2945              	.LCFI134:
 2946              		.cfi_def_cfa_offset 8
 2947 0064 BD46     		mov	sp, r7
 2948              	.LCFI135:
 2949              		.cfi_def_cfa_register 13
 2950              		@ sp needed
 2951 0066 80BD     		pop	{r7, pc}
 2952              		.cfi_endproc
 2953              	.LFE46:
 2955              		.section	.text.Ft_Esd_CheckBox_Toggle,"ax",%progbits
 2956              		.align	1
 2957              		.global	Ft_Esd_CheckBox_Toggle
 2958              		.syntax unified
 2959              		.thumb
 2960              		.thumb_func
 2961              		.fpu fpv5-sp-d16
 2963              	Ft_Esd_CheckBox_Toggle:
 2964              	.LFB47:
 434:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
 435:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** void Ft_Esd_CheckBox_Toggle(Ft_Esd_CheckBox *context)
 436:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** {
 2965              		.loc 5 436 0
 2966              		.cfi_startproc
 2967              		@ args = 0, pretend = 0, frame = 24
 2968              		@ frame_needed = 1, uses_anonymous_args = 0
 2969 0000 80B5     		push	{r7, lr}
 2970              	.LCFI136:
 2971              		.cfi_def_cfa_offset 8
 2972              		.cfi_offset 7, -8
 2973              		.cfi_offset 14, -4
 2974 0002 86B0     		sub	sp, sp, #24
 2975              	.LCFI137:
 2976              		.cfi_def_cfa_offset 32
 2977 0004 00AF     		add	r7, sp, #0
 2978              	.LCFI138:
 2979              		.cfi_def_cfa_register 7
 2980 0006 7860     		str	r0, [r7, #4]
 437:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	void *parent = context->Parent;
 2981              		.loc 5 437 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 67


 2982 0008 7B68     		ldr	r3, [r7, #4]
 2983 000a 1B68     		ldr	r3, [r3]
 2984 000c 7B61     		str	r3, [r7, #20]
 438:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	ft_bool_t value_1 = context->Value;
 2985              		.loc 5 438 0
 2986 000e 7B68     		ldr	r3, [r7, #4]
 2987 0010 93F83C30 		ldrb	r3, [r3, #60]
 2988 0014 FB74     		strb	r3, [r7, #19]
 439:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int set_variable_1 = !value_1;
 2989              		.loc 5 439 0
 2990 0016 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 2991 0018 002B     		cmp	r3, #0
 2992 001a 0CBF     		ite	eq
 2993 001c 0123     		moveq	r3, #1
 2994 001e 0023     		movne	r3, #0
 2995 0020 DBB2     		uxtb	r3, r3
 2996 0022 FB60     		str	r3, [r7, #12]
 440:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Value = set_variable_1;
 2997              		.loc 5 440 0
 2998 0024 FB68     		ldr	r3, [r7, #12]
 2999 0026 DAB2     		uxtb	r2, r3
 3000 0028 7B68     		ldr	r3, [r7, #4]
 3001 002a 83F83C20 		strb	r2, [r3, #60]
 441:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Changed(parent, set_variable_1);
 3002              		.loc 5 441 0
 3003 002e 7B68     		ldr	r3, [r7, #4]
 3004 0030 5B6C     		ldr	r3, [r3, #68]
 3005 0032 FA68     		ldr	r2, [r7, #12]
 3006 0034 D2B2     		uxtb	r2, r2
 3007 0036 1146     		mov	r1, r2
 3008 0038 7869     		ldr	r0, [r7, #20]
 3009 003a 9847     		blx	r3
 3010              	.LVL94:
 442:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Toggled(parent);
 3011              		.loc 5 442 0
 3012 003c 7B68     		ldr	r3, [r7, #4]
 3013 003e 1B6C     		ldr	r3, [r3, #64]
 3014 0040 7869     		ldr	r0, [r7, #20]
 3015 0042 9847     		blx	r3
 3016              	.LVL95:
 443:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** }
 3017              		.loc 5 443 0
 3018 0044 00BF     		nop
 3019 0046 1837     		adds	r7, r7, #24
 3020              	.LCFI139:
 3021              		.cfi_def_cfa_offset 8
 3022 0048 BD46     		mov	sp, r7
 3023              	.LCFI140:
 3024              		.cfi_def_cfa_register 13
 3025              		@ sp needed
 3026 004a 80BD     		pop	{r7, pc}
 3027              		.cfi_endproc
 3028              	.LFE47:
 3030              		.section	.text.Ft_Esd_CheckBox_ESD_Label_Theme__Property,"ax",%progbits
 3031              		.align	1
 3032              		.syntax unified
 3033              		.thumb
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 68


 3034              		.thumb_func
 3035              		.fpu fpv5-sp-d16
 3037              	Ft_Esd_CheckBox_ESD_Label_Theme__Property:
 3038              	.LFB48:
 444:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
 445:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** Ft_Esd_Theme * Ft_Esd_CheckBox_ESD_Label_Theme__Property(void *c)
 446:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** {
 3039              		.loc 5 446 0
 3040              		.cfi_startproc
 3041              		@ args = 0, pretend = 0, frame = 16
 3042              		@ frame_needed = 1, uses_anonymous_args = 0
 3043 0000 80B5     		push	{r7, lr}
 3044              	.LCFI141:
 3045              		.cfi_def_cfa_offset 8
 3046              		.cfi_offset 7, -8
 3047              		.cfi_offset 14, -4
 3048 0002 84B0     		sub	sp, sp, #16
 3049              	.LCFI142:
 3050              		.cfi_def_cfa_offset 24
 3051 0004 00AF     		add	r7, sp, #0
 3052              	.LCFI143:
 3053              		.cfi_def_cfa_register 7
 3054 0006 7860     		str	r0, [r7, #4]
 447:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_CheckBox *context = (Ft_Esd_CheckBox *)c;
 3055              		.loc 5 447 0
 3056 0008 7B68     		ldr	r3, [r7, #4]
 3057 000a FB60     		str	r3, [r7, #12]
 448:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	void *parent = context->Parent;
 3058              		.loc 5 448 0
 3059 000c FB68     		ldr	r3, [r7, #12]
 3060 000e 1B68     		ldr	r3, [r3]
 3061 0010 BB60     		str	r3, [r7, #8]
 449:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	return context->Theme(parent);
 3062              		.loc 5 449 0
 3063 0012 FB68     		ldr	r3, [r7, #12]
 3064 0014 DB69     		ldr	r3, [r3, #28]
 3065 0016 B868     		ldr	r0, [r7, #8]
 3066 0018 9847     		blx	r3
 3067              	.LVL96:
 3068 001a 0346     		mov	r3, r0
 450:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** }
 3069              		.loc 5 450 0
 3070 001c 1846     		mov	r0, r3
 3071 001e 1037     		adds	r7, r7, #16
 3072              	.LCFI144:
 3073              		.cfi_def_cfa_offset 8
 3074 0020 BD46     		mov	sp, r7
 3075              	.LCFI145:
 3076              		.cfi_def_cfa_register 13
 3077              		@ sp needed
 3078 0022 80BD     		pop	{r7, pc}
 3079              		.cfi_endproc
 3080              	.LFE48:
 3082              		.section	.text.Ft_Esd_CheckBox_ESD_Label_Font__Property,"ax",%progbits
 3083              		.align	1
 3084              		.syntax unified
 3085              		.thumb
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 69


 3086              		.thumb_func
 3087              		.fpu fpv5-sp-d16
 3089              	Ft_Esd_CheckBox_ESD_Label_Font__Property:
 3090              	.LFB49:
 451:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
 452:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** ft_int16_t Ft_Esd_CheckBox_ESD_Label_Font__Property(void *c)
 453:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** {
 3091              		.loc 5 453 0
 3092              		.cfi_startproc
 3093              		@ args = 0, pretend = 0, frame = 16
 3094              		@ frame_needed = 1, uses_anonymous_args = 0
 3095 0000 80B5     		push	{r7, lr}
 3096              	.LCFI146:
 3097              		.cfi_def_cfa_offset 8
 3098              		.cfi_offset 7, -8
 3099              		.cfi_offset 14, -4
 3100 0002 84B0     		sub	sp, sp, #16
 3101              	.LCFI147:
 3102              		.cfi_def_cfa_offset 24
 3103 0004 00AF     		add	r7, sp, #0
 3104              	.LCFI148:
 3105              		.cfi_def_cfa_register 7
 3106 0006 7860     		str	r0, [r7, #4]
 454:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_CheckBox *context = (Ft_Esd_CheckBox *)c;
 3107              		.loc 5 454 0
 3108 0008 7B68     		ldr	r3, [r7, #4]
 3109 000a FB60     		str	r3, [r7, #12]
 455:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	void *parent = context->Parent;
 3110              		.loc 5 455 0
 3111 000c FB68     		ldr	r3, [r7, #12]
 3112 000e 1B68     		ldr	r3, [r3]
 3113 0010 BB60     		str	r3, [r7, #8]
 456:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	return context->Font(parent);
 3114              		.loc 5 456 0
 3115 0012 FB68     		ldr	r3, [r7, #12]
 3116 0014 1B6A     		ldr	r3, [r3, #32]
 3117 0016 B868     		ldr	r0, [r7, #8]
 3118 0018 9847     		blx	r3
 3119              	.LVL97:
 3120 001a 0346     		mov	r3, r0
 3121 001c 1BB2     		sxth	r3, r3
 457:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** }
 3122              		.loc 5 457 0
 3123 001e 1846     		mov	r0, r3
 3124 0020 1037     		adds	r7, r7, #16
 3125              	.LCFI149:
 3126              		.cfi_def_cfa_offset 8
 3127 0022 BD46     		mov	sp, r7
 3128              	.LCFI150:
 3129              		.cfi_def_cfa_register 13
 3130              		@ sp needed
 3131 0024 80BD     		pop	{r7, pc}
 3132              		.cfi_endproc
 3133              	.LFE49:
 3135              		.section	.text.Ft_Esd_CheckBox_ESD_Label_Text__Property,"ax",%progbits
 3136              		.align	1
 3137              		.syntax unified
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 70


 3138              		.thumb
 3139              		.thumb_func
 3140              		.fpu fpv5-sp-d16
 3142              	Ft_Esd_CheckBox_ESD_Label_Text__Property:
 3143              	.LFB50:
 458:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
 459:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** const char * Ft_Esd_CheckBox_ESD_Label_Text__Property(void *c)
 460:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** {
 3144              		.loc 5 460 0
 3145              		.cfi_startproc
 3146              		@ args = 0, pretend = 0, frame = 16
 3147              		@ frame_needed = 1, uses_anonymous_args = 0
 3148 0000 80B5     		push	{r7, lr}
 3149              	.LCFI151:
 3150              		.cfi_def_cfa_offset 8
 3151              		.cfi_offset 7, -8
 3152              		.cfi_offset 14, -4
 3153 0002 84B0     		sub	sp, sp, #16
 3154              	.LCFI152:
 3155              		.cfi_def_cfa_offset 24
 3156 0004 00AF     		add	r7, sp, #0
 3157              	.LCFI153:
 3158              		.cfi_def_cfa_register 7
 3159 0006 7860     		str	r0, [r7, #4]
 461:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_CheckBox *context = (Ft_Esd_CheckBox *)c;
 3160              		.loc 5 461 0
 3161 0008 7B68     		ldr	r3, [r7, #4]
 3162 000a FB60     		str	r3, [r7, #12]
 462:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	void *parent = context->Parent;
 3163              		.loc 5 462 0
 3164 000c FB68     		ldr	r3, [r7, #12]
 3165 000e 1B68     		ldr	r3, [r3]
 3166 0010 BB60     		str	r3, [r7, #8]
 463:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	return context->Text(parent);
 3167              		.loc 5 463 0
 3168 0012 FB68     		ldr	r3, [r7, #12]
 3169 0014 9B6B     		ldr	r3, [r3, #56]
 3170 0016 B868     		ldr	r0, [r7, #8]
 3171 0018 9847     		blx	r3
 3172              	.LVL98:
 3173 001a 0346     		mov	r3, r0
 464:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** }
 3174              		.loc 5 464 0
 3175 001c 1846     		mov	r0, r3
 3176 001e 1037     		adds	r7, r7, #16
 3177              	.LCFI154:
 3178              		.cfi_def_cfa_offset 8
 3179 0020 BD46     		mov	sp, r7
 3180              	.LCFI155:
 3181              		.cfi_def_cfa_register 13
 3182              		@ sp needed
 3183 0022 80BD     		pop	{r7, pc}
 3184              		.cfi_endproc
 3185              	.LFE50:
 3187              		.section	.text.Ft_Esd_CheckBox_ESD_Label_X__Property,"ax",%progbits
 3188              		.align	1
 3189              		.syntax unified
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 71


 3190              		.thumb
 3191              		.thumb_func
 3192              		.fpu fpv5-sp-d16
 3194              	Ft_Esd_CheckBox_ESD_Label_X__Property:
 3195              	.LFB51:
 465:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
 466:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** ft_int16_t Ft_Esd_CheckBox_ESD_Label_X__Property(void *c)
 467:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** {
 3196              		.loc 5 467 0
 3197              		.cfi_startproc
 3198              		@ args = 0, pretend = 0, frame = 72
 3199              		@ frame_needed = 1, uses_anonymous_args = 0
 3200 0000 80B5     		push	{r7, lr}
 3201              	.LCFI156:
 3202              		.cfi_def_cfa_offset 8
 3203              		.cfi_offset 7, -8
 3204              		.cfi_offset 14, -4
 3205 0002 92B0     		sub	sp, sp, #72
 3206              	.LCFI157:
 3207              		.cfi_def_cfa_offset 80
 3208 0004 00AF     		add	r7, sp, #0
 3209              	.LCFI158:
 3210              		.cfi_def_cfa_register 7
 3211 0006 7860     		str	r0, [r7, #4]
 468:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_CheckBox *context = (Ft_Esd_CheckBox *)c;
 3212              		.loc 5 468 0
 3213 0008 7B68     		ldr	r3, [r7, #4]
 3214 000a FB63     		str	r3, [r7, #60]
 469:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	void *parent = context->Parent;
 3215              		.loc 5 469 0
 3216 000c FB6B     		ldr	r3, [r7, #60]
 3217 000e 1B68     		ldr	r3, [r3]
 3218 0010 BB63     		str	r3, [r7, #56]
 470:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int left_54 = context->X(parent);
 3219              		.loc 5 470 0
 3220 0012 FB6B     		ldr	r3, [r7, #60]
 3221 0014 5B6A     		ldr	r3, [r3, #36]
 3222 0016 B86B     		ldr	r0, [r7, #56]
 3223 0018 9847     		blx	r3
 3224              	.LVL99:
 3225 001a 7863     		str	r0, [r7, #52]
 471:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int left_55 = context->Width(parent);
 3226              		.loc 5 471 0
 3227 001c FB6B     		ldr	r3, [r7, #60]
 3228 001e DB6A     		ldr	r3, [r3, #44]
 3229 0020 B86B     		ldr	r0, [r7, #56]
 3230 0022 9847     		blx	r3
 3231              	.LVL100:
 3232 0024 3863     		str	r0, [r7, #48]
 472:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int right_54 = context->Height(parent);
 3233              		.loc 5 472 0
 3234 0026 FB6B     		ldr	r3, [r7, #60]
 3235 0028 1B6B     		ldr	r3, [r3, #48]
 3236 002a B86B     		ldr	r0, [r7, #56]
 3237 002c 9847     		blx	r3
 3238              	.LVL101:
 3239 002e F862     		str	r0, [r7, #44]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 72


 473:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int if_22 = left_55 <= right_54;
 3240              		.loc 5 473 0
 3241 0030 3A6B     		ldr	r2, [r7, #48]
 3242 0032 FB6A     		ldr	r3, [r7, #44]
 3243 0034 9A42     		cmp	r2, r3
 3244 0036 D4BF     		ite	le
 3245 0038 0123     		movle	r3, #1
 3246 003a 0023     		movgt	r3, #0
 3247 003c DBB2     		uxtb	r3, r3
 3248 003e BB62     		str	r3, [r7, #40]
 474:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int right_53;
 475:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	if (if_22)
 3249              		.loc 5 475 0
 3250 0040 BB6A     		ldr	r3, [r7, #40]
 3251 0042 002B     		cmp	r3, #0
 3252 0044 05D0     		beq	.L107
 476:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	{
 477:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		right_53 = context->Width(parent);
 3253              		.loc 5 477 0
 3254 0046 FB6B     		ldr	r3, [r7, #60]
 3255 0048 DB6A     		ldr	r3, [r3, #44]
 3256 004a B86B     		ldr	r0, [r7, #56]
 3257 004c 9847     		blx	r3
 3258              	.LVL102:
 3259 004e 7864     		str	r0, [r7, #68]
 3260 0050 04E0     		b	.L108
 3261              	.L107:
 478:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	}
 479:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	else
 480:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	{
 481:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		right_53 = context->Height(parent);
 3262              		.loc 5 481 0
 3263 0052 FB6B     		ldr	r3, [r7, #60]
 3264 0054 1B6B     		ldr	r3, [r3, #48]
 3265 0056 B86B     		ldr	r0, [r7, #56]
 3266 0058 9847     		blx	r3
 3267              	.LVL103:
 3268 005a 7864     		str	r0, [r7, #68]
 3269              	.L108:
 482:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	}
 483:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int left_53 = left_54 + right_53;
 3270              		.loc 5 483 0
 3271 005c 7A6B     		ldr	r2, [r7, #52]
 3272 005e 7B6C     		ldr	r3, [r7, #68]
 3273 0060 1344     		add	r3, r3, r2
 3274 0062 7B62     		str	r3, [r7, #36]
 484:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int left_58 = context->Width(parent);
 3275              		.loc 5 484 0
 3276 0064 FB6B     		ldr	r3, [r7, #60]
 3277 0066 DB6A     		ldr	r3, [r3, #44]
 3278 0068 B86B     		ldr	r0, [r7, #56]
 3279 006a 9847     		blx	r3
 3280              	.LVL104:
 3281 006c 3862     		str	r0, [r7, #32]
 485:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int right_56 = context->Height(parent);
 3282              		.loc 5 485 0
 3283 006e FB6B     		ldr	r3, [r7, #60]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 73


 3284 0070 1B6B     		ldr	r3, [r3, #48]
 3285 0072 B86B     		ldr	r0, [r7, #56]
 3286 0074 9847     		blx	r3
 3287              	.LVL105:
 3288 0076 F861     		str	r0, [r7, #28]
 486:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int if_23 = left_58 <= right_56;
 3289              		.loc 5 486 0
 3290 0078 3A6A     		ldr	r2, [r7, #32]
 3291 007a FB69     		ldr	r3, [r7, #28]
 3292 007c 9A42     		cmp	r2, r3
 3293 007e D4BF     		ite	le
 3294 0080 0123     		movle	r3, #1
 3295 0082 0023     		movgt	r3, #0
 3296 0084 DBB2     		uxtb	r3, r3
 3297 0086 BB61     		str	r3, [r7, #24]
 487:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int left_57;
 488:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	if (if_23)
 3298              		.loc 5 488 0
 3299 0088 BB69     		ldr	r3, [r7, #24]
 3300 008a 002B     		cmp	r3, #0
 3301 008c 05D0     		beq	.L109
 489:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	{
 490:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		left_57 = context->Width(parent);
 3302              		.loc 5 490 0
 3303 008e FB6B     		ldr	r3, [r7, #60]
 3304 0090 DB6A     		ldr	r3, [r3, #44]
 3305 0092 B86B     		ldr	r0, [r7, #56]
 3306 0094 9847     		blx	r3
 3307              	.LVL106:
 3308 0096 3864     		str	r0, [r7, #64]
 3309 0098 04E0     		b	.L110
 3310              	.L109:
 491:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	}
 492:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	else
 493:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	{
 494:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		left_57 = context->Height(parent);
 3311              		.loc 5 494 0
 3312 009a FB6B     		ldr	r3, [r7, #60]
 3313 009c 1B6B     		ldr	r3, [r3, #48]
 3314 009e B86B     		ldr	r0, [r7, #56]
 3315 00a0 9847     		blx	r3
 3316              	.LVL107:
 3317 00a2 3864     		str	r0, [r7, #64]
 3318              	.L110:
 495:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	}
 496:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	ft_uint8_t i = context->Font(parent);
 3319              		.loc 5 496 0
 3320 00a4 FB6B     		ldr	r3, [r7, #60]
 3321 00a6 1B6A     		ldr	r3, [r3, #32]
 3322 00a8 B86B     		ldr	r0, [r7, #56]
 3323 00aa 9847     		blx	r3
 3324              	.LVL108:
 3325 00ac 0346     		mov	r3, r0
 3326 00ae FB75     		strb	r3, [r7, #23]
 497:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	ft_uint16_t right_57 = Ft_Esd_GetFontHeight(i);
 3327              		.loc 5 497 0
 3328 00b0 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 74


 3329 00b2 0D4A     		ldr	r2, .L112
 3330 00b4 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3331 00b8 BB82     		strh	r3, [r7, #20]	@ movhi
 498:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int left_56 = left_57 + right_57;
 3332              		.loc 5 498 0
 3333 00ba BB8A     		ldrh	r3, [r7, #20]
 3334 00bc 3A6C     		ldr	r2, [r7, #64]
 3335 00be 1344     		add	r3, r3, r2
 3336 00c0 3B61     		str	r3, [r7, #16]
 499:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int right_58 = 4L;
 3337              		.loc 5 499 0
 3338 00c2 0423     		movs	r3, #4
 3339 00c4 FB60     		str	r3, [r7, #12]
 500:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int right_55 = left_56 / right_58;
 3340              		.loc 5 500 0
 3341 00c6 3A69     		ldr	r2, [r7, #16]
 3342 00c8 FB68     		ldr	r3, [r7, #12]
 3343 00ca 92FBF3F3 		sdiv	r3, r2, r3
 3344 00ce BB60     		str	r3, [r7, #8]
 501:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	return left_53 + right_55;
 3345              		.loc 5 501 0
 3346 00d0 7B6A     		ldr	r3, [r7, #36]
 3347 00d2 9AB2     		uxth	r2, r3
 3348 00d4 BB68     		ldr	r3, [r7, #8]
 3349 00d6 9BB2     		uxth	r3, r3
 3350 00d8 1344     		add	r3, r3, r2
 3351 00da 9BB2     		uxth	r3, r3
 3352 00dc 1BB2     		sxth	r3, r3
 502:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** }
 3353              		.loc 5 502 0
 3354 00de 1846     		mov	r0, r3
 3355 00e0 4837     		adds	r7, r7, #72
 3356              	.LCFI159:
 3357              		.cfi_def_cfa_offset 8
 3358 00e2 BD46     		mov	sp, r7
 3359              	.LCFI160:
 3360              		.cfi_def_cfa_register 13
 3361              		@ sp needed
 3362 00e4 80BD     		pop	{r7, pc}
 3363              	.L113:
 3364 00e6 00BF     		.align	2
 3365              	.L112:
 3366 00e8 00000000 		.word	Ft_Esd_FontHeight
 3367              		.cfi_endproc
 3368              	.LFE51:
 3370              		.section	.text.Ft_Esd_CheckBox_ESD_Label_Y__Property,"ax",%progbits
 3371              		.align	1
 3372              		.syntax unified
 3373              		.thumb
 3374              		.thumb_func
 3375              		.fpu fpv5-sp-d16
 3377              	Ft_Esd_CheckBox_ESD_Label_Y__Property:
 3378              	.LFB52:
 503:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
 504:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** ft_int16_t Ft_Esd_CheckBox_ESD_Label_Y__Property(void *c)
 505:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** {
 3379              		.loc 5 505 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 75


 3380              		.cfi_startproc
 3381              		@ args = 0, pretend = 0, frame = 16
 3382              		@ frame_needed = 1, uses_anonymous_args = 0
 3383 0000 80B5     		push	{r7, lr}
 3384              	.LCFI161:
 3385              		.cfi_def_cfa_offset 8
 3386              		.cfi_offset 7, -8
 3387              		.cfi_offset 14, -4
 3388 0002 84B0     		sub	sp, sp, #16
 3389              	.LCFI162:
 3390              		.cfi_def_cfa_offset 24
 3391 0004 00AF     		add	r7, sp, #0
 3392              	.LCFI163:
 3393              		.cfi_def_cfa_register 7
 3394 0006 7860     		str	r0, [r7, #4]
 506:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_CheckBox *context = (Ft_Esd_CheckBox *)c;
 3395              		.loc 5 506 0
 3396 0008 7B68     		ldr	r3, [r7, #4]
 3397 000a FB60     		str	r3, [r7, #12]
 507:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	void *parent = context->Parent;
 3398              		.loc 5 507 0
 3399 000c FB68     		ldr	r3, [r7, #12]
 3400 000e 1B68     		ldr	r3, [r3]
 3401 0010 BB60     		str	r3, [r7, #8]
 508:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	return context->Y(parent);
 3402              		.loc 5 508 0
 3403 0012 FB68     		ldr	r3, [r7, #12]
 3404 0014 9B6A     		ldr	r3, [r3, #40]
 3405 0016 B868     		ldr	r0, [r7, #8]
 3406 0018 9847     		blx	r3
 3407              	.LVL109:
 3408 001a 0346     		mov	r3, r0
 3409 001c 1BB2     		sxth	r3, r3
 509:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** }
 3410              		.loc 5 509 0
 3411 001e 1846     		mov	r0, r3
 3412 0020 1037     		adds	r7, r7, #16
 3413              	.LCFI164:
 3414              		.cfi_def_cfa_offset 8
 3415 0022 BD46     		mov	sp, r7
 3416              	.LCFI165:
 3417              		.cfi_def_cfa_register 13
 3418              		@ sp needed
 3419 0024 80BD     		pop	{r7, pc}
 3420              		.cfi_endproc
 3421              	.LFE52:
 3423              		.section	.text.Ft_Esd_CheckBox_ESD_Label_Width__Property,"ax",%progbits
 3424              		.align	1
 3425              		.syntax unified
 3426              		.thumb
 3427              		.thumb_func
 3428              		.fpu fpv5-sp-d16
 3430              	Ft_Esd_CheckBox_ESD_Label_Width__Property:
 3431              	.LFB53:
 510:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
 511:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** ft_int16_t Ft_Esd_CheckBox_ESD_Label_Width__Property(void *c)
 512:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** {
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 76


 3432              		.loc 5 512 0
 3433              		.cfi_startproc
 3434              		@ args = 0, pretend = 0, frame = 16
 3435              		@ frame_needed = 1, uses_anonymous_args = 0
 3436 0000 80B5     		push	{r7, lr}
 3437              	.LCFI166:
 3438              		.cfi_def_cfa_offset 8
 3439              		.cfi_offset 7, -8
 3440              		.cfi_offset 14, -4
 3441 0002 84B0     		sub	sp, sp, #16
 3442              	.LCFI167:
 3443              		.cfi_def_cfa_offset 24
 3444 0004 00AF     		add	r7, sp, #0
 3445              	.LCFI168:
 3446              		.cfi_def_cfa_register 7
 3447 0006 7860     		str	r0, [r7, #4]
 513:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_CheckBox *context = (Ft_Esd_CheckBox *)c;
 3448              		.loc 5 513 0
 3449 0008 7B68     		ldr	r3, [r7, #4]
 3450 000a FB60     		str	r3, [r7, #12]
 514:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	void *parent = context->Parent;
 3451              		.loc 5 514 0
 3452 000c FB68     		ldr	r3, [r7, #12]
 3453 000e 1B68     		ldr	r3, [r3]
 3454 0010 BB60     		str	r3, [r7, #8]
 515:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	return context->Width(parent);
 3455              		.loc 5 515 0
 3456 0012 FB68     		ldr	r3, [r7, #12]
 3457 0014 DB6A     		ldr	r3, [r3, #44]
 3458 0016 B868     		ldr	r0, [r7, #8]
 3459 0018 9847     		blx	r3
 3460              	.LVL110:
 3461 001a 0346     		mov	r3, r0
 3462 001c 1BB2     		sxth	r3, r3
 516:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** }
 3463              		.loc 5 516 0
 3464 001e 1846     		mov	r0, r3
 3465 0020 1037     		adds	r7, r7, #16
 3466              	.LCFI169:
 3467              		.cfi_def_cfa_offset 8
 3468 0022 BD46     		mov	sp, r7
 3469              	.LCFI170:
 3470              		.cfi_def_cfa_register 13
 3471              		@ sp needed
 3472 0024 80BD     		pop	{r7, pc}
 3473              		.cfi_endproc
 3474              	.LFE53:
 3476              		.section	.text.Ft_Esd_CheckBox_ESD_Label_Height__Property,"ax",%progbits
 3477              		.align	1
 3478              		.syntax unified
 3479              		.thumb
 3480              		.thumb_func
 3481              		.fpu fpv5-sp-d16
 3483              	Ft_Esd_CheckBox_ESD_Label_Height__Property:
 3484              	.LFB54:
 517:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
 518:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** ft_int16_t Ft_Esd_CheckBox_ESD_Label_Height__Property(void *c)
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 77


 519:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** {
 3485              		.loc 5 519 0
 3486              		.cfi_startproc
 3487              		@ args = 0, pretend = 0, frame = 16
 3488              		@ frame_needed = 1, uses_anonymous_args = 0
 3489 0000 80B5     		push	{r7, lr}
 3490              	.LCFI171:
 3491              		.cfi_def_cfa_offset 8
 3492              		.cfi_offset 7, -8
 3493              		.cfi_offset 14, -4
 3494 0002 84B0     		sub	sp, sp, #16
 3495              	.LCFI172:
 3496              		.cfi_def_cfa_offset 24
 3497 0004 00AF     		add	r7, sp, #0
 3498              	.LCFI173:
 3499              		.cfi_def_cfa_register 7
 3500 0006 7860     		str	r0, [r7, #4]
 520:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_CheckBox *context = (Ft_Esd_CheckBox *)c;
 3501              		.loc 5 520 0
 3502 0008 7B68     		ldr	r3, [r7, #4]
 3503 000a FB60     		str	r3, [r7, #12]
 521:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	void *parent = context->Parent;
 3504              		.loc 5 521 0
 3505 000c FB68     		ldr	r3, [r7, #12]
 3506 000e 1B68     		ldr	r3, [r3]
 3507 0010 BB60     		str	r3, [r7, #8]
 522:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	return context->Height(parent);
 3508              		.loc 5 522 0
 3509 0012 FB68     		ldr	r3, [r7, #12]
 3510 0014 1B6B     		ldr	r3, [r3, #48]
 3511 0016 B868     		ldr	r0, [r7, #8]
 3512 0018 9847     		blx	r3
 3513              	.LVL111:
 3514 001a 0346     		mov	r3, r0
 3515 001c 1BB2     		sxth	r3, r3
 523:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** }
 3516              		.loc 5 523 0
 3517 001e 1846     		mov	r0, r3
 3518 0020 1037     		adds	r7, r7, #16
 3519              	.LCFI174:
 3520              		.cfi_def_cfa_offset 8
 3521 0022 BD46     		mov	sp, r7
 3522              	.LCFI175:
 3523              		.cfi_def_cfa_register 13
 3524              		@ sp needed
 3525 0024 80BD     		pop	{r7, pc}
 3526              		.cfi_endproc
 3527              	.LFE54:
 3529              		.text
 3530              	.Letext0:
 3531              		.file 6 "FT_Eve_Hal/FT_DataTypes.h"
 3532              		.file 7 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/lock.h"
 3533              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_types.h"
 3534              		.file 9 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 3535              		.file 10 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/unistd.h"
 3536              		.file 11 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/reent.h"
 3537              		.file 12 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/stdlib.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 78


 3538              		.file 13 "FT_Eve_Hal/FT_Gpu_Hal.h"
 3539              		.file 14 "FT_Esd_Framework/Ft_Esd.h"
 3540              		.file 15 "FT_Esd_Widgets/Ft_Esd_DefaultTheme.h"
 3541              		.file 16 "FT_Esd_Widgets/Ft_Esd_Label.h"
 3542              		.file 17 "FT_Esd_Framework/Ft_Esd_TouchTag.h"
 3543              		.file 18 "FT_Esd_Widgets/Ft_Esd_CheckBox.h"
 3544              		.file 19 "FT_Esd_Framework/Ft_Esd_GpuAlloc.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 79


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Ft_Esd_CheckBox__Generated.c
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:18     .text.Ft_Esd_Theme_GetBackColor:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:24     .text.Ft_Esd_Theme_GetBackColor:0000000000000000 Ft_Esd_Theme_GetBackColor
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:71     .text.Ft_Esd_Theme_GetTextColor:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:77     .text.Ft_Esd_Theme_GetTextColor:0000000000000000 Ft_Esd_Theme_GetTextColor
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:123    .text.Ft_Esd_Theme_GetPrimaryColor:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:129    .text.Ft_Esd_Theme_GetPrimaryColor:0000000000000000 Ft_Esd_Theme_GetPrimaryColor
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:175    .text.Ft_Esd_BitmapCell_GetInfo:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:181    .text.Ft_Esd_BitmapCell_GetInfo:0000000000000000 Ft_Esd_BitmapCell_GetInfo
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:230    .text.Ft_Esd_Dl_TAG:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:236    .text.Ft_Esd_Dl_TAG:0000000000000000 Ft_Esd_Dl_TAG
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:277    .text.Ft_Esd_Dl_TAG:0000000000000024 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:282    .text.Ft_Esd_Dl_COLOR_A:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:288    .text.Ft_Esd_Dl_COLOR_A:0000000000000000 Ft_Esd_Dl_COLOR_A
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:349    .text.Ft_Esd_Dl_COLOR_A:0000000000000048 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:356    .text.Ft_Esd_ColorARGB_Combine:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:362    .text.Ft_Esd_ColorARGB_Combine:0000000000000000 Ft_Esd_ColorARGB_Combine
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:406    .text.Ft_Esd_Render_Line:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:412    .text.Ft_Esd_Render_Line:0000000000000000 Ft_Esd_Render_Line
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:465    .text.Ft_Esd_CheckBox_Theme__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:472    .text.Ft_Esd_CheckBox_Theme__Default:0000000000000000 Ft_Esd_CheckBox_Theme__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:507    .text.Ft_Esd_CheckBox_Font__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:514    .text.Ft_Esd_CheckBox_Font__Default:0000000000000000 Ft_Esd_CheckBox_Font__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:551    .text.Ft_Esd_CheckBox_X__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:558    .text.Ft_Esd_CheckBox_X__Default:0000000000000000 Ft_Esd_CheckBox_X__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:595    .text.Ft_Esd_CheckBox_Y__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:602    .text.Ft_Esd_CheckBox_Y__Default:0000000000000000 Ft_Esd_CheckBox_Y__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:639    .text.Ft_Esd_CheckBox_Width__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:646    .text.Ft_Esd_CheckBox_Width__Default:0000000000000000 Ft_Esd_CheckBox_Width__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:683    .text.Ft_Esd_CheckBox_Height__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:690    .text.Ft_Esd_CheckBox_Height__Default:0000000000000000 Ft_Esd_CheckBox_Height__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:727    .text.Ft_Esd_CheckBox_Alpha__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:734    .text.Ft_Esd_CheckBox_Alpha__Default:0000000000000000 Ft_Esd_CheckBox_Alpha__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:771    .rodata:0000000000000000 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:775    .text.Ft_Esd_CheckBox_Text__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:782    .text.Ft_Esd_CheckBox_Text__Default:0000000000000000 Ft_Esd_CheckBox_Text__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:818    .text.Ft_Esd_CheckBox_Text__Default:0000000000000018 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:823    .text.Ft_Esd_CheckBox_Changed__Noop:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:830    .text.Ft_Esd_CheckBox_Changed__Noop:0000000000000000 Ft_Esd_CheckBox_Changed__Noop
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:868    .text.Ft_Esd_CheckBox_ESD_Label_AlignY__Property:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:874    .text.Ft_Esd_CheckBox_ESD_Label_AlignY__Property:0000000000000000 Ft_Esd_CheckBox_ESD_Label_AlignY__Property
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:911    .text.Ft_Esd_CheckBox__Initializer:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:918    .text.Ft_Esd_CheckBox__Initializer:0000000000000000 Ft_Esd_CheckBox__Initializer
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:1051   .text.Ft_Esd_CheckBox__Initializer:00000000000000b0 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:2645   .text.Ft_Esd_CheckBox_Touch_Tag_Tap__Signal:0000000000000000 Ft_Esd_CheckBox_Touch_Tag_Tap__Signal
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:3037   .text.Ft_Esd_CheckBox_ESD_Label_Theme__Property:0000000000000000 Ft_Esd_CheckBox_ESD_Label_Theme__Property
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:3089   .text.Ft_Esd_CheckBox_ESD_Label_Font__Property:0000000000000000 Ft_Esd_CheckBox_ESD_Label_Font__Property
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:3142   .text.Ft_Esd_CheckBox_ESD_Label_Text__Property:0000000000000000 Ft_Esd_CheckBox_ESD_Label_Text__Property
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:3194   .text.Ft_Esd_CheckBox_ESD_Label_X__Property:0000000000000000 Ft_Esd_CheckBox_ESD_Label_X__Property
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:3377   .text.Ft_Esd_CheckBox_ESD_Label_Y__Property:0000000000000000 Ft_Esd_CheckBox_ESD_Label_Y__Property
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:3430   .text.Ft_Esd_CheckBox_ESD_Label_Width__Property:0000000000000000 Ft_Esd_CheckBox_ESD_Label_Width__Property
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:3483   .text.Ft_Esd_CheckBox_ESD_Label_Height__Property:0000000000000000 Ft_Esd_CheckBox_ESD_Label_Height__Property
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:1074   .text.Ft_Esd_CheckBox_Render:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:1081   .text.Ft_Esd_CheckBox_Render:0000000000000000 Ft_Esd_CheckBox_Render
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:2866   .text.Ft_Esd_CheckBox_Color_A_RGB_Combine__return:0000000000000000 Ft_Esd_CheckBox_Color_A_RGB_Combine__return
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:2639   .text.Ft_Esd_CheckBox_Touch_Tag_Tap__Signal:0000000000000000 $t
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s 			page 80


/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:2716   .text.Ft_Esd_CheckBox_Start:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:2723   .text.Ft_Esd_CheckBox_Start:0000000000000000 Ft_Esd_CheckBox_Start
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:2764   .text.Ft_Esd_CheckBox_Update:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:2771   .text.Ft_Esd_CheckBox_Update:0000000000000000 Ft_Esd_CheckBox_Update
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:2812   .text.Ft_Esd_CheckBox_End:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:2819   .text.Ft_Esd_CheckBox_End:0000000000000000 Ft_Esd_CheckBox_End
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:2860   .text.Ft_Esd_CheckBox_Color_A_RGB_Combine__return:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:2956   .text.Ft_Esd_CheckBox_Toggle:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:2963   .text.Ft_Esd_CheckBox_Toggle:0000000000000000 Ft_Esd_CheckBox_Toggle
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:3031   .text.Ft_Esd_CheckBox_ESD_Label_Theme__Property:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:3083   .text.Ft_Esd_CheckBox_ESD_Label_Font__Property:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:3136   .text.Ft_Esd_CheckBox_ESD_Label_Text__Property:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:3188   .text.Ft_Esd_CheckBox_ESD_Label_X__Property:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:3366   .text.Ft_Esd_CheckBox_ESD_Label_X__Property:00000000000000e8 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:3371   .text.Ft_Esd_CheckBox_ESD_Label_Y__Property:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:3424   .text.Ft_Esd_CheckBox_ESD_Label_Width__Property:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccXPcjVC.s:3477   .text.Ft_Esd_CheckBox_ESD_Label_Height__Property:0000000000000000 $t

UNDEFINED SYMBOLS
Ft_Esd_Theme_GetCurrent
Ft_Gpu_Hal_WrCmd32
Ft_Esd_Host
Ft_Esd_GpuState_I
Ft_Esd_GpuState
Ft_Esd_Render_LineF
Ft_Esd_TouchTag__Initializer
Ft_Esd_Label__Initializer
Ft_Esd_Noop
Ft_Esd_TouchTag_Tag
Ft_Esd_Elements_PanelSunken
Ft_Esd_TouchTag_Inside
Ft_Esd_Label_Render
Ft_Esd_TouchTag_Start
Ft_Esd_TouchTag_Update
Ft_Esd_TouchTag_End
Ft_Esd_FontHeight
