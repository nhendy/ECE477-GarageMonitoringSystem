ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"Ft_Esd_BitmapInfo.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Ft_Esd_BitmapCell_GetInfo,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	Ft_Esd_BitmapCell_GetInfo:
  25              	.LFB3:
  26              		.file 1 "FT_Esd_Framework/Ft_Esd_BitmapInfo.h"
   1:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** /*
   2:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** Bitmap info structure
   3:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** */
   4:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
   5:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #ifndef FT_ESD_BITMAPINFO_H
   6:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #define FT_ESD_BITMAPINFO_H
   7:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
   8:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "Ft_Esd.h"
   9:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "FT_DataTypes.h"
  10:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "Ft_Esd_GpuAlloc.h"
  11:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  12:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapInfo, Native = Struct) // TODO: Struct support, expose values
  13:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  14:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  15:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Width;
  16:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Height;
  17:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Stride;
  18:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Format;
  19:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Size;
  20:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	const char *File;
  21:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  22:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Handle pointing to the address in RAM_G if it is allocated
  23:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_GpuHandle GpuHandle;
  24:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  25:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Bitmap handle that is being used
  26:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_uint32_t BitmapHandle;
  27:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  28:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	const char *PaletteFile;
  29:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_GpuHandle PaletteGpuHandle;
  30:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  31:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// When this is set, the allocated ram is not free'd automatically
  32:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Use Ft_Esd_GpuAlloc_Free(GpuAlloc, GpuHandle) to free the GPU ram manually
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s 			page 2


  33:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_bool_t Persistent;
  34:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  35:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_BitmapInfo;
  36:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  37:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapInfo *, Native = Pointer, Edit = Library)
  38:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  39:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapCell, Native = Struct) // TODO: Struct support, expose values
  40:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  41:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  42:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapInfo *Info;
  43:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Cell;
  44:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_BitmapCell;
  45:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  46:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapCell *, Native = Pointer, Edit = Library)
  47:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  48:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // Attempts to load the specified bitmap if it has not been loaded into RAM_G yet.
  49:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // Call during the Update cycle of each frame to keep the bitmap flagged as in use, otherwise the m
  50:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_LoadBitmap, Type = ft_uint32_t, Include = "Ft_Esd_BitmapInfo.h", DisplayName = 
  51:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapInfo, Type = Ft_Esd_BitmapInfo *)
  52:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ft_uint32_t Ft_Esd_LoadBitmap(Ft_Esd_BitmapInfo *bitmapInfo);
  53:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  54:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_LoadPalette, Type = ft_uint32_t, Include = "Ft_Esd_BitmapInfo.h", DisplayName =
  55:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapInfo, Type = Ft_Esd_BitmapInfo *)
  56:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ft_uint32_t Ft_Esd_LoadPalette(Ft_Esd_BitmapInfo *bitmapInfo);
  57:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  58:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_ENUM(_BitmapResourceFormat, DisplayName = "Bitmap Format")
  59:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB1555)
  60:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L1)
  61:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L2)
  62:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L4)
  63:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L8)
  64:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(RGB332)
  65:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB2)
  66:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB4)
  67:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(RGB565)
  68:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(PALETTED565)
  69:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(PALETTED4444)
  70:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(PALETTED8)
  71:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(JPEG)
  72:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(PNG)
  73:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_END()
  74:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  75:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_LOGIC(Ft_Esd_SwitchBitmapCell, Callback, Include = "Ft_Esd_BitmapInfo.h", DisplayName = "Switch
  76:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  77:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  78:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Callback
  79:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	void *Parent;
  80:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  81:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  82:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Input
  83:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  84:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  85:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ESD_INPUT(BitmapInfo, Type = Ft_Esd_BitmapInfo *, DisplayName = "Bitmap Info")
  86:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapInfo *(* BitmapInfo)(void *context);
  87:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  88:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ESD_INPUT(Cell, Type = ft_uint8_t, DisplayName = "Cell")
  89:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_uint8_t(* Cell)(void *context);
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s 			page 3


  90:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  91:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  92:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Variables
  93:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  94:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  95:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// BitmapCell object
  96:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapCell BitmapCell;
  97:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  98:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_SwitchBitmapCell;
  99:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 100:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** void Ft_Esd_SwitchBitmapCell__Initializer(Ft_Esd_SwitchBitmapCell *context);
 101:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 102:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_OUTPUT(BitmapCell, Type = Ft_Esd_BitmapCell *, DisplayName = "Bitmap Cell")
 103:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** Ft_Esd_BitmapCell *Ft_Esd_SwitchBitmapCell_BitmapCell(Ft_Esd_SwitchBitmapCell *context);
 104:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 105:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_UPDATE(Ft_Esd_BitmapPersist, DisplayName = "Bitmap Persist", Category = EsdUtilities)
 106:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapCell, Type = Ft_Esd_BitmapCell *)
 107:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** void Ft_Esd_BitmapPersist(Ft_Esd_BitmapCell *bitmapCell);
 108:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 109:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_BitmapCell_GetInfo, Type = Ft_Esd_BitmapInfo *, DisplayName = "ESD BitmapCell G
 110:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapCell, Type = Ft_Esd_BitmapCell *)
 111:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** static Ft_Esd_BitmapInfo *Ft_Esd_BitmapCell_GetInfo(Ft_Esd_BitmapCell *bitmapCell)
 112:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  27              		.loc 1 112 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 113:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	if (!bitmapCell) return 0;
  43              		.loc 1 113 0
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 002B     		cmp	r3, #0
  46 000c 01D1     		bne	.L2
  47              		.loc 1 113 0 is_stmt 0 discriminator 1
  48 000e 0023     		movs	r3, #0
  49 0010 01E0     		b	.L3
  50              	.L2:
 114:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	return bitmapCell->Info;
  51              		.loc 1 114 0 is_stmt 1
  52 0012 7B68     		ldr	r3, [r7, #4]
  53 0014 1B68     		ldr	r3, [r3]
  54              	.L3:
 115:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** }
  55              		.loc 1 115 0
  56 0016 1846     		mov	r0, r3
  57 0018 0C37     		adds	r7, r7, #12
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s 			page 4


  58              	.LCFI3:
  59              		.cfi_def_cfa_offset 4
  60 001a BD46     		mov	sp, r7
  61              	.LCFI4:
  62              		.cfi_def_cfa_register 13
  63              		@ sp needed
  64 001c 5DF8047B 		ldr	r7, [sp], #4
  65              	.LCFI5:
  66              		.cfi_restore 7
  67              		.cfi_def_cfa_offset 0
  68 0020 7047     		bx	lr
  69              		.cfi_endproc
  70              	.LFE3:
  72              		.section	.text.load_inflate_image,"ax",%progbits
  73              		.align	1
  74              		.global	load_inflate_image
  75              		.syntax unified
  76              		.thumb
  77              		.thumb_func
  78              		.fpu fpv5-sp-d16
  80              	load_inflate_image:
  81              	.LFB6:
  82              		.file 2 "FT_Esd_Framework/Ft_Esd_BitmapInfo.c"
   1:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
   2:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #include "Ft_Esd_BitmapInfo.h"
   3:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #include "Ft_Esd_GpuAlloc.h"
   4:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
   5:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #if defined (FT900_PLATFORM)
   6:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #	include "ff.h"
   7:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #endif
   8:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
   9:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #ifndef NDEBUG
  10:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #define ESD_BITMAPINFO_DEBUG
  11:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #endif
  12:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
  13:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** extern Ft_Gpu_Hal_Context_t *Ft_Esd_Host;
  14:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** extern Ft_Esd_GpuAlloc *Ft_Esd_GAlloc;
  15:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
  16:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
  17:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
  18:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** int load_inflate_image(ft_uint32_t address, const char *filename)
  19:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** {
  83              		.loc 2 19 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 16
  86              		@ frame_needed = 1, uses_anonymous_args = 0
  87              		@ link register save eliminated.
  88 0000 80B4     		push	{r7}
  89              	.LCFI6:
  90              		.cfi_def_cfa_offset 4
  91              		.cfi_offset 7, -4
  92 0002 85B0     		sub	sp, sp, #20
  93              	.LCFI7:
  94              		.cfi_def_cfa_offset 24
  95 0004 00AF     		add	r7, sp, #0
  96              	.LCFI8:
  97              		.cfi_def_cfa_register 7
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s 			page 5


  98 0006 7860     		str	r0, [r7, #4]
  99 0008 3960     		str	r1, [r7]
  20:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	Ft_Gpu_Hal_Context_t *phost = Ft_Esd_Host;
 100              		.loc 2 20 0
 101 000a 054B     		ldr	r3, .L6
 102 000c 1B68     		ldr	r3, [r3]
 103 000e FB60     		str	r3, [r7, #12]
  21:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
  22:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #if defined(MSVC_PLATFORM) || defined(MSVC_FT800EMU) || defined(ESD_SIMULATION)
  23:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
  24:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	FILE *afile;
  25:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	ft_uint32_t ftsize = 0;
  26:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	ft_uint8_t pbuff[8192];
  27:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	ft_uint16_t blocklen;
  28:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
  29:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	afile = fopen(filename, "rb");		// read Binary (rb)
  30:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	if (afile == NULL)
  31:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	{
  32:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		printf("Unable to open: %s\n", filename);
  33:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		return 0;
  34:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	}
  35:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	Ft_Gpu_Hal_WrCmd32(phost, CMD_INFLATE);
  36:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	Ft_Gpu_Hal_WrCmd32(phost, address);
  37:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	fseek(afile, 0, SEEK_END);
  38:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	ftsize = ftell(afile);
  39:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	fseek(afile, 0, SEEK_SET);
  40:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	while (ftsize>0)
  41:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	{
  42:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		blocklen = ftsize>8192 ? 8192 : ftsize;
  43:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		fread(pbuff, 1, blocklen, afile);							/* copy the data into pbuff and then transfter it to comm
  44:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		ftsize -= blocklen;
  45:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		Ft_Gpu_Hal_WrCmdBuf(phost, pbuff, blocklen);				/* copy data continuously into command memory */
  46:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	}
  47:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	fclose(afile);												/* close the opened jpg file */
  48:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	return 1;
  49:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
  50:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #elif defined (FT900_PLATFORM)
  51:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
  52:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	FRESULT fResult;
  53:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	FIL InfSrc;
  54:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
  55:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	ft_int32_t blocklen, filesize;
  56:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	ft_uint32_t g_random_buffer[512L];
  57:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
  58:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	fResult = f_open(&InfSrc, filename, FA_READ | FA_OPEN_EXISTING);
  59:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	if (fResult == FR_OK)
  60:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	{
  61:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		Ft_Gpu_Hal_WrCmd32(phost, CMD_INFLATE);
  62:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		Ft_Gpu_Hal_WrCmd32(phost, address);
  63:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		filesize = f_size(&InfSrc);
  64:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		while (filesize>0)
  65:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		{
  66:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			fResult = f_read(&InfSrc, g_random_buffer, 512, &blocklen);	// read a chunk of src file
  67:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			filesize -= blocklen;
  68:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			Ft_Gpu_Hal_WrCmdBuf(phost, (char *)g_random_buffer, blocklen);
  69:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
  70:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		}
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s 			page 6


  71:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		f_close(&InfSrc);
  72:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		return 1;
  73:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	}
  74:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	else
  75:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	{
  76:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		printf("Unable to open file: \"%s\"\n", filename);
  77:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		return 0;
  78:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	}
  79:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
  80:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #else
  81:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
  82:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	return 0;
 104              		.loc 2 82 0
 105 0010 0023     		movs	r3, #0
  83:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
  84:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #endif
  85:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** }
 106              		.loc 2 85 0
 107 0012 1846     		mov	r0, r3
 108 0014 1437     		adds	r7, r7, #20
 109              	.LCFI9:
 110              		.cfi_def_cfa_offset 4
 111 0016 BD46     		mov	sp, r7
 112              	.LCFI10:
 113              		.cfi_def_cfa_register 13
 114              		@ sp needed
 115 0018 5DF8047B 		ldr	r7, [sp], #4
 116              	.LCFI11:
 117              		.cfi_restore 7
 118              		.cfi_def_cfa_offset 0
 119 001c 7047     		bx	lr
 120              	.L7:
 121 001e 00BF     		.align	2
 122              	.L6:
 123 0020 00000000 		.word	Ft_Esd_Host
 124              		.cfi_endproc
 125              	.LFE6:
 127              		.section	.rodata
 128              		.align	2
 129              	.LC0:
 130 0000 4269746D 		.ascii	"Bitmap info is NULL\000"
 130      61702069 
 130      6E666F20 
 130      6973204E 
 130      554C4C00 
 131              		.align	2
 132              	.LC1:
 133 0014 416C6C6F 		.ascii	"Allocated space for bitmap\000"
 133      63617465 
 133      64207370 
 133      61636520 
 133      666F7220 
 134 002f 00       		.align	2
 135              	.LC2:
 136 0030 556E6162 		.ascii	"Unable to allocate space for bitmap\000"
 136      6C652074 
 136      6F20616C 
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s 			page 7


 136      6C6F6361 
 136      74652073 
 137              		.section	.text.Ft_Esd_LoadBitmap,"ax",%progbits
 138              		.align	1
 139              		.global	Ft_Esd_LoadBitmap
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 143              		.fpu fpv5-sp-d16
 145              	Ft_Esd_LoadBitmap:
 146              	.LFB7:
  86:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
  87:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** ft_uint32_t Ft_Esd_LoadBitmap(Ft_Esd_BitmapInfo *bitmapInfo)
  88:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** {
 147              		.loc 2 88 0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 16
 150              		@ frame_needed = 1, uses_anonymous_args = 0
 151 0000 90B5     		push	{r4, r7, lr}
 152              	.LCFI12:
 153              		.cfi_def_cfa_offset 12
 154              		.cfi_offset 4, -12
 155              		.cfi_offset 7, -8
 156              		.cfi_offset 14, -4
 157 0002 85B0     		sub	sp, sp, #20
 158              	.LCFI13:
 159              		.cfi_def_cfa_offset 32
 160 0004 00AF     		add	r7, sp, #0
 161              	.LCFI14:
 162              		.cfi_def_cfa_register 7
 163 0006 7860     		str	r0, [r7, #4]
  89:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	if (!bitmapInfo)
 164              		.loc 2 89 0
 165 0008 7B68     		ldr	r3, [r7, #4]
 166 000a 002B     		cmp	r3, #0
 167 000c 05D1     		bne	.L9
  90:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	{
  91:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #ifdef ESD_BITMAPINFO_DEBUG
  92:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		printf("Bitmap info is NULL\n");
 168              		.loc 2 92 0
 169 000e 2C48     		ldr	r0, .L15
 170 0010 FFF7FEFF 		bl	puts
  93:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #endif
  94:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		return ~0;
 171              		.loc 2 94 0
 172 0014 4FF0FF33 		mov	r3, #-1
 173 0018 4DE0     		b	.L10
 174              	.L9:
  95:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	}
  96:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
  97:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	// Get address of specified handle
  98:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	// printf("%i: %i\n", bitmapInfo->GpuHandle.Id, bitmapInfo->GpuHandle.Seq);
  99:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	ft_uint32_t addr = Ft_Esd_GpuAlloc_Get(Ft_Esd_GAlloc, bitmapInfo->GpuHandle);
 175              		.loc 2 99 0
 176 001a 2A4B     		ldr	r3, .L15+4
 177 001c 1A68     		ldr	r2, [r3]
 178 001e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s 			page 8


 179 0020 9969     		ldr	r1, [r3, #24]
 180 0022 1046     		mov	r0, r2
 181 0024 FFF7FEFF 		bl	Ft_Esd_GpuAlloc_Get
 182 0028 F860     		str	r0, [r7, #12]
 100:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	if (addr == ~0)
 183              		.loc 2 100 0
 184 002a FB68     		ldr	r3, [r7, #12]
 185 002c B3F1FF3F 		cmp	r3, #-1
 186 0030 40D1     		bne	.L11
 101:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	{
 102:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		if (!bitmapInfo->File)
 187              		.loc 2 102 0
 188 0032 7B68     		ldr	r3, [r7, #4]
 189 0034 5B69     		ldr	r3, [r3, #20]
 190 0036 002B     		cmp	r3, #0
 191 0038 02D1     		bne	.L12
 103:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		{
 104:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #ifdef ESD_BITMAPINFO_DEBUG
 105:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			// printf("Bitmap info file name is NULL, cannot auto-load\n");
 106:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #endif
 107:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			return ~0;
 192              		.loc 2 107 0
 193 003a 4FF0FF33 		mov	r3, #-1
 194 003e 3AE0     		b	.L10
 195              	.L12:
 108:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		}
 109:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
 110:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		// Not loaded, load this bitmap
 111:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		bitmapInfo->GpuHandle = Ft_Esd_GpuAlloc_Alloc(Ft_Esd_GAlloc, bitmapInfo->Size, bitmapInfo->Persis
 196              		.loc 2 111 0
 197 0040 204B     		ldr	r3, .L15+4
 198 0042 1868     		ldr	r0, [r3]
 199 0044 7B68     		ldr	r3, [r7, #4]
 200 0046 1B69     		ldr	r3, [r3, #16]
 201 0048 1946     		mov	r1, r3
 202 004a 7B68     		ldr	r3, [r7, #4]
 203 004c 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 204 0050 002B     		cmp	r3, #0
 205 0052 0CBF     		ite	eq
 206 0054 0123     		moveq	r3, #1
 207 0056 0023     		movne	r3, #0
 208 0058 DBB2     		uxtb	r3, r3
 209 005a 9BB2     		uxth	r3, r3
 210 005c 7C68     		ldr	r4, [r7, #4]
 211 005e 1A46     		mov	r2, r3
 212 0060 FFF7FEFF 		bl	Ft_Esd_GpuAlloc_Alloc
 213 0064 0346     		mov	r3, r0
 214 0066 A361     		str	r3, [r4, #24]
 112:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		addr = Ft_Esd_GpuAlloc_Get(Ft_Esd_GAlloc, bitmapInfo->GpuHandle);
 215              		.loc 2 112 0
 216 0068 164B     		ldr	r3, .L15+4
 217 006a 1A68     		ldr	r2, [r3]
 218 006c 7B68     		ldr	r3, [r7, #4]
 219 006e 9969     		ldr	r1, [r3, #24]
 220 0070 1046     		mov	r0, r2
 221 0072 FFF7FEFF 		bl	Ft_Esd_GpuAlloc_Get
 222 0076 F860     		str	r0, [r7, #12]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s 			page 9


 113:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		if (addr != ~0)
 223              		.loc 2 113 0
 224 0078 FB68     		ldr	r3, [r7, #12]
 225 007a B3F1FF3F 		cmp	r3, #-1
 226 007e 16D0     		beq	.L13
 114:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		{
 115:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #ifdef ESD_BITMAPINFO_DEBUG
 116:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			printf("Allocated space for bitmap\n");
 227              		.loc 2 116 0
 228 0080 1148     		ldr	r0, .L15+8
 229 0082 FFF7FEFF 		bl	puts
 117:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #endif
 118:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			// Allocation space OK
 119:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			if (!load_inflate_image(addr, bitmapInfo->File))
 230              		.loc 2 119 0
 231 0086 7B68     		ldr	r3, [r7, #4]
 232 0088 5B69     		ldr	r3, [r3, #20]
 233 008a 1946     		mov	r1, r3
 234 008c F868     		ldr	r0, [r7, #12]
 235 008e FFF7FEFF 		bl	load_inflate_image
 236 0092 0346     		mov	r3, r0
 237 0094 002B     		cmp	r3, #0
 238 0096 0DD1     		bne	.L11
 120:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			{
 121:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 				// Failed to load from file
 122:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 				Ft_Esd_GpuAlloc_Free(Ft_Esd_GAlloc, bitmapInfo->GpuHandle);
 239              		.loc 2 122 0
 240 0098 0A4B     		ldr	r3, .L15+4
 241 009a 1A68     		ldr	r2, [r3]
 242 009c 7B68     		ldr	r3, [r7, #4]
 243 009e 9969     		ldr	r1, [r3, #24]
 244 00a0 1046     		mov	r0, r2
 245 00a2 FFF7FEFF 		bl	Ft_Esd_GpuAlloc_Free
 123:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 				addr = ~0;
 246              		.loc 2 123 0
 247 00a6 4FF0FF33 		mov	r3, #-1
 248 00aa FB60     		str	r3, [r7, #12]
 249 00ac 02E0     		b	.L11
 250              	.L13:
 124:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			}
 125:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		}
 126:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		else
 127:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		{
 128:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #ifdef ESD_BITMAPINFO_DEBUG
 129:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			printf("Unable to allocate space for bitmap\n");
 251              		.loc 2 129 0
 252 00ae 0748     		ldr	r0, .L15+12
 253 00b0 FFF7FEFF 		bl	puts
 254              	.L11:
 130:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #endif
 131:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		}
 132:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	}
 133:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	return addr;
 255              		.loc 2 133 0
 256 00b4 FB68     		ldr	r3, [r7, #12]
 257              	.L10:
 134:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** }
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s 			page 10


 258              		.loc 2 134 0
 259 00b6 1846     		mov	r0, r3
 260 00b8 1437     		adds	r7, r7, #20
 261              	.LCFI15:
 262              		.cfi_def_cfa_offset 12
 263 00ba BD46     		mov	sp, r7
 264              	.LCFI16:
 265              		.cfi_def_cfa_register 13
 266              		@ sp needed
 267 00bc 90BD     		pop	{r4, r7, pc}
 268              	.L16:
 269 00be 00BF     		.align	2
 270              	.L15:
 271 00c0 00000000 		.word	.LC0
 272 00c4 00000000 		.word	Ft_Esd_GAlloc
 273 00c8 14000000 		.word	.LC1
 274 00cc 30000000 		.word	.LC2
 275              		.cfi_endproc
 276              	.LFE7:
 278              		.section	.rodata
 279              		.align	2
 280              	.LC3:
 281 0054 556E6B6E 		.ascii	"Unknown palette format, cannot load\000"
 281      6F776E20 
 281      70616C65 
 281      74746520 
 281      666F726D 
 282              		.align	2
 283              	.LC4:
 284 0078 416C6C6F 		.ascii	"Allocated space for bitmap palette\000"
 284      63617465 
 284      64207370 
 284      61636520 
 284      666F7220 
 285 009b 00       		.align	2
 286              	.LC5:
 287 009c 556E6162 		.ascii	"Unable to allocate space for bitmap palette\000"
 287      6C652074 
 287      6F20616C 
 287      6C6F6361 
 287      74652073 
 288              		.section	.text.Ft_Esd_LoadPalette,"ax",%progbits
 289              		.align	1
 290              		.global	Ft_Esd_LoadPalette
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 294              		.fpu fpv5-sp-d16
 296              	Ft_Esd_LoadPalette:
 297              	.LFB8:
 135:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
 136:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** ft_uint32_t Ft_Esd_LoadPalette(Ft_Esd_BitmapInfo *bitmapInfo)
 137:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** {
 298              		.loc 2 137 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 16
 301              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s 			page 11


 302 0000 90B5     		push	{r4, r7, lr}
 303              	.LCFI17:
 304              		.cfi_def_cfa_offset 12
 305              		.cfi_offset 4, -12
 306              		.cfi_offset 7, -8
 307              		.cfi_offset 14, -4
 308 0002 85B0     		sub	sp, sp, #20
 309              	.LCFI18:
 310              		.cfi_def_cfa_offset 32
 311 0004 00AF     		add	r7, sp, #0
 312              	.LCFI19:
 313              		.cfi_def_cfa_register 7
 314 0006 7860     		str	r0, [r7, #4]
 138:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	if (!bitmapInfo)
 315              		.loc 2 138 0
 316 0008 7B68     		ldr	r3, [r7, #4]
 317 000a 002B     		cmp	r3, #0
 318 000c 05D1     		bne	.L18
 139:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	{
 140:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #ifdef ESD_BITMAPINFO_DEBUG
 141:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		printf("Bitmap info is NULL\n");
 319              		.loc 2 141 0
 320 000e 3848     		ldr	r0, .L30
 321 0010 FFF7FEFF 		bl	puts
 142:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #endif
 143:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		return ~0;
 322              		.loc 2 143 0
 323 0014 4FF0FF33 		mov	r3, #-1
 324 0018 66E0     		b	.L19
 325              	.L18:
 144:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	}
 145:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
 146:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #ifdef FT_81X_ENABLE
 147:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
 148:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	// Get palette address of specified handle
 149:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	ft_uint32_t addr = Ft_Esd_GpuAlloc_Get(Ft_Esd_GAlloc, bitmapInfo->PaletteGpuHandle);
 326              		.loc 2 149 0
 327 001a 364B     		ldr	r3, .L30+4
 328 001c 1A68     		ldr	r2, [r3]
 329 001e 7B68     		ldr	r3, [r7, #4]
 330 0020 596A     		ldr	r1, [r3, #36]
 331 0022 1046     		mov	r0, r2
 332 0024 FFF7FEFF 		bl	Ft_Esd_GpuAlloc_Get
 333 0028 F860     		str	r0, [r7, #12]
 150:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	if (addr == ~0)
 334              		.loc 2 150 0
 335 002a FB68     		ldr	r3, [r7, #12]
 336 002c B3F1FF3F 		cmp	r3, #-1
 337 0030 59D1     		bne	.L20
 338              	.LBB2:
 151:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	{
 152:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		if (!bitmapInfo->PaletteFile)
 339              		.loc 2 152 0
 340 0032 7B68     		ldr	r3, [r7, #4]
 341 0034 1B6A     		ldr	r3, [r3, #32]
 342 0036 002B     		cmp	r3, #0
 343 0038 02D1     		bne	.L21
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s 			page 12


 153:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		{
 154:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #ifdef ESD_BITMAPINFO_DEBUG
 155:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			// printf("Bitmap info palette file name is NULL, cannot auto-load\n");
 156:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #endif
 157:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			return ~0;
 344              		.loc 2 157 0
 345 003a 4FF0FF33 		mov	r3, #-1
 346 003e 53E0     		b	.L19
 347              	.L21:
 158:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		}
 159:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
 160:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		ft_uint32_t size;
 161:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		switch (bitmapInfo->Format)
 348              		.loc 2 161 0
 349 0040 7B68     		ldr	r3, [r7, #4]
 350 0042 DB68     		ldr	r3, [r3, #12]
 351 0044 0F2B     		cmp	r3, #15
 352 0046 08D0     		beq	.L23
 353 0048 102B     		cmp	r3, #16
 354 004a 02D0     		beq	.L24
 355 004c 0E2B     		cmp	r3, #14
 356 004e 08D0     		beq	.L25
 357 0050 0BE0     		b	.L29
 358              	.L24:
 162:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		{
 163:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		case PALETTED8: size = 256 * 4; break;
 359              		.loc 2 163 0
 360 0052 4FF48063 		mov	r3, #1024
 361 0056 BB60     		str	r3, [r7, #8]
 362 0058 0DE0     		b	.L26
 363              	.L23:
 164:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		case PALETTED4444: size = 256 * 2; break;
 364              		.loc 2 164 0
 365 005a 4FF40073 		mov	r3, #512
 366 005e BB60     		str	r3, [r7, #8]
 367 0060 09E0     		b	.L26
 368              	.L25:
 165:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		case PALETTED565: size = 256 * 2; break;
 369              		.loc 2 165 0
 370 0062 4FF40073 		mov	r3, #512
 371 0066 BB60     		str	r3, [r7, #8]
 372 0068 05E0     		b	.L26
 373              	.L29:
 166:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		default:
 167:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			printf("Unknown palette format, cannot load\n");
 374              		.loc 2 167 0
 375 006a 2348     		ldr	r0, .L30+8
 376 006c FFF7FEFF 		bl	puts
 168:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			return ~0;
 377              		.loc 2 168 0
 378 0070 4FF0FF33 		mov	r3, #-1
 379 0074 38E0     		b	.L19
 380              	.L26:
 169:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		}
 170:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
 171:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		// Not loaded, load this bitmap palette
 172:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		bitmapInfo->PaletteGpuHandle = Ft_Esd_GpuAlloc_Alloc(Ft_Esd_GAlloc, size,bitmapInfo->Persistent ?
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s 			page 13


 381              		.loc 2 172 0
 382 0076 1F4B     		ldr	r3, .L30+4
 383 0078 1868     		ldr	r0, [r3]
 384 007a 7B68     		ldr	r3, [r7, #4]
 385 007c 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 386 0080 002B     		cmp	r3, #0
 387 0082 0CBF     		ite	eq
 388 0084 0123     		moveq	r3, #1
 389 0086 0023     		movne	r3, #0
 390 0088 DBB2     		uxtb	r3, r3
 391 008a 9BB2     		uxth	r3, r3
 392 008c 7C68     		ldr	r4, [r7, #4]
 393 008e 1A46     		mov	r2, r3
 394 0090 B968     		ldr	r1, [r7, #8]
 395 0092 FFF7FEFF 		bl	Ft_Esd_GpuAlloc_Alloc
 396 0096 0346     		mov	r3, r0
 397 0098 6362     		str	r3, [r4, #36]
 173:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		addr = Ft_Esd_GpuAlloc_Get(Ft_Esd_GAlloc, bitmapInfo->PaletteGpuHandle);
 398              		.loc 2 173 0
 399 009a 164B     		ldr	r3, .L30+4
 400 009c 1A68     		ldr	r2, [r3]
 401 009e 7B68     		ldr	r3, [r7, #4]
 402 00a0 596A     		ldr	r1, [r3, #36]
 403 00a2 1046     		mov	r0, r2
 404 00a4 FFF7FEFF 		bl	Ft_Esd_GpuAlloc_Get
 405 00a8 F860     		str	r0, [r7, #12]
 174:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		if (addr != ~0)
 406              		.loc 2 174 0
 407 00aa FB68     		ldr	r3, [r7, #12]
 408 00ac B3F1FF3F 		cmp	r3, #-1
 409 00b0 16D0     		beq	.L27
 175:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		{
 176:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #ifdef ESD_BITMAPINFO_DEBUG
 177:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			printf("Allocated space for bitmap palette\n");
 410              		.loc 2 177 0
 411 00b2 1248     		ldr	r0, .L30+12
 412 00b4 FFF7FEFF 		bl	puts
 178:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #endif
 179:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			// Allocation space OK
 180:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			if (!load_inflate_image(addr, bitmapInfo->PaletteFile))
 413              		.loc 2 180 0
 414 00b8 7B68     		ldr	r3, [r7, #4]
 415 00ba 1B6A     		ldr	r3, [r3, #32]
 416 00bc 1946     		mov	r1, r3
 417 00be F868     		ldr	r0, [r7, #12]
 418 00c0 FFF7FEFF 		bl	load_inflate_image
 419 00c4 0346     		mov	r3, r0
 420 00c6 002B     		cmp	r3, #0
 421 00c8 0DD1     		bne	.L20
 181:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			{
 182:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 				// Failed to load from file
 183:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 				Ft_Esd_GpuAlloc_Free(Ft_Esd_GAlloc, bitmapInfo->PaletteGpuHandle);
 422              		.loc 2 183 0
 423 00ca 0A4B     		ldr	r3, .L30+4
 424 00cc 1A68     		ldr	r2, [r3]
 425 00ce 7B68     		ldr	r3, [r7, #4]
 426 00d0 596A     		ldr	r1, [r3, #36]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s 			page 14


 427 00d2 1046     		mov	r0, r2
 428 00d4 FFF7FEFF 		bl	Ft_Esd_GpuAlloc_Free
 184:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 				addr = ~0;
 429              		.loc 2 184 0
 430 00d8 4FF0FF33 		mov	r3, #-1
 431 00dc FB60     		str	r3, [r7, #12]
 432 00de 02E0     		b	.L20
 433              	.L27:
 185:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			}
 186:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		}
 187:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		else
 188:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		{
 189:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #ifdef ESD_BITMAPINFO_DEBUG
 190:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			printf("Unable to allocate space for bitmap palette\n");
 434              		.loc 2 190 0
 435 00e0 0748     		ldr	r0, .L30+16
 436 00e2 FFF7FEFF 		bl	puts
 437              	.L20:
 438              	.LBE2:
 191:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #endif
 192:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		}
 193:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	}
 194:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
 195:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #else // FT_80X_ENABLE
 196:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
 197:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	printf("Palette not yet implemented for FT80x\n");
 198:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	ft_uint32_taddr = ~0;
 199:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
 200:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #endif
 201:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
 202:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	return addr;
 439              		.loc 2 202 0
 440 00e6 FB68     		ldr	r3, [r7, #12]
 441              	.L19:
 203:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** }
 442              		.loc 2 203 0
 443 00e8 1846     		mov	r0, r3
 444 00ea 1437     		adds	r7, r7, #20
 445              	.LCFI20:
 446              		.cfi_def_cfa_offset 12
 447 00ec BD46     		mov	sp, r7
 448              	.LCFI21:
 449              		.cfi_def_cfa_register 13
 450              		@ sp needed
 451 00ee 90BD     		pop	{r4, r7, pc}
 452              	.L31:
 453              		.align	2
 454              	.L30:
 455 00f0 00000000 		.word	.LC0
 456 00f4 00000000 		.word	Ft_Esd_GAlloc
 457 00f8 54000000 		.word	.LC3
 458 00fc 78000000 		.word	.LC4
 459 0100 9C000000 		.word	.LC5
 460              		.cfi_endproc
 461              	.LFE8:
 463              		.section	.text.Ft_Esd_BitmapPersist,"ax",%progbits
 464              		.align	1
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s 			page 15


 465              		.global	Ft_Esd_BitmapPersist
 466              		.syntax unified
 467              		.thumb
 468              		.thumb_func
 469              		.fpu fpv5-sp-d16
 471              	Ft_Esd_BitmapPersist:
 472              	.LFB9:
 204:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
 205:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** void Ft_Esd_BitmapPersist(Ft_Esd_BitmapCell *bitmapCell)
 206:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** {
 473              		.loc 2 206 0
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 8
 476              		@ frame_needed = 1, uses_anonymous_args = 0
 477 0000 80B5     		push	{r7, lr}
 478              	.LCFI22:
 479              		.cfi_def_cfa_offset 8
 480              		.cfi_offset 7, -8
 481              		.cfi_offset 14, -4
 482 0002 82B0     		sub	sp, sp, #8
 483              	.LCFI23:
 484              		.cfi_def_cfa_offset 16
 485 0004 00AF     		add	r7, sp, #0
 486              	.LCFI24:
 487              		.cfi_def_cfa_register 7
 488 0006 7860     		str	r0, [r7, #4]
 207:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	if (bitmapCell)
 489              		.loc 2 207 0
 490 0008 7B68     		ldr	r3, [r7, #4]
 491 000a 002B     		cmp	r3, #0
 492 000c 09D0     		beq	.L34
 208:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	{
 209:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		Ft_Esd_LoadBitmap(bitmapCell->Info);
 493              		.loc 2 209 0
 494 000e 7B68     		ldr	r3, [r7, #4]
 495 0010 1B68     		ldr	r3, [r3]
 496 0012 1846     		mov	r0, r3
 497 0014 FFF7FEFF 		bl	Ft_Esd_LoadBitmap
 210:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		Ft_Esd_LoadPalette(bitmapCell->Info);
 498              		.loc 2 210 0
 499 0018 7B68     		ldr	r3, [r7, #4]
 500 001a 1B68     		ldr	r3, [r3]
 501 001c 1846     		mov	r0, r3
 502 001e FFF7FEFF 		bl	Ft_Esd_LoadPalette
 503              	.L34:
 211:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	}
 212:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** }
 504              		.loc 2 212 0
 505 0022 00BF     		nop
 506 0024 0837     		adds	r7, r7, #8
 507              	.LCFI25:
 508              		.cfi_def_cfa_offset 8
 509 0026 BD46     		mov	sp, r7
 510              	.LCFI26:
 511              		.cfi_def_cfa_register 13
 512              		@ sp needed
 513 0028 80BD     		pop	{r7, pc}
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s 			page 16


 514              		.cfi_endproc
 515              	.LFE9:
 517              		.section	.text.nullInfo,"ax",%progbits
 518              		.align	1
 519              		.syntax unified
 520              		.thumb
 521              		.thumb_func
 522              		.fpu fpv5-sp-d16
 524              	nullInfo:
 525              	.LFB10:
 213:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
 214:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** extern void Ft_Esd_Noop(void *context);
 215:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
 216:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** static Ft_Esd_BitmapInfo *nullInfo(void *context) { return 0; }
 526              		.loc 2 216 0
 527              		.cfi_startproc
 528              		@ args = 0, pretend = 0, frame = 8
 529              		@ frame_needed = 1, uses_anonymous_args = 0
 530              		@ link register save eliminated.
 531 0000 80B4     		push	{r7}
 532              	.LCFI27:
 533              		.cfi_def_cfa_offset 4
 534              		.cfi_offset 7, -4
 535 0002 83B0     		sub	sp, sp, #12
 536              	.LCFI28:
 537              		.cfi_def_cfa_offset 16
 538 0004 00AF     		add	r7, sp, #0
 539              	.LCFI29:
 540              		.cfi_def_cfa_register 7
 541 0006 7860     		str	r0, [r7, #4]
 542              		.loc 2 216 0
 543 0008 0023     		movs	r3, #0
 544 000a 1846     		mov	r0, r3
 545 000c 0C37     		adds	r7, r7, #12
 546              	.LCFI30:
 547              		.cfi_def_cfa_offset 4
 548 000e BD46     		mov	sp, r7
 549              	.LCFI31:
 550              		.cfi_def_cfa_register 13
 551              		@ sp needed
 552 0010 5DF8047B 		ldr	r7, [sp], #4
 553              	.LCFI32:
 554              		.cfi_restore 7
 555              		.cfi_def_cfa_offset 0
 556 0014 7047     		bx	lr
 557              		.cfi_endproc
 558              	.LFE10:
 560              		.section	.text.nullCell,"ax",%progbits
 561              		.align	1
 562              		.syntax unified
 563              		.thumb
 564              		.thumb_func
 565              		.fpu fpv5-sp-d16
 567              	nullCell:
 568              	.LFB11:
 217:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** static ft_uint8_t nullCell(void *context) { return 0; }
 569              		.loc 2 217 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s 			page 17


 570              		.cfi_startproc
 571              		@ args = 0, pretend = 0, frame = 8
 572              		@ frame_needed = 1, uses_anonymous_args = 0
 573              		@ link register save eliminated.
 574 0000 80B4     		push	{r7}
 575              	.LCFI33:
 576              		.cfi_def_cfa_offset 4
 577              		.cfi_offset 7, -4
 578 0002 83B0     		sub	sp, sp, #12
 579              	.LCFI34:
 580              		.cfi_def_cfa_offset 16
 581 0004 00AF     		add	r7, sp, #0
 582              	.LCFI35:
 583              		.cfi_def_cfa_register 7
 584 0006 7860     		str	r0, [r7, #4]
 585              		.loc 2 217 0
 586 0008 0023     		movs	r3, #0
 587 000a 1846     		mov	r0, r3
 588 000c 0C37     		adds	r7, r7, #12
 589              	.LCFI36:
 590              		.cfi_def_cfa_offset 4
 591 000e BD46     		mov	sp, r7
 592              	.LCFI37:
 593              		.cfi_def_cfa_register 13
 594              		@ sp needed
 595 0010 5DF8047B 		ldr	r7, [sp], #4
 596              	.LCFI38:
 597              		.cfi_restore 7
 598              		.cfi_def_cfa_offset 0
 599 0014 7047     		bx	lr
 600              		.cfi_endproc
 601              	.LFE11:
 603              		.section	.text.Ft_Esd_SwitchBitmapCell__Initializer,"ax",%progbits
 604              		.align	1
 605              		.global	Ft_Esd_SwitchBitmapCell__Initializer
 606              		.syntax unified
 607              		.thumb
 608              		.thumb_func
 609              		.fpu fpv5-sp-d16
 611              	Ft_Esd_SwitchBitmapCell__Initializer:
 612              	.LFB12:
 218:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
 219:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** void Ft_Esd_SwitchBitmapCell__Initializer(Ft_Esd_SwitchBitmapCell *context)
 220:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** {
 613              		.loc 2 220 0
 614              		.cfi_startproc
 615              		@ args = 0, pretend = 0, frame = 8
 616              		@ frame_needed = 1, uses_anonymous_args = 0
 617              		@ link register save eliminated.
 618 0000 80B4     		push	{r7}
 619              	.LCFI39:
 620              		.cfi_def_cfa_offset 4
 621              		.cfi_offset 7, -4
 622 0002 83B0     		sub	sp, sp, #12
 623              	.LCFI40:
 624              		.cfi_def_cfa_offset 16
 625 0004 00AF     		add	r7, sp, #0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s 			page 18


 626              	.LCFI41:
 627              		.cfi_def_cfa_register 7
 628 0006 7860     		str	r0, [r7, #4]
 221:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	context->Parent = 0;
 629              		.loc 2 221 0
 630 0008 7B68     		ldr	r3, [r7, #4]
 631 000a 0022     		movs	r2, #0
 632 000c 1A60     		str	r2, [r3]
 222:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	context->BitmapInfo = nullInfo;
 633              		.loc 2 222 0
 634 000e 7B68     		ldr	r3, [r7, #4]
 635 0010 084A     		ldr	r2, .L40
 636 0012 5A60     		str	r2, [r3, #4]
 223:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	context->Cell = nullCell;
 637              		.loc 2 223 0
 638 0014 7B68     		ldr	r3, [r7, #4]
 639 0016 084A     		ldr	r2, .L40+4
 640 0018 9A60     		str	r2, [r3, #8]
 224:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	context->BitmapCell.Info = 0;
 641              		.loc 2 224 0
 642 001a 7B68     		ldr	r3, [r7, #4]
 643 001c 0022     		movs	r2, #0
 644 001e DA60     		str	r2, [r3, #12]
 225:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	context->BitmapCell.Cell = 0;
 645              		.loc 2 225 0
 646 0020 7B68     		ldr	r3, [r7, #4]
 647 0022 0022     		movs	r2, #0
 648 0024 1A61     		str	r2, [r3, #16]
 226:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** }
 649              		.loc 2 226 0
 650 0026 00BF     		nop
 651 0028 0C37     		adds	r7, r7, #12
 652              	.LCFI42:
 653              		.cfi_def_cfa_offset 4
 654 002a BD46     		mov	sp, r7
 655              	.LCFI43:
 656              		.cfi_def_cfa_register 13
 657              		@ sp needed
 658 002c 5DF8047B 		ldr	r7, [sp], #4
 659              	.LCFI44:
 660              		.cfi_restore 7
 661              		.cfi_def_cfa_offset 0
 662 0030 7047     		bx	lr
 663              	.L41:
 664 0032 00BF     		.align	2
 665              	.L40:
 666 0034 00000000 		.word	nullInfo
 667 0038 00000000 		.word	nullCell
 668              		.cfi_endproc
 669              	.LFE12:
 671              		.section	.text.Ft_Esd_SwitchBitmapCell_BitmapCell,"ax",%progbits
 672              		.align	1
 673              		.global	Ft_Esd_SwitchBitmapCell_BitmapCell
 674              		.syntax unified
 675              		.thumb
 676              		.thumb_func
 677              		.fpu fpv5-sp-d16
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s 			page 19


 679              	Ft_Esd_SwitchBitmapCell_BitmapCell:
 680              	.LFB13:
 227:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
 228:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** Ft_Esd_BitmapCell *Ft_Esd_SwitchBitmapCell_BitmapCell(Ft_Esd_SwitchBitmapCell *context)
 229:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** {
 681              		.loc 2 229 0
 682              		.cfi_startproc
 683              		@ args = 0, pretend = 0, frame = 8
 684              		@ frame_needed = 1, uses_anonymous_args = 0
 685 0000 80B5     		push	{r7, lr}
 686              	.LCFI45:
 687              		.cfi_def_cfa_offset 8
 688              		.cfi_offset 7, -8
 689              		.cfi_offset 14, -4
 690 0002 82B0     		sub	sp, sp, #8
 691              	.LCFI46:
 692              		.cfi_def_cfa_offset 16
 693 0004 00AF     		add	r7, sp, #0
 694              	.LCFI47:
 695              		.cfi_def_cfa_register 7
 696 0006 7860     		str	r0, [r7, #4]
 230:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	context->BitmapCell.Info = context->BitmapInfo(context->Parent);
 697              		.loc 2 230 0
 698 0008 7B68     		ldr	r3, [r7, #4]
 699 000a 5B68     		ldr	r3, [r3, #4]
 700 000c 7A68     		ldr	r2, [r7, #4]
 701 000e 1268     		ldr	r2, [r2]
 702 0010 1046     		mov	r0, r2
 703 0012 9847     		blx	r3
 704              	.LVL0:
 705 0014 0246     		mov	r2, r0
 706 0016 7B68     		ldr	r3, [r7, #4]
 707 0018 DA60     		str	r2, [r3, #12]
 231:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	context->BitmapCell.Cell = context->Cell(context->Parent);
 708              		.loc 2 231 0
 709 001a 7B68     		ldr	r3, [r7, #4]
 710 001c 9B68     		ldr	r3, [r3, #8]
 711 001e 7A68     		ldr	r2, [r7, #4]
 712 0020 1268     		ldr	r2, [r2]
 713 0022 1046     		mov	r0, r2
 714 0024 9847     		blx	r3
 715              	.LVL1:
 716 0026 0346     		mov	r3, r0
 717 0028 1A46     		mov	r2, r3
 718 002a 7B68     		ldr	r3, [r7, #4]
 719 002c 1A61     		str	r2, [r3, #16]
 232:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	return &context->BitmapCell;
 720              		.loc 2 232 0
 721 002e 7B68     		ldr	r3, [r7, #4]
 722 0030 0C33     		adds	r3, r3, #12
 233:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** }
 723              		.loc 2 233 0
 724 0032 1846     		mov	r0, r3
 725 0034 0837     		adds	r7, r7, #8
 726              	.LCFI48:
 727              		.cfi_def_cfa_offset 8
 728 0036 BD46     		mov	sp, r7
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s 			page 20


 729              	.LCFI49:
 730              		.cfi_def_cfa_register 13
 731              		@ sp needed
 732 0038 80BD     		pop	{r7, pc}
 733              		.cfi_endproc
 734              	.LFE13:
 736              		.text
 737              	.Letext0:
 738              		.file 3 "FT_Eve_Hal/FT_DataTypes.h"
 739              		.file 4 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/lock.h"
 740              		.file 5 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_types.h"
 741              		.file 6 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 742              		.file 7 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/unistd.h"
 743              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/reent.h"
 744              		.file 9 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/stdlib.h"
 745              		.file 10 "FT_Eve_Hal/FT_Gpu_Hal.h"
 746              		.file 11 "FT_Esd_Framework/Ft_Esd_GpuAlloc.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Ft_Esd_BitmapInfo.c
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s:18     .text.Ft_Esd_BitmapCell_GetInfo:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s:24     .text.Ft_Esd_BitmapCell_GetInfo:0000000000000000 Ft_Esd_BitmapCell_GetInfo
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s:73     .text.load_inflate_image:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s:80     .text.load_inflate_image:0000000000000000 load_inflate_image
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s:123    .text.load_inflate_image:0000000000000020 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s:128    .rodata:0000000000000000 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s:138    .text.Ft_Esd_LoadBitmap:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s:145    .text.Ft_Esd_LoadBitmap:0000000000000000 Ft_Esd_LoadBitmap
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s:271    .text.Ft_Esd_LoadBitmap:00000000000000c0 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s:289    .text.Ft_Esd_LoadPalette:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s:296    .text.Ft_Esd_LoadPalette:0000000000000000 Ft_Esd_LoadPalette
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s:455    .text.Ft_Esd_LoadPalette:00000000000000f0 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s:464    .text.Ft_Esd_BitmapPersist:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s:471    .text.Ft_Esd_BitmapPersist:0000000000000000 Ft_Esd_BitmapPersist
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s:518    .text.nullInfo:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s:524    .text.nullInfo:0000000000000000 nullInfo
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s:561    .text.nullCell:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s:567    .text.nullCell:0000000000000000 nullCell
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s:604    .text.Ft_Esd_SwitchBitmapCell__Initializer:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s:611    .text.Ft_Esd_SwitchBitmapCell__Initializer:0000000000000000 Ft_Esd_SwitchBitmapCell__Initializer
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s:666    .text.Ft_Esd_SwitchBitmapCell__Initializer:0000000000000034 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s:672    .text.Ft_Esd_SwitchBitmapCell_BitmapCell:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc0AX1ta.s:679    .text.Ft_Esd_SwitchBitmapCell_BitmapCell:0000000000000000 Ft_Esd_SwitchBitmapCell_BitmapCell

UNDEFINED SYMBOLS
Ft_Esd_Host
puts
Ft_Esd_GpuAlloc_Get
Ft_Esd_GpuAlloc_Alloc
Ft_Esd_GpuAlloc_Free
Ft_Esd_GAlloc
