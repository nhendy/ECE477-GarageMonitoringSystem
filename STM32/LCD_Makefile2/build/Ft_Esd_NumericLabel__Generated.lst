ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"Ft_Esd_NumericLabel__Generated.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Ft_Esd_Theme_GetTextColor,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	Ft_Esd_Theme_GetTextColor:
  25              	.LFB5:
  26              		.file 1 "FT_Esd_Widgets/FT_Esd_Theme.h"
   1:FT_Esd_Widgets/FT_Esd_Theme.h **** 
   2:FT_Esd_Widgets/FT_Esd_Theme.h **** #ifndef FT_ESD_THEME_H
   3:FT_Esd_Widgets/FT_Esd_Theme.h **** #define FT_ESD_THEME_H
   4:FT_Esd_Widgets/FT_Esd_Theme.h **** #include "FT_DataTypes.h"
   5:FT_Esd_Widgets/FT_Esd_Theme.h **** #include "Ft_Esd.h"
   6:FT_Esd_Widgets/FT_Esd_Theme.h **** 
   7:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_CATEGORY(EsdTheme, DisplayName = "ESD Theme")
   8:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_CATEGORY(EsdTheme_Themes, DisplayName = "Themes", Category = EsdTheme)
   9:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  10:FT_Esd_Widgets/FT_Esd_Theme.h **** typedef unsigned int ft_uint32_t;
  11:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  12:FT_Esd_Widgets/FT_Esd_Theme.h **** typedef struct
  13:FT_Esd_Widgets/FT_Esd_Theme.h **** {
  14:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t ClearColor;
  15:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t BackColor;
  16:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t TextColor;
  17:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t ButtonTextColor;
  18:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t DefaultColor;
  19:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t PrimaryColor;
  20:FT_Esd_Widgets/FT_Esd_Theme.h **** } Ft_Esd_Theme;
  21:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  22:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_TYPE(Ft_Esd_Theme *, Native = Pointer, Edit = Library)
  23:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  24:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_RENDER(Ft_Esd_Theme_SetCurrent, DisplayName = "Set Current Theme", Category = EsdTheme, Include
  25:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *)
  26:FT_Esd_Widgets/FT_Esd_Theme.h **** void Ft_Esd_Theme_SetCurrent(Ft_Esd_Theme *theme);
  27:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  28:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetCurrent, DisplayName = "Current Theme", Category = EsdTheme, Type = Ft
  29:FT_Esd_Widgets/FT_Esd_Theme.h **** Ft_Esd_Theme *Ft_Esd_Theme_GetCurrent();
  30:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  31:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetClearColor, DisplayName = "Get Clear Color", Category = EsdTheme, Type
  32:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s 			page 2


  33:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetClearColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_Es
  34:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  35:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetBackColor, DisplayName = "Get Back Color", Category = EsdTheme, Type =
  36:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  37:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetBackColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_Esd
  38:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  39:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetTextColor, DisplayName = "Get Text Color", Category = EsdTheme, Type =
  40:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  41:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetTextColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_Esd
  27              		.loc 1 41 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
  43              		.loc 1 41 0
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 002B     		cmp	r3, #0
  46 000c 04D1     		bne	.L2
  47              		.loc 1 41 0 is_stmt 0 discriminator 1
  48 000e FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
  49 0012 0346     		mov	r3, r0
  50 0014 9B68     		ldr	r3, [r3, #8]
  51 0016 01E0     		b	.L3
  52              	.L2:
  53              		.loc 1 41 0 discriminator 2
  54 0018 7B68     		ldr	r3, [r7, #4]
  55 001a 9B68     		ldr	r3, [r3, #8]
  56              	.L3:
  57              		.loc 1 41 0
  58 001c 1846     		mov	r0, r3
  59 001e 0837     		adds	r7, r7, #8
  60              	.LCFI3:
  61              		.cfi_def_cfa_offset 8
  62 0020 BD46     		mov	sp, r7
  63              	.LCFI4:
  64              		.cfi_def_cfa_register 13
  65              		@ sp needed
  66 0022 80BD     		pop	{r7, pc}
  67              		.cfi_endproc
  68              	.LFE5:
  70              		.section	.text.Ft_Esd_BitmapCell_GetInfo,"ax",%progbits
  71              		.align	1
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  75              		.fpu fpv5-sp-d16
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s 			page 3


  77              	Ft_Esd_BitmapCell_GetInfo:
  78              	.LFB9:
  79              		.file 2 "FT_Esd_Framework/Ft_Esd_BitmapInfo.h"
   1:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** /*
   2:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** Bitmap info structure
   3:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** */
   4:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
   5:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #ifndef FT_ESD_BITMAPINFO_H
   6:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #define FT_ESD_BITMAPINFO_H
   7:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
   8:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "Ft_Esd.h"
   9:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "FT_DataTypes.h"
  10:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "Ft_Esd_GpuAlloc.h"
  11:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  12:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapInfo, Native = Struct) // TODO: Struct support, expose values
  13:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  14:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  15:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Width;
  16:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Height;
  17:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Stride;
  18:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Format;
  19:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Size;
  20:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	const char *File;
  21:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  22:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Handle pointing to the address in RAM_G if it is allocated
  23:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_GpuHandle GpuHandle;
  24:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  25:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Bitmap handle that is being used
  26:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_uint32_t BitmapHandle;
  27:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  28:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	const char *PaletteFile;
  29:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_GpuHandle PaletteGpuHandle;
  30:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  31:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// When this is set, the allocated ram is not free'd automatically
  32:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Use Ft_Esd_GpuAlloc_Free(GpuAlloc, GpuHandle) to free the GPU ram manually
  33:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_bool_t Persistent;
  34:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  35:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_BitmapInfo;
  36:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  37:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapInfo *, Native = Pointer, Edit = Library)
  38:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  39:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapCell, Native = Struct) // TODO: Struct support, expose values
  40:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  41:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  42:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapInfo *Info;
  43:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Cell;
  44:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_BitmapCell;
  45:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  46:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapCell *, Native = Pointer, Edit = Library)
  47:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  48:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // Attempts to load the specified bitmap if it has not been loaded into RAM_G yet.
  49:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // Call during the Update cycle of each frame to keep the bitmap flagged as in use, otherwise the m
  50:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_LoadBitmap, Type = ft_uint32_t, Include = "Ft_Esd_BitmapInfo.h", DisplayName = 
  51:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapInfo, Type = Ft_Esd_BitmapInfo *)
  52:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ft_uint32_t Ft_Esd_LoadBitmap(Ft_Esd_BitmapInfo *bitmapInfo);
  53:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  54:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_LoadPalette, Type = ft_uint32_t, Include = "Ft_Esd_BitmapInfo.h", DisplayName =
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s 			page 4


  55:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapInfo, Type = Ft_Esd_BitmapInfo *)
  56:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ft_uint32_t Ft_Esd_LoadPalette(Ft_Esd_BitmapInfo *bitmapInfo);
  57:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  58:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_ENUM(_BitmapResourceFormat, DisplayName = "Bitmap Format")
  59:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB1555)
  60:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L1)
  61:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L2)
  62:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L4)
  63:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L8)
  64:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(RGB332)
  65:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB2)
  66:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB4)
  67:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(RGB565)
  68:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(PALETTED565)
  69:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(PALETTED4444)
  70:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(PALETTED8)
  71:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(JPEG)
  72:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(PNG)
  73:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_END()
  74:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  75:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_LOGIC(Ft_Esd_SwitchBitmapCell, Callback, Include = "Ft_Esd_BitmapInfo.h", DisplayName = "Switch
  76:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  77:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  78:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Callback
  79:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	void *Parent;
  80:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  81:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  82:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Input
  83:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  84:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  85:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ESD_INPUT(BitmapInfo, Type = Ft_Esd_BitmapInfo *, DisplayName = "Bitmap Info")
  86:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapInfo *(* BitmapInfo)(void *context);
  87:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  88:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ESD_INPUT(Cell, Type = ft_uint8_t, DisplayName = "Cell")
  89:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_uint8_t(* Cell)(void *context);
  90:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  91:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  92:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Variables
  93:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  94:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  95:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// BitmapCell object
  96:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapCell BitmapCell;
  97:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  98:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_SwitchBitmapCell;
  99:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 100:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** void Ft_Esd_SwitchBitmapCell__Initializer(Ft_Esd_SwitchBitmapCell *context);
 101:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 102:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_OUTPUT(BitmapCell, Type = Ft_Esd_BitmapCell *, DisplayName = "Bitmap Cell")
 103:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** Ft_Esd_BitmapCell *Ft_Esd_SwitchBitmapCell_BitmapCell(Ft_Esd_SwitchBitmapCell *context);
 104:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 105:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_UPDATE(Ft_Esd_BitmapPersist, DisplayName = "Bitmap Persist", Category = EsdUtilities)
 106:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapCell, Type = Ft_Esd_BitmapCell *)
 107:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** void Ft_Esd_BitmapPersist(Ft_Esd_BitmapCell *bitmapCell);
 108:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 109:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_BitmapCell_GetInfo, Type = Ft_Esd_BitmapInfo *, DisplayName = "ESD BitmapCell G
 110:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapCell, Type = Ft_Esd_BitmapCell *)
 111:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** static Ft_Esd_BitmapInfo *Ft_Esd_BitmapCell_GetInfo(Ft_Esd_BitmapCell *bitmapCell)
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s 			page 5


 112:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  80              		.loc 2 112 0 is_stmt 1
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 8
  83              		@ frame_needed = 1, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85 0000 80B4     		push	{r7}
  86              	.LCFI5:
  87              		.cfi_def_cfa_offset 4
  88              		.cfi_offset 7, -4
  89 0002 83B0     		sub	sp, sp, #12
  90              	.LCFI6:
  91              		.cfi_def_cfa_offset 16
  92 0004 00AF     		add	r7, sp, #0
  93              	.LCFI7:
  94              		.cfi_def_cfa_register 7
  95 0006 7860     		str	r0, [r7, #4]
 113:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	if (!bitmapCell) return 0;
  96              		.loc 2 113 0
  97 0008 7B68     		ldr	r3, [r7, #4]
  98 000a 002B     		cmp	r3, #0
  99 000c 01D1     		bne	.L5
 100              		.loc 2 113 0 is_stmt 0 discriminator 1
 101 000e 0023     		movs	r3, #0
 102 0010 01E0     		b	.L6
 103              	.L5:
 114:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	return bitmapCell->Info;
 104              		.loc 2 114 0 is_stmt 1
 105 0012 7B68     		ldr	r3, [r7, #4]
 106 0014 1B68     		ldr	r3, [r3]
 107              	.L6:
 115:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** }
 108              		.loc 2 115 0
 109 0016 1846     		mov	r0, r3
 110 0018 0C37     		adds	r7, r7, #12
 111              	.LCFI8:
 112              		.cfi_def_cfa_offset 4
 113 001a BD46     		mov	sp, r7
 114              	.LCFI9:
 115              		.cfi_def_cfa_register 13
 116              		@ sp needed
 117 001c 5DF8047B 		ldr	r7, [sp], #4
 118              	.LCFI10:
 119              		.cfi_restore 7
 120              		.cfi_def_cfa_offset 0
 121 0020 7047     		bx	lr
 122              		.cfi_endproc
 123              	.LFE9:
 125              		.section	.text.Ft_Esd_Dl_COLOR_RGB,"ax",%progbits
 126              		.align	1
 127              		.syntax unified
 128              		.thumb
 129              		.thumb_func
 130              		.fpu fpv5-sp-d16
 132              	Ft_Esd_Dl_COLOR_RGB:
 133              	.LFB13:
 134              		.file 3 "FT_Esd_Framework/FT_Esd_Dl.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s 			page 6


   1:FT_Esd_Framework/FT_Esd_Dl.h **** 
   2:FT_Esd_Framework/FT_Esd_Dl.h **** #ifndef FT_ESD_DL_H
   3:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_DL_H
   4:FT_Esd_Framework/FT_Esd_Dl.h **** 
   5:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_DataTypes.h"
   6:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_Platform.h"
   7:FT_Esd_Framework/FT_Esd_Dl.h **** #include "Ft_Esd.h"
   8:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_Gpu.h"
   9:FT_Esd_Framework/FT_Esd_Dl.h **** #include "Ft_Esd_BitmapInfo.h"
  10:FT_Esd_Framework/FT_Esd_Dl.h **** 
  11:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_CATEGORY(EsdUtilities, DisplayName = "ESD Utilities")
  12:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_CATEGORY(EveRenderFunctions, DisplayName = "EVE Render Functions")
  13:FT_Esd_Framework/FT_Esd_Dl.h **** 
  14:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_TYPE(Ft_Gpu_Hal_Context_t *, Native = Pointer, Edit = Library)
  15:FT_Esd_Framework/FT_Esd_Dl.h **** 
  16:FT_Esd_Framework/FT_Esd_Dl.h **** // Keep cache of displaylist values that don't often change but are generally set by every widget t
  17:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_OPTIMIZE_DISPLAYLIST 1
  18:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_STATE_STACK_SIZE 5
  19:FT_Esd_Framework/FT_Esd_Dl.h **** 
  20:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_BITMAPHANDLE_INVALID 255
  21:FT_Esd_Framework/FT_Esd_Dl.h **** 
  22:FT_Esd_Framework/FT_Esd_Dl.h **** //
  23:FT_Esd_Framework/FT_Esd_Dl.h **** // Structs
  24:FT_Esd_Framework/FT_Esd_Dl.h **** //
  25:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_ESD_OPTIMIZE_DISPLAYLIST
  26:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_STATE Ft_Esd_GpuState[Ft_Esd_GpuState_I]
  27:FT_Esd_Framework/FT_Esd_Dl.h **** typedef struct
  28:FT_Esd_Framework/FT_Esd_Dl.h **** {
  29:FT_Esd_Framework/FT_Esd_Dl.h **** 	// Keep to a minimum
  30:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_81X_ENABLE
  31:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint32_t PaletteSource;
  32:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  33:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint32_t ColorRGB;
  34:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t ColorA;
  35:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t Handle;         // Current handle
  36:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t Cell;           // Current cell
  37:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_bool_t BitmapTransform; // BitmapTransform other than default is set
  38:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_81X_ENABLE
  39:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t VertexFormat;   // Current vertex format
  40:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  41:FT_Esd_Framework/FT_Esd_Dl.h **** } Ft_Esd_GpuState_T;
  42:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  43:FT_Esd_Framework/FT_Esd_Dl.h **** 
  44:FT_Esd_Framework/FT_Esd_Dl.h **** //
  45:FT_Esd_Framework/FT_Esd_Dl.h **** // Globals
  46:FT_Esd_Framework/FT_Esd_Dl.h **** //
  47:FT_Esd_Framework/FT_Esd_Dl.h **** extern Ft_Gpu_Hal_Context_t *Ft_Esd_Host;
  48:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint16_t Ft_Esd_FontHeight[32];
  49:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_ESD_OPTIMIZE_DISPLAYLIST
  50:FT_Esd_Framework/FT_Esd_Dl.h **** extern Ft_Esd_GpuState_T Ft_Esd_GpuState[FT_ESD_STATE_STACK_SIZE];
  51:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint8_t Ft_Esd_GpuState_I;
  52:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint32_t Ft_Esd_CoFgColor;
  53:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint32_t Ft_Esd_CoBgColor;
  54:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  55:FT_Esd_Framework/FT_Esd_Dl.h **** 
  56:FT_Esd_Framework/FT_Esd_Dl.h **** //Get the height of builtin font
  57:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_GetFontHeight, Type = ft_uint16_t ,DisplayName = "Get Font Height", Category = 
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s 			page 7


  58:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(i, Type = int, DisplayName = "Bitmap Handle", Default = 0, Min = 0, Max = 31)
  59:FT_Esd_Framework/FT_Esd_Dl.h **** // inline static ft_uint16_t Ft_Esd_GetFontHeight(int i) { return Ft_Esd_FontHeight[i]; }
  60:FT_Esd_Framework/FT_Esd_Dl.h **** #define Ft_Esd_GetFontHeight(i) (Ft_Esd_FontHeight[i]);
  61:FT_Esd_Framework/FT_Esd_Dl.h **** 
  62:FT_Esd_Framework/FT_Esd_Dl.h **** // Reset any cached state
  63:FT_Esd_Framework/FT_Esd_Dl.h **** void Ft_Esd_ResetGpuState();
  64:FT_Esd_Framework/FT_Esd_Dl.h **** void Ft_Esd_ResetCoState();
  65:FT_Esd_Framework/FT_Esd_Dl.h **** 
  66:FT_Esd_Framework/FT_Esd_Dl.h **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotalUsed();
  67:FT_Esd_Framework/FT_Esd_Dl.h **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotal();
  68:FT_Esd_Framework/FT_Esd_Dl.h **** 
  69:FT_Esd_Framework/FT_Esd_Dl.h **** /// Set current tag. Must be returned to 255 after usage, to ensure next widgets don't draw with in
  70:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_TAG, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  71:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(s, Type = ft_uint8_t, DisplayName = "Tag", Default = 255, Min = 0, Max = 255)
  72:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_TAG(ft_uint8_t s)
  73:FT_Esd_Framework/FT_Esd_Dl.h **** {
  74:FT_Esd_Framework/FT_Esd_Dl.h **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, TAG(s));
  75:FT_Esd_Framework/FT_Esd_Dl.h **** }
  76:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify color RGB
  77:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_RGB, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  78:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(c, Type = ft_rgb32_t, DisplayName = "Color")
  79:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_RGB(ft_rgb32_t c)
  80:FT_Esd_Framework/FT_Esd_Dl.h **** {
 135              		.loc 3 80 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 16
 138              		@ frame_needed = 1, uses_anonymous_args = 0
 139 0000 80B5     		push	{r7, lr}
 140              	.LCFI11:
 141              		.cfi_def_cfa_offset 8
 142              		.cfi_offset 7, -8
 143              		.cfi_offset 14, -4
 144 0002 84B0     		sub	sp, sp, #16
 145              	.LCFI12:
 146              		.cfi_def_cfa_offset 24
 147 0004 00AF     		add	r7, sp, #0
 148              	.LCFI13:
 149              		.cfi_def_cfa_register 7
 150 0006 7860     		str	r0, [r7, #4]
  81:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  82:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_rgb32_t rgb = c & 0xFFFFFF;
 151              		.loc 3 82 0
 152 0008 7B68     		ldr	r3, [r7, #4]
 153 000a 23F07F43 		bic	r3, r3, #-16777216
 154 000e FB60     		str	r3, [r7, #12]
  83:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (rgb != FT_ESD_STATE.ColorRGB)
 155              		.loc 3 83 0
 156 0010 0F4B     		ldr	r3, .L10
 157 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 158 0014 0F4A     		ldr	r2, .L10+4
 159 0016 1B01     		lsls	r3, r3, #4
 160 0018 1344     		add	r3, r3, r2
 161 001a 0433     		adds	r3, r3, #4
 162 001c 1B68     		ldr	r3, [r3]
 163 001e FA68     		ldr	r2, [r7, #12]
 164 0020 9A42     		cmp	r2, r3
 165 0022 10D0     		beq	.L9
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s 			page 8


  84:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
  85:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  86:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, (4UL << 24) | (rgb));
 166              		.loc 3 86 0
 167 0024 0C4B     		ldr	r3, .L10+8
 168 0026 1A68     		ldr	r2, [r3]
 169 0028 FB68     		ldr	r3, [r7, #12]
 170 002a 43F08063 		orr	r3, r3, #67108864
 171 002e 1946     		mov	r1, r3
 172 0030 1046     		mov	r0, r2
 173 0032 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  87:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  88:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.ColorRGB = rgb;
 174              		.loc 3 88 0
 175 0036 064B     		ldr	r3, .L10
 176 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 177 003a 064A     		ldr	r2, .L10+4
 178 003c 1B01     		lsls	r3, r3, #4
 179 003e 1344     		add	r3, r3, r2
 180 0040 0433     		adds	r3, r3, #4
 181 0042 FA68     		ldr	r2, [r7, #12]
 182 0044 1A60     		str	r2, [r3]
 183              	.L9:
  89:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
  90:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  91:FT_Esd_Framework/FT_Esd_Dl.h **** }
 184              		.loc 3 91 0
 185 0046 00BF     		nop
 186 0048 1037     		adds	r7, r7, #16
 187              	.LCFI14:
 188              		.cfi_def_cfa_offset 8
 189 004a BD46     		mov	sp, r7
 190              	.LCFI15:
 191              		.cfi_def_cfa_register 13
 192              		@ sp needed
 193 004c 80BD     		pop	{r7, pc}
 194              	.L11:
 195 004e 00BF     		.align	2
 196              	.L10:
 197 0050 00000000 		.word	Ft_Esd_GpuState_I
 198 0054 00000000 		.word	Ft_Esd_GpuState
 199 0058 00000000 		.word	Ft_Esd_Host
 200              		.cfi_endproc
 201              	.LFE13:
 203              		.section	.text.Ft_Esd_Dl_COLOR_A,"ax",%progbits
 204              		.align	1
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 208              		.fpu fpv5-sp-d16
 210              	Ft_Esd_Dl_COLOR_A:
 211              	.LFB14:
  92:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify alpha channel
  93:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_A, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  94:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(alpha, Type = ft_uint8_t, Default = 255, Min = 0, Max = 255)
  95:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_A(ft_uint8_t alpha)
  96:FT_Esd_Framework/FT_Esd_Dl.h **** {
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s 			page 9


 212              		.loc 3 96 0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 8
 215              		@ frame_needed = 1, uses_anonymous_args = 0
 216 0000 80B5     		push	{r7, lr}
 217              	.LCFI16:
 218              		.cfi_def_cfa_offset 8
 219              		.cfi_offset 7, -8
 220              		.cfi_offset 14, -4
 221 0002 82B0     		sub	sp, sp, #8
 222              	.LCFI17:
 223              		.cfi_def_cfa_offset 16
 224 0004 00AF     		add	r7, sp, #0
 225              	.LCFI18:
 226              		.cfi_def_cfa_register 7
 227 0006 0346     		mov	r3, r0
 228 0008 FB71     		strb	r3, [r7, #7]
  97:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  98:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (alpha != FT_ESD_STATE.ColorA)
 229              		.loc 3 98 0
 230 000a 0F4B     		ldr	r3, .L15
 231 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 232 000e 0F4A     		ldr	r2, .L15+4
 233 0010 1B01     		lsls	r3, r3, #4
 234 0012 1344     		add	r3, r3, r2
 235 0014 0833     		adds	r3, r3, #8
 236 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 237 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 238 001a 9A42     		cmp	r2, r3
 239 001c 10D0     		beq	.L14
  99:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
 100:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 101:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, COLOR_A(alpha));
 240              		.loc 3 101 0
 241 001e 0C4B     		ldr	r3, .L15+8
 242 0020 1A68     		ldr	r2, [r3]
 243 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 244 0024 43F08053 		orr	r3, r3, #268435456
 245 0028 1946     		mov	r1, r3
 246 002a 1046     		mov	r0, r2
 247 002c FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 102:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 103:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.ColorA = alpha;
 248              		.loc 3 103 0
 249 0030 054B     		ldr	r3, .L15
 250 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 251 0034 054A     		ldr	r2, .L15+4
 252 0036 1B01     		lsls	r3, r3, #4
 253 0038 1344     		add	r3, r3, r2
 254 003a 0833     		adds	r3, r3, #8
 255 003c FA79     		ldrb	r2, [r7, #7]
 256 003e 1A70     		strb	r2, [r3]
 257              	.L14:
 104:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
 105:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 106:FT_Esd_Framework/FT_Esd_Dl.h **** }
 258              		.loc 3 106 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s 			page 10


 259 0040 00BF     		nop
 260 0042 0837     		adds	r7, r7, #8
 261              	.LCFI19:
 262              		.cfi_def_cfa_offset 8
 263 0044 BD46     		mov	sp, r7
 264              	.LCFI20:
 265              		.cfi_def_cfa_register 13
 266              		@ sp needed
 267 0046 80BD     		pop	{r7, pc}
 268              	.L16:
 269              		.align	2
 270              	.L15:
 271 0048 00000000 		.word	Ft_Esd_GpuState_I
 272 004c 00000000 		.word	Ft_Esd_GpuState
 273 0050 00000000 		.word	Ft_Esd_Host
 274              		.cfi_endproc
 275              	.LFE14:
 277              		.section	.text.Ft_Esd_NumericLabel_Theme__Default,"ax",%progbits
 278              		.align	1
 279              		.global	Ft_Esd_NumericLabel_Theme__Default
 280              		.syntax unified
 281              		.thumb
 282              		.thumb_func
 283              		.fpu fpv5-sp-d16
 285              	Ft_Esd_NumericLabel_Theme__Default:
 286              	.LFB23:
 287              		.file 4 "FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c"
   1:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** /*
   2:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** This file is automatically generated
   3:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** Ft_Esd_NumericLabel
   4:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** C Source
   5:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** */
   6:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** 
   7:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** #include "Ft_Esd_NumericLabel.h"
   8:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** 
   9:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** #include "FT_Esd_CoPro_Cmds.h"
  10:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** #include "FT_Esd_Dl.h"
  11:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** #include "FT_Gpu.h"
  12:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** 
  13:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** extern void Ft_Esd_Noop(void *context);
  14:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** Ft_Esd_Theme * Ft_Esd_NumericLabel_Theme__Default(void *context) { return Ft_Esd_Theme_GetCurrent()
 288              		.loc 4 14 0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 8
 291              		@ frame_needed = 1, uses_anonymous_args = 0
 292 0000 80B5     		push	{r7, lr}
 293              	.LCFI21:
 294              		.cfi_def_cfa_offset 8
 295              		.cfi_offset 7, -8
 296              		.cfi_offset 14, -4
 297 0002 82B0     		sub	sp, sp, #8
 298              	.LCFI22:
 299              		.cfi_def_cfa_offset 16
 300 0004 00AF     		add	r7, sp, #0
 301              	.LCFI23:
 302              		.cfi_def_cfa_register 7
 303 0006 7860     		str	r0, [r7, #4]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s 			page 11


 304              		.loc 4 14 0
 305 0008 FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
 306 000c 0346     		mov	r3, r0
 307 000e 1846     		mov	r0, r3
 308 0010 0837     		adds	r7, r7, #8
 309              	.LCFI24:
 310              		.cfi_def_cfa_offset 8
 311 0012 BD46     		mov	sp, r7
 312              	.LCFI25:
 313              		.cfi_def_cfa_register 13
 314              		@ sp needed
 315 0014 80BD     		pop	{r7, pc}
 316              		.cfi_endproc
 317              	.LFE23:
 319              		.section	.text.Ft_Esd_NumericLabel_X__Default,"ax",%progbits
 320              		.align	1
 321              		.global	Ft_Esd_NumericLabel_X__Default
 322              		.syntax unified
 323              		.thumb
 324              		.thumb_func
 325              		.fpu fpv5-sp-d16
 327              	Ft_Esd_NumericLabel_X__Default:
 328              	.LFB24:
  15:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** ft_int16_t Ft_Esd_NumericLabel_X__Default(void *context) { return 0; }
 329              		.loc 4 15 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 8
 332              		@ frame_needed = 1, uses_anonymous_args = 0
 333              		@ link register save eliminated.
 334 0000 80B4     		push	{r7}
 335              	.LCFI26:
 336              		.cfi_def_cfa_offset 4
 337              		.cfi_offset 7, -4
 338 0002 83B0     		sub	sp, sp, #12
 339              	.LCFI27:
 340              		.cfi_def_cfa_offset 16
 341 0004 00AF     		add	r7, sp, #0
 342              	.LCFI28:
 343              		.cfi_def_cfa_register 7
 344 0006 7860     		str	r0, [r7, #4]
 345              		.loc 4 15 0
 346 0008 0023     		movs	r3, #0
 347 000a 1846     		mov	r0, r3
 348 000c 0C37     		adds	r7, r7, #12
 349              	.LCFI29:
 350              		.cfi_def_cfa_offset 4
 351 000e BD46     		mov	sp, r7
 352              	.LCFI30:
 353              		.cfi_def_cfa_register 13
 354              		@ sp needed
 355 0010 5DF8047B 		ldr	r7, [sp], #4
 356              	.LCFI31:
 357              		.cfi_restore 7
 358              		.cfi_def_cfa_offset 0
 359 0014 7047     		bx	lr
 360              		.cfi_endproc
 361              	.LFE24:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s 			page 12


 363              		.section	.text.Ft_Esd_NumericLabel_Y__Default,"ax",%progbits
 364              		.align	1
 365              		.global	Ft_Esd_NumericLabel_Y__Default
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu fpv5-sp-d16
 371              	Ft_Esd_NumericLabel_Y__Default:
 372              	.LFB25:
  16:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** ft_int16_t Ft_Esd_NumericLabel_Y__Default(void *context) { return 0; }
 373              		.loc 4 16 0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 8
 376              		@ frame_needed = 1, uses_anonymous_args = 0
 377              		@ link register save eliminated.
 378 0000 80B4     		push	{r7}
 379              	.LCFI32:
 380              		.cfi_def_cfa_offset 4
 381              		.cfi_offset 7, -4
 382 0002 83B0     		sub	sp, sp, #12
 383              	.LCFI33:
 384              		.cfi_def_cfa_offset 16
 385 0004 00AF     		add	r7, sp, #0
 386              	.LCFI34:
 387              		.cfi_def_cfa_register 7
 388 0006 7860     		str	r0, [r7, #4]
 389              		.loc 4 16 0
 390 0008 0023     		movs	r3, #0
 391 000a 1846     		mov	r0, r3
 392 000c 0C37     		adds	r7, r7, #12
 393              	.LCFI35:
 394              		.cfi_def_cfa_offset 4
 395 000e BD46     		mov	sp, r7
 396              	.LCFI36:
 397              		.cfi_def_cfa_register 13
 398              		@ sp needed
 399 0010 5DF8047B 		ldr	r7, [sp], #4
 400              	.LCFI37:
 401              		.cfi_restore 7
 402              		.cfi_def_cfa_offset 0
 403 0014 7047     		bx	lr
 404              		.cfi_endproc
 405              	.LFE25:
 407              		.section	.text.Ft_Esd_NumericLabel_Width__Default,"ax",%progbits
 408              		.align	1
 409              		.global	Ft_Esd_NumericLabel_Width__Default
 410              		.syntax unified
 411              		.thumb
 412              		.thumb_func
 413              		.fpu fpv5-sp-d16
 415              	Ft_Esd_NumericLabel_Width__Default:
 416              	.LFB26:
  17:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** ft_int16_t Ft_Esd_NumericLabel_Width__Default(void *context) { return 120; }
 417              		.loc 4 17 0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 8
 420              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s 			page 13


 421              		@ link register save eliminated.
 422 0000 80B4     		push	{r7}
 423              	.LCFI38:
 424              		.cfi_def_cfa_offset 4
 425              		.cfi_offset 7, -4
 426 0002 83B0     		sub	sp, sp, #12
 427              	.LCFI39:
 428              		.cfi_def_cfa_offset 16
 429 0004 00AF     		add	r7, sp, #0
 430              	.LCFI40:
 431              		.cfi_def_cfa_register 7
 432 0006 7860     		str	r0, [r7, #4]
 433              		.loc 4 17 0
 434 0008 7823     		movs	r3, #120
 435 000a 1846     		mov	r0, r3
 436 000c 0C37     		adds	r7, r7, #12
 437              	.LCFI41:
 438              		.cfi_def_cfa_offset 4
 439 000e BD46     		mov	sp, r7
 440              	.LCFI42:
 441              		.cfi_def_cfa_register 13
 442              		@ sp needed
 443 0010 5DF8047B 		ldr	r7, [sp], #4
 444              	.LCFI43:
 445              		.cfi_restore 7
 446              		.cfi_def_cfa_offset 0
 447 0014 7047     		bx	lr
 448              		.cfi_endproc
 449              	.LFE26:
 451              		.section	.text.Ft_Esd_NumericLabel_Height__Default,"ax",%progbits
 452              		.align	1
 453              		.global	Ft_Esd_NumericLabel_Height__Default
 454              		.syntax unified
 455              		.thumb
 456              		.thumb_func
 457              		.fpu fpv5-sp-d16
 459              	Ft_Esd_NumericLabel_Height__Default:
 460              	.LFB27:
  18:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** ft_int16_t Ft_Esd_NumericLabel_Height__Default(void *context) { return 36; }
 461              		.loc 4 18 0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 8
 464              		@ frame_needed = 1, uses_anonymous_args = 0
 465              		@ link register save eliminated.
 466 0000 80B4     		push	{r7}
 467              	.LCFI44:
 468              		.cfi_def_cfa_offset 4
 469              		.cfi_offset 7, -4
 470 0002 83B0     		sub	sp, sp, #12
 471              	.LCFI45:
 472              		.cfi_def_cfa_offset 16
 473 0004 00AF     		add	r7, sp, #0
 474              	.LCFI46:
 475              		.cfi_def_cfa_register 7
 476 0006 7860     		str	r0, [r7, #4]
 477              		.loc 4 18 0
 478 0008 2423     		movs	r3, #36
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s 			page 14


 479 000a 1846     		mov	r0, r3
 480 000c 0C37     		adds	r7, r7, #12
 481              	.LCFI47:
 482              		.cfi_def_cfa_offset 4
 483 000e BD46     		mov	sp, r7
 484              	.LCFI48:
 485              		.cfi_def_cfa_register 13
 486              		@ sp needed
 487 0010 5DF8047B 		ldr	r7, [sp], #4
 488              	.LCFI49:
 489              		.cfi_restore 7
 490              		.cfi_def_cfa_offset 0
 491 0014 7047     		bx	lr
 492              		.cfi_endproc
 493              	.LFE27:
 495              		.section	.text.Ft_Esd_NumericLabel_Font__Default,"ax",%progbits
 496              		.align	1
 497              		.global	Ft_Esd_NumericLabel_Font__Default
 498              		.syntax unified
 499              		.thumb
 500              		.thumb_func
 501              		.fpu fpv5-sp-d16
 503              	Ft_Esd_NumericLabel_Font__Default:
 504              	.LFB28:
  19:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** ft_int16_t Ft_Esd_NumericLabel_Font__Default(void *context) { return 27; }
 505              		.loc 4 19 0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 8
 508              		@ frame_needed = 1, uses_anonymous_args = 0
 509              		@ link register save eliminated.
 510 0000 80B4     		push	{r7}
 511              	.LCFI50:
 512              		.cfi_def_cfa_offset 4
 513              		.cfi_offset 7, -4
 514 0002 83B0     		sub	sp, sp, #12
 515              	.LCFI51:
 516              		.cfi_def_cfa_offset 16
 517 0004 00AF     		add	r7, sp, #0
 518              	.LCFI52:
 519              		.cfi_def_cfa_register 7
 520 0006 7860     		str	r0, [r7, #4]
 521              		.loc 4 19 0
 522 0008 1B23     		movs	r3, #27
 523 000a 1846     		mov	r0, r3
 524 000c 0C37     		adds	r7, r7, #12
 525              	.LCFI53:
 526              		.cfi_def_cfa_offset 4
 527 000e BD46     		mov	sp, r7
 528              	.LCFI54:
 529              		.cfi_def_cfa_register 13
 530              		@ sp needed
 531 0010 5DF8047B 		ldr	r7, [sp], #4
 532              	.LCFI55:
 533              		.cfi_restore 7
 534              		.cfi_def_cfa_offset 0
 535 0014 7047     		bx	lr
 536              		.cfi_endproc
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s 			page 15


 537              	.LFE28:
 539              		.section	.text.Ft_Esd_NumericLabel_Value__Default,"ax",%progbits
 540              		.align	1
 541              		.global	Ft_Esd_NumericLabel_Value__Default
 542              		.syntax unified
 543              		.thumb
 544              		.thumb_func
 545              		.fpu fpv5-sp-d16
 547              	Ft_Esd_NumericLabel_Value__Default:
 548              	.LFB29:
  20:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** ft_int32_t Ft_Esd_NumericLabel_Value__Default(void *context) { return 0L; }
 549              		.loc 4 20 0
 550              		.cfi_startproc
 551              		@ args = 0, pretend = 0, frame = 8
 552              		@ frame_needed = 1, uses_anonymous_args = 0
 553              		@ link register save eliminated.
 554 0000 80B4     		push	{r7}
 555              	.LCFI56:
 556              		.cfi_def_cfa_offset 4
 557              		.cfi_offset 7, -4
 558 0002 83B0     		sub	sp, sp, #12
 559              	.LCFI57:
 560              		.cfi_def_cfa_offset 16
 561 0004 00AF     		add	r7, sp, #0
 562              	.LCFI58:
 563              		.cfi_def_cfa_register 7
 564 0006 7860     		str	r0, [r7, #4]
 565              		.loc 4 20 0
 566 0008 0023     		movs	r3, #0
 567 000a 1846     		mov	r0, r3
 568 000c 0C37     		adds	r7, r7, #12
 569              	.LCFI59:
 570              		.cfi_def_cfa_offset 4
 571 000e BD46     		mov	sp, r7
 572              	.LCFI60:
 573              		.cfi_def_cfa_register 13
 574              		@ sp needed
 575 0010 5DF8047B 		ldr	r7, [sp], #4
 576              	.LCFI61:
 577              		.cfi_restore 7
 578              		.cfi_def_cfa_offset 0
 579 0014 7047     		bx	lr
 580              		.cfi_endproc
 581              	.LFE29:
 583              		.section	.text.Ft_Esd_NumericLabel__Initializer,"ax",%progbits
 584              		.align	1
 585              		.global	Ft_Esd_NumericLabel__Initializer
 586              		.syntax unified
 587              		.thumb
 588              		.thumb_func
 589              		.fpu fpv5-sp-d16
 591              	Ft_Esd_NumericLabel__Initializer:
 592              	.LFB30:
  21:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** 
  22:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** Ft_Esd_Theme * Ft_Esd_Theme_GetCurrent();
  23:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** Ft_Gpu_Hal_Context_t * Ft_Esd_GetHost();
  24:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** 
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s 			page 16


  25:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** 
  26:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** void Ft_Esd_NumericLabel__Initializer(Ft_Esd_NumericLabel *context)
  27:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** {
 593              		.loc 4 27 0
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 8
 596              		@ frame_needed = 1, uses_anonymous_args = 0
 597              		@ link register save eliminated.
 598 0000 80B4     		push	{r7}
 599              	.LCFI62:
 600              		.cfi_def_cfa_offset 4
 601              		.cfi_offset 7, -4
 602 0002 83B0     		sub	sp, sp, #12
 603              	.LCFI63:
 604              		.cfi_def_cfa_offset 16
 605 0004 00AF     		add	r7, sp, #0
 606              	.LCFI64:
 607              		.cfi_def_cfa_register 7
 608 0006 7860     		str	r0, [r7, #4]
  28:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** 	context->Parent = 0;
 609              		.loc 4 28 0
 610 0008 7B68     		ldr	r3, [r7, #4]
 611 000a 0022     		movs	r2, #0
 612 000c 1A60     		str	r2, [r3]
  29:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** 	context->Theme = Ft_Esd_NumericLabel_Theme__Default;
 613              		.loc 4 29 0
 614 000e 7B68     		ldr	r3, [r7, #4]
 615 0010 0C4A     		ldr	r2, .L32
 616 0012 5A60     		str	r2, [r3, #4]
  30:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** 	context->X = Ft_Esd_NumericLabel_X__Default;
 617              		.loc 4 30 0
 618 0014 7B68     		ldr	r3, [r7, #4]
 619 0016 0C4A     		ldr	r2, .L32+4
 620 0018 9A60     		str	r2, [r3, #8]
  31:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** 	context->Y = Ft_Esd_NumericLabel_Y__Default;
 621              		.loc 4 31 0
 622 001a 7B68     		ldr	r3, [r7, #4]
 623 001c 0B4A     		ldr	r2, .L32+8
 624 001e DA60     		str	r2, [r3, #12]
  32:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** 	context->Width = Ft_Esd_NumericLabel_Width__Default;
 625              		.loc 4 32 0
 626 0020 7B68     		ldr	r3, [r7, #4]
 627 0022 0B4A     		ldr	r2, .L32+12
 628 0024 1A61     		str	r2, [r3, #16]
  33:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** 	context->Height = Ft_Esd_NumericLabel_Height__Default;
 629              		.loc 4 33 0
 630 0026 7B68     		ldr	r3, [r7, #4]
 631 0028 0A4A     		ldr	r2, .L32+16
 632 002a 5A61     		str	r2, [r3, #20]
  34:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** 	context->Font = Ft_Esd_NumericLabel_Font__Default;
 633              		.loc 4 34 0
 634 002c 7B68     		ldr	r3, [r7, #4]
 635 002e 0A4A     		ldr	r2, .L32+20
 636 0030 9A61     		str	r2, [r3, #24]
  35:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** 	context->Value = Ft_Esd_NumericLabel_Value__Default;
 637              		.loc 4 35 0
 638 0032 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s 			page 17


 639 0034 094A     		ldr	r2, .L32+24
 640 0036 DA61     		str	r2, [r3, #28]
  36:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** }
 641              		.loc 4 36 0
 642 0038 00BF     		nop
 643 003a 0C37     		adds	r7, r7, #12
 644              	.LCFI65:
 645              		.cfi_def_cfa_offset 4
 646 003c BD46     		mov	sp, r7
 647              	.LCFI66:
 648              		.cfi_def_cfa_register 13
 649              		@ sp needed
 650 003e 5DF8047B 		ldr	r7, [sp], #4
 651              	.LCFI67:
 652              		.cfi_restore 7
 653              		.cfi_def_cfa_offset 0
 654 0042 7047     		bx	lr
 655              	.L33:
 656              		.align	2
 657              	.L32:
 658 0044 00000000 		.word	Ft_Esd_NumericLabel_Theme__Default
 659 0048 00000000 		.word	Ft_Esd_NumericLabel_X__Default
 660 004c 00000000 		.word	Ft_Esd_NumericLabel_Y__Default
 661 0050 00000000 		.word	Ft_Esd_NumericLabel_Width__Default
 662 0054 00000000 		.word	Ft_Esd_NumericLabel_Height__Default
 663 0058 00000000 		.word	Ft_Esd_NumericLabel_Font__Default
 664 005c 00000000 		.word	Ft_Esd_NumericLabel_Value__Default
 665              		.cfi_endproc
 666              	.LFE30:
 668              		.section	.text.Ft_Esd_NumericLabel_Render,"ax",%progbits
 669              		.align	1
 670              		.global	Ft_Esd_NumericLabel_Render
 671              		.syntax unified
 672              		.thumb
 673              		.thumb_func
 674              		.fpu fpv5-sp-d16
 676              	Ft_Esd_NumericLabel_Render:
 677              	.LFB31:
  37:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** 
  38:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** ft_void_t Ft_Gpu_CoCmd_Number(Ft_Gpu_Hal_Context_t *, ft_int16_t, ft_int16_t, ft_int16_t, ft_uint16
  39:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** 
  40:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** void Ft_Esd_NumericLabel_Render(Ft_Esd_NumericLabel *context)
  41:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** {
 678              		.loc 4 41 0
 679              		.cfi_startproc
 680              		@ args = 0, pretend = 0, frame = 40
 681              		@ frame_needed = 1, uses_anonymous_args = 0
 682 0000 80B5     		push	{r7, lr}
 683              	.LCFI68:
 684              		.cfi_def_cfa_offset 8
 685              		.cfi_offset 7, -8
 686              		.cfi_offset 14, -4
 687 0002 8CB0     		sub	sp, sp, #48
 688              	.LCFI69:
 689              		.cfi_def_cfa_offset 56
 690 0004 02AF     		add	r7, sp, #8
 691              	.LCFI70:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s 			page 18


 692              		.cfi_def_cfa 7, 48
 693 0006 7860     		str	r0, [r7, #4]
  42:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** 	void *parent = context->Parent;
 694              		.loc 4 42 0
 695 0008 7B68     		ldr	r3, [r7, #4]
 696 000a 1B68     		ldr	r3, [r3]
 697 000c 7B62     		str	r3, [r7, #36]
  43:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** 	ft_uint8_t alpha = 255;
 698              		.loc 4 43 0
 699 000e FF23     		movs	r3, #255
 700 0010 87F82330 		strb	r3, [r7, #35]
  44:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** 	Ft_Esd_Dl_COLOR_A(alpha);
 701              		.loc 4 44 0
 702 0014 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 703 0018 1846     		mov	r0, r3
 704 001a FFF7FEFF 		bl	Ft_Esd_Dl_COLOR_A
  45:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** 	Ft_Esd_Theme * theme = context->Theme(parent);
 705              		.loc 4 45 0
 706 001e 7B68     		ldr	r3, [r7, #4]
 707 0020 5B68     		ldr	r3, [r3, #4]
 708 0022 786A     		ldr	r0, [r7, #36]
 709 0024 9847     		blx	r3
 710              	.LVL0:
 711 0026 F861     		str	r0, [r7, #28]
  46:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** 	ft_rgb32_t c = Ft_Esd_Theme_GetTextColor(theme);
 712              		.loc 4 46 0
 713 0028 F869     		ldr	r0, [r7, #28]
 714 002a FFF7FEFF 		bl	Ft_Esd_Theme_GetTextColor
 715 002e B861     		str	r0, [r7, #24]
  47:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** 	Ft_Esd_Dl_COLOR_RGB(c);
 716              		.loc 4 47 0
 717 0030 B869     		ldr	r0, [r7, #24]
 718 0032 FFF7FEFF 		bl	Ft_Esd_Dl_COLOR_RGB
  48:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** 	Ft_Gpu_Hal_Context_t * phost = Ft_Esd_GetHost();
 719              		.loc 4 48 0
 720 0036 FFF7FEFF 		bl	Ft_Esd_GetHost
 721 003a 7861     		str	r0, [r7, #20]
  49:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** 	ft_int16_t x = context->X(parent);
 722              		.loc 4 49 0
 723 003c 7B68     		ldr	r3, [r7, #4]
 724 003e 9B68     		ldr	r3, [r3, #8]
 725 0040 786A     		ldr	r0, [r7, #36]
 726 0042 9847     		blx	r3
 727              	.LVL1:
 728 0044 0346     		mov	r3, r0
 729 0046 7B82     		strh	r3, [r7, #18]	@ movhi
  50:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** 	ft_int16_t y = context->Y(parent);
 730              		.loc 4 50 0
 731 0048 7B68     		ldr	r3, [r7, #4]
 732 004a DB68     		ldr	r3, [r3, #12]
 733 004c 786A     		ldr	r0, [r7, #36]
 734 004e 9847     		blx	r3
 735              	.LVL2:
 736 0050 0346     		mov	r3, r0
 737 0052 3B82     		strh	r3, [r7, #16]	@ movhi
  51:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** 	ft_int16_t font = context->Font(parent);
 738              		.loc 4 51 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s 			page 19


 739 0054 7B68     		ldr	r3, [r7, #4]
 740 0056 9B69     		ldr	r3, [r3, #24]
 741 0058 786A     		ldr	r0, [r7, #36]
 742 005a 9847     		blx	r3
 743              	.LVL3:
 744 005c 0346     		mov	r3, r0
 745 005e FB81     		strh	r3, [r7, #14]	@ movhi
  52:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** 	ft_uint16_t options = 0;
 746              		.loc 4 52 0
 747 0060 0023     		movs	r3, #0
 748 0062 BB81     		strh	r3, [r7, #12]	@ movhi
  53:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** 	ft_int32_t n = context->Value(parent);
 749              		.loc 4 53 0
 750 0064 7B68     		ldr	r3, [r7, #4]
 751 0066 DB69     		ldr	r3, [r3, #28]
 752 0068 786A     		ldr	r0, [r7, #36]
 753 006a 9847     		blx	r3
 754              	.LVL4:
 755 006c B860     		str	r0, [r7, #8]
  54:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** 	Ft_Gpu_CoCmd_Number(phost, x, y, font, options, n);
 756              		.loc 4 54 0
 757 006e B7F90E00 		ldrsh	r0, [r7, #14]
 758 0072 B7F91020 		ldrsh	r2, [r7, #16]
 759 0076 B7F91210 		ldrsh	r1, [r7, #18]
 760 007a BB68     		ldr	r3, [r7, #8]
 761 007c 0193     		str	r3, [sp, #4]
 762 007e BB89     		ldrh	r3, [r7, #12]
 763 0080 0093     		str	r3, [sp]
 764 0082 0346     		mov	r3, r0
 765 0084 7869     		ldr	r0, [r7, #20]
 766 0086 FFF7FEFF 		bl	Ft_Gpu_CoCmd_Number
  55:FT_Esd_Widgets/Ft_Esd_NumericLabel__Generated.c **** }
 767              		.loc 4 55 0
 768 008a 00BF     		nop
 769 008c 2837     		adds	r7, r7, #40
 770              	.LCFI71:
 771              		.cfi_def_cfa_offset 8
 772 008e BD46     		mov	sp, r7
 773              	.LCFI72:
 774              		.cfi_def_cfa_register 13
 775              		@ sp needed
 776 0090 80BD     		pop	{r7, pc}
 777              		.cfi_endproc
 778              	.LFE31:
 780              		.text
 781              	.Letext0:
 782              		.file 5 "FT_Eve_Hal/FT_DataTypes.h"
 783              		.file 6 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/lock.h"
 784              		.file 7 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_types.h"
 785              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 786              		.file 9 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/unistd.h"
 787              		.file 10 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/reent.h"
 788              		.file 11 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/stdlib.h"
 789              		.file 12 "FT_Eve_Hal/FT_Gpu_Hal.h"
 790              		.file 13 "FT_Esd_Framework/Ft_Esd.h"
 791              		.file 14 "FT_Esd_Widgets/Ft_Esd_DefaultTheme.h"
 792              		.file 15 "FT_Esd_Widgets/Ft_Esd_NumericLabel.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s 			page 20


 793              		.file 16 "FT_Esd_Framework/FT_Esd_CoPro_Cmds.h"
 794              		.file 17 "FT_Esd_Framework/Ft_Esd_GpuAlloc.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Ft_Esd_NumericLabel__Generated.c
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s:18     .text.Ft_Esd_Theme_GetTextColor:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s:24     .text.Ft_Esd_Theme_GetTextColor:0000000000000000 Ft_Esd_Theme_GetTextColor
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s:71     .text.Ft_Esd_BitmapCell_GetInfo:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s:77     .text.Ft_Esd_BitmapCell_GetInfo:0000000000000000 Ft_Esd_BitmapCell_GetInfo
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s:126    .text.Ft_Esd_Dl_COLOR_RGB:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s:132    .text.Ft_Esd_Dl_COLOR_RGB:0000000000000000 Ft_Esd_Dl_COLOR_RGB
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s:197    .text.Ft_Esd_Dl_COLOR_RGB:0000000000000050 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s:204    .text.Ft_Esd_Dl_COLOR_A:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s:210    .text.Ft_Esd_Dl_COLOR_A:0000000000000000 Ft_Esd_Dl_COLOR_A
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s:271    .text.Ft_Esd_Dl_COLOR_A:0000000000000048 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s:278    .text.Ft_Esd_NumericLabel_Theme__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s:285    .text.Ft_Esd_NumericLabel_Theme__Default:0000000000000000 Ft_Esd_NumericLabel_Theme__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s:320    .text.Ft_Esd_NumericLabel_X__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s:327    .text.Ft_Esd_NumericLabel_X__Default:0000000000000000 Ft_Esd_NumericLabel_X__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s:364    .text.Ft_Esd_NumericLabel_Y__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s:371    .text.Ft_Esd_NumericLabel_Y__Default:0000000000000000 Ft_Esd_NumericLabel_Y__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s:408    .text.Ft_Esd_NumericLabel_Width__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s:415    .text.Ft_Esd_NumericLabel_Width__Default:0000000000000000 Ft_Esd_NumericLabel_Width__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s:452    .text.Ft_Esd_NumericLabel_Height__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s:459    .text.Ft_Esd_NumericLabel_Height__Default:0000000000000000 Ft_Esd_NumericLabel_Height__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s:496    .text.Ft_Esd_NumericLabel_Font__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s:503    .text.Ft_Esd_NumericLabel_Font__Default:0000000000000000 Ft_Esd_NumericLabel_Font__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s:540    .text.Ft_Esd_NumericLabel_Value__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s:547    .text.Ft_Esd_NumericLabel_Value__Default:0000000000000000 Ft_Esd_NumericLabel_Value__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s:584    .text.Ft_Esd_NumericLabel__Initializer:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s:591    .text.Ft_Esd_NumericLabel__Initializer:0000000000000000 Ft_Esd_NumericLabel__Initializer
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s:658    .text.Ft_Esd_NumericLabel__Initializer:0000000000000044 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s:669    .text.Ft_Esd_NumericLabel_Render:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKaCly8.s:676    .text.Ft_Esd_NumericLabel_Render:0000000000000000 Ft_Esd_NumericLabel_Render

UNDEFINED SYMBOLS
Ft_Esd_Theme_GetCurrent
Ft_Gpu_Hal_WrCmd32
Ft_Esd_GpuState_I
Ft_Esd_GpuState
Ft_Esd_Host
Ft_Esd_GetHost
Ft_Gpu_CoCmd_Number
