ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"Ft_Esd_ColorPicker__Generated.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Ft_Esd_BitmapCell_GetInfo,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	Ft_Esd_BitmapCell_GetInfo:
  25              	.LFB3:
  26              		.file 1 "FT_Esd_Framework/Ft_Esd_BitmapInfo.h"
   1:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** /*
   2:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** Bitmap info structure
   3:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** */
   4:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
   5:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #ifndef FT_ESD_BITMAPINFO_H
   6:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #define FT_ESD_BITMAPINFO_H
   7:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
   8:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "Ft_Esd.h"
   9:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "FT_DataTypes.h"
  10:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "Ft_Esd_GpuAlloc.h"
  11:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  12:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapInfo, Native = Struct) // TODO: Struct support, expose values
  13:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  14:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  15:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Width;
  16:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Height;
  17:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Stride;
  18:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Format;
  19:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Size;
  20:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	const char *File;
  21:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  22:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Handle pointing to the address in RAM_G if it is allocated
  23:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_GpuHandle GpuHandle;
  24:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  25:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Bitmap handle that is being used
  26:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_uint32_t BitmapHandle;
  27:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  28:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	const char *PaletteFile;
  29:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_GpuHandle PaletteGpuHandle;
  30:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  31:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// When this is set, the allocated ram is not free'd automatically
  32:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Use Ft_Esd_GpuAlloc_Free(GpuAlloc, GpuHandle) to free the GPU ram manually
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s 			page 2


  33:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_bool_t Persistent;
  34:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  35:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_BitmapInfo;
  36:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  37:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapInfo *, Native = Pointer, Edit = Library)
  38:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  39:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapCell, Native = Struct) // TODO: Struct support, expose values
  40:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  41:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  42:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapInfo *Info;
  43:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Cell;
  44:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_BitmapCell;
  45:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  46:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapCell *, Native = Pointer, Edit = Library)
  47:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  48:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // Attempts to load the specified bitmap if it has not been loaded into RAM_G yet.
  49:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // Call during the Update cycle of each frame to keep the bitmap flagged as in use, otherwise the m
  50:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_LoadBitmap, Type = ft_uint32_t, Include = "Ft_Esd_BitmapInfo.h", DisplayName = 
  51:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapInfo, Type = Ft_Esd_BitmapInfo *)
  52:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ft_uint32_t Ft_Esd_LoadBitmap(Ft_Esd_BitmapInfo *bitmapInfo);
  53:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  54:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_LoadPalette, Type = ft_uint32_t, Include = "Ft_Esd_BitmapInfo.h", DisplayName =
  55:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapInfo, Type = Ft_Esd_BitmapInfo *)
  56:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ft_uint32_t Ft_Esd_LoadPalette(Ft_Esd_BitmapInfo *bitmapInfo);
  57:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  58:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_ENUM(_BitmapResourceFormat, DisplayName = "Bitmap Format")
  59:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB1555)
  60:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L1)
  61:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L2)
  62:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L4)
  63:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L8)
  64:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(RGB332)
  65:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB2)
  66:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB4)
  67:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(RGB565)
  68:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(PALETTED565)
  69:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(PALETTED4444)
  70:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(PALETTED8)
  71:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(JPEG)
  72:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(PNG)
  73:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_END()
  74:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  75:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_LOGIC(Ft_Esd_SwitchBitmapCell, Callback, Include = "Ft_Esd_BitmapInfo.h", DisplayName = "Switch
  76:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  77:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  78:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Callback
  79:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	void *Parent;
  80:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  81:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  82:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Input
  83:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  84:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  85:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ESD_INPUT(BitmapInfo, Type = Ft_Esd_BitmapInfo *, DisplayName = "Bitmap Info")
  86:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapInfo *(* BitmapInfo)(void *context);
  87:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  88:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ESD_INPUT(Cell, Type = ft_uint8_t, DisplayName = "Cell")
  89:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_uint8_t(* Cell)(void *context);
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s 			page 3


  90:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  91:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  92:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Variables
  93:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  94:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  95:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// BitmapCell object
  96:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapCell BitmapCell;
  97:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  98:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_SwitchBitmapCell;
  99:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 100:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** void Ft_Esd_SwitchBitmapCell__Initializer(Ft_Esd_SwitchBitmapCell *context);
 101:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 102:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_OUTPUT(BitmapCell, Type = Ft_Esd_BitmapCell *, DisplayName = "Bitmap Cell")
 103:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** Ft_Esd_BitmapCell *Ft_Esd_SwitchBitmapCell_BitmapCell(Ft_Esd_SwitchBitmapCell *context);
 104:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 105:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_UPDATE(Ft_Esd_BitmapPersist, DisplayName = "Bitmap Persist", Category = EsdUtilities)
 106:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapCell, Type = Ft_Esd_BitmapCell *)
 107:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** void Ft_Esd_BitmapPersist(Ft_Esd_BitmapCell *bitmapCell);
 108:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 109:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_BitmapCell_GetInfo, Type = Ft_Esd_BitmapInfo *, DisplayName = "ESD BitmapCell G
 110:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapCell, Type = Ft_Esd_BitmapCell *)
 111:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** static Ft_Esd_BitmapInfo *Ft_Esd_BitmapCell_GetInfo(Ft_Esd_BitmapCell *bitmapCell)
 112:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  27              		.loc 1 112 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 113:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	if (!bitmapCell) return 0;
  43              		.loc 1 113 0
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 002B     		cmp	r3, #0
  46 000c 01D1     		bne	.L2
  47              		.loc 1 113 0 is_stmt 0 discriminator 1
  48 000e 0023     		movs	r3, #0
  49 0010 01E0     		b	.L3
  50              	.L2:
 114:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	return bitmapCell->Info;
  51              		.loc 1 114 0 is_stmt 1
  52 0012 7B68     		ldr	r3, [r7, #4]
  53 0014 1B68     		ldr	r3, [r3]
  54              	.L3:
 115:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** }
  55              		.loc 1 115 0
  56 0016 1846     		mov	r0, r3
  57 0018 0C37     		adds	r7, r7, #12
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s 			page 4


  58              	.LCFI3:
  59              		.cfi_def_cfa_offset 4
  60 001a BD46     		mov	sp, r7
  61              	.LCFI4:
  62              		.cfi_def_cfa_register 13
  63              		@ sp needed
  64 001c 5DF8047B 		ldr	r7, [sp], #4
  65              	.LCFI5:
  66              		.cfi_restore 7
  67              		.cfi_def_cfa_offset 0
  68 0020 7047     		bx	lr
  69              		.cfi_endproc
  70              	.LFE3:
  72              		.section	.text.Ft_Esd_Dl_TAG,"ax",%progbits
  73              		.align	1
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  77              		.fpu fpv5-sp-d16
  79              	Ft_Esd_Dl_TAG:
  80              	.LFB6:
  81              		.file 2 "FT_Esd_Framework/FT_Esd_Dl.h"
   1:FT_Esd_Framework/FT_Esd_Dl.h **** 
   2:FT_Esd_Framework/FT_Esd_Dl.h **** #ifndef FT_ESD_DL_H
   3:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_DL_H
   4:FT_Esd_Framework/FT_Esd_Dl.h **** 
   5:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_DataTypes.h"
   6:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_Platform.h"
   7:FT_Esd_Framework/FT_Esd_Dl.h **** #include "Ft_Esd.h"
   8:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_Gpu.h"
   9:FT_Esd_Framework/FT_Esd_Dl.h **** #include "Ft_Esd_BitmapInfo.h"
  10:FT_Esd_Framework/FT_Esd_Dl.h **** 
  11:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_CATEGORY(EsdUtilities, DisplayName = "ESD Utilities")
  12:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_CATEGORY(EveRenderFunctions, DisplayName = "EVE Render Functions")
  13:FT_Esd_Framework/FT_Esd_Dl.h **** 
  14:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_TYPE(Ft_Gpu_Hal_Context_t *, Native = Pointer, Edit = Library)
  15:FT_Esd_Framework/FT_Esd_Dl.h **** 
  16:FT_Esd_Framework/FT_Esd_Dl.h **** // Keep cache of displaylist values that don't often change but are generally set by every widget t
  17:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_OPTIMIZE_DISPLAYLIST 1
  18:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_STATE_STACK_SIZE 5
  19:FT_Esd_Framework/FT_Esd_Dl.h **** 
  20:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_BITMAPHANDLE_INVALID 255
  21:FT_Esd_Framework/FT_Esd_Dl.h **** 
  22:FT_Esd_Framework/FT_Esd_Dl.h **** //
  23:FT_Esd_Framework/FT_Esd_Dl.h **** // Structs
  24:FT_Esd_Framework/FT_Esd_Dl.h **** //
  25:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_ESD_OPTIMIZE_DISPLAYLIST
  26:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_STATE Ft_Esd_GpuState[Ft_Esd_GpuState_I]
  27:FT_Esd_Framework/FT_Esd_Dl.h **** typedef struct
  28:FT_Esd_Framework/FT_Esd_Dl.h **** {
  29:FT_Esd_Framework/FT_Esd_Dl.h **** 	// Keep to a minimum
  30:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_81X_ENABLE
  31:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint32_t PaletteSource;
  32:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  33:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint32_t ColorRGB;
  34:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t ColorA;
  35:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t Handle;         // Current handle
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s 			page 5


  36:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t Cell;           // Current cell
  37:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_bool_t BitmapTransform; // BitmapTransform other than default is set
  38:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_81X_ENABLE
  39:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t VertexFormat;   // Current vertex format
  40:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  41:FT_Esd_Framework/FT_Esd_Dl.h **** } Ft_Esd_GpuState_T;
  42:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  43:FT_Esd_Framework/FT_Esd_Dl.h **** 
  44:FT_Esd_Framework/FT_Esd_Dl.h **** //
  45:FT_Esd_Framework/FT_Esd_Dl.h **** // Globals
  46:FT_Esd_Framework/FT_Esd_Dl.h **** //
  47:FT_Esd_Framework/FT_Esd_Dl.h **** extern Ft_Gpu_Hal_Context_t *Ft_Esd_Host;
  48:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint16_t Ft_Esd_FontHeight[32];
  49:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_ESD_OPTIMIZE_DISPLAYLIST
  50:FT_Esd_Framework/FT_Esd_Dl.h **** extern Ft_Esd_GpuState_T Ft_Esd_GpuState[FT_ESD_STATE_STACK_SIZE];
  51:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint8_t Ft_Esd_GpuState_I;
  52:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint32_t Ft_Esd_CoFgColor;
  53:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint32_t Ft_Esd_CoBgColor;
  54:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  55:FT_Esd_Framework/FT_Esd_Dl.h **** 
  56:FT_Esd_Framework/FT_Esd_Dl.h **** //Get the height of builtin font
  57:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_GetFontHeight, Type = ft_uint16_t ,DisplayName = "Get Font Height", Category = 
  58:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(i, Type = int, DisplayName = "Bitmap Handle", Default = 0, Min = 0, Max = 31)
  59:FT_Esd_Framework/FT_Esd_Dl.h **** // inline static ft_uint16_t Ft_Esd_GetFontHeight(int i) { return Ft_Esd_FontHeight[i]; }
  60:FT_Esd_Framework/FT_Esd_Dl.h **** #define Ft_Esd_GetFontHeight(i) (Ft_Esd_FontHeight[i]);
  61:FT_Esd_Framework/FT_Esd_Dl.h **** 
  62:FT_Esd_Framework/FT_Esd_Dl.h **** // Reset any cached state
  63:FT_Esd_Framework/FT_Esd_Dl.h **** void Ft_Esd_ResetGpuState();
  64:FT_Esd_Framework/FT_Esd_Dl.h **** void Ft_Esd_ResetCoState();
  65:FT_Esd_Framework/FT_Esd_Dl.h **** 
  66:FT_Esd_Framework/FT_Esd_Dl.h **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotalUsed();
  67:FT_Esd_Framework/FT_Esd_Dl.h **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotal();
  68:FT_Esd_Framework/FT_Esd_Dl.h **** 
  69:FT_Esd_Framework/FT_Esd_Dl.h **** /// Set current tag. Must be returned to 255 after usage, to ensure next widgets don't draw with in
  70:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_TAG, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  71:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(s, Type = ft_uint8_t, DisplayName = "Tag", Default = 255, Min = 0, Max = 255)
  72:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_TAG(ft_uint8_t s)
  73:FT_Esd_Framework/FT_Esd_Dl.h **** {
  82              		.loc 2 73 0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 8
  85              		@ frame_needed = 1, uses_anonymous_args = 0
  86 0000 80B5     		push	{r7, lr}
  87              	.LCFI6:
  88              		.cfi_def_cfa_offset 8
  89              		.cfi_offset 7, -8
  90              		.cfi_offset 14, -4
  91 0002 82B0     		sub	sp, sp, #8
  92              	.LCFI7:
  93              		.cfi_def_cfa_offset 16
  94 0004 00AF     		add	r7, sp, #0
  95              	.LCFI8:
  96              		.cfi_def_cfa_register 7
  97 0006 0346     		mov	r3, r0
  98 0008 FB71     		strb	r3, [r7, #7]
  74:FT_Esd_Framework/FT_Esd_Dl.h **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, TAG(s));
  99              		.loc 2 74 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s 			page 6


 100 000a 064B     		ldr	r3, .L5
 101 000c 1A68     		ldr	r2, [r3]
 102 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 103 0010 43F04073 		orr	r3, r3, #50331648
 104 0014 1946     		mov	r1, r3
 105 0016 1046     		mov	r0, r2
 106 0018 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  75:FT_Esd_Framework/FT_Esd_Dl.h **** }
 107              		.loc 2 75 0
 108 001c 00BF     		nop
 109 001e 0837     		adds	r7, r7, #8
 110              	.LCFI9:
 111              		.cfi_def_cfa_offset 8
 112 0020 BD46     		mov	sp, r7
 113              	.LCFI10:
 114              		.cfi_def_cfa_register 13
 115              		@ sp needed
 116 0022 80BD     		pop	{r7, pc}
 117              	.L6:
 118              		.align	2
 119              	.L5:
 120 0024 00000000 		.word	Ft_Esd_Host
 121              		.cfi_endproc
 122              	.LFE6:
 124              		.section	.text.Ft_Esd_ColorPicker_X__Default,"ax",%progbits
 125              		.align	1
 126              		.global	Ft_Esd_ColorPicker_X__Default
 127              		.syntax unified
 128              		.thumb
 129              		.thumb_func
 130              		.fpu fpv5-sp-d16
 132              	Ft_Esd_ColorPicker_X__Default:
 133              	.LFB26:
 134              		.file 3 "FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c"
   1:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** /*
   2:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** This file is automatically generated
   3:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** Ft_Esd_ColorPicker
   4:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** C Source
   5:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** */
   6:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 
   7:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** #include "Ft_Esd_ColorPicker.h"
   8:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 
   9:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** #include "FT_Esd_Dl.h"
  10:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** #include "FT_Esd_Primitives.h"
  11:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 
  12:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** extern void Ft_Esd_Noop(void *context);
  13:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** int Ft_Esd_ColorPicker_X__Default(void *context) { return 0L; }
 135              		.loc 3 13 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 8
 138              		@ frame_needed = 1, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 140 0000 80B4     		push	{r7}
 141              	.LCFI11:
 142              		.cfi_def_cfa_offset 4
 143              		.cfi_offset 7, -4
 144 0002 83B0     		sub	sp, sp, #12
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s 			page 7


 145              	.LCFI12:
 146              		.cfi_def_cfa_offset 16
 147 0004 00AF     		add	r7, sp, #0
 148              	.LCFI13:
 149              		.cfi_def_cfa_register 7
 150 0006 7860     		str	r0, [r7, #4]
 151              		.loc 3 13 0
 152 0008 0023     		movs	r3, #0
 153 000a 1846     		mov	r0, r3
 154 000c 0C37     		adds	r7, r7, #12
 155              	.LCFI14:
 156              		.cfi_def_cfa_offset 4
 157 000e BD46     		mov	sp, r7
 158              	.LCFI15:
 159              		.cfi_def_cfa_register 13
 160              		@ sp needed
 161 0010 5DF8047B 		ldr	r7, [sp], #4
 162              	.LCFI16:
 163              		.cfi_restore 7
 164              		.cfi_def_cfa_offset 0
 165 0014 7047     		bx	lr
 166              		.cfi_endproc
 167              	.LFE26:
 169              		.section	.text.Ft_Esd_ColorPicker_Y__Default,"ax",%progbits
 170              		.align	1
 171              		.global	Ft_Esd_ColorPicker_Y__Default
 172              		.syntax unified
 173              		.thumb
 174              		.thumb_func
 175              		.fpu fpv5-sp-d16
 177              	Ft_Esd_ColorPicker_Y__Default:
 178              	.LFB27:
  14:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** int Ft_Esd_ColorPicker_Y__Default(void *context) { return 0L; }
 179              		.loc 3 14 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 8
 182              		@ frame_needed = 1, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 184 0000 80B4     		push	{r7}
 185              	.LCFI17:
 186              		.cfi_def_cfa_offset 4
 187              		.cfi_offset 7, -4
 188 0002 83B0     		sub	sp, sp, #12
 189              	.LCFI18:
 190              		.cfi_def_cfa_offset 16
 191 0004 00AF     		add	r7, sp, #0
 192              	.LCFI19:
 193              		.cfi_def_cfa_register 7
 194 0006 7860     		str	r0, [r7, #4]
 195              		.loc 3 14 0
 196 0008 0023     		movs	r3, #0
 197 000a 1846     		mov	r0, r3
 198 000c 0C37     		adds	r7, r7, #12
 199              	.LCFI20:
 200              		.cfi_def_cfa_offset 4
 201 000e BD46     		mov	sp, r7
 202              	.LCFI21:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s 			page 8


 203              		.cfi_def_cfa_register 13
 204              		@ sp needed
 205 0010 5DF8047B 		ldr	r7, [sp], #4
 206              	.LCFI22:
 207              		.cfi_restore 7
 208              		.cfi_def_cfa_offset 0
 209 0014 7047     		bx	lr
 210              		.cfi_endproc
 211              	.LFE27:
 213              		.section	.text.Ft_Esd_ColorPicker__Initializer,"ax",%progbits
 214              		.align	1
 215              		.global	Ft_Esd_ColorPicker__Initializer
 216              		.syntax unified
 217              		.thumb
 218              		.thumb_func
 219              		.fpu fpv5-sp-d16
 221              	Ft_Esd_ColorPicker__Initializer:
 222              	.LFB28:
  15:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 
  16:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 
  17:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 
  18:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** void Ft_Esd_ColorPicker__Initializer(Ft_Esd_ColorPicker *context)
  19:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** {
 223              		.loc 3 19 0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 8
 226              		@ frame_needed = 1, uses_anonymous_args = 0
 227 0000 80B5     		push	{r7, lr}
 228              	.LCFI23:
 229              		.cfi_def_cfa_offset 8
 230              		.cfi_offset 7, -8
 231              		.cfi_offset 14, -4
 232 0002 82B0     		sub	sp, sp, #8
 233              	.LCFI24:
 234              		.cfi_def_cfa_offset 16
 235 0004 00AF     		add	r7, sp, #0
 236              	.LCFI25:
 237              		.cfi_def_cfa_register 7
 238 0006 7860     		str	r0, [r7, #4]
  20:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	context->Parent = 0;
 239              		.loc 3 20 0
 240 0008 7B68     		ldr	r3, [r7, #4]
 241 000a 0022     		movs	r2, #0
 242 000c 1A60     		str	r2, [r3]
  21:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	context->Bitmap = 0;
 243              		.loc 3 21 0
 244 000e 7B68     		ldr	r3, [r7, #4]
 245 0010 0022     		movs	r2, #0
 246 0012 5A60     		str	r2, [r3, #4]
  22:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	context->Radius = 125L;
 247              		.loc 3 22 0
 248 0014 7B68     		ldr	r3, [r7, #4]
 249 0016 7D22     		movs	r2, #125
 250 0018 9A60     		str	r2, [r3, #8]
  23:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	context->X = Ft_Esd_ColorPicker_X__Default;
 251              		.loc 3 23 0
 252 001a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s 			page 9


 253 001c 0A4A     		ldr	r2, .L12
 254 001e DA60     		str	r2, [r3, #12]
  24:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	context->Y = Ft_Esd_ColorPicker_Y__Default;
 255              		.loc 3 24 0
 256 0020 7B68     		ldr	r3, [r7, #4]
 257 0022 0A4A     		ldr	r2, .L12+4
 258 0024 1A61     		str	r2, [r3, #16]
  25:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	Ft_Esd_TouchTag__Initializer(&context->Touch_Tag);
 259              		.loc 3 25 0
 260 0026 7B68     		ldr	r3, [r7, #4]
 261 0028 1433     		adds	r3, r3, #20
 262 002a 1846     		mov	r0, r3
 263 002c FFF7FEFF 		bl	Ft_Esd_TouchTag__Initializer
  26:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	context->Touch_Tag.Parent = context;
 264              		.loc 3 26 0
 265 0030 7B68     		ldr	r3, [r7, #4]
 266 0032 7A68     		ldr	r2, [r7, #4]
 267 0034 5A61     		str	r2, [r3, #20]
  27:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	context->Color = 0xffffffffUL;
 268              		.loc 3 27 0
 269 0036 7B68     		ldr	r3, [r7, #4]
 270 0038 4FF0FF32 		mov	r2, #-1
 271 003c DA62     		str	r2, [r3, #44]
  28:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** }
 272              		.loc 3 28 0
 273 003e 00BF     		nop
 274 0040 0837     		adds	r7, r7, #8
 275              	.LCFI26:
 276              		.cfi_def_cfa_offset 8
 277 0042 BD46     		mov	sp, r7
 278              	.LCFI27:
 279              		.cfi_def_cfa_register 13
 280              		@ sp needed
 281 0044 80BD     		pop	{r7, pc}
 282              	.L13:
 283 0046 00BF     		.align	2
 284              	.L12:
 285 0048 00000000 		.word	Ft_Esd_ColorPicker_X__Default
 286 004c 00000000 		.word	Ft_Esd_ColorPicker_Y__Default
 287              		.cfi_endproc
 288              	.LFE28:
 290              		.section	.text.Ft_Esd_ColorPicker_Render,"ax",%progbits
 291              		.align	1
 292              		.global	Ft_Esd_ColorPicker_Render
 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 296              		.fpu fpv5-sp-d16
 298              	Ft_Esd_ColorPicker_Render:
 299              	.LFB29:
  29:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 
  30:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** static double Ft_Esd_ColorPicker_getSat__return(Ft_Esd_ColorPicker *context);
  31:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 
  32:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** double getHue(int, int, int, int);
  33:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** double getSat(int, int, int, int, double);
  34:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** ft_argb32_t hsvToRgb(double, double, double);
  35:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** ft_void_t Ft_Esd_Render_Bitmap(ft_int16_t, ft_int16_t, Ft_Esd_BitmapCell *, ft_argb32_t);
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s 			page 10


  36:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 
  37:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** void Ft_Esd_ColorPicker_Render(Ft_Esd_ColorPicker *context)
  38:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** {
 300              		.loc 3 38 0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 40
 303              		@ frame_needed = 1, uses_anonymous_args = 0
 304 0000 80B5     		push	{r7, lr}
 305              	.LCFI28:
 306              		.cfi_def_cfa_offset 8
 307              		.cfi_offset 7, -8
 308              		.cfi_offset 14, -4
 309 0002 8AB0     		sub	sp, sp, #40
 310              	.LCFI29:
 311              		.cfi_def_cfa_offset 48
 312 0004 00AF     		add	r7, sp, #0
 313              	.LCFI30:
 314              		.cfi_def_cfa_register 7
 315 0006 7860     		str	r0, [r7, #4]
  39:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	void *parent = context->Parent;
 316              		.loc 3 39 0
 317 0008 7B68     		ldr	r3, [r7, #4]
 318 000a 1B68     		ldr	r3, [r3]
 319 000c 7B62     		str	r3, [r7, #36]
  40:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	ft_uint8_t s = Ft_Esd_TouchTag_Tag(&context->Touch_Tag);
 320              		.loc 3 40 0
 321 000e 7B68     		ldr	r3, [r7, #4]
 322 0010 1433     		adds	r3, r3, #20
 323 0012 1846     		mov	r0, r3
 324 0014 FFF7FEFF 		bl	Ft_Esd_TouchTag_Tag
 325 0018 0346     		mov	r3, r0
 326 001a 87F82330 		strb	r3, [r7, #35]
  41:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	Ft_Esd_Dl_TAG(s);
 327              		.loc 3 41 0
 328 001e 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 329 0022 1846     		mov	r0, r3
 330 0024 FFF7FEFF 		bl	Ft_Esd_Dl_TAG
  42:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	int x = context->X(parent);
 331              		.loc 3 42 0
 332 0028 7B68     		ldr	r3, [r7, #4]
 333 002a DB68     		ldr	r3, [r3, #12]
 334 002c 786A     		ldr	r0, [r7, #36]
 335 002e 9847     		blx	r3
 336              	.LVL0:
 337 0030 F861     		str	r0, [r7, #28]
  43:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	int y = context->Y(parent);
 338              		.loc 3 43 0
 339 0032 7B68     		ldr	r3, [r7, #4]
 340 0034 1B69     		ldr	r3, [r3, #16]
 341 0036 786A     		ldr	r0, [r7, #36]
 342 0038 9847     		blx	r3
 343              	.LVL1:
 344 003a B861     		str	r0, [r7, #24]
  44:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	Ft_Esd_BitmapCell * bitmapCell = context->Bitmap;
 345              		.loc 3 44 0
 346 003c 7B68     		ldr	r3, [r7, #4]
 347 003e 5B68     		ldr	r3, [r3, #4]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s 			page 11


 348 0040 7B61     		str	r3, [r7, #20]
  45:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	ft_argb32_t c = 0xffffffffUL;
 349              		.loc 3 45 0
 350 0042 4FF0FF33 		mov	r3, #-1
 351 0046 3B61     		str	r3, [r7, #16]
  46:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	Ft_Esd_Render_Bitmap(x, y, bitmapCell, c);
 352              		.loc 3 46 0
 353 0048 FB69     		ldr	r3, [r7, #28]
 354 004a 18B2     		sxth	r0, r3
 355 004c BB69     		ldr	r3, [r7, #24]
 356 004e 19B2     		sxth	r1, r3
 357 0050 3B69     		ldr	r3, [r7, #16]
 358 0052 7A69     		ldr	r2, [r7, #20]
 359 0054 FFF7FEFF 		bl	Ft_Esd_Render_Bitmap
  47:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	ft_uint8_t s_1 = 255;
 360              		.loc 3 47 0
 361 0058 FF23     		movs	r3, #255
 362 005a FB73     		strb	r3, [r7, #15]
  48:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	Ft_Esd_Dl_TAG(s_1);
 363              		.loc 3 48 0
 364 005c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 365 005e 1846     		mov	r0, r3
 366 0060 FFF7FEFF 		bl	Ft_Esd_Dl_TAG
  49:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** }
 367              		.loc 3 49 0
 368 0064 00BF     		nop
 369 0066 2837     		adds	r7, r7, #40
 370              	.LCFI31:
 371              		.cfi_def_cfa_offset 8
 372 0068 BD46     		mov	sp, r7
 373              	.LCFI32:
 374              		.cfi_def_cfa_register 13
 375              		@ sp needed
 376 006a 80BD     		pop	{r7, pc}
 377              		.cfi_endproc
 378              	.LFE29:
 380              		.global	__aeabi_i2d
 381              		.section	.text.Ft_Esd_ColorPicker_getSat__return,"ax",%progbits
 382              		.align	1
 383              		.syntax unified
 384              		.thumb
 385              		.thumb_func
 386              		.fpu fpv5-sp-d16
 388              	Ft_Esd_ColorPicker_getSat__return:
 389              	.LFB30:
  50:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 
  51:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** double Ft_Esd_ColorPicker_getSat__return(Ft_Esd_ColorPicker *context)
  52:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** {
 390              		.loc 3 52 0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 48
 393              		@ frame_needed = 1, uses_anonymous_args = 0
 394 0000 B0B5     		push	{r4, r5, r7, lr}
 395              	.LCFI33:
 396              		.cfi_def_cfa_offset 16
 397              		.cfi_offset 4, -16
 398              		.cfi_offset 5, -12
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s 			page 12


 399              		.cfi_offset 7, -8
 400              		.cfi_offset 14, -4
 401 0002 8CB0     		sub	sp, sp, #48
 402              	.LCFI34:
 403              		.cfi_def_cfa_offset 64
 404 0004 00AF     		add	r7, sp, #0
 405              	.LCFI35:
 406              		.cfi_def_cfa_register 7
 407 0006 7860     		str	r0, [r7, #4]
  53:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	void *parent = context->Parent;
 408              		.loc 3 53 0
 409 0008 7B68     		ldr	r3, [r7, #4]
 410 000a 1B68     		ldr	r3, [r3]
 411 000c FB62     		str	r3, [r7, #44]
  54:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	int left = context->X(parent);
 412              		.loc 3 54 0
 413 000e 7B68     		ldr	r3, [r7, #4]
 414 0010 DB68     		ldr	r3, [r3, #12]
 415 0012 F86A     		ldr	r0, [r7, #44]
 416 0014 9847     		blx	r3
 417              	.LVL2:
 418 0016 B862     		str	r0, [r7, #40]
  55:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	int right = context->Radius;
 419              		.loc 3 55 0
 420 0018 7B68     		ldr	r3, [r7, #4]
 421 001a 9B68     		ldr	r3, [r3, #8]
 422 001c 7B62     		str	r3, [r7, #36]
  56:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	int x0 = left + right;
 423              		.loc 3 56 0
 424 001e BA6A     		ldr	r2, [r7, #40]
 425 0020 7B6A     		ldr	r3, [r7, #36]
 426 0022 1344     		add	r3, r3, r2
 427 0024 3B62     		str	r3, [r7, #32]
  57:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	int left_1 = context->Y(parent);
 428              		.loc 3 57 0
 429 0026 7B68     		ldr	r3, [r7, #4]
 430 0028 1B69     		ldr	r3, [r3, #16]
 431 002a F86A     		ldr	r0, [r7, #44]
 432 002c 9847     		blx	r3
 433              	.LVL3:
 434 002e F861     		str	r0, [r7, #28]
  58:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	int right_1 = context->Radius;
 435              		.loc 3 58 0
 436 0030 7B68     		ldr	r3, [r7, #4]
 437 0032 9B68     		ldr	r3, [r3, #8]
 438 0034 BB61     		str	r3, [r7, #24]
  59:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	int y0 = left_1 + right_1;
 439              		.loc 3 59 0
 440 0036 FA69     		ldr	r2, [r7, #28]
 441 0038 BB69     		ldr	r3, [r7, #24]
 442 003a 1344     		add	r3, r3, r2
 443 003c 7B61     		str	r3, [r7, #20]
  60:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	ft_int16_t x1 = Ft_Esd_TouchTag_TouchX(&context->Touch_Tag);
 444              		.loc 3 60 0
 445 003e 7B68     		ldr	r3, [r7, #4]
 446 0040 1433     		adds	r3, r3, #20
 447 0042 1846     		mov	r0, r3
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s 			page 13


 448 0044 FFF7FEFF 		bl	Ft_Esd_TouchTag_TouchX
 449 0048 0346     		mov	r3, r0
 450 004a 7B82     		strh	r3, [r7, #18]	@ movhi
  61:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	ft_int16_t y1 = Ft_Esd_TouchTag_TouchY(&context->Touch_Tag);
 451              		.loc 3 61 0
 452 004c 7B68     		ldr	r3, [r7, #4]
 453 004e 1433     		adds	r3, r3, #20
 454 0050 1846     		mov	r0, r3
 455 0052 FFF7FEFF 		bl	Ft_Esd_TouchTag_TouchY
 456 0056 0346     		mov	r3, r0
 457 0058 3B82     		strh	r3, [r7, #16]	@ movhi
  62:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	int r = context->Radius;
 458              		.loc 3 62 0
 459 005a 7B68     		ldr	r3, [r7, #4]
 460 005c 9B68     		ldr	r3, [r3, #8]
 461 005e FB60     		str	r3, [r7, #12]
  63:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	return getSat(x0, y0, x1, y1, r);
 462              		.loc 3 63 0
 463 0060 B7F91240 		ldrsh	r4, [r7, #18]
 464 0064 B7F91050 		ldrsh	r5, [r7, #16]
 465 0068 F868     		ldr	r0, [r7, #12]
 466 006a FFF7FEFF 		bl	__aeabi_i2d
 467              	.LVL4:
 468 006e 0246     		mov	r2, r0
 469 0070 0B46     		mov	r3, r1
 470 0072 43EC102B 		vmov	d0, r2, r3
 471 0076 2B46     		mov	r3, r5
 472 0078 2246     		mov	r2, r4
 473 007a 7969     		ldr	r1, [r7, #20]
 474 007c 386A     		ldr	r0, [r7, #32]
 475 007e FFF7FEFF 		bl	getSat
 476 0082 B0EE407A 		vmov.f32	s14, s0
 477 0086 F0EE607A 		vmov.f32	s15, s1
  64:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** }
 478              		.loc 3 64 0
 479 008a B0EE470A 		vmov.f32	s0, s14
 480 008e F0EE670A 		vmov.f32	s1, s15
 481 0092 3037     		adds	r7, r7, #48
 482              	.LCFI36:
 483              		.cfi_def_cfa_offset 16
 484 0094 BD46     		mov	sp, r7
 485              	.LCFI37:
 486              		.cfi_def_cfa_register 13
 487              		@ sp needed
 488 0096 B0BD     		pop	{r4, r5, r7, pc}
 489              		.cfi_endproc
 490              	.LFE30:
 492              		.section	.text.Ft_Esd_ColorPicker_Start,"ax",%progbits
 493              		.align	1
 494              		.global	Ft_Esd_ColorPicker_Start
 495              		.syntax unified
 496              		.thumb
 497              		.thumb_func
 498              		.fpu fpv5-sp-d16
 500              	Ft_Esd_ColorPicker_Start:
 501              	.LFB31:
  65:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s 			page 14


  66:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** void Ft_Esd_ColorPicker_Start(Ft_Esd_ColorPicker *context)
  67:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** {
 502              		.loc 3 67 0
 503              		.cfi_startproc
 504              		@ args = 0, pretend = 0, frame = 16
 505              		@ frame_needed = 1, uses_anonymous_args = 0
 506 0000 80B5     		push	{r7, lr}
 507              	.LCFI38:
 508              		.cfi_def_cfa_offset 8
 509              		.cfi_offset 7, -8
 510              		.cfi_offset 14, -4
 511 0002 84B0     		sub	sp, sp, #16
 512              	.LCFI39:
 513              		.cfi_def_cfa_offset 24
 514 0004 00AF     		add	r7, sp, #0
 515              	.LCFI40:
 516              		.cfi_def_cfa_register 7
 517 0006 7860     		str	r0, [r7, #4]
  68:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	void *parent = context->Parent;
 518              		.loc 3 68 0
 519 0008 7B68     		ldr	r3, [r7, #4]
 520 000a 1B68     		ldr	r3, [r3]
 521 000c FB60     		str	r3, [r7, #12]
  69:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	Ft_Esd_TouchTag_Start(&context->Touch_Tag);
 522              		.loc 3 69 0
 523 000e 7B68     		ldr	r3, [r7, #4]
 524 0010 1433     		adds	r3, r3, #20
 525 0012 1846     		mov	r0, r3
 526 0014 FFF7FEFF 		bl	Ft_Esd_TouchTag_Start
  70:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** }
 527              		.loc 3 70 0
 528 0018 00BF     		nop
 529 001a 1037     		adds	r7, r7, #16
 530              	.LCFI41:
 531              		.cfi_def_cfa_offset 8
 532 001c BD46     		mov	sp, r7
 533              	.LCFI42:
 534              		.cfi_def_cfa_register 13
 535              		@ sp needed
 536 001e 80BD     		pop	{r7, pc}
 537              		.cfi_endproc
 538              	.LFE31:
 540              		.global	__aeabi_dcmple
 541              		.section	.text.Ft_Esd_ColorPicker_Update,"ax",%progbits
 542              		.align	1
 543              		.global	Ft_Esd_ColorPicker_Update
 544              		.syntax unified
 545              		.thumb
 546              		.thumb_func
 547              		.fpu fpv5-sp-d16
 549              	Ft_Esd_ColorPicker_Update:
 550              	.LFB32:
  71:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 
  72:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** void Ft_Esd_ColorPicker_Update(Ft_Esd_ColorPicker *context)
  73:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** {
 551              		.loc 3 73 0
 552              		.cfi_startproc
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s 			page 15


 553              		@ args = 0, pretend = 0, frame = 96
 554              		@ frame_needed = 1, uses_anonymous_args = 0
 555 0000 90B5     		push	{r4, r7, lr}
 556              	.LCFI43:
 557              		.cfi_def_cfa_offset 12
 558              		.cfi_offset 4, -12
 559              		.cfi_offset 7, -8
 560              		.cfi_offset 14, -4
 561 0002 99B0     		sub	sp, sp, #100
 562              	.LCFI44:
 563              		.cfi_def_cfa_offset 112
 564 0004 00AF     		add	r7, sp, #0
 565              	.LCFI45:
 566              		.cfi_def_cfa_register 7
 567 0006 7860     		str	r0, [r7, #4]
  74:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	void *parent = context->Parent;
 568              		.loc 3 74 0
 569 0008 7B68     		ldr	r3, [r7, #4]
 570 000a 1B68     		ldr	r3, [r3]
 571 000c BB65     		str	r3, [r7, #88]
  75:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	Ft_Esd_TouchTag_Update(&context->Touch_Tag);
 572              		.loc 3 75 0
 573 000e 7B68     		ldr	r3, [r7, #4]
 574 0010 1433     		adds	r3, r3, #20
 575 0012 1846     		mov	r0, r3
 576 0014 FFF7FEFF 		bl	Ft_Esd_TouchTag_Update
  76:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	double left_3 = Ft_Esd_ColorPicker_getSat__return(context);
 577              		.loc 3 76 0
 578 0018 7868     		ldr	r0, [r7, #4]
 579 001a FFF7FEFF 		bl	Ft_Esd_ColorPicker_getSat__return
 580 001e 87ED140B 		vstr.64	d0, [r7, #80]
  77:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	double right_2 = 1.0;
 581              		.loc 3 77 0
 582 0022 4FF00003 		mov	r3, #0
 583 0026 3C4C     		ldr	r4, .L22+8
 584 0028 C7E91234 		strd	r3, [r7, #72]
  78:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	int left_2 = left_3 <= right_2;
 585              		.loc 3 78 0
 586 002c 0123     		movs	r3, #1
 587 002e 1C46     		mov	r4, r3
 588 0030 D7E91223 		ldrd	r2, [r7, #72]
 589 0034 D7E91401 		ldrd	r0, [r7, #80]
 590 0038 FFF7FEFF 		bl	__aeabi_dcmple
 591              	.LVL5:
 592 003c 0346     		mov	r3, r0
 593 003e 002B     		cmp	r3, #0
 594 0040 01D1     		bne	.L19
 595 0042 0023     		movs	r3, #0
 596 0044 1C46     		mov	r4, r3
 597              	.L19:
 598 0046 E3B2     		uxtb	r3, r4
 599 0048 7B64     		str	r3, [r7, #68]
  79:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	ft_bool_t right_3 = Ft_Esd_TouchTag_Touching(&context->Touch_Tag);
 600              		.loc 3 79 0
 601 004a 7B68     		ldr	r3, [r7, #4]
 602 004c 1433     		adds	r3, r3, #20
 603 004e 1846     		mov	r0, r3
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s 			page 16


 604 0050 FFF7FEFF 		bl	Ft_Esd_TouchTag_Touching
 605 0054 0346     		mov	r3, r0
 606 0056 87F84330 		strb	r3, [r7, #67]
  80:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	ft_bool_t if_1 = left_2 & right_3;
 607              		.loc 3 80 0
 608 005a 7B6C     		ldr	r3, [r7, #68]
 609 005c 5AB2     		sxtb	r2, r3
 610 005e 97F94330 		ldrsb	r3, [r7, #67]
 611 0062 1340     		ands	r3, r3, r2
 612 0064 5BB2     		sxtb	r3, r3
 613 0066 87F84230 		strb	r3, [r7, #66]
  81:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	ft_argb32_t set_variable;
  82:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	if (if_1)
 614              		.loc 3 82 0
 615 006a 97F84230 		ldrb	r3, [r7, #66]	@ zero_extendqisi2
 616 006e 002B     		cmp	r3, #0
 617 0070 43D0     		beq	.L20
 618              	.LBB2:
  83:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	{
  84:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 		int left_4 = context->X(parent);
 619              		.loc 3 84 0
 620 0072 7B68     		ldr	r3, [r7, #4]
 621 0074 DB68     		ldr	r3, [r3, #12]
 622 0076 B86D     		ldr	r0, [r7, #88]
 623 0078 9847     		blx	r3
 624              	.LVL6:
 625 007a F863     		str	r0, [r7, #60]
  85:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 		int right_4 = context->Radius;
 626              		.loc 3 85 0
 627 007c 7B68     		ldr	r3, [r7, #4]
 628 007e 9B68     		ldr	r3, [r3, #8]
 629 0080 BB63     		str	r3, [r7, #56]
  86:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 		int x0_1 = left_4 + right_4;
 630              		.loc 3 86 0
 631 0082 FA6B     		ldr	r2, [r7, #60]
 632 0084 BB6B     		ldr	r3, [r7, #56]
 633 0086 1344     		add	r3, r3, r2
 634 0088 7B63     		str	r3, [r7, #52]
  87:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 		int left_5 = context->Y(parent);
 635              		.loc 3 87 0
 636 008a 7B68     		ldr	r3, [r7, #4]
 637 008c 1B69     		ldr	r3, [r3, #16]
 638 008e B86D     		ldr	r0, [r7, #88]
 639 0090 9847     		blx	r3
 640              	.LVL7:
 641 0092 3863     		str	r0, [r7, #48]
  88:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 		int right_5 = context->Radius;
 642              		.loc 3 88 0
 643 0094 7B68     		ldr	r3, [r7, #4]
 644 0096 9B68     		ldr	r3, [r3, #8]
 645 0098 FB62     		str	r3, [r7, #44]
  89:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 		int y0_1 = left_5 + right_5;
 646              		.loc 3 89 0
 647 009a 3A6B     		ldr	r2, [r7, #48]
 648 009c FB6A     		ldr	r3, [r7, #44]
 649 009e 1344     		add	r3, r3, r2
 650 00a0 BB62     		str	r3, [r7, #40]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s 			page 17


  90:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 		ft_int16_t x1_1 = Ft_Esd_TouchTag_TouchX(&context->Touch_Tag);
 651              		.loc 3 90 0
 652 00a2 7B68     		ldr	r3, [r7, #4]
 653 00a4 1433     		adds	r3, r3, #20
 654 00a6 1846     		mov	r0, r3
 655 00a8 FFF7FEFF 		bl	Ft_Esd_TouchTag_TouchX
 656 00ac 0346     		mov	r3, r0
 657 00ae FB84     		strh	r3, [r7, #38]	@ movhi
  91:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 		ft_int16_t y1_1 = Ft_Esd_TouchTag_TouchY(&context->Touch_Tag);
 658              		.loc 3 91 0
 659 00b0 7B68     		ldr	r3, [r7, #4]
 660 00b2 1433     		adds	r3, r3, #20
 661 00b4 1846     		mov	r0, r3
 662 00b6 FFF7FEFF 		bl	Ft_Esd_TouchTag_TouchY
 663 00ba 0346     		mov	r3, r0
 664 00bc BB84     		strh	r3, [r7, #36]	@ movhi
  92:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 		double h = getHue(x0_1, y0_1, x1_1, y1_1);
 665              		.loc 3 92 0
 666 00be B7F92620 		ldrsh	r2, [r7, #38]
 667 00c2 B7F92430 		ldrsh	r3, [r7, #36]
 668 00c6 B96A     		ldr	r1, [r7, #40]
 669 00c8 786B     		ldr	r0, [r7, #52]
 670 00ca FFF7FEFF 		bl	getHue
 671 00ce 87ED060B 		vstr.64	d0, [r7, #24]
  93:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 		double s_2 = Ft_Esd_ColorPicker_getSat__return(context);
 672              		.loc 3 93 0
 673 00d2 7868     		ldr	r0, [r7, #4]
 674 00d4 FFF7FEFF 		bl	Ft_Esd_ColorPicker_getSat__return
 675 00d8 87ED040B 		vstr.64	d0, [r7, #16]
  94:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 		double v = 255.0;
 676              		.loc 3 94 0
 677 00dc 0CA4     		adr	r4, .L22
 678 00de D4E90034 		ldrd	r3, [r4]
 679 00e2 C7E90234 		strd	r3, [r7, #8]
  95:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 		set_variable = hsvToRgb(h, s_2, v);
 680              		.loc 3 95 0
 681 00e6 97ED022B 		vldr.64	d2, [r7, #8]
 682 00ea 97ED041B 		vldr.64	d1, [r7, #16]
 683 00ee 97ED060B 		vldr.64	d0, [r7, #24]
 684 00f2 FFF7FEFF 		bl	hsvToRgb
 685 00f6 F865     		str	r0, [r7, #92]
 686              	.LBE2:
 687 00f8 02E0     		b	.L21
 688              	.L20:
  96:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	}
  97:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	else
  98:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	{
  99:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 		set_variable = context->Color;
 689              		.loc 3 99 0
 690 00fa 7B68     		ldr	r3, [r7, #4]
 691 00fc DB6A     		ldr	r3, [r3, #44]
 692 00fe FB65     		str	r3, [r7, #92]
 693              	.L21:
 100:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	}
 101:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	context->Color = set_variable;
 694              		.loc 3 101 0
 695 0100 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s 			page 18


 696 0102 FA6D     		ldr	r2, [r7, #92]
 697 0104 DA62     		str	r2, [r3, #44]
 102:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** }
 698              		.loc 3 102 0
 699 0106 00BF     		nop
 700 0108 6437     		adds	r7, r7, #100
 701              	.LCFI46:
 702              		.cfi_def_cfa_offset 12
 703 010a BD46     		mov	sp, r7
 704              	.LCFI47:
 705              		.cfi_def_cfa_register 13
 706              		@ sp needed
 707 010c 90BD     		pop	{r4, r7, pc}
 708              	.L23:
 709 010e 00BF     		.align	3
 710              	.L22:
 711 0110 00000000 		.word	0
 712 0114 00E06F40 		.word	1081073664
 713 0118 0000F03F 		.word	1072693248
 714              		.cfi_endproc
 715              	.LFE32:
 717              		.section	.text.Ft_Esd_ColorPicker_End,"ax",%progbits
 718              		.align	1
 719              		.global	Ft_Esd_ColorPicker_End
 720              		.syntax unified
 721              		.thumb
 722              		.thumb_func
 723              		.fpu fpv5-sp-d16
 725              	Ft_Esd_ColorPicker_End:
 726              	.LFB33:
 103:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 
 104:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** void Ft_Esd_ColorPicker_End(Ft_Esd_ColorPicker *context)
 105:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** {
 727              		.loc 3 105 0
 728              		.cfi_startproc
 729              		@ args = 0, pretend = 0, frame = 16
 730              		@ frame_needed = 1, uses_anonymous_args = 0
 731 0000 80B5     		push	{r7, lr}
 732              	.LCFI48:
 733              		.cfi_def_cfa_offset 8
 734              		.cfi_offset 7, -8
 735              		.cfi_offset 14, -4
 736 0002 84B0     		sub	sp, sp, #16
 737              	.LCFI49:
 738              		.cfi_def_cfa_offset 24
 739 0004 00AF     		add	r7, sp, #0
 740              	.LCFI50:
 741              		.cfi_def_cfa_register 7
 742 0006 7860     		str	r0, [r7, #4]
 106:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	void *parent = context->Parent;
 743              		.loc 3 106 0
 744 0008 7B68     		ldr	r3, [r7, #4]
 745 000a 1B68     		ldr	r3, [r3]
 746 000c FB60     		str	r3, [r7, #12]
 107:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** 	Ft_Esd_TouchTag_End(&context->Touch_Tag);
 747              		.loc 3 107 0
 748 000e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s 			page 19


 749 0010 1433     		adds	r3, r3, #20
 750 0012 1846     		mov	r0, r3
 751 0014 FFF7FEFF 		bl	Ft_Esd_TouchTag_End
 108:FT_Esd_Widgets/Ft_Esd_ColorPicker__Generated.c **** }
 752              		.loc 3 108 0
 753 0018 00BF     		nop
 754 001a 1037     		adds	r7, r7, #16
 755              	.LCFI51:
 756              		.cfi_def_cfa_offset 8
 757 001c BD46     		mov	sp, r7
 758              	.LCFI52:
 759              		.cfi_def_cfa_register 13
 760              		@ sp needed
 761 001e 80BD     		pop	{r7, pc}
 762              		.cfi_endproc
 763              	.LFE33:
 765              		.text
 766              	.Letext0:
 767              		.file 4 "FT_Eve_Hal/FT_DataTypes.h"
 768              		.file 5 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/lock.h"
 769              		.file 6 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_types.h"
 770              		.file 7 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 771              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/unistd.h"
 772              		.file 9 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/reent.h"
 773              		.file 10 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/stdlib.h"
 774              		.file 11 "FT_Eve_Hal/FT_Gpu_Hal.h"
 775              		.file 12 "FT_Esd_Framework/Ft_Esd.h"
 776              		.file 13 "FT_Esd_Framework/Ft_Esd_GpuAlloc.h"
 777              		.file 14 "FT_Esd_Framework/Ft_Esd_TouchTag.h"
 778              		.file 15 "FT_Esd_Widgets/Ft_Esd_ColorPicker.h"
 779              		.file 16 "FT_Esd_Widgets/Ft_Esd_Theme.h"
 780              		.file 17 "FT_Esd_Widgets/Ft_Esd_DefaultTheme.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Ft_Esd_ColorPicker__Generated.c
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s:18     .text.Ft_Esd_BitmapCell_GetInfo:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s:24     .text.Ft_Esd_BitmapCell_GetInfo:0000000000000000 Ft_Esd_BitmapCell_GetInfo
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s:73     .text.Ft_Esd_Dl_TAG:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s:79     .text.Ft_Esd_Dl_TAG:0000000000000000 Ft_Esd_Dl_TAG
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s:120    .text.Ft_Esd_Dl_TAG:0000000000000024 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s:125    .text.Ft_Esd_ColorPicker_X__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s:132    .text.Ft_Esd_ColorPicker_X__Default:0000000000000000 Ft_Esd_ColorPicker_X__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s:170    .text.Ft_Esd_ColorPicker_Y__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s:177    .text.Ft_Esd_ColorPicker_Y__Default:0000000000000000 Ft_Esd_ColorPicker_Y__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s:214    .text.Ft_Esd_ColorPicker__Initializer:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s:221    .text.Ft_Esd_ColorPicker__Initializer:0000000000000000 Ft_Esd_ColorPicker__Initializer
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s:285    .text.Ft_Esd_ColorPicker__Initializer:0000000000000048 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s:291    .text.Ft_Esd_ColorPicker_Render:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s:298    .text.Ft_Esd_ColorPicker_Render:0000000000000000 Ft_Esd_ColorPicker_Render
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s:382    .text.Ft_Esd_ColorPicker_getSat__return:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s:388    .text.Ft_Esd_ColorPicker_getSat__return:0000000000000000 Ft_Esd_ColorPicker_getSat__return
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s:493    .text.Ft_Esd_ColorPicker_Start:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s:500    .text.Ft_Esd_ColorPicker_Start:0000000000000000 Ft_Esd_ColorPicker_Start
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s:542    .text.Ft_Esd_ColorPicker_Update:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s:549    .text.Ft_Esd_ColorPicker_Update:0000000000000000 Ft_Esd_ColorPicker_Update
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s:711    .text.Ft_Esd_ColorPicker_Update:0000000000000110 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s:718    .text.Ft_Esd_ColorPicker_End:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccKhG64v.s:725    .text.Ft_Esd_ColorPicker_End:0000000000000000 Ft_Esd_ColorPicker_End

UNDEFINED SYMBOLS
Ft_Gpu_Hal_WrCmd32
Ft_Esd_Host
Ft_Esd_TouchTag__Initializer
Ft_Esd_TouchTag_Tag
Ft_Esd_Render_Bitmap
__aeabi_i2d
Ft_Esd_TouchTag_TouchX
Ft_Esd_TouchTag_TouchY
getSat
Ft_Esd_TouchTag_Start
__aeabi_dcmple
Ft_Esd_TouchTag_Update
Ft_Esd_TouchTag_Touching
getHue
hsvToRgb
Ft_Esd_TouchTag_End
