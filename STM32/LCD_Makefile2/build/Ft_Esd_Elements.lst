ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"Ft_Esd_Elements.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Ft_Esd_BitmapCell_GetInfo,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	Ft_Esd_BitmapCell_GetInfo:
  25              	.LFB13:
  26              		.file 1 "FT_Esd_Framework/Ft_Esd_BitmapInfo.h"
   1:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** /*
   2:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** Bitmap info structure
   3:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** */
   4:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
   5:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #ifndef FT_ESD_BITMAPINFO_H
   6:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #define FT_ESD_BITMAPINFO_H
   7:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
   8:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "Ft_Esd.h"
   9:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "FT_DataTypes.h"
  10:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** #include "Ft_Esd_GpuAlloc.h"
  11:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  12:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapInfo, Native = Struct) // TODO: Struct support, expose values
  13:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  14:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  15:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Width;
  16:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Height;
  17:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Stride;
  18:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Format;
  19:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Size;
  20:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	const char *File;
  21:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  22:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Handle pointing to the address in RAM_G if it is allocated
  23:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_GpuHandle GpuHandle;
  24:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  25:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Bitmap handle that is being used
  26:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_uint32_t BitmapHandle;
  27:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  28:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	const char *PaletteFile;
  29:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_GpuHandle PaletteGpuHandle;
  30:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  31:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// When this is set, the allocated ram is not free'd automatically
  32:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Use Ft_Esd_GpuAlloc_Free(GpuAlloc, GpuHandle) to free the GPU ram manually
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s 			page 2


  33:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_bool_t Persistent;
  34:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  35:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_BitmapInfo;
  36:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  37:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapInfo *, Native = Pointer, Edit = Library)
  38:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  39:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapCell, Native = Struct) // TODO: Struct support, expose values
  40:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  41:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  42:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapInfo *Info;
  43:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_int32_t Cell;
  44:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_BitmapCell;
  45:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  46:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_TYPE(Ft_Esd_BitmapCell *, Native = Pointer, Edit = Library)
  47:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  48:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // Attempts to load the specified bitmap if it has not been loaded into RAM_G yet.
  49:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // Call during the Update cycle of each frame to keep the bitmap flagged as in use, otherwise the m
  50:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_LoadBitmap, Type = ft_uint32_t, Include = "Ft_Esd_BitmapInfo.h", DisplayName = 
  51:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapInfo, Type = Ft_Esd_BitmapInfo *)
  52:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ft_uint32_t Ft_Esd_LoadBitmap(Ft_Esd_BitmapInfo *bitmapInfo);
  53:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  54:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_LoadPalette, Type = ft_uint32_t, Include = "Ft_Esd_BitmapInfo.h", DisplayName =
  55:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapInfo, Type = Ft_Esd_BitmapInfo *)
  56:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ft_uint32_t Ft_Esd_LoadPalette(Ft_Esd_BitmapInfo *bitmapInfo);
  57:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  58:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_ENUM(_BitmapResourceFormat, DisplayName = "Bitmap Format")
  59:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB1555)
  60:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L1)
  61:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L2)
  62:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L4)
  63:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(L8)
  64:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(RGB332)
  65:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB2)
  66:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(ARGB4)
  67:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(RGB565)
  68:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(PALETTED565)
  69:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_IDENTIFIER(PALETTED4444)
  70:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(PALETTED8)
  71:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(JPEG)
  72:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** // ESD_IDENTIFIER(PNG)
  73:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_END()
  74:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  75:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_LOGIC(Ft_Esd_SwitchBitmapCell, Callback, Include = "Ft_Esd_BitmapInfo.h", DisplayName = "Switch
  76:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** typedef struct
  77:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  78:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Callback
  79:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	void *Parent;
  80:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  81:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  82:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Input
  83:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  84:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  85:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ESD_INPUT(BitmapInfo, Type = Ft_Esd_BitmapInfo *, DisplayName = "Bitmap Info")
  86:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapInfo *(* BitmapInfo)(void *context);
  87:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  88:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ESD_INPUT(Cell, Type = ft_uint8_t, DisplayName = "Cell")
  89:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	ft_uint8_t(* Cell)(void *context);
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s 			page 3


  90:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  91:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  92:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// Variables
  93:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	//
  94:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  95:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	// BitmapCell object
  96:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	Ft_Esd_BitmapCell BitmapCell;
  97:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
  98:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** } Ft_Esd_SwitchBitmapCell;
  99:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 100:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** void Ft_Esd_SwitchBitmapCell__Initializer(Ft_Esd_SwitchBitmapCell *context);
 101:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 102:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_OUTPUT(BitmapCell, Type = Ft_Esd_BitmapCell *, DisplayName = "Bitmap Cell")
 103:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** Ft_Esd_BitmapCell *Ft_Esd_SwitchBitmapCell_BitmapCell(Ft_Esd_SwitchBitmapCell *context);
 104:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 105:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_UPDATE(Ft_Esd_BitmapPersist, DisplayName = "Bitmap Persist", Category = EsdUtilities)
 106:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapCell, Type = Ft_Esd_BitmapCell *)
 107:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** void Ft_Esd_BitmapPersist(Ft_Esd_BitmapCell *bitmapCell);
 108:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 
 109:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_FUNCTION(Ft_Esd_BitmapCell_GetInfo, Type = Ft_Esd_BitmapInfo *, DisplayName = "ESD BitmapCell G
 110:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** ESD_PARAMETER(bitmapCell, Type = Ft_Esd_BitmapCell *)
 111:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** static Ft_Esd_BitmapInfo *Ft_Esd_BitmapCell_GetInfo(Ft_Esd_BitmapCell *bitmapCell)
 112:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** {
  27              		.loc 1 112 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 113:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	if (!bitmapCell) return 0;
  43              		.loc 1 113 0
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 002B     		cmp	r3, #0
  46 000c 01D1     		bne	.L2
  47              		.loc 1 113 0 is_stmt 0 discriminator 1
  48 000e 0023     		movs	r3, #0
  49 0010 01E0     		b	.L3
  50              	.L2:
 114:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** 	return bitmapCell->Info;
  51              		.loc 1 114 0 is_stmt 1
  52 0012 7B68     		ldr	r3, [r7, #4]
  53 0014 1B68     		ldr	r3, [r3]
  54              	.L3:
 115:FT_Esd_Framework/Ft_Esd_BitmapInfo.h **** }
  55              		.loc 1 115 0
  56 0016 1846     		mov	r0, r3
  57 0018 0C37     		adds	r7, r7, #12
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s 			page 4


  58              	.LCFI3:
  59              		.cfi_def_cfa_offset 4
  60 001a BD46     		mov	sp, r7
  61              	.LCFI4:
  62              		.cfi_def_cfa_register 13
  63              		@ sp needed
  64 001c 5DF8047B 		ldr	r7, [sp], #4
  65              	.LCFI5:
  66              		.cfi_restore 7
  67              		.cfi_def_cfa_offset 0
  68 0020 7047     		bx	lr
  69              		.cfi_endproc
  70              	.LFE13:
  72              		.section	.text.Ft_Esd_Dl_COLOR_RGB,"ax",%progbits
  73              		.align	1
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  77              		.fpu fpv5-sp-d16
  79              	Ft_Esd_Dl_COLOR_RGB:
  80              	.LFB17:
  81              		.file 2 "FT_Esd_Framework/Ft_Esd_Dl.h"
   1:FT_Esd_Framework/Ft_Esd_Dl.h **** 
   2:FT_Esd_Framework/Ft_Esd_Dl.h **** #ifndef FT_ESD_DL_H
   3:FT_Esd_Framework/Ft_Esd_Dl.h **** #define FT_ESD_DL_H
   4:FT_Esd_Framework/Ft_Esd_Dl.h **** 
   5:FT_Esd_Framework/Ft_Esd_Dl.h **** #include "FT_DataTypes.h"
   6:FT_Esd_Framework/Ft_Esd_Dl.h **** #include "FT_Platform.h"
   7:FT_Esd_Framework/Ft_Esd_Dl.h **** #include "Ft_Esd.h"
   8:FT_Esd_Framework/Ft_Esd_Dl.h **** #include "FT_Gpu.h"
   9:FT_Esd_Framework/Ft_Esd_Dl.h **** #include "Ft_Esd_BitmapInfo.h"
  10:FT_Esd_Framework/Ft_Esd_Dl.h **** 
  11:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_CATEGORY(EsdUtilities, DisplayName = "ESD Utilities")
  12:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_CATEGORY(EveRenderFunctions, DisplayName = "EVE Render Functions")
  13:FT_Esd_Framework/Ft_Esd_Dl.h **** 
  14:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_TYPE(Ft_Gpu_Hal_Context_t *, Native = Pointer, Edit = Library)
  15:FT_Esd_Framework/Ft_Esd_Dl.h **** 
  16:FT_Esd_Framework/Ft_Esd_Dl.h **** // Keep cache of displaylist values that don't often change but are generally set by every widget t
  17:FT_Esd_Framework/Ft_Esd_Dl.h **** #define FT_ESD_OPTIMIZE_DISPLAYLIST 1
  18:FT_Esd_Framework/Ft_Esd_Dl.h **** #define FT_ESD_STATE_STACK_SIZE 5
  19:FT_Esd_Framework/Ft_Esd_Dl.h **** 
  20:FT_Esd_Framework/Ft_Esd_Dl.h **** #define FT_ESD_BITMAPHANDLE_INVALID 255
  21:FT_Esd_Framework/Ft_Esd_Dl.h **** 
  22:FT_Esd_Framework/Ft_Esd_Dl.h **** //
  23:FT_Esd_Framework/Ft_Esd_Dl.h **** // Structs
  24:FT_Esd_Framework/Ft_Esd_Dl.h **** //
  25:FT_Esd_Framework/Ft_Esd_Dl.h **** #ifdef FT_ESD_OPTIMIZE_DISPLAYLIST
  26:FT_Esd_Framework/Ft_Esd_Dl.h **** #define FT_ESD_STATE Ft_Esd_GpuState[Ft_Esd_GpuState_I]
  27:FT_Esd_Framework/Ft_Esd_Dl.h **** typedef struct
  28:FT_Esd_Framework/Ft_Esd_Dl.h **** {
  29:FT_Esd_Framework/Ft_Esd_Dl.h **** 	// Keep to a minimum
  30:FT_Esd_Framework/Ft_Esd_Dl.h **** #ifdef FT_81X_ENABLE
  31:FT_Esd_Framework/Ft_Esd_Dl.h **** 	ft_uint32_t PaletteSource;
  32:FT_Esd_Framework/Ft_Esd_Dl.h **** #endif
  33:FT_Esd_Framework/Ft_Esd_Dl.h **** 	ft_uint32_t ColorRGB;
  34:FT_Esd_Framework/Ft_Esd_Dl.h **** 	ft_uint8_t ColorA;
  35:FT_Esd_Framework/Ft_Esd_Dl.h **** 	ft_uint8_t Handle;         // Current handle
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s 			page 5


  36:FT_Esd_Framework/Ft_Esd_Dl.h **** 	ft_uint8_t Cell;           // Current cell
  37:FT_Esd_Framework/Ft_Esd_Dl.h **** 	ft_bool_t BitmapTransform; // BitmapTransform other than default is set
  38:FT_Esd_Framework/Ft_Esd_Dl.h **** #ifdef FT_81X_ENABLE
  39:FT_Esd_Framework/Ft_Esd_Dl.h **** 	ft_uint8_t VertexFormat;   // Current vertex format
  40:FT_Esd_Framework/Ft_Esd_Dl.h **** #endif
  41:FT_Esd_Framework/Ft_Esd_Dl.h **** } Ft_Esd_GpuState_T;
  42:FT_Esd_Framework/Ft_Esd_Dl.h **** #endif
  43:FT_Esd_Framework/Ft_Esd_Dl.h **** 
  44:FT_Esd_Framework/Ft_Esd_Dl.h **** //
  45:FT_Esd_Framework/Ft_Esd_Dl.h **** // Globals
  46:FT_Esd_Framework/Ft_Esd_Dl.h **** //
  47:FT_Esd_Framework/Ft_Esd_Dl.h **** extern Ft_Gpu_Hal_Context_t *Ft_Esd_Host;
  48:FT_Esd_Framework/Ft_Esd_Dl.h **** extern ft_uint16_t Ft_Esd_FontHeight[32];
  49:FT_Esd_Framework/Ft_Esd_Dl.h **** #ifdef FT_ESD_OPTIMIZE_DISPLAYLIST
  50:FT_Esd_Framework/Ft_Esd_Dl.h **** extern Ft_Esd_GpuState_T Ft_Esd_GpuState[FT_ESD_STATE_STACK_SIZE];
  51:FT_Esd_Framework/Ft_Esd_Dl.h **** extern ft_uint8_t Ft_Esd_GpuState_I;
  52:FT_Esd_Framework/Ft_Esd_Dl.h **** extern ft_uint32_t Ft_Esd_CoFgColor;
  53:FT_Esd_Framework/Ft_Esd_Dl.h **** extern ft_uint32_t Ft_Esd_CoBgColor;
  54:FT_Esd_Framework/Ft_Esd_Dl.h **** #endif
  55:FT_Esd_Framework/Ft_Esd_Dl.h **** 
  56:FT_Esd_Framework/Ft_Esd_Dl.h **** //Get the height of builtin font
  57:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_GetFontHeight, Type = ft_uint16_t ,DisplayName = "Get Font Height", Category = 
  58:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_PARAMETER(i, Type = int, DisplayName = "Bitmap Handle", Default = 0, Min = 0, Max = 31)
  59:FT_Esd_Framework/Ft_Esd_Dl.h **** // inline static ft_uint16_t Ft_Esd_GetFontHeight(int i) { return Ft_Esd_FontHeight[i]; }
  60:FT_Esd_Framework/Ft_Esd_Dl.h **** #define Ft_Esd_GetFontHeight(i) (Ft_Esd_FontHeight[i]);
  61:FT_Esd_Framework/Ft_Esd_Dl.h **** 
  62:FT_Esd_Framework/Ft_Esd_Dl.h **** // Reset any cached state
  63:FT_Esd_Framework/Ft_Esd_Dl.h **** void Ft_Esd_ResetGpuState();
  64:FT_Esd_Framework/Ft_Esd_Dl.h **** void Ft_Esd_ResetCoState();
  65:FT_Esd_Framework/Ft_Esd_Dl.h **** 
  66:FT_Esd_Framework/Ft_Esd_Dl.h **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotalUsed();
  67:FT_Esd_Framework/Ft_Esd_Dl.h **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotal();
  68:FT_Esd_Framework/Ft_Esd_Dl.h **** 
  69:FT_Esd_Framework/Ft_Esd_Dl.h **** /// Set current tag. Must be returned to 255 after usage, to ensure next widgets don't draw with in
  70:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_TAG, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  71:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_PARAMETER(s, Type = ft_uint8_t, DisplayName = "Tag", Default = 255, Min = 0, Max = 255)
  72:FT_Esd_Framework/Ft_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_TAG(ft_uint8_t s)
  73:FT_Esd_Framework/Ft_Esd_Dl.h **** {
  74:FT_Esd_Framework/Ft_Esd_Dl.h **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, TAG(s));
  75:FT_Esd_Framework/Ft_Esd_Dl.h **** }
  76:FT_Esd_Framework/Ft_Esd_Dl.h **** //Specify color RGB
  77:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_RGB, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  78:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_PARAMETER(c, Type = ft_rgb32_t, DisplayName = "Color")
  79:FT_Esd_Framework/Ft_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_RGB(ft_rgb32_t c)
  80:FT_Esd_Framework/Ft_Esd_Dl.h **** {
  82              		.loc 2 80 0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 16
  85              		@ frame_needed = 1, uses_anonymous_args = 0
  86 0000 80B5     		push	{r7, lr}
  87              	.LCFI6:
  88              		.cfi_def_cfa_offset 8
  89              		.cfi_offset 7, -8
  90              		.cfi_offset 14, -4
  91 0002 84B0     		sub	sp, sp, #16
  92              	.LCFI7:
  93              		.cfi_def_cfa_offset 24
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s 			page 6


  94 0004 00AF     		add	r7, sp, #0
  95              	.LCFI8:
  96              		.cfi_def_cfa_register 7
  97 0006 7860     		str	r0, [r7, #4]
  81:FT_Esd_Framework/Ft_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  82:FT_Esd_Framework/Ft_Esd_Dl.h **** 	ft_rgb32_t rgb = c & 0xFFFFFF;
  98              		.loc 2 82 0
  99 0008 7B68     		ldr	r3, [r7, #4]
 100 000a 23F07F43 		bic	r3, r3, #-16777216
 101 000e FB60     		str	r3, [r7, #12]
  83:FT_Esd_Framework/Ft_Esd_Dl.h **** 	if (rgb != FT_ESD_STATE.ColorRGB)
 102              		.loc 2 83 0
 103 0010 0F4B     		ldr	r3, .L7
 104 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 105 0014 0F4A     		ldr	r2, .L7+4
 106 0016 1B01     		lsls	r3, r3, #4
 107 0018 1344     		add	r3, r3, r2
 108 001a 0433     		adds	r3, r3, #4
 109 001c 1B68     		ldr	r3, [r3]
 110 001e FA68     		ldr	r2, [r7, #12]
 111 0020 9A42     		cmp	r2, r3
 112 0022 10D0     		beq	.L6
  84:FT_Esd_Framework/Ft_Esd_Dl.h **** 	{
  85:FT_Esd_Framework/Ft_Esd_Dl.h **** #endif
  86:FT_Esd_Framework/Ft_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, (4UL << 24) | (rgb));
 113              		.loc 2 86 0
 114 0024 0C4B     		ldr	r3, .L7+8
 115 0026 1A68     		ldr	r2, [r3]
 116 0028 FB68     		ldr	r3, [r7, #12]
 117 002a 43F08063 		orr	r3, r3, #67108864
 118 002e 1946     		mov	r1, r3
 119 0030 1046     		mov	r0, r2
 120 0032 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  87:FT_Esd_Framework/Ft_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  88:FT_Esd_Framework/Ft_Esd_Dl.h **** 		FT_ESD_STATE.ColorRGB = rgb;
 121              		.loc 2 88 0
 122 0036 064B     		ldr	r3, .L7
 123 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 124 003a 064A     		ldr	r2, .L7+4
 125 003c 1B01     		lsls	r3, r3, #4
 126 003e 1344     		add	r3, r3, r2
 127 0040 0433     		adds	r3, r3, #4
 128 0042 FA68     		ldr	r2, [r7, #12]
 129 0044 1A60     		str	r2, [r3]
 130              	.L6:
  89:FT_Esd_Framework/Ft_Esd_Dl.h **** 	}
  90:FT_Esd_Framework/Ft_Esd_Dl.h **** #endif
  91:FT_Esd_Framework/Ft_Esd_Dl.h **** }
 131              		.loc 2 91 0
 132 0046 00BF     		nop
 133 0048 1037     		adds	r7, r7, #16
 134              	.LCFI9:
 135              		.cfi_def_cfa_offset 8
 136 004a BD46     		mov	sp, r7
 137              	.LCFI10:
 138              		.cfi_def_cfa_register 13
 139              		@ sp needed
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s 			page 7


 140 004c 80BD     		pop	{r7, pc}
 141              	.L8:
 142 004e 00BF     		.align	2
 143              	.L7:
 144 0050 00000000 		.word	Ft_Esd_GpuState_I
 145 0054 00000000 		.word	Ft_Esd_GpuState
 146 0058 00000000 		.word	Ft_Esd_Host
 147              		.cfi_endproc
 148              	.LFE17:
 150              		.section	.text.Ft_Esd_Dl_VERTEX_FORMAT,"ax",%progbits
 151              		.align	1
 152              		.syntax unified
 153              		.thumb
 154              		.thumb_func
 155              		.fpu fpv5-sp-d16
 157              	Ft_Esd_Dl_VERTEX_FORMAT:
 158              	.LFB24:
  92:FT_Esd_Framework/Ft_Esd_Dl.h **** //Specify alpha channel
  93:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_A, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  94:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_PARAMETER(alpha, Type = ft_uint8_t, Default = 255, Min = 0, Max = 255)
  95:FT_Esd_Framework/Ft_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_A(ft_uint8_t alpha)
  96:FT_Esd_Framework/Ft_Esd_Dl.h **** {
  97:FT_Esd_Framework/Ft_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  98:FT_Esd_Framework/Ft_Esd_Dl.h **** 	if (alpha != FT_ESD_STATE.ColorA)
  99:FT_Esd_Framework/Ft_Esd_Dl.h **** 	{
 100:FT_Esd_Framework/Ft_Esd_Dl.h **** #endif
 101:FT_Esd_Framework/Ft_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, COLOR_A(alpha));
 102:FT_Esd_Framework/Ft_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 103:FT_Esd_Framework/Ft_Esd_Dl.h **** 		FT_ESD_STATE.ColorA = alpha;
 104:FT_Esd_Framework/Ft_Esd_Dl.h **** 	}
 105:FT_Esd_Framework/Ft_Esd_Dl.h **** #endif
 106:FT_Esd_Framework/Ft_Esd_Dl.h **** }
 107:FT_Esd_Framework/Ft_Esd_Dl.h **** 
 108:FT_Esd_Framework/Ft_Esd_Dl.h **** //Specify color: Alpha(31~24 bit) + RGB(23~0 bit)
 109:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_ARGB, Type = ft_void_t, Category = EveRenderFunctions, Inline)
 110:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_PARAMETER(c, Type = ft_argb32_t, DisplayName = "Color")
 111:FT_Esd_Framework/Ft_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_ARGB(ft_uint32_t c)
 112:FT_Esd_Framework/Ft_Esd_Dl.h **** {
 113:FT_Esd_Framework/Ft_Esd_Dl.h **** 	Ft_Esd_Dl_COLOR_RGB(c);
 114:FT_Esd_Framework/Ft_Esd_Dl.h **** 	Ft_Esd_Dl_COLOR_A(c >> 24);
 115:FT_Esd_Framework/Ft_Esd_Dl.h **** }
 116:FT_Esd_Framework/Ft_Esd_Dl.h **** //Specify bitmap handle, see BITMAP_HANDLE
 117:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_BITMAP_HANDLE, Type = ft_void_t, Category = EveRenderFunctions, Inline)
 118:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_PARAMETER(handle, Type = ft_uint8_t, Min = 0, Max = 31)
 119:FT_Esd_Framework/Ft_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_BITMAP_HANDLE(ft_uint8_t handle)
 120:FT_Esd_Framework/Ft_Esd_Dl.h **** {
 121:FT_Esd_Framework/Ft_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 122:FT_Esd_Framework/Ft_Esd_Dl.h **** 	if (handle != FT_ESD_STATE.Handle)
 123:FT_Esd_Framework/Ft_Esd_Dl.h **** 	{
 124:FT_Esd_Framework/Ft_Esd_Dl.h **** #endif
 125:FT_Esd_Framework/Ft_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, BITMAP_HANDLE(handle));
 126:FT_Esd_Framework/Ft_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 127:FT_Esd_Framework/Ft_Esd_Dl.h **** 		FT_ESD_STATE.Handle = handle;
 128:FT_Esd_Framework/Ft_Esd_Dl.h **** 	}
 129:FT_Esd_Framework/Ft_Esd_Dl.h **** #endif
 130:FT_Esd_Framework/Ft_Esd_Dl.h **** }
 131:FT_Esd_Framework/Ft_Esd_Dl.h **** 
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s 			page 8


 132:FT_Esd_Framework/Ft_Esd_Dl.h **** //Specify cell number for bitmap, see CELL 
 133:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_CELL, Type = ft_void_t, Category = EveRenderFunctions, Inline)
 134:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_PARAMETER(cell, Type = ft_uint8_t, Min = 0, Max = 255)
 135:FT_Esd_Framework/Ft_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_CELL(ft_uint8_t cell)
 136:FT_Esd_Framework/Ft_Esd_Dl.h **** {
 137:FT_Esd_Framework/Ft_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 138:FT_Esd_Framework/Ft_Esd_Dl.h **** 	if (cell != FT_ESD_STATE.Cell)
 139:FT_Esd_Framework/Ft_Esd_Dl.h **** 	{
 140:FT_Esd_Framework/Ft_Esd_Dl.h **** #endif
 141:FT_Esd_Framework/Ft_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, CELL(cell));
 142:FT_Esd_Framework/Ft_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 143:FT_Esd_Framework/Ft_Esd_Dl.h **** 		FT_ESD_STATE.Cell = cell;
 144:FT_Esd_Framework/Ft_Esd_Dl.h **** 	}
 145:FT_Esd_Framework/Ft_Esd_Dl.h **** #endif
 146:FT_Esd_Framework/Ft_Esd_Dl.h **** }
 147:FT_Esd_Framework/Ft_Esd_Dl.h **** //Save EVE context, see SAVE_CONTEXT
 148:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_SAVE_CONTEXT, Type = ft_void_t, Category = EveRenderFunctions, Inline)
 149:FT_Esd_Framework/Ft_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_SAVE_CONTEXT()
 150:FT_Esd_Framework/Ft_Esd_Dl.h **** {
 151:FT_Esd_Framework/Ft_Esd_Dl.h **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, SAVE_CONTEXT());
 152:FT_Esd_Framework/Ft_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 153:FT_Esd_Framework/Ft_Esd_Dl.h **** 	ft_uint8_t nextState = Ft_Esd_GpuState_I + 1;
 154:FT_Esd_Framework/Ft_Esd_Dl.h **** 	if (nextState < FT_ESD_STATE_STACK_SIZE)
 155:FT_Esd_Framework/Ft_Esd_Dl.h **** 	{
 156:FT_Esd_Framework/Ft_Esd_Dl.h **** 		Ft_Esd_GpuState[nextState] = Ft_Esd_GpuState[Ft_Esd_GpuState_I];
 157:FT_Esd_Framework/Ft_Esd_Dl.h **** 		Ft_Esd_GpuState_I = nextState;
 158:FT_Esd_Framework/Ft_Esd_Dl.h **** 	}
 159:FT_Esd_Framework/Ft_Esd_Dl.h **** #endif
 160:FT_Esd_Framework/Ft_Esd_Dl.h **** }
 161:FT_Esd_Framework/Ft_Esd_Dl.h **** //Restore EVE context, see RESTORE_CONTEXT
 162:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_RESTORE_CONTEXT, Type = ft_void_t, Category = EveRenderFunctions, Inline)
 163:FT_Esd_Framework/Ft_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_RESTORE_CONTEXT()
 164:FT_Esd_Framework/Ft_Esd_Dl.h **** {
 165:FT_Esd_Framework/Ft_Esd_Dl.h **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, RESTORE_CONTEXT());
 166:FT_Esd_Framework/Ft_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 167:FT_Esd_Framework/Ft_Esd_Dl.h **** 	if (Ft_Esd_GpuState_I > 0)
 168:FT_Esd_Framework/Ft_Esd_Dl.h **** 		--Ft_Esd_GpuState_I;
 169:FT_Esd_Framework/Ft_Esd_Dl.h **** #endif
 170:FT_Esd_Framework/Ft_Esd_Dl.h **** }
 171:FT_Esd_Framework/Ft_Esd_Dl.h **** 
 172:FT_Esd_Framework/Ft_Esd_Dl.h **** //Specify vertex format , see VERTEX_FORMAT command
 173:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_VERTEX_FORMAT, Type = ft_void_t, Category = EveRenderFunctions, Inline)
 174:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_PARAMETER(frac, Type = ft_uint8_t, Min = 0, Max = 4)
 175:FT_Esd_Framework/Ft_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_VERTEX_FORMAT(ft_uint8_t frac)
 176:FT_Esd_Framework/Ft_Esd_Dl.h **** {
 159              		.loc 2 176 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 8
 162              		@ frame_needed = 1, uses_anonymous_args = 0
 163 0000 80B5     		push	{r7, lr}
 164              	.LCFI11:
 165              		.cfi_def_cfa_offset 8
 166              		.cfi_offset 7, -8
 167              		.cfi_offset 14, -4
 168 0002 82B0     		sub	sp, sp, #8
 169              	.LCFI12:
 170              		.cfi_def_cfa_offset 16
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s 			page 9


 171 0004 00AF     		add	r7, sp, #0
 172              	.LCFI13:
 173              		.cfi_def_cfa_register 7
 174 0006 0346     		mov	r3, r0
 175 0008 FB71     		strb	r3, [r7, #7]
 177:FT_Esd_Framework/Ft_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 178:FT_Esd_Framework/Ft_Esd_Dl.h **** 	if (frac != FT_ESD_STATE.VertexFormat)
 176              		.loc 2 178 0
 177 000a 104B     		ldr	r3, .L12
 178 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 179 000e 104A     		ldr	r2, .L12+4
 180 0010 1B01     		lsls	r3, r3, #4
 181 0012 1344     		add	r3, r3, r2
 182 0014 0C33     		adds	r3, r3, #12
 183 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 184 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 185 001a 9A42     		cmp	r2, r3
 186 001c 12D0     		beq	.L11
 179:FT_Esd_Framework/Ft_Esd_Dl.h **** 	{
 180:FT_Esd_Framework/Ft_Esd_Dl.h **** #endif
 181:FT_Esd_Framework/Ft_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, VERTEX_FORMAT(frac));
 187              		.loc 2 181 0
 188 001e 0D4B     		ldr	r3, .L12+8
 189 0020 1A68     		ldr	r2, [r3]
 190 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 191 0024 03F00703 		and	r3, r3, #7
 192 0028 43F01C53 		orr	r3, r3, #654311424
 193 002c 1946     		mov	r1, r3
 194 002e 1046     		mov	r0, r2
 195 0030 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 182:FT_Esd_Framework/Ft_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 183:FT_Esd_Framework/Ft_Esd_Dl.h **** 		FT_ESD_STATE.VertexFormat = frac;
 196              		.loc 2 183 0
 197 0034 054B     		ldr	r3, .L12
 198 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 199 0038 054A     		ldr	r2, .L12+4
 200 003a 1B01     		lsls	r3, r3, #4
 201 003c 1344     		add	r3, r3, r2
 202 003e 0C33     		adds	r3, r3, #12
 203 0040 FA79     		ldrb	r2, [r7, #7]
 204 0042 1A70     		strb	r2, [r3]
 205              	.L11:
 184:FT_Esd_Framework/Ft_Esd_Dl.h **** 	}
 185:FT_Esd_Framework/Ft_Esd_Dl.h **** #endif
 186:FT_Esd_Framework/Ft_Esd_Dl.h **** }
 206              		.loc 2 186 0
 207 0044 00BF     		nop
 208 0046 0837     		adds	r7, r7, #8
 209              	.LCFI14:
 210              		.cfi_def_cfa_offset 8
 211 0048 BD46     		mov	sp, r7
 212              	.LCFI15:
 213              		.cfi_def_cfa_register 13
 214              		@ sp needed
 215 004a 80BD     		pop	{r7, pc}
 216              	.L13:
 217              		.align	2
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s 			page 10


 218              	.L12:
 219 004c 00000000 		.word	Ft_Esd_GpuState_I
 220 0050 00000000 		.word	Ft_Esd_GpuState
 221 0054 00000000 		.word	Ft_Esd_Host
 222              		.cfi_endproc
 223              	.LFE24:
 225              		.section	.text.Ft_Esd_Elements_PanelSunken,"ax",%progbits
 226              		.align	1
 227              		.global	Ft_Esd_Elements_PanelSunken
 228              		.syntax unified
 229              		.thumb
 230              		.thumb_func
 231              		.fpu fpv5-sp-d16
 233              	Ft_Esd_Elements_PanelSunken:
 234              	.LFB27:
 235              		.file 3 "FT_Esd_Widgets/Ft_Esd_Elements.c"
   1:FT_Esd_Widgets/Ft_Esd_Elements.c **** /*
   2:FT_Esd_Widgets/Ft_Esd_Elements.c **** 
   3:FT_Esd_Widgets/Ft_Esd_Elements.c **** Copyright (C) 2016  BridgeTek Pte Ltd
   4:FT_Esd_Widgets/Ft_Esd_Elements.c **** 
   5:FT_Esd_Widgets/Ft_Esd_Elements.c **** THIS SOFTWARE IS PROVIDED BY BridgeTek Pte Ltd "AS IS"
   6:FT_Esd_Widgets/Ft_Esd_Elements.c **** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
   7:FT_Esd_Widgets/Ft_Esd_Elements.c **** OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
   8:FT_Esd_Widgets/Ft_Esd_Elements.c **** BridgeTek Pte Ltd BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
   9:FT_Esd_Widgets/Ft_Esd_Elements.c **** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
  10:FT_Esd_Widgets/Ft_Esd_Elements.c **** OF SUBSTITUTE GOODS OR SERVICES LOSS OF USE, DATA, OR PROFITS OR BUSINESS INTERRUPTION)
  11:FT_Esd_Widgets/Ft_Esd_Elements.c **** HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
  12:FT_Esd_Widgets/Ft_Esd_Elements.c **** TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  13:FT_Esd_Widgets/Ft_Esd_Elements.c **** EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  14:FT_Esd_Widgets/Ft_Esd_Elements.c **** 
  15:FT_Esd_Widgets/Ft_Esd_Elements.c **** Author: Jan Boon <jan.boon@kaetemi.be>
  16:FT_Esd_Widgets/Ft_Esd_Elements.c **** 
  17:FT_Esd_Widgets/Ft_Esd_Elements.c **** */
  18:FT_Esd_Widgets/Ft_Esd_Elements.c **** 
  19:FT_Esd_Widgets/Ft_Esd_Elements.c **** #include "Ft_Esd_Elements.h"
  20:FT_Esd_Widgets/Ft_Esd_Elements.c **** #include "Ft_Esd_Dl.h"
  21:FT_Esd_Widgets/Ft_Esd_Elements.c **** 
  22:FT_Esd_Widgets/Ft_Esd_Elements.c **** #define FT_ESD_DL_END 0
  23:FT_Esd_Widgets/Ft_Esd_Elements.c **** 
  24:FT_Esd_Widgets/Ft_Esd_Elements.c **** #ifdef FT_81X_ENABLE
  25:FT_Esd_Widgets/Ft_Esd_Elements.c **** #	define VERTEX2F2(x, y) VERTEX2F((x), (y))
  26:FT_Esd_Widgets/Ft_Esd_Elements.c **** #else
  27:FT_Esd_Widgets/Ft_Esd_Elements.c **** #	define VERTEX2F2(x, y) VERTEX2F((x) << 2, (y) << 2)
  28:FT_Esd_Widgets/Ft_Esd_Elements.c **** #endif
  29:FT_Esd_Widgets/Ft_Esd_Elements.c **** 
  30:FT_Esd_Widgets/Ft_Esd_Elements.c **** extern Ft_Gpu_Hal_Context_t *Ft_Esd_Host;
  31:FT_Esd_Widgets/Ft_Esd_Elements.c **** 
  32:FT_Esd_Widgets/Ft_Esd_Elements.c **** void Ft_Esd_Elements_PanelSunken(ft_rgb32_t color, ft_int16_t x, ft_int16_t y, ft_int16_t width, ft
  33:FT_Esd_Widgets/Ft_Esd_Elements.c **** {
 236              		.loc 3 33 0
 237              		.cfi_startproc
 238              		@ args = 8, pretend = 0, frame = 40
 239              		@ frame_needed = 1, uses_anonymous_args = 0
 240 0000 80B5     		push	{r7, lr}
 241              	.LCFI16:
 242              		.cfi_def_cfa_offset 8
 243              		.cfi_offset 7, -8
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s 			page 11


 244              		.cfi_offset 14, -4
 245 0002 8AB0     		sub	sp, sp, #40
 246              	.LCFI17:
 247              		.cfi_def_cfa_offset 48
 248 0004 00AF     		add	r7, sp, #0
 249              	.LCFI18:
 250              		.cfi_def_cfa_register 7
 251 0006 F860     		str	r0, [r7, #12]
 252 0008 0846     		mov	r0, r1
 253 000a 1146     		mov	r1, r2
 254 000c 1A46     		mov	r2, r3
 255 000e 0346     		mov	r3, r0	@ movhi
 256 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 257 0012 0B46     		mov	r3, r1	@ movhi
 258 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 259 0016 1346     		mov	r3, r2	@ movhi
 260 0018 FB80     		strh	r3, [r7, #6]	@ movhi
  34:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_Context_t *phost = Ft_Esd_Host;
 261              		.loc 3 34 0
 262 001a 594B     		ldr	r3, .L15
 263 001c 1B68     		ldr	r3, [r3]
 264 001e 7B62     		str	r3, [r7, #36]
  35:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	ft_int32_t lw = ((ft_int32_t)radius << 4) + 8;
 265              		.loc 3 35 0
 266 0020 B7F93430 		ldrsh	r3, [r7, #52]
 267 0024 1B01     		lsls	r3, r3, #4
 268 0026 0833     		adds	r3, r3, #8
 269 0028 3B62     		str	r3, [r7, #32]
  36:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	ft_int32_t x0 = ((ft_int32_t)x << 2) + ((ft_int32_t)radius << 2) + 4;
 270              		.loc 3 36 0
 271 002a B7F90A30 		ldrsh	r3, [r7, #10]
 272 002e 9A00     		lsls	r2, r3, #2
 273 0030 B7F93430 		ldrsh	r3, [r7, #52]
 274 0034 9B00     		lsls	r3, r3, #2
 275 0036 1344     		add	r3, r3, r2
 276 0038 0433     		adds	r3, r3, #4
 277 003a FB61     		str	r3, [r7, #28]
  37:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	ft_int32_t y0 = ((ft_int32_t)y << 2) + ((ft_int32_t)radius << 2) + 4;
 278              		.loc 3 37 0
 279 003c B7F90830 		ldrsh	r3, [r7, #8]
 280 0040 9A00     		lsls	r2, r3, #2
 281 0042 B7F93430 		ldrsh	r3, [r7, #52]
 282 0046 9B00     		lsls	r3, r3, #2
 283 0048 1344     		add	r3, r3, r2
 284 004a 0433     		adds	r3, r3, #4
 285 004c BB61     		str	r3, [r7, #24]
  38:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	ft_int32_t x1 = ((ft_int32_t)x << 2) + ((ft_int32_t)width << 2) - 4 - ((ft_int32_t)radius << 2);
 286              		.loc 3 38 0
 287 004e B7F90A30 		ldrsh	r3, [r7, #10]
 288 0052 9A00     		lsls	r2, r3, #2
 289 0054 B7F90630 		ldrsh	r3, [r7, #6]
 290 0058 9B00     		lsls	r3, r3, #2
 291 005a 1344     		add	r3, r3, r2
 292 005c 1A1F     		subs	r2, r3, #4
 293 005e B7F93430 		ldrsh	r3, [r7, #52]
 294 0062 9B00     		lsls	r3, r3, #2
 295 0064 D31A     		subs	r3, r2, r3
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s 			page 12


 296 0066 7B61     		str	r3, [r7, #20]
  39:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	ft_int32_t y1 = ((ft_int32_t)y << 2) + ((ft_int32_t)height << 2) - 4 - ((ft_int32_t)radius << 2);
 297              		.loc 3 39 0
 298 0068 B7F90830 		ldrsh	r3, [r7, #8]
 299 006c 9A00     		lsls	r2, r3, #2
 300 006e B7F93030 		ldrsh	r3, [r7, #48]
 301 0072 9B00     		lsls	r3, r3, #2
 302 0074 1344     		add	r3, r3, r2
 303 0076 1A1F     		subs	r2, r3, #4
 304 0078 B7F93430 		ldrsh	r3, [r7, #52]
 305 007c 9B00     		lsls	r3, r3, #2
 306 007e D31A     		subs	r3, r2, r3
 307 0080 3B61     		str	r3, [r7, #16]
  40:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_WrCmd32(phost, BEGIN(RECTS));
 308              		.loc 3 40 0
 309 0082 4049     		ldr	r1, .L15+4
 310 0084 786A     		ldr	r0, [r7, #36]
 311 0086 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  41:FT_Esd_Widgets/Ft_Esd_Elements.c **** #ifdef FT_81X_ENABLE
  42:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Esd_Dl_VERTEX_FORMAT(2);
 312              		.loc 3 42 0
 313 008a 0220     		movs	r0, #2
 314 008c FFF7FEFF 		bl	Ft_Esd_Dl_VERTEX_FORMAT
  43:FT_Esd_Widgets/Ft_Esd_Elements.c **** #endif
  44:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Esd_Dl_COLOR_RGB(0xFFFFFF);
 315              		.loc 3 44 0
 316 0090 6FF07F40 		mvn	r0, #-16777216
 317 0094 FFF7FEFF 		bl	Ft_Esd_Dl_COLOR_RGB
  45:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_WrCmd32(phost, LINE_WIDTH(lw));
 318              		.loc 3 45 0
 319 0098 3B6A     		ldr	r3, [r7, #32]
 320 009a C3F30B03 		ubfx	r3, r3, #0, #12
 321 009e 43F06063 		orr	r3, r3, #234881024
 322 00a2 1946     		mov	r1, r3
 323 00a4 786A     		ldr	r0, [r7, #36]
 324 00a6 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  46:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_WrCmd32(phost, VERTEX2F2(x0 + 2, y0 + 2));
 325              		.loc 3 46 0
 326 00aa FB69     		ldr	r3, [r7, #28]
 327 00ac 0233     		adds	r3, r3, #2
 328 00ae DA03     		lsls	r2, r3, #15
 329 00b0 354B     		ldr	r3, .L15+8
 330 00b2 1340     		ands	r3, r3, r2
 331 00b4 BA69     		ldr	r2, [r7, #24]
 332 00b6 0232     		adds	r2, r2, #2
 333 00b8 C2F30E02 		ubfx	r2, r2, #0, #15
 334 00bc 1343     		orrs	r3, r3, r2
 335 00be 43F08043 		orr	r3, r3, #1073741824
 336 00c2 1946     		mov	r1, r3
 337 00c4 786A     		ldr	r0, [r7, #36]
 338 00c6 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  47:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_WrCmd32(phost, VERTEX2F2(x1 + 4, y1 + 4));
 339              		.loc 3 47 0
 340 00ca 7B69     		ldr	r3, [r7, #20]
 341 00cc 0433     		adds	r3, r3, #4
 342 00ce DA03     		lsls	r2, r3, #15
 343 00d0 2D4B     		ldr	r3, .L15+8
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s 			page 13


 344 00d2 1340     		ands	r3, r3, r2
 345 00d4 3A69     		ldr	r2, [r7, #16]
 346 00d6 0432     		adds	r2, r2, #4
 347 00d8 C2F30E02 		ubfx	r2, r2, #0, #15
 348 00dc 1343     		orrs	r3, r3, r2
 349 00de 43F08043 		orr	r3, r3, #1073741824
 350 00e2 1946     		mov	r1, r3
 351 00e4 786A     		ldr	r0, [r7, #36]
 352 00e6 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  48:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Esd_Dl_COLOR_RGB(0x000000);
 353              		.loc 3 48 0
 354 00ea 0020     		movs	r0, #0
 355 00ec FFF7FEFF 		bl	Ft_Esd_Dl_COLOR_RGB
  49:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_WrCmd32(phost, VERTEX2F2(x0 - 5, y0 - 5));
 356              		.loc 3 49 0
 357 00f0 FB69     		ldr	r3, [r7, #28]
 358 00f2 053B     		subs	r3, r3, #5
 359 00f4 DA03     		lsls	r2, r3, #15
 360 00f6 244B     		ldr	r3, .L15+8
 361 00f8 1340     		ands	r3, r3, r2
 362 00fa BA69     		ldr	r2, [r7, #24]
 363 00fc 053A     		subs	r2, r2, #5
 364 00fe C2F30E02 		ubfx	r2, r2, #0, #15
 365 0102 1343     		orrs	r3, r3, r2
 366 0104 43F08043 		orr	r3, r3, #1073741824
 367 0108 1946     		mov	r1, r3
 368 010a 786A     		ldr	r0, [r7, #36]
 369 010c FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  50:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_WrCmd32(phost, VERTEX2F2(x1 - 1, y1 - 1));
 370              		.loc 3 50 0
 371 0110 7B69     		ldr	r3, [r7, #20]
 372 0112 013B     		subs	r3, r3, #1
 373 0114 DA03     		lsls	r2, r3, #15
 374 0116 1C4B     		ldr	r3, .L15+8
 375 0118 1340     		ands	r3, r3, r2
 376 011a 3A69     		ldr	r2, [r7, #16]
 377 011c 013A     		subs	r2, r2, #1
 378 011e C2F30E02 		ubfx	r2, r2, #0, #15
 379 0122 1343     		orrs	r3, r3, r2
 380 0124 43F08043 		orr	r3, r3, #1073741824
 381 0128 1946     		mov	r1, r3
 382 012a 786A     		ldr	r0, [r7, #36]
 383 012c FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  51:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Esd_Dl_COLOR_RGB(color);
 384              		.loc 3 51 0
 385 0130 F868     		ldr	r0, [r7, #12]
 386 0132 FFF7FEFF 		bl	Ft_Esd_Dl_COLOR_RGB
  52:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_WrCmd32(phost, VERTEX2F2(x0 - 2, y0 - 2));
 387              		.loc 3 52 0
 388 0136 FB69     		ldr	r3, [r7, #28]
 389 0138 023B     		subs	r3, r3, #2
 390 013a DA03     		lsls	r2, r3, #15
 391 013c 124B     		ldr	r3, .L15+8
 392 013e 1340     		ands	r3, r3, r2
 393 0140 BA69     		ldr	r2, [r7, #24]
 394 0142 023A     		subs	r2, r2, #2
 395 0144 C2F30E02 		ubfx	r2, r2, #0, #15
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s 			page 14


 396 0148 1343     		orrs	r3, r3, r2
 397 014a 43F08043 		orr	r3, r3, #1073741824
 398 014e 1946     		mov	r1, r3
 399 0150 786A     		ldr	r0, [r7, #36]
 400 0152 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  53:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_WrCmd32(phost, VERTEX2F2(x1 + 2, y1 + 2));
 401              		.loc 3 53 0
 402 0156 7B69     		ldr	r3, [r7, #20]
 403 0158 0233     		adds	r3, r3, #2
 404 015a DA03     		lsls	r2, r3, #15
 405 015c 0A4B     		ldr	r3, .L15+8
 406 015e 1340     		ands	r3, r3, r2
 407 0160 3A69     		ldr	r2, [r7, #16]
 408 0162 0232     		adds	r2, r2, #2
 409 0164 C2F30E02 		ubfx	r2, r2, #0, #15
 410 0168 1343     		orrs	r3, r3, r2
 411 016a 43F08043 		orr	r3, r3, #1073741824
 412 016e 1946     		mov	r1, r3
 413 0170 786A     		ldr	r0, [r7, #36]
 414 0172 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  54:FT_Esd_Widgets/Ft_Esd_Elements.c **** #if FT_ESD_DL_END
  55:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_WrCmd32(phost, END());
  56:FT_Esd_Widgets/Ft_Esd_Elements.c **** #endif
  57:FT_Esd_Widgets/Ft_Esd_Elements.c **** }
 415              		.loc 3 57 0
 416 0176 00BF     		nop
 417 0178 2837     		adds	r7, r7, #40
 418              	.LCFI19:
 419              		.cfi_def_cfa_offset 8
 420 017a BD46     		mov	sp, r7
 421              	.LCFI20:
 422              		.cfi_def_cfa_register 13
 423              		@ sp needed
 424 017c 80BD     		pop	{r7, pc}
 425              	.L16:
 426 017e 00BF     		.align	2
 427              	.L15:
 428 0180 00000000 		.word	Ft_Esd_Host
 429 0184 0900001F 		.word	520093705
 430 0188 0080FF3F 		.word	1073709056
 431              		.cfi_endproc
 432              	.LFE27:
 434              		.section	.text.Ft_Esd_Elements_PanelRaised,"ax",%progbits
 435              		.align	1
 436              		.global	Ft_Esd_Elements_PanelRaised
 437              		.syntax unified
 438              		.thumb
 439              		.thumb_func
 440              		.fpu fpv5-sp-d16
 442              	Ft_Esd_Elements_PanelRaised:
 443              	.LFB28:
  58:FT_Esd_Widgets/Ft_Esd_Elements.c **** 
  59:FT_Esd_Widgets/Ft_Esd_Elements.c **** void Ft_Esd_Elements_PanelRaised(ft_rgb32_t color, ft_int16_t x, ft_int16_t y, ft_int16_t width, ft
  60:FT_Esd_Widgets/Ft_Esd_Elements.c **** {
 444              		.loc 3 60 0
 445              		.cfi_startproc
 446              		@ args = 8, pretend = 0, frame = 40
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s 			page 15


 447              		@ frame_needed = 1, uses_anonymous_args = 0
 448 0000 80B5     		push	{r7, lr}
 449              	.LCFI21:
 450              		.cfi_def_cfa_offset 8
 451              		.cfi_offset 7, -8
 452              		.cfi_offset 14, -4
 453 0002 8AB0     		sub	sp, sp, #40
 454              	.LCFI22:
 455              		.cfi_def_cfa_offset 48
 456 0004 00AF     		add	r7, sp, #0
 457              	.LCFI23:
 458              		.cfi_def_cfa_register 7
 459 0006 F860     		str	r0, [r7, #12]
 460 0008 0846     		mov	r0, r1
 461 000a 1146     		mov	r1, r2
 462 000c 1A46     		mov	r2, r3
 463 000e 0346     		mov	r3, r0	@ movhi
 464 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 465 0012 0B46     		mov	r3, r1	@ movhi
 466 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 467 0016 1346     		mov	r3, r2	@ movhi
 468 0018 FB80     		strh	r3, [r7, #6]	@ movhi
  61:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_Context_t *phost = Ft_Esd_Host;
 469              		.loc 3 61 0
 470 001a 594B     		ldr	r3, .L18
 471 001c 1B68     		ldr	r3, [r3]
 472 001e 7B62     		str	r3, [r7, #36]
  62:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	ft_int32_t lw = ((ft_int32_t)radius << 4) + 12;
 473              		.loc 3 62 0
 474 0020 B7F93430 		ldrsh	r3, [r7, #52]
 475 0024 1B01     		lsls	r3, r3, #4
 476 0026 0C33     		adds	r3, r3, #12
 477 0028 3B62     		str	r3, [r7, #32]
  63:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	ft_int32_t x0 = ((ft_int32_t)x << 2) + ((ft_int32_t)radius << 2) + 6;
 478              		.loc 3 63 0
 479 002a B7F90A30 		ldrsh	r3, [r7, #10]
 480 002e 9A00     		lsls	r2, r3, #2
 481 0030 B7F93430 		ldrsh	r3, [r7, #52]
 482 0034 9B00     		lsls	r3, r3, #2
 483 0036 1344     		add	r3, r3, r2
 484 0038 0633     		adds	r3, r3, #6
 485 003a FB61     		str	r3, [r7, #28]
  64:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	ft_int32_t y0 = ((ft_int32_t)y << 2) + ((ft_int32_t)radius << 2) + 6;
 486              		.loc 3 64 0
 487 003c B7F90830 		ldrsh	r3, [r7, #8]
 488 0040 9A00     		lsls	r2, r3, #2
 489 0042 B7F93430 		ldrsh	r3, [r7, #52]
 490 0046 9B00     		lsls	r3, r3, #2
 491 0048 1344     		add	r3, r3, r2
 492 004a 0633     		adds	r3, r3, #6
 493 004c BB61     		str	r3, [r7, #24]
  65:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	ft_int32_t x1 = ((ft_int32_t)x << 2) + ((ft_int32_t)width << 2) - 6 - ((ft_int32_t)radius << 2);
 494              		.loc 3 65 0
 495 004e B7F90A30 		ldrsh	r3, [r7, #10]
 496 0052 9A00     		lsls	r2, r3, #2
 497 0054 B7F90630 		ldrsh	r3, [r7, #6]
 498 0058 9B00     		lsls	r3, r3, #2
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s 			page 16


 499 005a 1344     		add	r3, r3, r2
 500 005c 9A1F     		subs	r2, r3, #6
 501 005e B7F93430 		ldrsh	r3, [r7, #52]
 502 0062 9B00     		lsls	r3, r3, #2
 503 0064 D31A     		subs	r3, r2, r3
 504 0066 7B61     		str	r3, [r7, #20]
  66:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	ft_int32_t y1 = ((ft_int32_t)y << 2) + ((ft_int32_t)height << 2) - 6 - ((ft_int32_t)radius << 2);
 505              		.loc 3 66 0
 506 0068 B7F90830 		ldrsh	r3, [r7, #8]
 507 006c 9A00     		lsls	r2, r3, #2
 508 006e B7F93030 		ldrsh	r3, [r7, #48]
 509 0072 9B00     		lsls	r3, r3, #2
 510 0074 1344     		add	r3, r3, r2
 511 0076 9A1F     		subs	r2, r3, #6
 512 0078 B7F93430 		ldrsh	r3, [r7, #52]
 513 007c 9B00     		lsls	r3, r3, #2
 514 007e D31A     		subs	r3, r2, r3
 515 0080 3B61     		str	r3, [r7, #16]
  67:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_WrCmd32(phost, BEGIN(RECTS));
 516              		.loc 3 67 0
 517 0082 4049     		ldr	r1, .L18+4
 518 0084 786A     		ldr	r0, [r7, #36]
 519 0086 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  68:FT_Esd_Widgets/Ft_Esd_Elements.c **** #ifdef FT_81X_ENABLE
  69:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Esd_Dl_VERTEX_FORMAT(2);
 520              		.loc 3 69 0
 521 008a 0220     		movs	r0, #2
 522 008c FFF7FEFF 		bl	Ft_Esd_Dl_VERTEX_FORMAT
  70:FT_Esd_Widgets/Ft_Esd_Elements.c **** #endif
  71:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Esd_Dl_COLOR_RGB(0x000000);
 523              		.loc 3 71 0
 524 0090 0020     		movs	r0, #0
 525 0092 FFF7FEFF 		bl	Ft_Esd_Dl_COLOR_RGB
  72:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_WrCmd32(phost, LINE_WIDTH(lw));
 526              		.loc 3 72 0
 527 0096 3B6A     		ldr	r3, [r7, #32]
 528 0098 C3F30B03 		ubfx	r3, r3, #0, #12
 529 009c 43F06063 		orr	r3, r3, #234881024
 530 00a0 1946     		mov	r1, r3
 531 00a2 786A     		ldr	r0, [r7, #36]
 532 00a4 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  73:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_WrCmd32(phost, VERTEX2F2(x0 + 1, y0 + 1));
 533              		.loc 3 73 0
 534 00a8 FB69     		ldr	r3, [r7, #28]
 535 00aa 0133     		adds	r3, r3, #1
 536 00ac DA03     		lsls	r2, r3, #15
 537 00ae 364B     		ldr	r3, .L18+8
 538 00b0 1340     		ands	r3, r3, r2
 539 00b2 BA69     		ldr	r2, [r7, #24]
 540 00b4 0132     		adds	r2, r2, #1
 541 00b6 C2F30E02 		ubfx	r2, r2, #0, #15
 542 00ba 1343     		orrs	r3, r3, r2
 543 00bc 43F08043 		orr	r3, r3, #1073741824
 544 00c0 1946     		mov	r1, r3
 545 00c2 786A     		ldr	r0, [r7, #36]
 546 00c4 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  74:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_WrCmd32(phost, VERTEX2F2(x1 + 7, y1 + 7));
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s 			page 17


 547              		.loc 3 74 0
 548 00c8 7B69     		ldr	r3, [r7, #20]
 549 00ca 0733     		adds	r3, r3, #7
 550 00cc DA03     		lsls	r2, r3, #15
 551 00ce 2E4B     		ldr	r3, .L18+8
 552 00d0 1340     		ands	r3, r3, r2
 553 00d2 3A69     		ldr	r2, [r7, #16]
 554 00d4 0732     		adds	r2, r2, #7
 555 00d6 C2F30E02 		ubfx	r2, r2, #0, #15
 556 00da 1343     		orrs	r3, r3, r2
 557 00dc 43F08043 		orr	r3, r3, #1073741824
 558 00e0 1946     		mov	r1, r3
 559 00e2 786A     		ldr	r0, [r7, #36]
 560 00e4 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  75:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Esd_Dl_COLOR_RGB(0xFFFFFF);
 561              		.loc 3 75 0
 562 00e8 6FF07F40 		mvn	r0, #-16777216
 563 00ec FFF7FEFF 		bl	Ft_Esd_Dl_COLOR_RGB
  76:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_WrCmd32(phost, VERTEX2F2(x0 - 5, y0 - 5));
 564              		.loc 3 76 0
 565 00f0 FB69     		ldr	r3, [r7, #28]
 566 00f2 053B     		subs	r3, r3, #5
 567 00f4 DA03     		lsls	r2, r3, #15
 568 00f6 244B     		ldr	r3, .L18+8
 569 00f8 1340     		ands	r3, r3, r2
 570 00fa BA69     		ldr	r2, [r7, #24]
 571 00fc 053A     		subs	r2, r2, #5
 572 00fe C2F30E02 		ubfx	r2, r2, #0, #15
 573 0102 1343     		orrs	r3, r3, r2
 574 0104 43F08043 		orr	r3, r3, #1073741824
 575 0108 1946     		mov	r1, r3
 576 010a 786A     		ldr	r0, [r7, #36]
 577 010c FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  77:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_WrCmd32(phost, VERTEX2F2(x1 + 1, y1 + 1));
 578              		.loc 3 77 0
 579 0110 7B69     		ldr	r3, [r7, #20]
 580 0112 0133     		adds	r3, r3, #1
 581 0114 DA03     		lsls	r2, r3, #15
 582 0116 1C4B     		ldr	r3, .L18+8
 583 0118 1340     		ands	r3, r3, r2
 584 011a 3A69     		ldr	r2, [r7, #16]
 585 011c 0132     		adds	r2, r2, #1
 586 011e C2F30E02 		ubfx	r2, r2, #0, #15
 587 0122 1343     		orrs	r3, r3, r2
 588 0124 43F08043 		orr	r3, r3, #1073741824
 589 0128 1946     		mov	r1, r3
 590 012a 786A     		ldr	r0, [r7, #36]
 591 012c FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  78:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Esd_Dl_COLOR_RGB(color);
 592              		.loc 3 78 0
 593 0130 F868     		ldr	r0, [r7, #12]
 594 0132 FFF7FEFF 		bl	Ft_Esd_Dl_COLOR_RGB
  79:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_WrCmd32(phost, VERTEX2F2(x0 - 3, y0 - 3));
 595              		.loc 3 79 0
 596 0136 FB69     		ldr	r3, [r7, #28]
 597 0138 033B     		subs	r3, r3, #3
 598 013a DA03     		lsls	r2, r3, #15
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s 			page 18


 599 013c 124B     		ldr	r3, .L18+8
 600 013e 1340     		ands	r3, r3, r2
 601 0140 BA69     		ldr	r2, [r7, #24]
 602 0142 033A     		subs	r2, r2, #3
 603 0144 C2F30E02 		ubfx	r2, r2, #0, #15
 604 0148 1343     		orrs	r3, r3, r2
 605 014a 43F08043 		orr	r3, r3, #1073741824
 606 014e 1946     		mov	r1, r3
 607 0150 786A     		ldr	r0, [r7, #36]
 608 0152 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  80:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_WrCmd32(phost, VERTEX2F2(x1 + 3, y1 + 3));
 609              		.loc 3 80 0
 610 0156 7B69     		ldr	r3, [r7, #20]
 611 0158 0333     		adds	r3, r3, #3
 612 015a DA03     		lsls	r2, r3, #15
 613 015c 0A4B     		ldr	r3, .L18+8
 614 015e 1340     		ands	r3, r3, r2
 615 0160 3A69     		ldr	r2, [r7, #16]
 616 0162 0332     		adds	r2, r2, #3
 617 0164 C2F30E02 		ubfx	r2, r2, #0, #15
 618 0168 1343     		orrs	r3, r3, r2
 619 016a 43F08043 		orr	r3, r3, #1073741824
 620 016e 1946     		mov	r1, r3
 621 0170 786A     		ldr	r0, [r7, #36]
 622 0172 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
  81:FT_Esd_Widgets/Ft_Esd_Elements.c **** #if FT_ESD_DL_END
  82:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_WrCmd32(phost, END());
  83:FT_Esd_Widgets/Ft_Esd_Elements.c **** #endif
  84:FT_Esd_Widgets/Ft_Esd_Elements.c **** }
 623              		.loc 3 84 0
 624 0176 00BF     		nop
 625 0178 2837     		adds	r7, r7, #40
 626              	.LCFI24:
 627              		.cfi_def_cfa_offset 8
 628 017a BD46     		mov	sp, r7
 629              	.LCFI25:
 630              		.cfi_def_cfa_register 13
 631              		@ sp needed
 632 017c 80BD     		pop	{r7, pc}
 633              	.L19:
 634 017e 00BF     		.align	2
 635              	.L18:
 636 0180 00000000 		.word	Ft_Esd_Host
 637 0184 0900001F 		.word	520093705
 638 0188 0080FF3F 		.word	1073709056
 639              		.cfi_endproc
 640              	.LFE28:
 642              		.section	.text.Ft_Esd_Elements_CircleSunken,"ax",%progbits
 643              		.align	1
 644              		.global	Ft_Esd_Elements_CircleSunken
 645              		.syntax unified
 646              		.thumb
 647              		.thumb_func
 648              		.fpu fpv5-sp-d16
 650              	Ft_Esd_Elements_CircleSunken:
 651              	.LFB29:
  85:FT_Esd_Widgets/Ft_Esd_Elements.c **** 
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s 			page 19


  86:FT_Esd_Widgets/Ft_Esd_Elements.c **** void Ft_Esd_Elements_CircleSunken(ft_rgb32_t color, ft_int16_t x, ft_int16_t y, ft_int16_t radius)
  87:FT_Esd_Widgets/Ft_Esd_Elements.c **** {
 652              		.loc 3 87 0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 32
 655              		@ frame_needed = 1, uses_anonymous_args = 0
 656 0000 80B5     		push	{r7, lr}
 657              	.LCFI26:
 658              		.cfi_def_cfa_offset 8
 659              		.cfi_offset 7, -8
 660              		.cfi_offset 14, -4
 661 0002 88B0     		sub	sp, sp, #32
 662              	.LCFI27:
 663              		.cfi_def_cfa_offset 40
 664 0004 00AF     		add	r7, sp, #0
 665              	.LCFI28:
 666              		.cfi_def_cfa_register 7
 667 0006 F860     		str	r0, [r7, #12]
 668 0008 0846     		mov	r0, r1
 669 000a 1146     		mov	r1, r2
 670 000c 1A46     		mov	r2, r3
 671 000e 0346     		mov	r3, r0	@ movhi
 672 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 673 0012 0B46     		mov	r3, r1	@ movhi
 674 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 675 0016 1346     		mov	r3, r2	@ movhi
 676 0018 FB80     		strh	r3, [r7, #6]	@ movhi
  88:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_Context_t *phost = Ft_Esd_Host;
 677              		.loc 3 88 0
 678 001a 2D4B     		ldr	r3, .L21
 679 001c 1B68     		ldr	r3, [r3]
 680 001e FB61     		str	r3, [r7, #28]
  89:FT_Esd_Widgets/Ft_Esd_Elements.c **** #if 0
  90:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	// Abuse CMD_CLOCK
  91:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_CoCmd_BgColor(phost, color);
  92:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_CoCmd_Clock(phost, x, y, radius, OPT_NOTICKS | OPT_NOHANDS, 0, 0, 0, 0);
  93:FT_Esd_Widgets/Ft_Esd_Elements.c **** #else
  94:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	ft_int32_t ps = ((ft_int32_t)radius << 4);
 681              		.loc 3 94 0
 682 0020 B7F90630 		ldrsh	r3, [r7, #6]
 683 0024 1B01     		lsls	r3, r3, #4
 684 0026 BB61     		str	r3, [r7, #24]
  95:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	ft_int32_t x2 = ((ft_int32_t)x << 2);
 685              		.loc 3 95 0
 686 0028 B7F90A30 		ldrsh	r3, [r7, #10]
 687 002c 9B00     		lsls	r3, r3, #2
 688 002e 7B61     		str	r3, [r7, #20]
  96:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	ft_int32_t y2 = ((ft_int32_t)y << 2);
 689              		.loc 3 96 0
 690 0030 B7F90830 		ldrsh	r3, [r7, #8]
 691 0034 9B00     		lsls	r3, r3, #2
 692 0036 3B61     		str	r3, [r7, #16]
  97:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_WrCmd32(phost, BEGIN(FTPOINTS));
 693              		.loc 3 97 0
 694 0038 2649     		ldr	r1, .L21+4
 695 003a F869     		ldr	r0, [r7, #28]
 696 003c FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s 			page 20


  98:FT_Esd_Widgets/Ft_Esd_Elements.c **** #	ifdef FT_81X_ENABLE
  99:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Esd_Dl_VERTEX_FORMAT(2);
 697              		.loc 3 99 0
 698 0040 0220     		movs	r0, #2
 699 0042 FFF7FEFF 		bl	Ft_Esd_Dl_VERTEX_FORMAT
 100:FT_Esd_Widgets/Ft_Esd_Elements.c **** #	endif
 101:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_WrCmd32(phost, POINT_SIZE(ps));
 700              		.loc 3 101 0
 701 0046 BB69     		ldr	r3, [r7, #24]
 702 0048 C3F30C03 		ubfx	r3, r3, #0, #13
 703 004c 43F05063 		orr	r3, r3, #218103808
 704 0050 1946     		mov	r1, r3
 705 0052 F869     		ldr	r0, [r7, #28]
 706 0054 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 102:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Esd_Dl_COLOR_RGB(0xFFFFFF);
 707              		.loc 3 102 0
 708 0058 6FF07F40 		mvn	r0, #-16777216
 709 005c FFF7FEFF 		bl	Ft_Esd_Dl_COLOR_RGB
 103:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_WrCmd32(phost, VERTEX2F2(x2 + 2, y2 + 2));
 710              		.loc 3 103 0
 711 0060 7B69     		ldr	r3, [r7, #20]
 712 0062 0233     		adds	r3, r3, #2
 713 0064 DA03     		lsls	r2, r3, #15
 714 0066 1C4B     		ldr	r3, .L21+8
 715 0068 1340     		ands	r3, r3, r2
 716 006a 3A69     		ldr	r2, [r7, #16]
 717 006c 0232     		adds	r2, r2, #2
 718 006e C2F30E02 		ubfx	r2, r2, #0, #15
 719 0072 1343     		orrs	r3, r3, r2
 720 0074 43F08043 		orr	r3, r3, #1073741824
 721 0078 1946     		mov	r1, r3
 722 007a F869     		ldr	r0, [r7, #28]
 723 007c FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 104:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Esd_Dl_COLOR_RGB(0x000000);
 724              		.loc 3 104 0
 725 0080 0020     		movs	r0, #0
 726 0082 FFF7FEFF 		bl	Ft_Esd_Dl_COLOR_RGB
 105:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_WrCmd32(phost, VERTEX2F2(x2 - 3, y2 - 3));
 727              		.loc 3 105 0
 728 0086 7B69     		ldr	r3, [r7, #20]
 729 0088 033B     		subs	r3, r3, #3
 730 008a DA03     		lsls	r2, r3, #15
 731 008c 124B     		ldr	r3, .L21+8
 732 008e 1340     		ands	r3, r3, r2
 733 0090 3A69     		ldr	r2, [r7, #16]
 734 0092 033A     		subs	r2, r2, #3
 735 0094 C2F30E02 		ubfx	r2, r2, #0, #15
 736 0098 1343     		orrs	r3, r3, r2
 737 009a 43F08043 		orr	r3, r3, #1073741824
 738 009e 1946     		mov	r1, r3
 739 00a0 F869     		ldr	r0, [r7, #28]
 740 00a2 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 106:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Esd_Dl_COLOR_RGB(color);
 741              		.loc 3 106 0
 742 00a6 F868     		ldr	r0, [r7, #12]
 743 00a8 FFF7FEFF 		bl	Ft_Esd_Dl_COLOR_RGB
 107:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_WrCmd32(phost, VERTEX2F2(x2, y2));
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s 			page 21


 744              		.loc 3 107 0
 745 00ac 7B69     		ldr	r3, [r7, #20]
 746 00ae DA03     		lsls	r2, r3, #15
 747 00b0 094B     		ldr	r3, .L21+8
 748 00b2 1340     		ands	r3, r3, r2
 749 00b4 3A69     		ldr	r2, [r7, #16]
 750 00b6 C2F30E02 		ubfx	r2, r2, #0, #15
 751 00ba 1343     		orrs	r3, r3, r2
 752 00bc 43F08043 		orr	r3, r3, #1073741824
 753 00c0 1946     		mov	r1, r3
 754 00c2 F869     		ldr	r0, [r7, #28]
 755 00c4 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 108:FT_Esd_Widgets/Ft_Esd_Elements.c **** #	if FT_ESD_DL_END
 109:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_WrCmd32(phost, END());
 110:FT_Esd_Widgets/Ft_Esd_Elements.c **** #	endif
 111:FT_Esd_Widgets/Ft_Esd_Elements.c **** #endif
 112:FT_Esd_Widgets/Ft_Esd_Elements.c **** }
 756              		.loc 3 112 0
 757 00c8 00BF     		nop
 758 00ca 2037     		adds	r7, r7, #32
 759              	.LCFI29:
 760              		.cfi_def_cfa_offset 8
 761 00cc BD46     		mov	sp, r7
 762              	.LCFI30:
 763              		.cfi_def_cfa_register 13
 764              		@ sp needed
 765 00ce 80BD     		pop	{r7, pc}
 766              	.L22:
 767              		.align	2
 768              	.L21:
 769 00d0 00000000 		.word	Ft_Esd_Host
 770 00d4 0200001F 		.word	520093698
 771 00d8 0080FF3F 		.word	1073709056
 772              		.cfi_endproc
 773              	.LFE29:
 775              		.section	.text.Ft_Esd_Elements_CircleRaised,"ax",%progbits
 776              		.align	1
 777              		.global	Ft_Esd_Elements_CircleRaised
 778              		.syntax unified
 779              		.thumb
 780              		.thumb_func
 781              		.fpu fpv5-sp-d16
 783              	Ft_Esd_Elements_CircleRaised:
 784              	.LFB30:
 113:FT_Esd_Widgets/Ft_Esd_Elements.c **** 
 114:FT_Esd_Widgets/Ft_Esd_Elements.c **** void Ft_Esd_Elements_CircleRaised(ft_rgb32_t color, ft_int16_t x, ft_int16_t y, ft_int16_t radius)
 115:FT_Esd_Widgets/Ft_Esd_Elements.c **** {
 785              		.loc 3 115 0
 786              		.cfi_startproc
 787              		@ args = 0, pretend = 0, frame = 32
 788              		@ frame_needed = 1, uses_anonymous_args = 0
 789 0000 80B5     		push	{r7, lr}
 790              	.LCFI31:
 791              		.cfi_def_cfa_offset 8
 792              		.cfi_offset 7, -8
 793              		.cfi_offset 14, -4
 794 0002 88B0     		sub	sp, sp, #32
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s 			page 22


 795              	.LCFI32:
 796              		.cfi_def_cfa_offset 40
 797 0004 00AF     		add	r7, sp, #0
 798              	.LCFI33:
 799              		.cfi_def_cfa_register 7
 800 0006 F860     		str	r0, [r7, #12]
 801 0008 0846     		mov	r0, r1
 802 000a 1146     		mov	r1, r2
 803 000c 1A46     		mov	r2, r3
 804 000e 0346     		mov	r3, r0	@ movhi
 805 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 806 0012 0B46     		mov	r3, r1	@ movhi
 807 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 808 0016 1346     		mov	r3, r2	@ movhi
 809 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 116:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_Context_t *phost = Ft_Esd_Host;
 810              		.loc 3 116 0
 811 001a 2D4B     		ldr	r3, .L24
 812 001c 1B68     		ldr	r3, [r3]
 813 001e FB61     		str	r3, [r7, #28]
 117:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	ft_int32_t ps = ((ft_int32_t)radius << 4);
 814              		.loc 3 117 0
 815 0020 B7F90630 		ldrsh	r3, [r7, #6]
 816 0024 1B01     		lsls	r3, r3, #4
 817 0026 BB61     		str	r3, [r7, #24]
 118:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	ft_int32_t x2 = ((ft_int32_t)x << 2);
 818              		.loc 3 118 0
 819 0028 B7F90A30 		ldrsh	r3, [r7, #10]
 820 002c 9B00     		lsls	r3, r3, #2
 821 002e 7B61     		str	r3, [r7, #20]
 119:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	ft_int32_t y2 = ((ft_int32_t)y << 2);
 822              		.loc 3 119 0
 823 0030 B7F90830 		ldrsh	r3, [r7, #8]
 824 0034 9B00     		lsls	r3, r3, #2
 825 0036 3B61     		str	r3, [r7, #16]
 120:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_WrCmd32(phost, BEGIN(FTPOINTS));
 826              		.loc 3 120 0
 827 0038 2649     		ldr	r1, .L24+4
 828 003a F869     		ldr	r0, [r7, #28]
 829 003c FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 121:FT_Esd_Widgets/Ft_Esd_Elements.c **** #ifdef FT_81X_ENABLE
 122:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Esd_Dl_VERTEX_FORMAT(2);
 830              		.loc 3 122 0
 831 0040 0220     		movs	r0, #2
 832 0042 FFF7FEFF 		bl	Ft_Esd_Dl_VERTEX_FORMAT
 123:FT_Esd_Widgets/Ft_Esd_Elements.c **** #endif
 124:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_WrCmd32(phost, POINT_SIZE(ps));
 833              		.loc 3 124 0
 834 0046 BB69     		ldr	r3, [r7, #24]
 835 0048 C3F30C03 		ubfx	r3, r3, #0, #13
 836 004c 43F05063 		orr	r3, r3, #218103808
 837 0050 1946     		mov	r1, r3
 838 0052 F869     		ldr	r0, [r7, #28]
 839 0054 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 125:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Esd_Dl_COLOR_RGB(0x000000);
 840              		.loc 3 125 0
 841 0058 0020     		movs	r0, #0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s 			page 23


 842 005a FFF7FEFF 		bl	Ft_Esd_Dl_COLOR_RGB
 126:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_WrCmd32(phost, VERTEX2F2(x2 + 4, y2 + 4));
 843              		.loc 3 126 0
 844 005e 7B69     		ldr	r3, [r7, #20]
 845 0060 0433     		adds	r3, r3, #4
 846 0062 DA03     		lsls	r2, r3, #15
 847 0064 1C4B     		ldr	r3, .L24+8
 848 0066 1340     		ands	r3, r3, r2
 849 0068 3A69     		ldr	r2, [r7, #16]
 850 006a 0432     		adds	r2, r2, #4
 851 006c C2F30E02 		ubfx	r2, r2, #0, #15
 852 0070 1343     		orrs	r3, r3, r2
 853 0072 43F08043 		orr	r3, r3, #1073741824
 854 0076 1946     		mov	r1, r3
 855 0078 F869     		ldr	r0, [r7, #28]
 856 007a FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 127:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Esd_Dl_COLOR_RGB(0xFFFFFF);
 857              		.loc 3 127 0
 858 007e 6FF07F40 		mvn	r0, #-16777216
 859 0082 FFF7FEFF 		bl	Ft_Esd_Dl_COLOR_RGB
 128:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_WrCmd32(phost, VERTEX2F2(x2 - 2, y2 - 2));
 860              		.loc 3 128 0
 861 0086 7B69     		ldr	r3, [r7, #20]
 862 0088 023B     		subs	r3, r3, #2
 863 008a DA03     		lsls	r2, r3, #15
 864 008c 124B     		ldr	r3, .L24+8
 865 008e 1340     		ands	r3, r3, r2
 866 0090 3A69     		ldr	r2, [r7, #16]
 867 0092 023A     		subs	r2, r2, #2
 868 0094 C2F30E02 		ubfx	r2, r2, #0, #15
 869 0098 1343     		orrs	r3, r3, r2
 870 009a 43F08043 		orr	r3, r3, #1073741824
 871 009e 1946     		mov	r1, r3
 872 00a0 F869     		ldr	r0, [r7, #28]
 873 00a2 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 129:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Esd_Dl_COLOR_RGB(color);
 874              		.loc 3 129 0
 875 00a6 F868     		ldr	r0, [r7, #12]
 876 00a8 FFF7FEFF 		bl	Ft_Esd_Dl_COLOR_RGB
 130:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_WrCmd32(phost, VERTEX2F2(x2, y2));
 877              		.loc 3 130 0
 878 00ac 7B69     		ldr	r3, [r7, #20]
 879 00ae DA03     		lsls	r2, r3, #15
 880 00b0 094B     		ldr	r3, .L24+8
 881 00b2 1340     		ands	r3, r3, r2
 882 00b4 3A69     		ldr	r2, [r7, #16]
 883 00b6 C2F30E02 		ubfx	r2, r2, #0, #15
 884 00ba 1343     		orrs	r3, r3, r2
 885 00bc 43F08043 		orr	r3, r3, #1073741824
 886 00c0 1946     		mov	r1, r3
 887 00c2 F869     		ldr	r0, [r7, #28]
 888 00c4 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 131:FT_Esd_Widgets/Ft_Esd_Elements.c **** #if FT_ESD_DL_END
 132:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_WrCmd32(phost, END());
 133:FT_Esd_Widgets/Ft_Esd_Elements.c **** #endif
 134:FT_Esd_Widgets/Ft_Esd_Elements.c **** }
 889              		.loc 3 134 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s 			page 24


 890 00c8 00BF     		nop
 891 00ca 2037     		adds	r7, r7, #32
 892              	.LCFI34:
 893              		.cfi_def_cfa_offset 8
 894 00cc BD46     		mov	sp, r7
 895              	.LCFI35:
 896              		.cfi_def_cfa_register 13
 897              		@ sp needed
 898 00ce 80BD     		pop	{r7, pc}
 899              	.L25:
 900              		.align	2
 901              	.L24:
 902 00d0 00000000 		.word	Ft_Esd_Host
 903 00d4 0200001F 		.word	520093698
 904 00d8 0080FF3F 		.word	1073709056
 905              		.cfi_endproc
 906              	.LFE30:
 908              		.section	.text.Ft_Esd_Elements_CircleFlat,"ax",%progbits
 909              		.align	1
 910              		.global	Ft_Esd_Elements_CircleFlat
 911              		.syntax unified
 912              		.thumb
 913              		.thumb_func
 914              		.fpu fpv5-sp-d16
 916              	Ft_Esd_Elements_CircleFlat:
 917              	.LFB31:
 135:FT_Esd_Widgets/Ft_Esd_Elements.c **** 
 136:FT_Esd_Widgets/Ft_Esd_Elements.c **** void Ft_Esd_Elements_CircleFlat(ft_rgb32_t color, ft_int16_t x, ft_int16_t y, ft_int16_t radius)
 137:FT_Esd_Widgets/Ft_Esd_Elements.c **** {
 918              		.loc 3 137 0
 919              		.cfi_startproc
 920              		@ args = 0, pretend = 0, frame = 32
 921              		@ frame_needed = 1, uses_anonymous_args = 0
 922 0000 80B5     		push	{r7, lr}
 923              	.LCFI36:
 924              		.cfi_def_cfa_offset 8
 925              		.cfi_offset 7, -8
 926              		.cfi_offset 14, -4
 927 0002 88B0     		sub	sp, sp, #32
 928              	.LCFI37:
 929              		.cfi_def_cfa_offset 40
 930 0004 00AF     		add	r7, sp, #0
 931              	.LCFI38:
 932              		.cfi_def_cfa_register 7
 933 0006 F860     		str	r0, [r7, #12]
 934 0008 0846     		mov	r0, r1
 935 000a 1146     		mov	r1, r2
 936 000c 1A46     		mov	r2, r3
 937 000e 0346     		mov	r3, r0	@ movhi
 938 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 939 0012 0B46     		mov	r3, r1	@ movhi
 940 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 941 0016 1346     		mov	r3, r2	@ movhi
 942 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 138:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_Context_t *phost = Ft_Esd_Host;
 943              		.loc 3 138 0
 944 001a 1A4B     		ldr	r3, .L27
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s 			page 25


 945 001c 1B68     		ldr	r3, [r3]
 946 001e FB61     		str	r3, [r7, #28]
 139:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	ft_int32_t ps = ((ft_int32_t)radius << 4);
 947              		.loc 3 139 0
 948 0020 B7F90630 		ldrsh	r3, [r7, #6]
 949 0024 1B01     		lsls	r3, r3, #4
 950 0026 BB61     		str	r3, [r7, #24]
 140:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	ft_int32_t x2 = ((ft_int32_t)x << 2);
 951              		.loc 3 140 0
 952 0028 B7F90A30 		ldrsh	r3, [r7, #10]
 953 002c 9B00     		lsls	r3, r3, #2
 954 002e 7B61     		str	r3, [r7, #20]
 141:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	ft_int32_t y2 = ((ft_int32_t)y << 2);
 955              		.loc 3 141 0
 956 0030 B7F90830 		ldrsh	r3, [r7, #8]
 957 0034 9B00     		lsls	r3, r3, #2
 958 0036 3B61     		str	r3, [r7, #16]
 142:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_WrCmd32(phost, BEGIN(FTPOINTS));
 959              		.loc 3 142 0
 960 0038 1349     		ldr	r1, .L27+4
 961 003a F869     		ldr	r0, [r7, #28]
 962 003c FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 143:FT_Esd_Widgets/Ft_Esd_Elements.c **** #ifdef FT_81X_ENABLE
 144:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Esd_Dl_VERTEX_FORMAT(2);
 963              		.loc 3 144 0
 964 0040 0220     		movs	r0, #2
 965 0042 FFF7FEFF 		bl	Ft_Esd_Dl_VERTEX_FORMAT
 145:FT_Esd_Widgets/Ft_Esd_Elements.c **** #endif
 146:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_WrCmd32(phost, POINT_SIZE(ps));
 966              		.loc 3 146 0
 967 0046 BB69     		ldr	r3, [r7, #24]
 968 0048 C3F30C03 		ubfx	r3, r3, #0, #13
 969 004c 43F05063 		orr	r3, r3, #218103808
 970 0050 1946     		mov	r1, r3
 971 0052 F869     		ldr	r0, [r7, #28]
 972 0054 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 147:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Esd_Dl_COLOR_RGB(color);
 973              		.loc 3 147 0
 974 0058 F868     		ldr	r0, [r7, #12]
 975 005a FFF7FEFF 		bl	Ft_Esd_Dl_COLOR_RGB
 148:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_WrCmd32(phost, VERTEX2F2(x2, y2));
 976              		.loc 3 148 0
 977 005e 7B69     		ldr	r3, [r7, #20]
 978 0060 DA03     		lsls	r2, r3, #15
 979 0062 0A4B     		ldr	r3, .L27+8
 980 0064 1340     		ands	r3, r3, r2
 981 0066 3A69     		ldr	r2, [r7, #16]
 982 0068 C2F30E02 		ubfx	r2, r2, #0, #15
 983 006c 1343     		orrs	r3, r3, r2
 984 006e 43F08043 		orr	r3, r3, #1073741824
 985 0072 1946     		mov	r1, r3
 986 0074 F869     		ldr	r0, [r7, #28]
 987 0076 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 149:FT_Esd_Widgets/Ft_Esd_Elements.c **** #if FT_ESD_DL_END
 150:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	Ft_Gpu_Hal_WrCmd32(phost, END());
 151:FT_Esd_Widgets/Ft_Esd_Elements.c **** #endif
 152:FT_Esd_Widgets/Ft_Esd_Elements.c **** }
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s 			page 26


 988              		.loc 3 152 0
 989 007a 00BF     		nop
 990 007c 2037     		adds	r7, r7, #32
 991              	.LCFI39:
 992              		.cfi_def_cfa_offset 8
 993 007e BD46     		mov	sp, r7
 994              	.LCFI40:
 995              		.cfi_def_cfa_register 13
 996              		@ sp needed
 997 0080 80BD     		pop	{r7, pc}
 998              	.L28:
 999 0082 00BF     		.align	2
 1000              	.L27:
 1001 0084 00000000 		.word	Ft_Esd_Host
 1002 0088 0200001F 		.word	520093698
 1003 008c 0080FF3F 		.word	1073709056
 1004              		.cfi_endproc
 1005              	.LFE31:
 1007              		.section	.text.Ft_Esd_Elements_Panel,"ax",%progbits
 1008              		.align	1
 1009              		.global	Ft_Esd_Elements_Panel
 1010              		.syntax unified
 1011              		.thumb
 1012              		.thumb_func
 1013              		.fpu fpv5-sp-d16
 1015              	Ft_Esd_Elements_Panel:
 1016              	.LFB32:
 153:FT_Esd_Widgets/Ft_Esd_Elements.c **** 
 154:FT_Esd_Widgets/Ft_Esd_Elements.c **** void Ft_Esd_Elements_Panel(Ft_Esd_Theme *theme, ft_int16_t x, ft_int16_t y, ft_int16_t width, ft_in
 155:FT_Esd_Widgets/Ft_Esd_Elements.c **** {
 1017              		.loc 3 155 0
 1018              		.cfi_startproc
 1019              		@ args = 12, pretend = 0, frame = 16
 1020              		@ frame_needed = 1, uses_anonymous_args = 0
 1021 0000 90B5     		push	{r4, r7, lr}
 1022              	.LCFI41:
 1023              		.cfi_def_cfa_offset 12
 1024              		.cfi_offset 4, -12
 1025              		.cfi_offset 7, -8
 1026              		.cfi_offset 14, -4
 1027 0002 87B0     		sub	sp, sp, #28
 1028              	.LCFI42:
 1029              		.cfi_def_cfa_offset 40
 1030 0004 02AF     		add	r7, sp, #8
 1031              	.LCFI43:
 1032              		.cfi_def_cfa 7, 32
 1033 0006 F860     		str	r0, [r7, #12]
 1034 0008 0846     		mov	r0, r1
 1035 000a 1146     		mov	r1, r2
 1036 000c 1A46     		mov	r2, r3
 1037 000e 0346     		mov	r3, r0	@ movhi
 1038 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 1039 0012 0B46     		mov	r3, r1	@ movhi
 1040 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 1041 0016 1346     		mov	r3, r2	@ movhi
 1042 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 156:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	if (!theme) theme = Ft_Esd_Theme_GetCurrent();
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s 			page 27


 1043              		.loc 3 156 0
 1044 001a FB68     		ldr	r3, [r7, #12]
 1045 001c 002B     		cmp	r3, #0
 1046 001e 02D1     		bne	.L30
 1047              		.loc 3 156 0 is_stmt 0 discriminator 1
 1048 0020 FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
 1049 0024 F860     		str	r0, [r7, #12]
 1050              	.L30:
 157:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	if (raised) Ft_Esd_Elements_PanelRaised(theme->DefaultColor, x, y, width, height, radius);
 1051              		.loc 3 157 0 is_stmt 1
 1052 0026 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 1053 002a 002B     		cmp	r3, #0
 1054 002c 11D0     		beq	.L31
 1055              		.loc 3 157 0 is_stmt 0 discriminator 1
 1056 002e FB68     		ldr	r3, [r7, #12]
 1057 0030 1869     		ldr	r0, [r3, #16]
 1058 0032 B7F90640 		ldrsh	r4, [r7, #6]
 1059 0036 B7F90820 		ldrsh	r2, [r7, #8]
 1060 003a B7F90A10 		ldrsh	r1, [r7, #10]
 1061 003e B7F92430 		ldrsh	r3, [r7, #36]
 1062 0042 0193     		str	r3, [sp, #4]
 1063 0044 B7F92030 		ldrsh	r3, [r7, #32]
 1064 0048 0093     		str	r3, [sp]
 1065 004a 2346     		mov	r3, r4
 1066 004c FFF7FEFF 		bl	Ft_Esd_Elements_PanelRaised
 158:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	else Ft_Esd_Elements_PanelSunken(theme->BackColor, x, y, width, height, radius);
 159:FT_Esd_Widgets/Ft_Esd_Elements.c **** }
 1067              		.loc 3 159 0 is_stmt 1 discriminator 1
 1068 0050 10E0     		b	.L33
 1069              	.L31:
 158:FT_Esd_Widgets/Ft_Esd_Elements.c **** 	else Ft_Esd_Elements_PanelSunken(theme->BackColor, x, y, width, height, radius);
 1070              		.loc 3 158 0
 1071 0052 FB68     		ldr	r3, [r7, #12]
 1072 0054 5868     		ldr	r0, [r3, #4]
 1073 0056 B7F90640 		ldrsh	r4, [r7, #6]
 1074 005a B7F90820 		ldrsh	r2, [r7, #8]
 1075 005e B7F90A10 		ldrsh	r1, [r7, #10]
 1076 0062 B7F92430 		ldrsh	r3, [r7, #36]
 1077 0066 0193     		str	r3, [sp, #4]
 1078 0068 B7F92030 		ldrsh	r3, [r7, #32]
 1079 006c 0093     		str	r3, [sp]
 1080 006e 2346     		mov	r3, r4
 1081 0070 FFF7FEFF 		bl	Ft_Esd_Elements_PanelSunken
 1082              	.L33:
 1083              		.loc 3 159 0
 1084 0074 00BF     		nop
 1085 0076 1437     		adds	r7, r7, #20
 1086              	.LCFI44:
 1087              		.cfi_def_cfa_offset 12
 1088 0078 BD46     		mov	sp, r7
 1089              	.LCFI45:
 1090              		.cfi_def_cfa_register 13
 1091              		@ sp needed
 1092 007a 90BD     		pop	{r4, r7, pc}
 1093              		.cfi_endproc
 1094              	.LFE32:
 1096              		.text
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s 			page 28


 1097              	.Letext0:
 1098              		.file 4 "FT_Eve_Hal/FT_DataTypes.h"
 1099              		.file 5 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/lock.h"
 1100              		.file 6 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_types.h"
 1101              		.file 7 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 1102              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/unistd.h"
 1103              		.file 9 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/reent.h"
 1104              		.file 10 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/stdlib.h"
 1105              		.file 11 "FT_Eve_Hal/FT_Gpu_Hal.h"
 1106              		.file 12 "FT_Esd_Framework/Ft_Esd.h"
 1107              		.file 13 "FT_Esd_Widgets/Ft_Esd_Theme.h"
 1108              		.file 14 "FT_Esd_Framework/Ft_Esd_GpuAlloc.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s 			page 29


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Ft_Esd_Elements.c
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s:18     .text.Ft_Esd_BitmapCell_GetInfo:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s:24     .text.Ft_Esd_BitmapCell_GetInfo:0000000000000000 Ft_Esd_BitmapCell_GetInfo
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s:73     .text.Ft_Esd_Dl_COLOR_RGB:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s:79     .text.Ft_Esd_Dl_COLOR_RGB:0000000000000000 Ft_Esd_Dl_COLOR_RGB
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s:144    .text.Ft_Esd_Dl_COLOR_RGB:0000000000000050 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s:151    .text.Ft_Esd_Dl_VERTEX_FORMAT:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s:157    .text.Ft_Esd_Dl_VERTEX_FORMAT:0000000000000000 Ft_Esd_Dl_VERTEX_FORMAT
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s:219    .text.Ft_Esd_Dl_VERTEX_FORMAT:000000000000004c $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s:226    .text.Ft_Esd_Elements_PanelSunken:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s:233    .text.Ft_Esd_Elements_PanelSunken:0000000000000000 Ft_Esd_Elements_PanelSunken
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s:428    .text.Ft_Esd_Elements_PanelSunken:0000000000000180 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s:435    .text.Ft_Esd_Elements_PanelRaised:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s:442    .text.Ft_Esd_Elements_PanelRaised:0000000000000000 Ft_Esd_Elements_PanelRaised
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s:636    .text.Ft_Esd_Elements_PanelRaised:0000000000000180 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s:643    .text.Ft_Esd_Elements_CircleSunken:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s:650    .text.Ft_Esd_Elements_CircleSunken:0000000000000000 Ft_Esd_Elements_CircleSunken
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s:769    .text.Ft_Esd_Elements_CircleSunken:00000000000000d0 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s:776    .text.Ft_Esd_Elements_CircleRaised:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s:783    .text.Ft_Esd_Elements_CircleRaised:0000000000000000 Ft_Esd_Elements_CircleRaised
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s:902    .text.Ft_Esd_Elements_CircleRaised:00000000000000d0 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s:909    .text.Ft_Esd_Elements_CircleFlat:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s:916    .text.Ft_Esd_Elements_CircleFlat:0000000000000000 Ft_Esd_Elements_CircleFlat
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s:1001   .text.Ft_Esd_Elements_CircleFlat:0000000000000084 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s:1008   .text.Ft_Esd_Elements_Panel:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//cc1JfJjO.s:1015   .text.Ft_Esd_Elements_Panel:0000000000000000 Ft_Esd_Elements_Panel

UNDEFINED SYMBOLS
Ft_Gpu_Hal_WrCmd32
Ft_Esd_GpuState_I
Ft_Esd_GpuState
Ft_Esd_Host
Ft_Esd_Theme_GetCurrent
