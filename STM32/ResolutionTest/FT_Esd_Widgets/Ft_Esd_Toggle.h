/*
This file is automatically generated
DO NOT MODIFY BY HAND
Ft_Esd_Toggle
Header
*/

#ifndef Ft_Esd_Toggle__H
#define Ft_Esd_Toggle__H

#include "FT_DataTypes.h"
#include "Ft_Esd.h"
#include "Ft_Esd_DefaultTheme.h"
#include "Ft_Esd_Math.h"
#include "Ft_Esd_Theme.h"
#include "Ft_Esd_TouchTag.h"
#include "Ft_Esd_Widget.h"

#ifndef ESD_LOGIC
#define ESD_LOGIC(name, ...)
#define ESD_ACTOR(name, ...)
#define ESD_WIDGET(name, ...)
#define ESD_UI(name, ...)
#define ESD_PAGE(name, ...)
#define ESD_APPLICATION(name, ...)
#define ESD_INPUT(name, ...)
#define ESD_OUTPUT(name, ...)
#define ESD_SLOT(name, ...)
#define ESD_SIGNAL(name, ...)
#define ESD_VARIABLE(name, ...)
#define ESD_WRITER(name, ...)
#endif

#define Ft_Esd_Toggle_CLASSID 0x213BBD6C
ESD_SYMBOL(Ft_Esd_Toggle_CLASSID, Type = esd_classid_t)

/* EVE builtin toggle button */
ESD_WIDGET(Ft_Esd_Toggle, Include = "Ft_Esd_Toggle.h", Callback, DisplayName = "ESD Toggle", Category = EsdWidgets, Icon = ":/icons/ui-button-toggle.png", X = 0, Y = 0, Width = 80, Height = 36)
typedef struct
{
	union
	{
		void *Owner;
		Ft_Esd_Widget Widget;
	};
	ESD_INPUT(Theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
	Ft_Esd_Theme *(* Theme)(void *context);
	ESD_INPUT(Font, Type = ft_int16_t, Min = 16, Max = 34, Default = 27)
	ft_int16_t(* Font)(void *context);
	ESD_INPUT(Text, Type = const char *, Default = "Toggle")
	const char *(* Text)(void *context);
	ESD_SIGNAL(Toggled)
	void(* Toggled)(void *context);
	ESD_VARIABLE(State, Type = ft_bool_t, Public)
	ft_bool_t State;
	ESD_WRITER(Changed, Type = ft_bool_t)
	void(* Changed)(void *context, ft_bool_t value);
	/* Automatic resize for height */
	ESD_VARIABLE(AutoResize, DisplayName = "Auto Resize", Type = Esd_AutoResize, Default = ESD_AUTORESIZE_HEIGHT, Public)
	ft_uint8_t AutoResize;
	Ft_Esd_TouchTag Touch_Tag;
} Ft_Esd_Toggle;

void Ft_Esd_Toggle__Initializer(Ft_Esd_Toggle *context);

ESD_SLOT(Start)
void Ft_Esd_Toggle_Start(Ft_Esd_Toggle *context);

ESD_SLOT(End)
void Ft_Esd_Toggle_End(Ft_Esd_Toggle *context);

ESD_SLOT(Render)
void Ft_Esd_Toggle_Render(Ft_Esd_Toggle *context);

ESD_SLOT(Toggle)
void Ft_Esd_Toggle_Toggle(Ft_Esd_Toggle *context);

ESD_SLOT(Update)
void Ft_Esd_Toggle_Update(Ft_Esd_Toggle *context);

#endif /* Ft_Esd_Toggle__H */

/* end of file */
