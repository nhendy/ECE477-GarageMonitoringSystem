ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"Ft_Esd_Toggle__Generated.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Ft_Esd_Toggle_X__Default,"ax",%progbits
  18              		.align	1
  19              		.global	Ft_Esd_Toggle_X__Default
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-sp-d16
  25              	Ft_Esd_Toggle_X__Default:
  26              	.LFB24:
  27              		.file 1 "FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c"
   1:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** /*
   2:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** This file is automatically generated
   3:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** Ft_Esd_Toggle
   4:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** C Source
   5:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** */
   6:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 
   7:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** #include "Ft_Esd_Toggle.h"
   8:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 
   9:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** #include "FT_Esd_CoPro_Cmds.h"
  10:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** #include "FT_Esd_Dl.h"
  11:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** #include "FT_Gpu.h"
  12:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 
  13:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** extern void Ft_Esd_Noop(void *context);
  14:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** Ft_Esd_Theme * Ft_Esd_Toggle_Theme__Default(void *context) { return Ft_Esd_Theme_GetCurrent(); }
  15:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** ft_int16_t Ft_Esd_Toggle_X__Default(void *context) { return 0; }
  28              		.loc 1 15 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              		.loc 1 15 0
  35 0000 0020     		movs	r0, #0
  36              	.LVL1:
  37 0002 7047     		bx	lr
  38              		.cfi_endproc
  39              	.LFE24:
  41              		.section	.text.Ft_Esd_Toggle_Y__Default,"ax",%progbits
  42              		.align	1
  43              		.global	Ft_Esd_Toggle_Y__Default
  44              		.syntax unified
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s 			page 2


  45              		.thumb
  46              		.thumb_func
  47              		.fpu fpv5-sp-d16
  49              	Ft_Esd_Toggle_Y__Default:
  50              	.LFB25:
  16:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** ft_int16_t Ft_Esd_Toggle_Y__Default(void *context) { return 0; }
  51              		.loc 1 16 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56              	.LVL2:
  57              		.loc 1 16 0
  58 0000 0020     		movs	r0, #0
  59              	.LVL3:
  60 0002 7047     		bx	lr
  61              		.cfi_endproc
  62              	.LFE25:
  64              		.section	.text.Ft_Esd_Toggle_Width__Default,"ax",%progbits
  65              		.align	1
  66              		.global	Ft_Esd_Toggle_Width__Default
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  70              		.fpu fpv5-sp-d16
  72              	Ft_Esd_Toggle_Width__Default:
  73              	.LFB26:
  17:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** ft_int16_t Ft_Esd_Toggle_Width__Default(void *context) { return 80; }
  74              		.loc 1 17 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              	.LVL4:
  80              		.loc 1 17 0
  81 0000 5020     		movs	r0, #80
  82              	.LVL5:
  83 0002 7047     		bx	lr
  84              		.cfi_endproc
  85              	.LFE26:
  87              		.section	.text.Ft_Esd_Toggle_Height__Default,"ax",%progbits
  88              		.align	1
  89              		.global	Ft_Esd_Toggle_Height__Default
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  93              		.fpu fpv5-sp-d16
  95              	Ft_Esd_Toggle_Height__Default:
  96              	.LFB27:
  18:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** ft_int16_t Ft_Esd_Toggle_Height__Default(void *context) { return 36; }
  97              		.loc 1 18 0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 102              	.LVL6:
 103              		.loc 1 18 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s 			page 3


 104 0000 2420     		movs	r0, #36
 105              	.LVL7:
 106 0002 7047     		bx	lr
 107              		.cfi_endproc
 108              	.LFE27:
 110              		.section	.text.Ft_Esd_Toggle_Font__Default,"ax",%progbits
 111              		.align	1
 112              		.global	Ft_Esd_Toggle_Font__Default
 113              		.syntax unified
 114              		.thumb
 115              		.thumb_func
 116              		.fpu fpv5-sp-d16
 118              	Ft_Esd_Toggle_Font__Default:
 119              	.LFB28:
  19:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** ft_int16_t Ft_Esd_Toggle_Font__Default(void *context) { return 27; }
 120              		.loc 1 19 0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 125              	.LVL8:
 126              		.loc 1 19 0
 127 0000 1B20     		movs	r0, #27
 128              	.LVL9:
 129 0002 7047     		bx	lr
 130              		.cfi_endproc
 131              	.LFE28:
 133              		.section	.text.Ft_Esd_Toggle_Text__Default,"ax",%progbits
 134              		.align	1
 135              		.global	Ft_Esd_Toggle_Text__Default
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 139              		.fpu fpv5-sp-d16
 141              	Ft_Esd_Toggle_Text__Default:
 142              	.LFB29:
  20:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** const char * Ft_Esd_Toggle_Text__Default(void *context) { return "Toggle"; }
 143              		.loc 1 20 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
 148              	.LVL10:
 149              		.loc 1 20 0
 150 0000 0048     		ldr	r0, .L7
 151              	.LVL11:
 152 0002 7047     		bx	lr
 153              	.L8:
 154              		.align	2
 155              	.L7:
 156 0004 00000000 		.word	.LC0
 157              		.cfi_endproc
 158              	.LFE29:
 160              		.section	.text.Ft_Esd_Toggle_Changed__Noop,"ax",%progbits
 161              		.align	1
 162              		.global	Ft_Esd_Toggle_Changed__Noop
 163              		.syntax unified
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s 			page 4


 164              		.thumb
 165              		.thumb_func
 166              		.fpu fpv5-sp-d16
 168              	Ft_Esd_Toggle_Changed__Noop:
 169              	.LFB30:
  21:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** void Ft_Esd_Toggle_Changed__Noop(void *context, ft_bool_t value) { }
 170              		.loc 1 21 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 175              	.LVL12:
 176              		.loc 1 21 0
 177 0000 7047     		bx	lr
 178              		.cfi_endproc
 179              	.LFE30:
 181              		.section	.text.Ft_Esd_Toggle_Touch_Tag_Tap__Signal,"ax",%progbits
 182              		.align	1
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
 186              		.fpu fpv5-sp-d16
 188              	Ft_Esd_Toggle_Touch_Tag_Tap__Signal:
 189              	.LFB34:
  22:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 
  23:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** Ft_Esd_Theme * Ft_Esd_Theme_GetCurrent();
  24:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** Ft_Gpu_Hal_Context_t * Ft_Esd_GetHost();
  25:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 
  26:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** static void Ft_Esd_Toggle_Touch_Tag_Tap__Signal(void *context);
  27:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 
  28:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** void Ft_Esd_Toggle__Initializer(Ft_Esd_Toggle *context)
  29:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** {
  30:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	context->Parent = 0;
  31:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	context->Theme = Ft_Esd_Toggle_Theme__Default;
  32:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	context->X = Ft_Esd_Toggle_X__Default;
  33:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	context->Y = Ft_Esd_Toggle_Y__Default;
  34:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	context->Width = Ft_Esd_Toggle_Width__Default;
  35:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	context->Height = Ft_Esd_Toggle_Height__Default;
  36:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	context->Font = Ft_Esd_Toggle_Font__Default;
  37:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	context->Text = Ft_Esd_Toggle_Text__Default;
  38:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	Ft_Esd_TouchTag__Initializer(&context->Touch_Tag);
  39:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	context->Touch_Tag.Parent = context;
  40:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	context->Touch_Tag.Tap = Ft_Esd_Toggle_Touch_Tag_Tap__Signal;
  41:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	context->Toggled = Ft_Esd_Noop;
  42:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	context->State = 0;
  43:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	context->Changed = Ft_Esd_Toggle_Changed__Noop;
  44:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** }
  45:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 
  46:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** ft_void_t Ft_Gpu_CoCmd_FgColor(Ft_Gpu_Hal_Context_t *, ft_rgb32_t);
  47:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** ft_void_t Ft_Gpu_CoCmd_BgColor(Ft_Gpu_Hal_Context_t *, ft_rgb32_t);
  48:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** ft_void_t Ft_Gpu_CoCmd_Toggle(Ft_Gpu_Hal_Context_t *, ft_int16_t, ft_int16_t, ft_int16_t, ft_int16_
  49:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 
  50:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** void Ft_Esd_Toggle_Render(Ft_Esd_Toggle *context)
  51:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** {
  52:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	void *parent = context->Parent;
  53:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_uint8_t alpha = 255;
  54:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	Ft_Esd_Dl_COLOR_A(alpha);
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s 			page 5


  55:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_uint8_t s = Ft_Esd_TouchTag_Tag(&context->Touch_Tag);
  56:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	Ft_Esd_Dl_TAG(s);
  57:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	Ft_Gpu_Hal_Context_t * phost = Ft_Esd_GetHost();
  58:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_bool_t if_1 = context->State;
  59:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_rgb32_t c;
  60:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	if (if_1)
  61:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	{
  62:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 		Ft_Esd_Theme * theme = context->Theme(parent);
  63:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 		c = Ft_Esd_Theme_GetPrimaryColor(theme);
  64:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	}
  65:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	else
  66:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	{
  67:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 		Ft_Esd_Theme * theme_1 = context->Theme(parent);
  68:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 		c = Ft_Esd_Theme_GetCurrentColor(theme_1);
  69:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	}
  70:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	Ft_Gpu_CoCmd_FgColor(phost, c);
  71:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	Ft_Gpu_Hal_Context_t * phost_1 = Ft_Esd_GetHost();
  72:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	Ft_Esd_Theme * theme_2 = context->Theme(parent);
  73:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_rgb32_t c_1 = Ft_Esd_Theme_GetBackColor(theme_2);
  74:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	Ft_Gpu_CoCmd_BgColor(phost_1, c_1);
  75:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	Ft_Esd_Theme * theme_3 = context->Theme(parent);
  76:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_rgb32_t c_2 = Ft_Esd_Theme_GetTextColor(theme_3);
  77:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	Ft_Esd_Dl_COLOR_RGB(c_2);
  78:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	Ft_Gpu_Hal_Context_t * phost_2 = Ft_Esd_GetHost();
  79:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t left = context->X(parent);
  80:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t i = context->Font(parent);
  81:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_uint16_t left_3 = Ft_Esd_GetFontHeight(i);
  82:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t right_1 = 5;
  83:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t left_2 = left_3 * right_1;
  84:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t right_2 = 4;
  85:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t left_1 = left_2 / right_2;
  86:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t right_3 = 2;
  87:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t right = left_1 / right_3;
  88:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t x = left + right;
  89:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t left_5 = context->Y(parent);
  90:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t i_1 = context->Font(parent);
  91:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_uint16_t left_8 = Ft_Esd_GetFontHeight(i_1);
  92:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t right_5 = 5;
  93:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t left_7 = left_8 * right_5;
  94:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t right_6 = 4;
  95:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t left_6 = left_7 / right_6;
  96:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t right_7 = 4;
  97:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t right_4 = left_6 / right_7;
  98:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t left_4 = left_5 + right_4;
  99:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t left_10 = context->Height(parent);
 100:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t i_2 = context->Font(parent);
 101:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_uint16_t left_12 = Ft_Esd_GetFontHeight(i_2);
 102:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t right_10 = 5;
 103:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t left_11 = left_12 * right_10;
 104:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t right_11 = 4;
 105:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t right_9 = left_11 / right_11;
 106:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t left_9 = left_10 - right_9;
 107:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t right_12 = 2;
 108:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t right_8 = left_9 / right_12;
 109:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t y = left_4 + right_8;
 110:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t left_13 = context->Width(parent);
 111:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t i_3 = context->Font(parent);
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s 			page 6


 112:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_uint16_t left_15 = Ft_Esd_GetFontHeight(i_3);
 113:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t right_14 = 5;
 114:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t left_14 = left_15 * right_14;
 115:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t right_15 = 4;
 116:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t right_13 = left_14 / right_15;
 117:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t width = left_13 - right_13;
 118:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t font = context->Font(parent);
 119:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_uint16_t options = 0;
 120:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_bool_t if_2 = context->State;
 121:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_uint16_t state;
 122:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	if (if_2)
 123:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	{
 124:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 		state = 65535U;
 125:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	}
 126:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	else
 127:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	{
 128:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 		state = 0U;
 129:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	}
 130:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	const char * s_1 = context->Text(parent);
 131:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	Ft_Gpu_CoCmd_Toggle(phost_2, x, y, width, font, options, state, s_1);
 132:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_uint8_t s_2 = 255;
 133:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	Ft_Esd_Dl_TAG(s_2);
 134:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** }
 135:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 
 136:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** void Ft_Esd_Toggle_Start(Ft_Esd_Toggle *context)
 137:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** {
 138:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	void *parent = context->Parent;
 139:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	Ft_Esd_TouchTag_Start(&context->Touch_Tag);
 140:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** }
 141:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 
 142:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** void Ft_Esd_Toggle_Touch_Tag_Tap__Signal(void *c)
 143:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** {
 190              		.loc 1 143 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194              	.LVL13:
 195 0000 38B5     		push	{r3, r4, r5, lr}
 196              	.LCFI0:
 197              		.cfi_def_cfa_offset 16
 198              		.cfi_offset 3, -16
 199              		.cfi_offset 4, -12
 200              		.cfi_offset 5, -8
 201              		.cfi_offset 14, -4
 202 0002 0446     		mov	r4, r0
 203              	.LVL14:
 144:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	Ft_Esd_Toggle *context = (Ft_Esd_Toggle *)c;
 145:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	void *parent = context->Parent;
 204              		.loc 1 145 0
 205 0004 0568     		ldr	r5, [r0]
 206              	.LVL15:
 146:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_bool_t value = context->State;
 207              		.loc 1 146 0
 208 0006 90F83C10 		ldrb	r1, [r0, #60]	@ zero_extendqisi2
 209              	.LVL16:
 147:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	int set_variable = !value;
 210              		.loc 1 147 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s 			page 7


 211 000a B1FA81F1 		clz	r1, r1
 212              	.LVL17:
 213 000e 4909     		lsrs	r1, r1, #5
 214              	.LVL18:
 148:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	context->State = set_variable;
 215              		.loc 1 148 0
 216 0010 80F83C10 		strb	r1, [r0, #60]
 217              	.LVL19:
 149:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	context->Changed(parent, set_variable);
 218              		.loc 1 149 0
 219 0014 036C     		ldr	r3, [r0, #64]
 220 0016 2846     		mov	r0, r5
 221              	.LVL20:
 222 0018 9847     		blx	r3
 223              	.LVL21:
 150:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	context->Toggled(parent);
 224              		.loc 1 150 0
 225 001a A36B     		ldr	r3, [r4, #56]
 226 001c 2846     		mov	r0, r5
 227 001e 9847     		blx	r3
 228              	.LVL22:
 151:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** }
 229              		.loc 1 151 0
 230 0020 38BD     		pop	{r3, r4, r5, pc}
 231              		.cfi_endproc
 232              	.LFE34:
 234              		.section	.text.Ft_Esd_Toggle_Theme__Default,"ax",%progbits
 235              		.align	1
 236              		.global	Ft_Esd_Toggle_Theme__Default
 237              		.syntax unified
 238              		.thumb
 239              		.thumb_func
 240              		.fpu fpv5-sp-d16
 242              	Ft_Esd_Toggle_Theme__Default:
 243              	.LFB23:
  14:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** ft_int16_t Ft_Esd_Toggle_X__Default(void *context) { return 0; }
 244              		.loc 1 14 0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              	.LVL23:
 249 0000 08B5     		push	{r3, lr}
 250              	.LCFI1:
 251              		.cfi_def_cfa_offset 8
 252              		.cfi_offset 3, -8
 253              		.cfi_offset 14, -4
  14:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** ft_int16_t Ft_Esd_Toggle_X__Default(void *context) { return 0; }
 254              		.loc 1 14 0
 255 0002 FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
 256              	.LVL24:
 257 0006 08BD     		pop	{r3, pc}
 258              		.cfi_endproc
 259              	.LFE23:
 261              		.section	.text.Ft_Esd_Toggle__Initializer,"ax",%progbits
 262              		.align	1
 263              		.global	Ft_Esd_Toggle__Initializer
 264              		.syntax unified
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s 			page 8


 265              		.thumb
 266              		.thumb_func
 267              		.fpu fpv5-sp-d16
 269              	Ft_Esd_Toggle__Initializer:
 270              	.LFB31:
  29:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	context->Parent = 0;
 271              		.loc 1 29 0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275              	.LVL25:
 276 0000 38B5     		push	{r3, r4, r5, lr}
 277              	.LCFI2:
 278              		.cfi_def_cfa_offset 16
 279              		.cfi_offset 3, -16
 280              		.cfi_offset 4, -12
 281              		.cfi_offset 5, -8
 282              		.cfi_offset 14, -4
 283 0002 0446     		mov	r4, r0
  30:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	context->Theme = Ft_Esd_Toggle_Theme__Default;
 284              		.loc 1 30 0
 285 0004 0025     		movs	r5, #0
 286 0006 0560     		str	r5, [r0]
  31:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	context->X = Ft_Esd_Toggle_X__Default;
 287              		.loc 1 31 0
 288 0008 0D4B     		ldr	r3, .L16
 289 000a 4360     		str	r3, [r0, #4]
  32:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	context->Y = Ft_Esd_Toggle_Y__Default;
 290              		.loc 1 32 0
 291 000c 0D4B     		ldr	r3, .L16+4
 292 000e 8360     		str	r3, [r0, #8]
  33:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	context->Width = Ft_Esd_Toggle_Width__Default;
 293              		.loc 1 33 0
 294 0010 0D4B     		ldr	r3, .L16+8
 295 0012 C360     		str	r3, [r0, #12]
  34:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	context->Height = Ft_Esd_Toggle_Height__Default;
 296              		.loc 1 34 0
 297 0014 0D4B     		ldr	r3, .L16+12
 298 0016 0361     		str	r3, [r0, #16]
  35:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	context->Font = Ft_Esd_Toggle_Font__Default;
 299              		.loc 1 35 0
 300 0018 0D4B     		ldr	r3, .L16+16
 301 001a 4361     		str	r3, [r0, #20]
  36:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	context->Text = Ft_Esd_Toggle_Text__Default;
 302              		.loc 1 36 0
 303 001c 0D4B     		ldr	r3, .L16+20
 304 001e 8361     		str	r3, [r0, #24]
  37:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	Ft_Esd_TouchTag__Initializer(&context->Touch_Tag);
 305              		.loc 1 37 0
 306 0020 0D4B     		ldr	r3, .L16+24
 307 0022 C361     		str	r3, [r0, #28]
  38:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	context->Touch_Tag.Parent = context;
 308              		.loc 1 38 0
 309 0024 2030     		adds	r0, r0, #32
 310              	.LVL26:
 311 0026 FFF7FEFF 		bl	Ft_Esd_TouchTag__Initializer
 312              	.LVL27:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s 			page 9


  39:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	context->Touch_Tag.Tap = Ft_Esd_Toggle_Touch_Tag_Tap__Signal;
 313              		.loc 1 39 0
 314 002a 2462     		str	r4, [r4, #32]
  40:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	context->Toggled = Ft_Esd_Noop;
 315              		.loc 1 40 0
 316 002c 0B4B     		ldr	r3, .L16+28
 317 002e E362     		str	r3, [r4, #44]
  41:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	context->State = 0;
 318              		.loc 1 41 0
 319 0030 0B4B     		ldr	r3, .L16+32
 320 0032 A363     		str	r3, [r4, #56]
  42:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	context->Changed = Ft_Esd_Toggle_Changed__Noop;
 321              		.loc 1 42 0
 322 0034 84F83C50 		strb	r5, [r4, #60]
  43:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** }
 323              		.loc 1 43 0
 324 0038 0A4B     		ldr	r3, .L16+36
 325 003a 2364     		str	r3, [r4, #64]
  44:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 
 326              		.loc 1 44 0
 327 003c 38BD     		pop	{r3, r4, r5, pc}
 328              	.LVL28:
 329              	.L17:
 330 003e 00BF     		.align	2
 331              	.L16:
 332 0040 00000000 		.word	Ft_Esd_Toggle_Theme__Default
 333 0044 00000000 		.word	Ft_Esd_Toggle_X__Default
 334 0048 00000000 		.word	Ft_Esd_Toggle_Y__Default
 335 004c 00000000 		.word	Ft_Esd_Toggle_Width__Default
 336 0050 00000000 		.word	Ft_Esd_Toggle_Height__Default
 337 0054 00000000 		.word	Ft_Esd_Toggle_Font__Default
 338 0058 00000000 		.word	Ft_Esd_Toggle_Text__Default
 339 005c 00000000 		.word	Ft_Esd_Toggle_Touch_Tag_Tap__Signal
 340 0060 00000000 		.word	Ft_Esd_Noop
 341 0064 00000000 		.word	Ft_Esd_Toggle_Changed__Noop
 342              		.cfi_endproc
 343              	.LFE31:
 345              		.section	.text.Ft_Esd_Toggle_Render,"ax",%progbits
 346              		.align	1
 347              		.global	Ft_Esd_Toggle_Render
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 351              		.fpu fpv5-sp-d16
 353              	Ft_Esd_Toggle_Render:
 354              	.LFB32:
  51:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	void *parent = context->Parent;
 355              		.loc 1 51 0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 0
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359              	.LVL29:
 360 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 361              	.LCFI3:
 362              		.cfi_def_cfa_offset 36
 363              		.cfi_offset 4, -36
 364              		.cfi_offset 5, -32
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s 			page 10


 365              		.cfi_offset 6, -28
 366              		.cfi_offset 7, -24
 367              		.cfi_offset 8, -20
 368              		.cfi_offset 9, -16
 369              		.cfi_offset 10, -12
 370              		.cfi_offset 11, -8
 371              		.cfi_offset 14, -4
 372 0004 85B0     		sub	sp, sp, #20
 373              	.LCFI4:
 374              		.cfi_def_cfa_offset 56
 375 0006 0446     		mov	r4, r0
  52:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_uint8_t alpha = 255;
 376              		.loc 1 52 0
 377 0008 0568     		ldr	r5, [r0]
 378              	.LVL30:
 379              	.LBB34:
 380              	.LBB35:
 381              		.file 2 "FT_Esd_Framework/FT_Esd_Dl.h"
   1:FT_Esd_Framework/FT_Esd_Dl.h **** 
   2:FT_Esd_Framework/FT_Esd_Dl.h **** #ifndef FT_ESD_DL_H
   3:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_DL_H
   4:FT_Esd_Framework/FT_Esd_Dl.h **** 
   5:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_DataTypes.h"
   6:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_Platform.h"
   7:FT_Esd_Framework/FT_Esd_Dl.h **** #include "Ft_Esd.h"
   8:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_Gpu.h"
   9:FT_Esd_Framework/FT_Esd_Dl.h **** #include "Ft_Esd_BitmapInfo.h"
  10:FT_Esd_Framework/FT_Esd_Dl.h **** 
  11:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_CATEGORY(EsdUtilities, DisplayName = "ESD Utilities")
  12:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_CATEGORY(EveRenderFunctions, DisplayName = "EVE Render Functions")
  13:FT_Esd_Framework/FT_Esd_Dl.h **** 
  14:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_TYPE(Ft_Gpu_Hal_Context_t *, Native = Pointer, Edit = Library)
  15:FT_Esd_Framework/FT_Esd_Dl.h **** 
  16:FT_Esd_Framework/FT_Esd_Dl.h **** // Keep cache of displaylist values that don't often change but are generally set by every widget t
  17:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_OPTIMIZE_DISPLAYLIST 1
  18:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_STATE_STACK_SIZE 5
  19:FT_Esd_Framework/FT_Esd_Dl.h **** 
  20:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_BITMAPHANDLE_INVALID 255
  21:FT_Esd_Framework/FT_Esd_Dl.h **** 
  22:FT_Esd_Framework/FT_Esd_Dl.h **** //
  23:FT_Esd_Framework/FT_Esd_Dl.h **** // Structs
  24:FT_Esd_Framework/FT_Esd_Dl.h **** //
  25:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_ESD_OPTIMIZE_DISPLAYLIST
  26:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_STATE Ft_Esd_GpuState[Ft_Esd_GpuState_I]
  27:FT_Esd_Framework/FT_Esd_Dl.h **** typedef struct
  28:FT_Esd_Framework/FT_Esd_Dl.h **** {
  29:FT_Esd_Framework/FT_Esd_Dl.h **** 	// Keep to a minimum
  30:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_81X_ENABLE
  31:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint32_t PaletteSource;
  32:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  33:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint32_t ColorRGB;
  34:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t ColorA;
  35:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t Handle;         // Current handle
  36:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t Cell;           // Current cell
  37:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_bool_t BitmapTransform; // BitmapTransform other than default is set
  38:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_81X_ENABLE
  39:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t VertexFormat;   // Current vertex format
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s 			page 11


  40:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  41:FT_Esd_Framework/FT_Esd_Dl.h **** } Ft_Esd_GpuState_T;
  42:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  43:FT_Esd_Framework/FT_Esd_Dl.h **** 
  44:FT_Esd_Framework/FT_Esd_Dl.h **** //
  45:FT_Esd_Framework/FT_Esd_Dl.h **** // Globals
  46:FT_Esd_Framework/FT_Esd_Dl.h **** //
  47:FT_Esd_Framework/FT_Esd_Dl.h **** extern Ft_Gpu_Hal_Context_t *Ft_Esd_Host;
  48:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint16_t Ft_Esd_FontHeight[32];
  49:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_ESD_OPTIMIZE_DISPLAYLIST
  50:FT_Esd_Framework/FT_Esd_Dl.h **** extern Ft_Esd_GpuState_T Ft_Esd_GpuState[FT_ESD_STATE_STACK_SIZE];
  51:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint8_t Ft_Esd_GpuState_I;
  52:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint32_t Ft_Esd_CoFgColor;
  53:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint32_t Ft_Esd_CoBgColor;
  54:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  55:FT_Esd_Framework/FT_Esd_Dl.h **** 
  56:FT_Esd_Framework/FT_Esd_Dl.h **** //Get the height of builtin font
  57:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_GetFontHeight, Type = ft_uint16_t ,DisplayName = "Get Font Height", Category = 
  58:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(i, Type = int, DisplayName = "Bitmap Handle", Default = 0, Min = 0, Max = 31)
  59:FT_Esd_Framework/FT_Esd_Dl.h **** // inline static ft_uint16_t Ft_Esd_GetFontHeight(int i) { return Ft_Esd_FontHeight[i]; }
  60:FT_Esd_Framework/FT_Esd_Dl.h **** #define Ft_Esd_GetFontHeight(i) (Ft_Esd_FontHeight[i]);
  61:FT_Esd_Framework/FT_Esd_Dl.h **** 
  62:FT_Esd_Framework/FT_Esd_Dl.h **** // Reset any cached state
  63:FT_Esd_Framework/FT_Esd_Dl.h **** void Ft_Esd_ResetGpuState();
  64:FT_Esd_Framework/FT_Esd_Dl.h **** void Ft_Esd_ResetCoState();
  65:FT_Esd_Framework/FT_Esd_Dl.h **** 
  66:FT_Esd_Framework/FT_Esd_Dl.h **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotalUsed();
  67:FT_Esd_Framework/FT_Esd_Dl.h **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotal();
  68:FT_Esd_Framework/FT_Esd_Dl.h **** 
  69:FT_Esd_Framework/FT_Esd_Dl.h **** /// Set current tag. Must be returned to 255 after usage, to ensure next widgets don't draw with in
  70:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_TAG, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  71:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(s, Type = ft_uint8_t, DisplayName = "Tag", Default = 255, Min = 0, Max = 255)
  72:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_TAG(ft_uint8_t s)
  73:FT_Esd_Framework/FT_Esd_Dl.h **** {
  74:FT_Esd_Framework/FT_Esd_Dl.h **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, TAG(s));
  75:FT_Esd_Framework/FT_Esd_Dl.h **** }
  76:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify color RGB
  77:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_RGB, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  78:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(c, Type = ft_rgb32_t, DisplayName = "Color")
  79:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_RGB(ft_rgb32_t c)
  80:FT_Esd_Framework/FT_Esd_Dl.h **** {
  81:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  82:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_rgb32_t rgb = c & 0xFFFFFF;
  83:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (rgb != FT_ESD_STATE.ColorRGB)
  84:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
  85:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  86:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, (4UL << 24) | (rgb));
  87:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  88:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.ColorRGB = rgb;
  89:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
  90:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  91:FT_Esd_Framework/FT_Esd_Dl.h **** }
  92:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify alpha channel
  93:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_A, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  94:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(alpha, Type = ft_uint8_t, Default = 255, Min = 0, Max = 255)
  95:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_A(ft_uint8_t alpha)
  96:FT_Esd_Framework/FT_Esd_Dl.h **** {
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s 			page 12


  97:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  98:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (alpha != FT_ESD_STATE.ColorA)
 382              		.loc 2 98 0
 383 000a 7D4B     		ldr	r3, .L51
 384 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 385 000e 7D4B     		ldr	r3, .L51+4
 386 0010 03EB0213 		add	r3, r3, r2, lsl #4
 387 0014 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 388 0016 FF2B     		cmp	r3, #255
 389 0018 0BD0     		beq	.L19
  99:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
 100:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 101:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, COLOR_A(alpha));
 390              		.loc 2 101 0
 391 001a 7B49     		ldr	r1, .L51+8
 392 001c 7B4B     		ldr	r3, .L51+12
 393 001e 1868     		ldr	r0, [r3]
 394              	.LVL31:
 395 0020 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 396              	.LVL32:
 102:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 103:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.ColorA = alpha;
 397              		.loc 2 103 0
 398 0024 764B     		ldr	r3, .L51
 399 0026 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 400 0028 764B     		ldr	r3, .L51+4
 401 002a 03EB0213 		add	r3, r3, r2, lsl #4
 402 002e FF22     		movs	r2, #255
 403 0030 1A72     		strb	r2, [r3, #8]
 404              	.L19:
 405              	.LVL33:
 406              	.LBE35:
 407              	.LBE34:
  55:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	Ft_Esd_Dl_TAG(s);
 408              		.loc 1 55 0
 409 0032 04F12000 		add	r0, r4, #32
 410 0036 FFF7FEFF 		bl	Ft_Esd_TouchTag_Tag
 411              	.LVL34:
 412              	.LBB36:
 413              	.LBB37:
  74:FT_Esd_Framework/FT_Esd_Dl.h **** }
 414              		.loc 2 74 0
 415 003a 40F04071 		orr	r1, r0, #50331648
 416 003e 734B     		ldr	r3, .L51+12
 417 0040 1868     		ldr	r0, [r3]
 418              	.LVL35:
 419 0042 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 420              	.LVL36:
 421              	.LBE37:
 422              	.LBE36:
  57:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_bool_t if_1 = context->State;
 423              		.loc 1 57 0
 424 0046 FFF7FEFF 		bl	Ft_Esd_GetHost
 425              	.LVL37:
 426 004a 0646     		mov	r6, r0
 427              	.LVL38:
  58:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_rgb32_t c;
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s 			page 13


 428              		.loc 1 58 0
 429 004c 94F83C30 		ldrb	r3, [r4, #60]	@ zero_extendqisi2
 430              	.LVL39:
  60:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	{
 431              		.loc 1 60 0
 432 0050 002B     		cmp	r3, #0
 433 0052 00F0B180 		beq	.L20
 434              	.LBB38:
  62:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 		c = Ft_Esd_Theme_GetPrimaryColor(theme);
 435              		.loc 1 62 0
 436 0056 6368     		ldr	r3, [r4, #4]
 437              	.LVL40:
 438 0058 2846     		mov	r0, r5
 439              	.LVL41:
 440 005a 9847     		blx	r3
 441              	.LVL42:
 442              	.LBB39:
 443              	.LBB40:
 444              		.file 3 "FT_Esd_Widgets/FT_Esd_Theme.h"
   1:FT_Esd_Widgets/FT_Esd_Theme.h **** 
   2:FT_Esd_Widgets/FT_Esd_Theme.h **** #ifndef FT_ESD_THEME_H
   3:FT_Esd_Widgets/FT_Esd_Theme.h **** #define FT_ESD_THEME_H
   4:FT_Esd_Widgets/FT_Esd_Theme.h **** #include "FT_DataTypes.h"
   5:FT_Esd_Widgets/FT_Esd_Theme.h **** #include "Ft_Esd.h"
   6:FT_Esd_Widgets/FT_Esd_Theme.h **** 
   7:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_CATEGORY(EsdTheme, DisplayName = "ESD Theme")
   8:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_CATEGORY(EsdTheme_Themes, DisplayName = "Themes", Category = EsdTheme)
   9:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  10:FT_Esd_Widgets/FT_Esd_Theme.h **** typedef unsigned int ft_uint32_t;
  11:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  12:FT_Esd_Widgets/FT_Esd_Theme.h **** typedef struct
  13:FT_Esd_Widgets/FT_Esd_Theme.h **** {
  14:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t ClearColor;
  15:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t BackColor;
  16:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t TextColor;
  17:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t ButtonTextColor;
  18:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t DefaultColor;
  19:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t PrimaryColor;
  20:FT_Esd_Widgets/FT_Esd_Theme.h **** } Ft_Esd_Theme;
  21:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  22:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_TYPE(Ft_Esd_Theme *, Native = Pointer, Edit = Library)
  23:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  24:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_RENDER(Ft_Esd_Theme_SetCurrent, DisplayName = "Set Current Theme", Category = EsdTheme, Include
  25:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *)
  26:FT_Esd_Widgets/FT_Esd_Theme.h **** void Ft_Esd_Theme_SetCurrent(Ft_Esd_Theme *theme);
  27:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  28:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetCurrent, DisplayName = "Current Theme", Category = EsdTheme, Type = Ft
  29:FT_Esd_Widgets/FT_Esd_Theme.h **** Ft_Esd_Theme *Ft_Esd_Theme_GetCurrent();
  30:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  31:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetClearColor, DisplayName = "Get Clear Color", Category = EsdTheme, Type
  32:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  33:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetClearColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_Es
  34:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  35:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetBackColor, DisplayName = "Get Back Color", Category = EsdTheme, Type =
  36:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  37:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetBackColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_Esd
  38:FT_Esd_Widgets/FT_Esd_Theme.h **** 
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s 			page 14


  39:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetTextColor, DisplayName = "Get Text Color", Category = EsdTheme, Type =
  40:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  41:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetTextColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_Esd
  42:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  43:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetButtonTextColor, DisplayName = "Get Button Text Color", Category = Esd
  44:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  45:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetButtonTextColor(Ft_Esd_Theme *theme) { if (!theme) return 
  46:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  47:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetCurrentColor, DisplayName = "Get Default Color", Category = EsdTheme, 
  48:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  49:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetCurrentColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_
  50:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  51:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetPrimaryColor, DisplayName = "Get Primary Color", Category = EsdTheme, 
  52:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  53:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetPrimaryColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_
 445              		.loc 3 53 0
 446 005c 0028     		cmp	r0, #0
 447 005e 00F0A780 		beq	.L39
 448 0062 4169     		ldr	r1, [r0, #20]
 449              	.LVL43:
 450              	.L22:
 451              	.LBE40:
 452              	.LBE39:
 453              	.LBE38:
  70:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	Ft_Gpu_Hal_Context_t * phost_1 = Ft_Esd_GetHost();
 454              		.loc 1 70 0
 455 0064 3046     		mov	r0, r6
 456 0066 FFF7FEFF 		bl	Ft_Gpu_CoCmd_FgColor
 457              	.LVL44:
  71:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	Ft_Esd_Theme * theme_2 = context->Theme(parent);
 458              		.loc 1 71 0
 459 006a FFF7FEFF 		bl	Ft_Esd_GetHost
 460              	.LVL45:
 461 006e 0646     		mov	r6, r0
 462              	.LVL46:
  72:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_rgb32_t c_1 = Ft_Esd_Theme_GetBackColor(theme_2);
 463              		.loc 1 72 0
 464 0070 6368     		ldr	r3, [r4, #4]
 465 0072 2846     		mov	r0, r5
 466              	.LVL47:
 467 0074 9847     		blx	r3
 468              	.LVL48:
 469              	.LBB43:
 470              	.LBB44:
  37:FT_Esd_Widgets/FT_Esd_Theme.h **** 
 471              		.loc 3 37 0
 472 0076 0028     		cmp	r0, #0
 473 0078 00F0A880 		beq	.L40
 474 007c 4168     		ldr	r1, [r0, #4]
 475              	.LVL49:
 476              	.L25:
 477              	.LBE44:
 478              	.LBE43:
  74:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	Ft_Esd_Theme * theme_3 = context->Theme(parent);
 479              		.loc 1 74 0
 480 007e 3046     		mov	r0, r6
 481 0080 FFF7FEFF 		bl	Ft_Gpu_CoCmd_BgColor
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s 			page 15


 482              	.LVL50:
  75:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_rgb32_t c_2 = Ft_Esd_Theme_GetTextColor(theme_3);
 483              		.loc 1 75 0
 484 0084 6368     		ldr	r3, [r4, #4]
 485 0086 2846     		mov	r0, r5
 486 0088 9847     		blx	r3
 487              	.LVL51:
 488              	.LBB46:
 489              	.LBB47:
  41:FT_Esd_Widgets/FT_Esd_Theme.h **** 
 490              		.loc 3 41 0
 491 008a 0028     		cmp	r0, #0
 492 008c 00F0A280 		beq	.L41
 493 0090 8668     		ldr	r6, [r0, #8]
 494              	.LVL52:
 495              	.L27:
 496              	.LBE47:
 497              	.LBE46:
 498              	.LBB49:
 499              	.LBB50:
  82:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (rgb != FT_ESD_STATE.ColorRGB)
 500              		.loc 2 82 0
 501 0092 26F07F46 		bic	r6, r6, #-16777216
 502              	.LVL53:
  83:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
 503              		.loc 2 83 0
 504 0096 5A4B     		ldr	r3, .L51
 505 0098 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 506 009a 5A4B     		ldr	r3, .L51+4
 507 009c 03EB0213 		add	r3, r3, r2, lsl #4
 508 00a0 5B68     		ldr	r3, [r3, #4]
 509 00a2 9E42     		cmp	r6, r3
 510 00a4 0BD0     		beq	.L28
  86:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 511              		.loc 2 86 0
 512 00a6 46F08061 		orr	r1, r6, #67108864
 513 00aa 584B     		ldr	r3, .L51+12
 514 00ac 1868     		ldr	r0, [r3]
 515 00ae FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 516              	.LVL54:
  88:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
 517              		.loc 2 88 0
 518 00b2 534B     		ldr	r3, .L51
 519 00b4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 520 00b6 534B     		ldr	r3, .L51+4
 521 00b8 03EB0213 		add	r3, r3, r2, lsl #4
 522 00bc 5E60     		str	r6, [r3, #4]
 523              	.L28:
 524              	.LVL55:
 525              	.LBE50:
 526              	.LBE49:
  78:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t left = context->X(parent);
 527              		.loc 1 78 0
 528 00be FFF7FEFF 		bl	Ft_Esd_GetHost
 529              	.LVL56:
 530 00c2 8046     		mov	r8, r0
 531              	.LVL57:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s 			page 16


  79:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t i = context->Font(parent);
 532              		.loc 1 79 0
 533 00c4 A368     		ldr	r3, [r4, #8]
 534 00c6 2846     		mov	r0, r5
 535              	.LVL58:
 536 00c8 9847     		blx	r3
 537              	.LVL59:
 538 00ca 0746     		mov	r7, r0
 539              	.LVL60:
  80:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_uint16_t left_3 = Ft_Esd_GetFontHeight(i);
 540              		.loc 1 80 0
 541 00cc A369     		ldr	r3, [r4, #24]
 542 00ce 2846     		mov	r0, r5
 543 00d0 9847     		blx	r3
 544              	.LVL61:
  81:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t right_1 = 5;
 545              		.loc 1 81 0
 546 00d2 4F4B     		ldr	r3, .L51+16
 547 00d4 33F81030 		ldrh	r3, [r3, r0, lsl #1]
 548              	.LVL62:
  83:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t right_2 = 4;
 549              		.loc 1 83 0
 550 00d8 03EB8303 		add	r3, r3, r3, lsl #2
 551              	.LVL63:
 552 00dc 1BB2     		sxth	r3, r3
 553              	.LVL64:
  85:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t right_3 = 2;
 554              		.loc 1 85 0
 555 00de 002B     		cmp	r3, #0
 556 00e0 7CDB     		blt	.L42
 557              	.L29:
 558              	.LVL65:
  87:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t x = left + right;
 559              		.loc 1 87 0
 560 00e2 9B10     		asrs	r3, r3, #2
 561 00e4 7CD4     		bmi	.L43
 562              	.L30:
 563              	.LVL66:
  88:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t left_5 = context->Y(parent);
 564              		.loc 1 88 0
 565 00e6 07EB6303 		add	r3, r7, r3, asr #1
 566              	.LVL67:
 567 00ea 1FB2     		sxth	r7, r3
 568              	.LVL68:
  89:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t i_1 = context->Font(parent);
 569              		.loc 1 89 0
 570 00ec E368     		ldr	r3, [r4, #12]
 571 00ee 2846     		mov	r0, r5
 572              	.LVL69:
 573 00f0 9847     		blx	r3
 574              	.LVL70:
 575 00f2 0646     		mov	r6, r0
 576              	.LVL71:
  90:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_uint16_t left_8 = Ft_Esd_GetFontHeight(i_1);
 577              		.loc 1 90 0
 578 00f4 A369     		ldr	r3, [r4, #24]
 579 00f6 2846     		mov	r0, r5
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s 			page 17


 580 00f8 9847     		blx	r3
 581              	.LVL72:
  91:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t right_5 = 5;
 582              		.loc 1 91 0
 583 00fa 454B     		ldr	r3, .L51+16
 584 00fc 33F81030 		ldrh	r3, [r3, r0, lsl #1]
 585              	.LVL73:
  93:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t right_6 = 4;
 586              		.loc 1 93 0
 587 0100 03EB8303 		add	r3, r3, r3, lsl #2
 588              	.LVL74:
 589 0104 1BB2     		sxth	r3, r3
 590              	.LVL75:
  95:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t right_7 = 4;
 591              		.loc 1 95 0
 592 0106 002B     		cmp	r3, #0
 593 0108 6CDB     		blt	.L44
 594              	.L31:
 595              	.LVL76:
  97:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t left_4 = left_5 + right_4;
 596              		.loc 1 97 0
 597 010a 9B10     		asrs	r3, r3, #2
 598 010c 6CD4     		bmi	.L45
 599              	.L32:
 600              	.LVL77:
  98:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t left_10 = context->Height(parent);
 601              		.loc 1 98 0
 602 010e 06EBA303 		add	r3, r6, r3, asr #2
 603              	.LVL78:
 604 0112 9EB2     		uxth	r6, r3
 605              	.LVL79:
  99:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t i_2 = context->Font(parent);
 606              		.loc 1 99 0
 607 0114 6369     		ldr	r3, [r4, #20]
 608 0116 2846     		mov	r0, r5
 609              	.LVL80:
 610 0118 9847     		blx	r3
 611              	.LVL81:
 612 011a 8146     		mov	r9, r0
 613              	.LVL82:
 100:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_uint16_t left_12 = Ft_Esd_GetFontHeight(i_2);
 614              		.loc 1 100 0
 615 011c A369     		ldr	r3, [r4, #24]
 616 011e 2846     		mov	r0, r5
 617 0120 9847     		blx	r3
 618              	.LVL83:
 101:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t right_10 = 5;
 619              		.loc 1 101 0
 620 0122 3B4B     		ldr	r3, .L51+16
 621 0124 33F81020 		ldrh	r2, [r3, r0, lsl #1]
 622              	.LVL84:
 103:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t right_11 = 4;
 623              		.loc 1 103 0
 624 0128 02EB8202 		add	r2, r2, r2, lsl #2
 625              	.LVL85:
 626 012c 12B2     		sxth	r2, r2
 627              	.LVL86:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s 			page 18


 105:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t left_9 = left_10 - right_9;
 628              		.loc 1 105 0
 629 012e 002A     		cmp	r2, #0
 630 0130 5CDB     		blt	.L46
 631              	.L33:
 632              	.LVL87:
 106:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t right_12 = 2;
 633              		.loc 1 106 0
 634 0132 A9EBA209 		sub	r9, r9, r2, asr #2
 635              	.LVL88:
 636 0136 0FFA89F9 		sxth	r9, r9
 637              	.LVL89:
 108:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t y = left_4 + right_8;
 638              		.loc 1 108 0
 639 013a B9F1000F 		cmp	r9, #0
 640 013e 57DB     		blt	.L47
 641              	.L34:
 642              	.LVL90:
 109:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t left_13 = context->Width(parent);
 643              		.loc 1 109 0
 644 0140 06EB6906 		add	r6, r6, r9, asr #1
 645              	.LVL91:
 646 0144 36B2     		sxth	r6, r6
 647              	.LVL92:
 110:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t i_3 = context->Font(parent);
 648              		.loc 1 110 0
 649 0146 2369     		ldr	r3, [r4, #16]
 650              	.LVL93:
 651 0148 2846     		mov	r0, r5
 652              	.LVL94:
 653 014a 9847     		blx	r3
 654              	.LVL95:
 655 014c 8146     		mov	r9, r0
 656              	.LVL96:
 111:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_uint16_t left_15 = Ft_Esd_GetFontHeight(i_3);
 657              		.loc 1 111 0
 658 014e A369     		ldr	r3, [r4, #24]
 659 0150 2846     		mov	r0, r5
 660 0152 9847     		blx	r3
 661              	.LVL97:
 112:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t right_14 = 5;
 662              		.loc 1 112 0
 663 0154 2E4B     		ldr	r3, .L51+16
 664 0156 33F81000 		ldrh	r0, [r3, r0, lsl #1]
 665              	.LVL98:
 114:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t right_15 = 4;
 666              		.loc 1 114 0
 667 015a 00EB8000 		add	r0, r0, r0, lsl #2
 668              	.LVL99:
 669 015e 00B2     		sxth	r0, r0
 670              	.LVL100:
 116:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t width = left_13 - right_13;
 671              		.loc 1 116 0
 672 0160 0028     		cmp	r0, #0
 673 0162 48DB     		blt	.L48
 674              	.L35:
 675              	.LVL101:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s 			page 19


 117:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t font = context->Font(parent);
 676              		.loc 1 117 0
 677 0164 A9EBA009 		sub	r9, r9, r0, asr #2
 678              	.LVL102:
 679 0168 0FFA89F9 		sxth	r9, r9
 680              	.LVL103:
 118:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_uint16_t options = 0;
 681              		.loc 1 118 0
 682 016c A369     		ldr	r3, [r4, #24]
 683 016e 2846     		mov	r0, r5
 684              	.LVL104:
 685 0170 9847     		blx	r3
 686              	.LVL105:
 687 0172 8246     		mov	r10, r0
 688              	.LVL106:
 120:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_uint16_t state;
 689              		.loc 1 120 0
 690 0174 94F83C30 		ldrb	r3, [r4, #60]	@ zero_extendqisi2
 691              	.LVL107:
 122:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	{
 692              		.loc 1 122 0
 693 0178 002B     		cmp	r3, #0
 694 017a 3ED1     		bne	.L49
 128:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	}
 695              		.loc 1 128 0
 696 017c 4FF0000B 		mov	fp, #0
 697              	.L36:
 698              	.LVL108:
 130:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	Ft_Gpu_CoCmd_Toggle(phost_2, x, y, width, font, options, state, s_1);
 699              		.loc 1 130 0
 700 0180 E369     		ldr	r3, [r4, #28]
 701              	.LVL109:
 702 0182 2846     		mov	r0, r5
 703 0184 9847     		blx	r3
 704              	.LVL110:
 131:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_uint8_t s_2 = 255;
 705              		.loc 1 131 0
 706 0186 0390     		str	r0, [sp, #12]
 707 0188 CDF808B0 		str	fp, [sp, #8]
 708 018c 0023     		movs	r3, #0
 709 018e 0193     		str	r3, [sp, #4]
 710 0190 CDF800A0 		str	r10, [sp]
 711 0194 4B46     		mov	r3, r9
 712 0196 3246     		mov	r2, r6
 713 0198 3946     		mov	r1, r7
 714 019a 4046     		mov	r0, r8
 715              	.LVL111:
 716 019c FFF7FEFF 		bl	Ft_Gpu_CoCmd_Toggle
 717              	.LVL112:
 718              	.LBB51:
 719              	.LBB52:
  74:FT_Esd_Framework/FT_Esd_Dl.h **** }
 720              		.loc 2 74 0
 721 01a0 1C49     		ldr	r1, .L51+20
 722 01a2 1A4B     		ldr	r3, .L51+12
 723 01a4 1868     		ldr	r0, [r3]
 724 01a6 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s 			page 20


 725              	.LVL113:
 726              	.LBE52:
 727              	.LBE51:
 134:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 
 728              		.loc 1 134 0
 729 01aa 05B0     		add	sp, sp, #20
 730              	.LCFI5:
 731              		.cfi_remember_state
 732              		.cfi_def_cfa_offset 36
 733              		@ sp needed
 734 01ac BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 735              	.LVL114:
 736              	.L39:
 737              	.LCFI6:
 738              		.cfi_restore_state
 739              	.LBB53:
 740              	.LBB42:
 741              	.LBB41:
 742              		.loc 3 53 0
 743 01b0 FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
 744              	.LVL115:
 745 01b4 4169     		ldr	r1, [r0, #20]
 746 01b6 55E7     		b	.L22
 747              	.LVL116:
 748              	.L20:
 749              	.LBE41:
 750              	.LBE42:
 751              	.LBE53:
 752              	.LBB54:
  67:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 		c = Ft_Esd_Theme_GetCurrentColor(theme_1);
 753              		.loc 1 67 0
 754 01b8 6368     		ldr	r3, [r4, #4]
 755              	.LVL117:
 756 01ba 2846     		mov	r0, r5
 757              	.LVL118:
 758 01bc 9847     		blx	r3
 759              	.LVL119:
 760              	.LBB55:
 761              	.LBB56:
  49:FT_Esd_Widgets/FT_Esd_Theme.h **** 
 762              		.loc 3 49 0
 763 01be 08B1     		cbz	r0, .L50
 764 01c0 0169     		ldr	r1, [r0, #16]
 765 01c2 4FE7     		b	.L22
 766              	.L50:
 767 01c4 FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
 768              	.LVL120:
 769 01c8 0169     		ldr	r1, [r0, #16]
 770 01ca 4BE7     		b	.L22
 771              	.LVL121:
 772              	.L40:
 773              	.LBE56:
 774              	.LBE55:
 775              	.LBE54:
 776              	.LBB57:
 777              	.LBB45:
  37:FT_Esd_Widgets/FT_Esd_Theme.h **** 
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s 			page 21


 778              		.loc 3 37 0
 779 01cc FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
 780              	.LVL122:
 781 01d0 4168     		ldr	r1, [r0, #4]
 782 01d2 54E7     		b	.L25
 783              	.LVL123:
 784              	.L41:
 785              	.LBE45:
 786              	.LBE57:
 787              	.LBB58:
 788              	.LBB48:
  41:FT_Esd_Widgets/FT_Esd_Theme.h **** 
 789              		.loc 3 41 0
 790 01d4 FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
 791              	.LVL124:
 792 01d8 8668     		ldr	r6, [r0, #8]
 793              	.LVL125:
 794 01da 5AE7     		b	.L27
 795              	.LVL126:
 796              	.L42:
 797              	.LBE48:
 798              	.LBE58:
  85:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t right_3 = 2;
 799              		.loc 1 85 0
 800 01dc 0333     		adds	r3, r3, #3
 801 01de 80E7     		b	.L29
 802              	.LVL127:
 803              	.L43:
  87:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t x = left + right;
 804              		.loc 1 87 0
 805 01e0 0133     		adds	r3, r3, #1
 806 01e2 80E7     		b	.L30
 807              	.LVL128:
 808              	.L44:
  95:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t right_7 = 4;
 809              		.loc 1 95 0
 810 01e4 0333     		adds	r3, r3, #3
 811 01e6 90E7     		b	.L31
 812              	.LVL129:
 813              	.L45:
  97:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t left_4 = left_5 + right_4;
 814              		.loc 1 97 0
 815 01e8 0333     		adds	r3, r3, #3
 816 01ea 90E7     		b	.L32
 817              	.LVL130:
 818              	.L46:
 105:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t left_9 = left_10 - right_9;
 819              		.loc 1 105 0
 820 01ec 0332     		adds	r2, r2, #3
 821 01ee A0E7     		b	.L33
 822              	.LVL131:
 823              	.L47:
 108:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t y = left_4 + right_8;
 824              		.loc 1 108 0
 825 01f0 09F10109 		add	r9, r9, #1
 826 01f4 A4E7     		b	.L34
 827              	.LVL132:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s 			page 22


 828              	.L48:
 116:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_int16_t width = left_13 - right_13;
 829              		.loc 1 116 0
 830 01f6 0330     		adds	r0, r0, #3
 831 01f8 B4E7     		b	.L35
 832              	.LVL133:
 833              	.L49:
 124:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	}
 834              		.loc 1 124 0
 835 01fa 4FF6FF7B 		movw	fp, #65535
 836 01fe BFE7     		b	.L36
 837              	.L52:
 838              		.align	2
 839              	.L51:
 840 0200 00000000 		.word	Ft_Esd_GpuState_I
 841 0204 00000000 		.word	Ft_Esd_GpuState
 842 0208 FF000010 		.word	268435711
 843 020c 00000000 		.word	Ft_Esd_Host
 844 0210 00000000 		.word	Ft_Esd_FontHeight
 845 0214 FF000003 		.word	50331903
 846              		.cfi_endproc
 847              	.LFE32:
 849              		.section	.text.Ft_Esd_Toggle_Start,"ax",%progbits
 850              		.align	1
 851              		.global	Ft_Esd_Toggle_Start
 852              		.syntax unified
 853              		.thumb
 854              		.thumb_func
 855              		.fpu fpv5-sp-d16
 857              	Ft_Esd_Toggle_Start:
 858              	.LFB33:
 137:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	void *parent = context->Parent;
 859              		.loc 1 137 0
 860              		.cfi_startproc
 861              		@ args = 0, pretend = 0, frame = 0
 862              		@ frame_needed = 0, uses_anonymous_args = 0
 863              	.LVL134:
 864 0000 08B5     		push	{r3, lr}
 865              	.LCFI7:
 866              		.cfi_def_cfa_offset 8
 867              		.cfi_offset 3, -8
 868              		.cfi_offset 14, -4
 869              	.LVL135:
 139:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** }
 870              		.loc 1 139 0
 871 0002 2030     		adds	r0, r0, #32
 872              	.LVL136:
 873 0004 FFF7FEFF 		bl	Ft_Esd_TouchTag_Start
 874              	.LVL137:
 140:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 
 875              		.loc 1 140 0
 876 0008 08BD     		pop	{r3, pc}
 877              		.cfi_endproc
 878              	.LFE33:
 880              		.section	.text.Ft_Esd_Toggle_Update,"ax",%progbits
 881              		.align	1
 882              		.global	Ft_Esd_Toggle_Update
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s 			page 23


 883              		.syntax unified
 884              		.thumb
 885              		.thumb_func
 886              		.fpu fpv5-sp-d16
 888              	Ft_Esd_Toggle_Update:
 889              	.LFB35:
 152:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 
 153:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** void Ft_Esd_Toggle_Update(Ft_Esd_Toggle *context)
 154:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** {
 890              		.loc 1 154 0
 891              		.cfi_startproc
 892              		@ args = 0, pretend = 0, frame = 0
 893              		@ frame_needed = 0, uses_anonymous_args = 0
 894              	.LVL138:
 895 0000 08B5     		push	{r3, lr}
 896              	.LCFI8:
 897              		.cfi_def_cfa_offset 8
 898              		.cfi_offset 3, -8
 899              		.cfi_offset 14, -4
 900              	.LVL139:
 155:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	void *parent = context->Parent;
 156:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	Ft_Esd_TouchTag_Update(&context->Touch_Tag);
 901              		.loc 1 156 0
 902 0002 2030     		adds	r0, r0, #32
 903              	.LVL140:
 904 0004 FFF7FEFF 		bl	Ft_Esd_TouchTag_Update
 905              	.LVL141:
 157:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** }
 906              		.loc 1 157 0
 907 0008 08BD     		pop	{r3, pc}
 908              		.cfi_endproc
 909              	.LFE35:
 911              		.section	.text.Ft_Esd_Toggle_End,"ax",%progbits
 912              		.align	1
 913              		.global	Ft_Esd_Toggle_End
 914              		.syntax unified
 915              		.thumb
 916              		.thumb_func
 917              		.fpu fpv5-sp-d16
 919              	Ft_Esd_Toggle_End:
 920              	.LFB36:
 158:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 
 159:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** void Ft_Esd_Toggle_End(Ft_Esd_Toggle *context)
 160:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** {
 921              		.loc 1 160 0
 922              		.cfi_startproc
 923              		@ args = 0, pretend = 0, frame = 0
 924              		@ frame_needed = 0, uses_anonymous_args = 0
 925              	.LVL142:
 926 0000 08B5     		push	{r3, lr}
 927              	.LCFI9:
 928              		.cfi_def_cfa_offset 8
 929              		.cfi_offset 3, -8
 930              		.cfi_offset 14, -4
 931              	.LVL143:
 161:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	void *parent = context->Parent;
 162:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	Ft_Esd_TouchTag_End(&context->Touch_Tag);
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s 			page 24


 932              		.loc 1 162 0
 933 0002 2030     		adds	r0, r0, #32
 934              	.LVL144:
 935 0004 FFF7FEFF 		bl	Ft_Esd_TouchTag_End
 936              	.LVL145:
 163:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** }
 937              		.loc 1 163 0
 938 0008 08BD     		pop	{r3, pc}
 939              		.cfi_endproc
 940              	.LFE36:
 942              		.section	.text.Ft_Esd_Toggle_Toggle,"ax",%progbits
 943              		.align	1
 944              		.global	Ft_Esd_Toggle_Toggle
 945              		.syntax unified
 946              		.thumb
 947              		.thumb_func
 948              		.fpu fpv5-sp-d16
 950              	Ft_Esd_Toggle_Toggle:
 951              	.LFB37:
 164:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 
 165:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** void Ft_Esd_Toggle_Toggle(Ft_Esd_Toggle *context)
 166:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** {
 952              		.loc 1 166 0
 953              		.cfi_startproc
 954              		@ args = 0, pretend = 0, frame = 0
 955              		@ frame_needed = 0, uses_anonymous_args = 0
 956              	.LVL146:
 957 0000 38B5     		push	{r3, r4, r5, lr}
 958              	.LCFI10:
 959              		.cfi_def_cfa_offset 16
 960              		.cfi_offset 3, -16
 961              		.cfi_offset 4, -12
 962              		.cfi_offset 5, -8
 963              		.cfi_offset 14, -4
 964 0002 0446     		mov	r4, r0
 167:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	void *parent = context->Parent;
 965              		.loc 1 167 0
 966 0004 0568     		ldr	r5, [r0]
 967              	.LVL147:
 168:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	ft_bool_t value_1 = context->State;
 968              		.loc 1 168 0
 969 0006 90F83C10 		ldrb	r1, [r0, #60]	@ zero_extendqisi2
 970              	.LVL148:
 169:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	int set_variable_1 = !value_1;
 971              		.loc 1 169 0
 972 000a B1FA81F1 		clz	r1, r1
 973              	.LVL149:
 974 000e 4909     		lsrs	r1, r1, #5
 975              	.LVL150:
 170:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	context->State = set_variable_1;
 976              		.loc 1 170 0
 977 0010 80F83C10 		strb	r1, [r0, #60]
 978              	.LVL151:
 171:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	context->Changed(parent, set_variable_1);
 979              		.loc 1 171 0
 980 0014 036C     		ldr	r3, [r0, #64]
 981 0016 2846     		mov	r0, r5
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s 			page 25


 982              	.LVL152:
 983 0018 9847     		blx	r3
 984              	.LVL153:
 172:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** 	context->Toggled(parent);
 985              		.loc 1 172 0
 986 001a A36B     		ldr	r3, [r4, #56]
 987 001c 2846     		mov	r0, r5
 988 001e 9847     		blx	r3
 989              	.LVL154:
 173:FT_Esd_Widgets/Ft_Esd_Toggle__Generated.c **** }
 990              		.loc 1 173 0
 991 0020 38BD     		pop	{r3, r4, r5, pc}
 992              		.cfi_endproc
 993              	.LFE37:
 995              		.section	.rodata.Ft_Esd_Toggle_Text__Default.str1.4,"aMS",%progbits,1
 996              		.align	2
 997              	.LC0:
 998 0000 546F6767 		.ascii	"Toggle\000"
 998      6C6500
 999              		.text
 1000              	.Letext0:
 1001              		.file 4 "FT_Eve_Hal/FT_DataTypes.h"
 1002              		.file 5 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/lock.h"
 1003              		.file 6 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_types.h"
 1004              		.file 7 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 1005              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/unistd.h"
 1006              		.file 9 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/reent.h"
 1007              		.file 10 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/stdlib.h"
 1008              		.file 11 "FT_Eve_Hal/FT_Gpu_Hal.h"
 1009              		.file 12 "FT_Esd_Framework/Ft_Esd.h"
 1010              		.file 13 "FT_Esd_Widgets/Ft_Esd_DefaultTheme.h"
 1011              		.file 14 "FT_Esd_Framework/Ft_Esd_TouchTag.h"
 1012              		.file 15 "FT_Esd_Widgets/Ft_Esd_Toggle.h"
 1013              		.file 16 "FT_Esd_Framework/FT_Esd_CoPro_Cmds.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s 			page 26


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Ft_Esd_Toggle__Generated.c
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s:18     .text.Ft_Esd_Toggle_X__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s:25     .text.Ft_Esd_Toggle_X__Default:0000000000000000 Ft_Esd_Toggle_X__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s:42     .text.Ft_Esd_Toggle_Y__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s:49     .text.Ft_Esd_Toggle_Y__Default:0000000000000000 Ft_Esd_Toggle_Y__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s:65     .text.Ft_Esd_Toggle_Width__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s:72     .text.Ft_Esd_Toggle_Width__Default:0000000000000000 Ft_Esd_Toggle_Width__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s:88     .text.Ft_Esd_Toggle_Height__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s:95     .text.Ft_Esd_Toggle_Height__Default:0000000000000000 Ft_Esd_Toggle_Height__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s:111    .text.Ft_Esd_Toggle_Font__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s:118    .text.Ft_Esd_Toggle_Font__Default:0000000000000000 Ft_Esd_Toggle_Font__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s:134    .text.Ft_Esd_Toggle_Text__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s:141    .text.Ft_Esd_Toggle_Text__Default:0000000000000000 Ft_Esd_Toggle_Text__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s:156    .text.Ft_Esd_Toggle_Text__Default:0000000000000004 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s:161    .text.Ft_Esd_Toggle_Changed__Noop:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s:168    .text.Ft_Esd_Toggle_Changed__Noop:0000000000000000 Ft_Esd_Toggle_Changed__Noop
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s:182    .text.Ft_Esd_Toggle_Touch_Tag_Tap__Signal:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s:188    .text.Ft_Esd_Toggle_Touch_Tag_Tap__Signal:0000000000000000 Ft_Esd_Toggle_Touch_Tag_Tap__Signal
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s:235    .text.Ft_Esd_Toggle_Theme__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s:242    .text.Ft_Esd_Toggle_Theme__Default:0000000000000000 Ft_Esd_Toggle_Theme__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s:262    .text.Ft_Esd_Toggle__Initializer:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s:269    .text.Ft_Esd_Toggle__Initializer:0000000000000000 Ft_Esd_Toggle__Initializer
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s:332    .text.Ft_Esd_Toggle__Initializer:0000000000000040 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s:346    .text.Ft_Esd_Toggle_Render:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s:353    .text.Ft_Esd_Toggle_Render:0000000000000000 Ft_Esd_Toggle_Render
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s:840    .text.Ft_Esd_Toggle_Render:0000000000000200 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s:850    .text.Ft_Esd_Toggle_Start:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s:857    .text.Ft_Esd_Toggle_Start:0000000000000000 Ft_Esd_Toggle_Start
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s:881    .text.Ft_Esd_Toggle_Update:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s:888    .text.Ft_Esd_Toggle_Update:0000000000000000 Ft_Esd_Toggle_Update
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s:912    .text.Ft_Esd_Toggle_End:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s:919    .text.Ft_Esd_Toggle_End:0000000000000000 Ft_Esd_Toggle_End
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s:943    .text.Ft_Esd_Toggle_Toggle:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s:950    .text.Ft_Esd_Toggle_Toggle:0000000000000000 Ft_Esd_Toggle_Toggle
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccIWyFXx.s:996    .rodata.Ft_Esd_Toggle_Text__Default.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
Ft_Esd_Theme_GetCurrent
Ft_Esd_TouchTag__Initializer
Ft_Esd_Noop
Ft_Gpu_Hal_WrCmd32
Ft_Esd_TouchTag_Tag
Ft_Esd_GetHost
Ft_Gpu_CoCmd_FgColor
Ft_Gpu_CoCmd_BgColor
Ft_Gpu_CoCmd_Toggle
Ft_Esd_GpuState_I
Ft_Esd_GpuState
Ft_Esd_Host
Ft_Esd_FontHeight
Ft_Esd_TouchTag_Start
Ft_Esd_TouchTag_Update
Ft_Esd_TouchTag_End
