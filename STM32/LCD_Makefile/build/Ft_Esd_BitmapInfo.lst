ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"Ft_Esd_BitmapInfo.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.nullInfo,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	nullInfo:
  25              	.LFB10:
  26              		.file 1 "FT_Esd_Framework/Ft_Esd_BitmapInfo.c"
   1:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
   2:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #include "Ft_Esd_BitmapInfo.h"
   3:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #include "Ft_Esd_GpuAlloc.h"
   4:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
   5:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #if defined (FT900_PLATFORM)
   6:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #	include "ff.h"
   7:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #endif
   8:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
   9:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #ifndef NDEBUG
  10:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #define ESD_BITMAPINFO_DEBUG
  11:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #endif
  12:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
  13:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** extern Ft_Gpu_Hal_Context_t *Ft_Esd_Host;
  14:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** extern Ft_Esd_GpuAlloc *Ft_Esd_GAlloc;
  15:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
  16:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
  17:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
  18:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** int load_inflate_image(ft_uint32_t address, const char *filename)
  19:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** {
  20:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	Ft_Gpu_Hal_Context_t *phost = Ft_Esd_Host;
  21:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
  22:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #if defined(MSVC_PLATFORM) || defined(MSVC_FT800EMU) || defined(ESD_SIMULATION)
  23:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
  24:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	FILE *afile;
  25:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	ft_uint32_t ftsize = 0;
  26:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	ft_uint8_t pbuff[8192];
  27:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	ft_uint16_t blocklen;
  28:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
  29:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	afile = fopen(filename, "rb");		// read Binary (rb)
  30:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	if (afile == NULL)
  31:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	{
  32:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		printf("Unable to open: %s\n", filename);
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s 			page 2


  33:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		return 0;
  34:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	}
  35:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	Ft_Gpu_Hal_WrCmd32(phost, CMD_INFLATE);
  36:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	Ft_Gpu_Hal_WrCmd32(phost, address);
  37:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	fseek(afile, 0, SEEK_END);
  38:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	ftsize = ftell(afile);
  39:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	fseek(afile, 0, SEEK_SET);
  40:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	while (ftsize>0)
  41:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	{
  42:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		blocklen = ftsize>8192 ? 8192 : ftsize;
  43:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		fread(pbuff, 1, blocklen, afile);							/* copy the data into pbuff and then transfter it to comm
  44:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		ftsize -= blocklen;
  45:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		Ft_Gpu_Hal_WrCmdBuf(phost, pbuff, blocklen);				/* copy data continuously into command memory */
  46:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	}
  47:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	fclose(afile);												/* close the opened jpg file */
  48:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	return 1;
  49:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
  50:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #elif defined (FT900_PLATFORM)
  51:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
  52:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	FRESULT fResult;
  53:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	FIL InfSrc;
  54:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
  55:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	ft_int32_t blocklen, filesize;
  56:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	ft_uint32_t g_random_buffer[512L];
  57:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
  58:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	fResult = f_open(&InfSrc, filename, FA_READ | FA_OPEN_EXISTING);
  59:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	if (fResult == FR_OK)
  60:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	{
  61:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		Ft_Gpu_Hal_WrCmd32(phost, CMD_INFLATE);
  62:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		Ft_Gpu_Hal_WrCmd32(phost, address);
  63:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		filesize = f_size(&InfSrc);
  64:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		while (filesize>0)
  65:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		{
  66:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			fResult = f_read(&InfSrc, g_random_buffer, 512, &blocklen);	// read a chunk of src file
  67:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			filesize -= blocklen;
  68:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			Ft_Gpu_Hal_WrCmdBuf(phost, (char *)g_random_buffer, blocklen);
  69:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
  70:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		}
  71:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		f_close(&InfSrc);
  72:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		return 1;
  73:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	}
  74:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	else
  75:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	{
  76:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		printf("Unable to open file: \"%s\"\n", filename);
  77:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		return 0;
  78:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	}
  79:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
  80:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #else
  81:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
  82:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	return 0;
  83:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
  84:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #endif
  85:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** }
  86:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
  87:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** ft_uint32_t Ft_Esd_LoadBitmap(Ft_Esd_BitmapInfo *bitmapInfo)
  88:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** {
  89:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	if (!bitmapInfo)
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s 			page 3


  90:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	{
  91:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #ifdef ESD_BITMAPINFO_DEBUG
  92:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		printf("Bitmap info is NULL\n");
  93:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #endif
  94:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		return ~0;
  95:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	}
  96:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
  97:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	// Get address of specified handle
  98:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	// printf("%i: %i\n", bitmapInfo->GpuHandle.Id, bitmapInfo->GpuHandle.Seq);
  99:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	ft_uint32_t addr = Ft_Esd_GpuAlloc_Get(Ft_Esd_GAlloc, bitmapInfo->GpuHandle);
 100:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	if (addr == ~0)
 101:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	{
 102:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		if (!bitmapInfo->File)
 103:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		{
 104:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #ifdef ESD_BITMAPINFO_DEBUG
 105:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			// printf("Bitmap info file name is NULL, cannot auto-load\n");
 106:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #endif
 107:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			return ~0;
 108:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		}
 109:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
 110:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		// Not loaded, load this bitmap
 111:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		bitmapInfo->GpuHandle = Ft_Esd_GpuAlloc_Alloc(Ft_Esd_GAlloc, bitmapInfo->Size, bitmapInfo->Persis
 112:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		addr = Ft_Esd_GpuAlloc_Get(Ft_Esd_GAlloc, bitmapInfo->GpuHandle);
 113:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		if (addr != ~0)
 114:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		{
 115:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #ifdef ESD_BITMAPINFO_DEBUG
 116:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			printf("Allocated space for bitmap\n");
 117:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #endif
 118:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			// Allocation space OK
 119:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			if (!load_inflate_image(addr, bitmapInfo->File))
 120:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			{
 121:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 				// Failed to load from file
 122:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 				Ft_Esd_GpuAlloc_Free(Ft_Esd_GAlloc, bitmapInfo->GpuHandle);
 123:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 				addr = ~0;
 124:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			}
 125:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		}
 126:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		else
 127:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		{
 128:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #ifdef ESD_BITMAPINFO_DEBUG
 129:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			printf("Unable to allocate space for bitmap\n");
 130:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #endif
 131:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		}
 132:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	}
 133:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	return addr;
 134:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** }
 135:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
 136:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** ft_uint32_t Ft_Esd_LoadPalette(Ft_Esd_BitmapInfo *bitmapInfo)
 137:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** {
 138:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	if (!bitmapInfo)
 139:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	{
 140:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #ifdef ESD_BITMAPINFO_DEBUG
 141:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		printf("Bitmap info is NULL\n");
 142:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #endif
 143:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		return ~0;
 144:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	}
 145:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
 146:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #ifdef FT_81X_ENABLE
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s 			page 4


 147:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
 148:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	// Get palette address of specified handle
 149:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	ft_uint32_t addr = Ft_Esd_GpuAlloc_Get(Ft_Esd_GAlloc, bitmapInfo->PaletteGpuHandle);
 150:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	if (addr == ~0)
 151:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	{
 152:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		if (!bitmapInfo->PaletteFile)
 153:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		{
 154:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #ifdef ESD_BITMAPINFO_DEBUG
 155:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			// printf("Bitmap info palette file name is NULL, cannot auto-load\n");
 156:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #endif
 157:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			return ~0;
 158:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		}
 159:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
 160:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		ft_uint32_t size;
 161:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		switch (bitmapInfo->Format)
 162:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		{
 163:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		case PALETTED8: size = 256 * 4; break;
 164:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		case PALETTED4444: size = 256 * 2; break;
 165:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		case PALETTED565: size = 256 * 2; break;
 166:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		default:
 167:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			printf("Unknown palette format, cannot load\n");
 168:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			return ~0;
 169:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		}
 170:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
 171:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		// Not loaded, load this bitmap palette
 172:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		bitmapInfo->PaletteGpuHandle = Ft_Esd_GpuAlloc_Alloc(Ft_Esd_GAlloc, size,bitmapInfo->Persistent ?
 173:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		addr = Ft_Esd_GpuAlloc_Get(Ft_Esd_GAlloc, bitmapInfo->PaletteGpuHandle);
 174:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		if (addr != ~0)
 175:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		{
 176:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #ifdef ESD_BITMAPINFO_DEBUG
 177:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			printf("Allocated space for bitmap palette\n");
 178:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #endif
 179:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			// Allocation space OK
 180:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			if (!load_inflate_image(addr, bitmapInfo->PaletteFile))
 181:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			{
 182:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 				// Failed to load from file
 183:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 				Ft_Esd_GpuAlloc_Free(Ft_Esd_GAlloc, bitmapInfo->PaletteGpuHandle);
 184:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 				addr = ~0;
 185:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			}
 186:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		}
 187:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		else
 188:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		{
 189:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #ifdef ESD_BITMAPINFO_DEBUG
 190:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			printf("Unable to allocate space for bitmap palette\n");
 191:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #endif
 192:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		}
 193:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	}
 194:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
 195:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #else // FT_80X_ENABLE
 196:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
 197:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	printf("Palette not yet implemented for FT80x\n");
 198:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	ft_uint32_taddr = ~0;
 199:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
 200:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #endif
 201:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
 202:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	return addr;
 203:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** }
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s 			page 5


 204:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
 205:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** void Ft_Esd_BitmapPersist(Ft_Esd_BitmapCell *bitmapCell)
 206:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** {
 207:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	if (bitmapCell)
 208:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	{
 209:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		Ft_Esd_LoadBitmap(bitmapCell->Info);
 210:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		Ft_Esd_LoadPalette(bitmapCell->Info);
 211:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	}
 212:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** }
 213:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
 214:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** extern void Ft_Esd_Noop(void *context);
 215:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
 216:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** static Ft_Esd_BitmapInfo *nullInfo(void *context) { return 0; }
  27              		.loc 1 216 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  33              		.loc 1 216 0
  34 0000 0020     		movs	r0, #0
  35              	.LVL1:
  36 0002 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE10:
  40              		.section	.text.nullCell,"ax",%progbits
  41              		.align	1
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv5-sp-d16
  47              	nullCell:
  48              	.LFB11:
 217:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** static ft_uint8_t nullCell(void *context) { return 0; }
  49              		.loc 1 217 0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  54              	.LVL2:
  55              		.loc 1 217 0
  56 0000 0020     		movs	r0, #0
  57              	.LVL3:
  58 0002 7047     		bx	lr
  59              		.cfi_endproc
  60              	.LFE11:
  62              		.section	.text.load_inflate_image,"ax",%progbits
  63              		.align	1
  64              		.global	load_inflate_image
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  68              		.fpu fpv5-sp-d16
  70              	load_inflate_image:
  71              	.LFB6:
  19:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	Ft_Gpu_Hal_Context_t *phost = Ft_Esd_Host;
  72              		.loc 1 19 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s 			page 6


  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
  77              	.LVL4:
  85:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
  78              		.loc 1 85 0
  79 0000 0020     		movs	r0, #0
  80              	.LVL5:
  81 0002 7047     		bx	lr
  82              		.cfi_endproc
  83              	.LFE6:
  85              		.section	.text.Ft_Esd_LoadBitmap,"ax",%progbits
  86              		.align	1
  87              		.global	Ft_Esd_LoadBitmap
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  91              		.fpu fpv5-sp-d16
  93              	Ft_Esd_LoadBitmap:
  94              	.LFB7:
  88:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	if (!bitmapInfo)
  95              		.loc 1 88 0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  99              	.LVL6:
 100 0000 70B5     		push	{r4, r5, r6, lr}
 101              	.LCFI0:
 102              		.cfi_def_cfa_offset 16
 103              		.cfi_offset 4, -16
 104              		.cfi_offset 5, -12
 105              		.cfi_offset 6, -8
 106              		.cfi_offset 14, -4
  89:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	{
 107              		.loc 1 89 0
 108 0002 58B1     		cbz	r0, .L10
 109 0004 0546     		mov	r5, r0
  99:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	if (addr == ~0)
 110              		.loc 1 99 0
 111 0006 8169     		ldr	r1, [r0, #24]
 112 0008 1D4B     		ldr	r3, .L13
 113 000a 1868     		ldr	r0, [r3]
 114              	.LVL7:
 115 000c FFF7FEFF 		bl	Ft_Esd_GpuAlloc_Get
 116              	.LVL8:
 117 0010 0446     		mov	r4, r0
 118              	.LVL9:
 100:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	{
 119              		.loc 1 100 0
 120 0012 B0F1FF3F 		cmp	r0, #-1
 121 0016 07D0     		beq	.L11
 122              	.LVL10:
 123              	.L4:
 134:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
 124              		.loc 1 134 0
 125 0018 2046     		mov	r0, r4
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s 			page 7


 126 001a 70BD     		pop	{r4, r5, r6, pc}
 127              	.LVL11:
 128              	.L10:
  92:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #endif
 129              		.loc 1 92 0
 130 001c 1948     		ldr	r0, .L13+4
 131              	.LVL12:
 132 001e FFF7FEFF 		bl	puts
 133              	.LVL13:
  94:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	}
 134              		.loc 1 94 0
 135 0022 4FF0FF34 		mov	r4, #-1
 136 0026 F7E7     		b	.L4
 137              	.LVL14:
 138              	.L11:
 102:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		{
 139              		.loc 1 102 0
 140 0028 6B69     		ldr	r3, [r5, #20]
 141 002a 002B     		cmp	r3, #0
 142 002c F4D0     		beq	.L4
 111:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		addr = Ft_Esd_GpuAlloc_Get(Ft_Esd_GAlloc, bitmapInfo->GpuHandle);
 143              		.loc 1 111 0
 144 002e 144E     		ldr	r6, .L13
 145 0030 95F82820 		ldrb	r2, [r5, #40]	@ zero_extendqisi2
 146 0034 B2FA82F2 		clz	r2, r2
 147 0038 5209     		lsrs	r2, r2, #5
 148 003a 2969     		ldr	r1, [r5, #16]
 149 003c 3068     		ldr	r0, [r6]
 150              	.LVL15:
 151 003e FFF7FEFF 		bl	Ft_Esd_GpuAlloc_Alloc
 152              	.LVL16:
 153 0042 0146     		mov	r1, r0
 154 0044 A861     		str	r0, [r5, #24]
 112:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		if (addr != ~0)
 155              		.loc 1 112 0
 156 0046 3068     		ldr	r0, [r6]
 157 0048 FFF7FEFF 		bl	Ft_Esd_GpuAlloc_Get
 158              	.LVL17:
 159 004c 0646     		mov	r6, r0
 160              	.LVL18:
 113:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		{
 161              		.loc 1 113 0
 162 004e B0F1FF3F 		cmp	r0, #-1
 163 0052 0FD0     		beq	.L7
 116:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #endif
 164              		.loc 1 116 0
 165 0054 0C48     		ldr	r0, .L13+8
 166              	.LVL19:
 167 0056 FFF7FEFF 		bl	puts
 168              	.LVL20:
 119:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			{
 169              		.loc 1 119 0
 170 005a 6969     		ldr	r1, [r5, #20]
 171 005c 3046     		mov	r0, r6
 172 005e FFF7FEFF 		bl	load_inflate_image
 173              	.LVL21:
 174 0062 08B1     		cbz	r0, .L12
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s 			page 8


 112:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		if (addr != ~0)
 175              		.loc 1 112 0
 176 0064 3446     		mov	r4, r6
 177 0066 D7E7     		b	.L4
 178              	.L12:
 122:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 				addr = ~0;
 179              		.loc 1 122 0
 180 0068 A969     		ldr	r1, [r5, #24]
 181 006a 054B     		ldr	r3, .L13
 182 006c 1868     		ldr	r0, [r3]
 183 006e FFF7FEFF 		bl	Ft_Esd_GpuAlloc_Free
 184              	.LVL22:
 185 0072 D1E7     		b	.L4
 186              	.LVL23:
 187              	.L7:
 129:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #endif
 188              		.loc 1 129 0
 189 0074 0548     		ldr	r0, .L13+12
 190              	.LVL24:
 191 0076 FFF7FEFF 		bl	puts
 192              	.LVL25:
 112:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		if (addr != ~0)
 193              		.loc 1 112 0
 194 007a 3446     		mov	r4, r6
 195 007c CCE7     		b	.L4
 196              	.L14:
 197 007e 00BF     		.align	2
 198              	.L13:
 199 0080 00000000 		.word	Ft_Esd_GAlloc
 200 0084 00000000 		.word	.LC0
 201 0088 14000000 		.word	.LC1
 202 008c 30000000 		.word	.LC2
 203              		.cfi_endproc
 204              	.LFE7:
 206              		.section	.text.Ft_Esd_LoadPalette,"ax",%progbits
 207              		.align	1
 208              		.global	Ft_Esd_LoadPalette
 209              		.syntax unified
 210              		.thumb
 211              		.thumb_func
 212              		.fpu fpv5-sp-d16
 214              	Ft_Esd_LoadPalette:
 215              	.LFB8:
 137:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	if (!bitmapInfo)
 216              		.loc 1 137 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 220              	.LVL26:
 221 0000 70B5     		push	{r4, r5, r6, lr}
 222              	.LCFI1:
 223              		.cfi_def_cfa_offset 16
 224              		.cfi_offset 4, -16
 225              		.cfi_offset 5, -12
 226              		.cfi_offset 6, -8
 227              		.cfi_offset 14, -4
 138:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	{
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s 			page 9


 228              		.loc 1 138 0
 229 0002 58B1     		cbz	r0, .L25
 230 0004 0546     		mov	r5, r0
 149:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	if (addr == ~0)
 231              		.loc 1 149 0
 232 0006 416A     		ldr	r1, [r0, #36]
 233 0008 244B     		ldr	r3, .L29
 234 000a 1868     		ldr	r0, [r3]
 235              	.LVL27:
 236 000c FFF7FEFF 		bl	Ft_Esd_GpuAlloc_Get
 237              	.LVL28:
 238 0010 0446     		mov	r4, r0
 239              	.LVL29:
 150:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	{
 240              		.loc 1 150 0
 241 0012 B0F1FF3F 		cmp	r0, #-1
 242 0016 07D0     		beq	.L26
 243              	.LVL30:
 244              	.L15:
 203:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
 245              		.loc 1 203 0
 246 0018 2046     		mov	r0, r4
 247 001a 70BD     		pop	{r4, r5, r6, pc}
 248              	.LVL31:
 249              	.L25:
 141:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #endif
 250              		.loc 1 141 0
 251 001c 2048     		ldr	r0, .L29+4
 252              	.LVL32:
 253 001e FFF7FEFF 		bl	puts
 254              	.LVL33:
 143:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	}
 255              		.loc 1 143 0
 256 0022 4FF0FF34 		mov	r4, #-1
 257 0026 F7E7     		b	.L15
 258              	.LVL34:
 259              	.L26:
 260              	.LBB2:
 152:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		{
 261              		.loc 1 152 0
 262 0028 2B6A     		ldr	r3, [r5, #32]
 263 002a 002B     		cmp	r3, #0
 264 002c F4D0     		beq	.L15
 161:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		{
 265              		.loc 1 161 0
 266 002e EB68     		ldr	r3, [r5, #12]
 267 0030 0E2B     		cmp	r3, #14
 268 0032 24DB     		blt	.L18
 269 0034 0F2B     		cmp	r3, #15
 270 0036 1DDC     		bgt	.L27
 164:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		case PALETTED565: size = 256 * 2; break;
 271              		.loc 1 164 0
 272 0038 4FF40071 		mov	r1, #512
 273              	.L19:
 274              	.LVL35:
 172:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		addr = Ft_Esd_GpuAlloc_Get(Ft_Esd_GAlloc, bitmapInfo->PaletteGpuHandle);
 275              		.loc 1 172 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s 			page 10


 276 003c 174E     		ldr	r6, .L29
 277 003e 95F82820 		ldrb	r2, [r5, #40]	@ zero_extendqisi2
 278 0042 B2FA82F2 		clz	r2, r2
 279 0046 5209     		lsrs	r2, r2, #5
 280 0048 3068     		ldr	r0, [r6]
 281              	.LVL36:
 282 004a FFF7FEFF 		bl	Ft_Esd_GpuAlloc_Alloc
 283              	.LVL37:
 284 004e 0146     		mov	r1, r0
 285 0050 6862     		str	r0, [r5, #36]
 173:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		if (addr != ~0)
 286              		.loc 1 173 0
 287 0052 3068     		ldr	r0, [r6]
 288 0054 FFF7FEFF 		bl	Ft_Esd_GpuAlloc_Get
 289              	.LVL38:
 290 0058 0646     		mov	r6, r0
 291              	.LVL39:
 174:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		{
 292              		.loc 1 174 0
 293 005a B0F1FF3F 		cmp	r0, #-1
 294 005e 18D0     		beq	.L21
 177:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #endif
 295              		.loc 1 177 0
 296 0060 1048     		ldr	r0, .L29+8
 297              	.LVL40:
 298 0062 FFF7FEFF 		bl	puts
 299              	.LVL41:
 180:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			{
 300              		.loc 1 180 0
 301 0066 296A     		ldr	r1, [r5, #32]
 302 0068 3046     		mov	r0, r6
 303 006a FFF7FEFF 		bl	load_inflate_image
 304              	.LVL42:
 305 006e 50B1     		cbz	r0, .L28
 173:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		if (addr != ~0)
 306              		.loc 1 173 0
 307 0070 3446     		mov	r4, r6
 308 0072 D1E7     		b	.L15
 309              	.LVL43:
 310              	.L27:
 161:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		{
 311              		.loc 1 161 0
 312 0074 102B     		cmp	r3, #16
 313 0076 02D1     		bne	.L18
 163:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		case PALETTED4444: size = 256 * 2; break;
 314              		.loc 1 163 0
 315 0078 4FF48061 		mov	r1, #1024
 316 007c DEE7     		b	.L19
 317              	.L18:
 167:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 			return ~0;
 318              		.loc 1 167 0
 319 007e 0A48     		ldr	r0, .L29+12
 320              	.LVL44:
 321 0080 FFF7FEFF 		bl	puts
 322              	.LVL45:
 168:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		}
 323              		.loc 1 168 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s 			page 11


 324 0084 C8E7     		b	.L15
 325              	.LVL46:
 326              	.L28:
 183:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 				addr = ~0;
 327              		.loc 1 183 0
 328 0086 696A     		ldr	r1, [r5, #36]
 329 0088 044B     		ldr	r3, .L29
 330 008a 1868     		ldr	r0, [r3]
 331 008c FFF7FEFF 		bl	Ft_Esd_GpuAlloc_Free
 332              	.LVL47:
 333 0090 C2E7     		b	.L15
 334              	.LVL48:
 335              	.L21:
 190:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** #endif
 336              		.loc 1 190 0
 337 0092 0648     		ldr	r0, .L29+16
 338              	.LVL49:
 339 0094 FFF7FEFF 		bl	puts
 340              	.LVL50:
 173:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		if (addr != ~0)
 341              		.loc 1 173 0
 342 0098 3446     		mov	r4, r6
 343 009a BDE7     		b	.L15
 344              	.L30:
 345              		.align	2
 346              	.L29:
 347 009c 00000000 		.word	Ft_Esd_GAlloc
 348 00a0 00000000 		.word	.LC0
 349 00a4 24000000 		.word	.LC4
 350 00a8 00000000 		.word	.LC3
 351 00ac 48000000 		.word	.LC5
 352              	.LBE2:
 353              		.cfi_endproc
 354              	.LFE8:
 356              		.section	.text.Ft_Esd_BitmapPersist,"ax",%progbits
 357              		.align	1
 358              		.global	Ft_Esd_BitmapPersist
 359              		.syntax unified
 360              		.thumb
 361              		.thumb_func
 362              		.fpu fpv5-sp-d16
 364              	Ft_Esd_BitmapPersist:
 365              	.LFB9:
 206:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	if (bitmapCell)
 366              		.loc 1 206 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 0, uses_anonymous_args = 0
 370              	.LVL51:
 207:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	{
 371              		.loc 1 207 0
 372 0000 40B1     		cbz	r0, .L34
 206:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	if (bitmapCell)
 373              		.loc 1 206 0
 374 0002 10B5     		push	{r4, lr}
 375              	.LCFI2:
 376              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s 			page 12


 377              		.cfi_offset 4, -8
 378              		.cfi_offset 14, -4
 379 0004 0446     		mov	r4, r0
 209:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 		Ft_Esd_LoadPalette(bitmapCell->Info);
 380              		.loc 1 209 0
 381 0006 0068     		ldr	r0, [r0]
 382              	.LVL52:
 383 0008 FFF7FEFF 		bl	Ft_Esd_LoadBitmap
 384              	.LVL53:
 210:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	}
 385              		.loc 1 210 0
 386 000c 2068     		ldr	r0, [r4]
 387 000e FFF7FEFF 		bl	Ft_Esd_LoadPalette
 388              	.LVL54:
 212:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
 389              		.loc 1 212 0
 390 0012 10BD     		pop	{r4, pc}
 391              	.LVL55:
 392              	.L34:
 393              	.LCFI3:
 394              		.cfi_def_cfa_offset 0
 395              		.cfi_restore 4
 396              		.cfi_restore 14
 397 0014 7047     		bx	lr
 398              		.cfi_endproc
 399              	.LFE9:
 401              		.section	.text.Ft_Esd_SwitchBitmapCell__Initializer,"ax",%progbits
 402              		.align	1
 403              		.global	Ft_Esd_SwitchBitmapCell__Initializer
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 407              		.fpu fpv5-sp-d16
 409              	Ft_Esd_SwitchBitmapCell__Initializer:
 410              	.LFB12:
 218:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
 219:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** void Ft_Esd_SwitchBitmapCell__Initializer(Ft_Esd_SwitchBitmapCell *context)
 220:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** {
 411              		.loc 1 220 0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415              		@ link register save eliminated.
 416              	.LVL56:
 221:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	context->Parent = 0;
 417              		.loc 1 221 0
 418 0000 0023     		movs	r3, #0
 419 0002 0360     		str	r3, [r0]
 222:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	context->BitmapInfo = nullInfo;
 420              		.loc 1 222 0
 421 0004 034A     		ldr	r2, .L38
 422 0006 4260     		str	r2, [r0, #4]
 223:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	context->Cell = nullCell;
 423              		.loc 1 223 0
 424 0008 034A     		ldr	r2, .L38+4
 425 000a 8260     		str	r2, [r0, #8]
 224:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	context->BitmapCell.Info = 0;
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s 			page 13


 426              		.loc 1 224 0
 427 000c C360     		str	r3, [r0, #12]
 225:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	context->BitmapCell.Cell = 0;
 428              		.loc 1 225 0
 429 000e 0361     		str	r3, [r0, #16]
 226:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** }
 430              		.loc 1 226 0
 431 0010 7047     		bx	lr
 432              	.L39:
 433 0012 00BF     		.align	2
 434              	.L38:
 435 0014 00000000 		.word	nullInfo
 436 0018 00000000 		.word	nullCell
 437              		.cfi_endproc
 438              	.LFE12:
 440              		.section	.text.Ft_Esd_SwitchBitmapCell_BitmapCell,"ax",%progbits
 441              		.align	1
 442              		.global	Ft_Esd_SwitchBitmapCell_BitmapCell
 443              		.syntax unified
 444              		.thumb
 445              		.thumb_func
 446              		.fpu fpv5-sp-d16
 448              	Ft_Esd_SwitchBitmapCell_BitmapCell:
 449              	.LFB13:
 227:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 
 228:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** Ft_Esd_BitmapCell *Ft_Esd_SwitchBitmapCell_BitmapCell(Ft_Esd_SwitchBitmapCell *context)
 229:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** {
 450              		.loc 1 229 0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 0
 453              		@ frame_needed = 0, uses_anonymous_args = 0
 454              	.LVL57:
 455 0000 10B5     		push	{r4, lr}
 456              	.LCFI4:
 457              		.cfi_def_cfa_offset 8
 458              		.cfi_offset 4, -8
 459              		.cfi_offset 14, -4
 460 0002 0446     		mov	r4, r0
 230:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	context->BitmapCell.Info = context->BitmapInfo(context->Parent);
 461              		.loc 1 230 0
 462 0004 4368     		ldr	r3, [r0, #4]
 463 0006 0068     		ldr	r0, [r0]
 464              	.LVL58:
 465 0008 9847     		blx	r3
 466              	.LVL59:
 467 000a E060     		str	r0, [r4, #12]
 231:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	context->BitmapCell.Cell = context->Cell(context->Parent);
 468              		.loc 1 231 0
 469 000c A368     		ldr	r3, [r4, #8]
 470 000e 2068     		ldr	r0, [r4]
 471 0010 9847     		blx	r3
 472              	.LVL60:
 473 0012 2061     		str	r0, [r4, #16]
 232:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** 	return &context->BitmapCell;
 233:FT_Esd_Framework/Ft_Esd_BitmapInfo.c **** }
 474              		.loc 1 233 0
 475 0014 04F10C00 		add	r0, r4, #12
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s 			page 14


 476 0018 10BD     		pop	{r4, pc}
 477              		.cfi_endproc
 478              	.LFE13:
 480              		.section	.rodata.Ft_Esd_LoadBitmap.str1.4,"aMS",%progbits,1
 481              		.align	2
 482              	.LC0:
 483 0000 4269746D 		.ascii	"Bitmap info is NULL\000"
 483      61702069 
 483      6E666F20 
 483      6973204E 
 483      554C4C00 
 484              	.LC1:
 485 0014 416C6C6F 		.ascii	"Allocated space for bitmap\000"
 485      63617465 
 485      64207370 
 485      61636520 
 485      666F7220 
 486 002f 00       		.space	1
 487              	.LC2:
 488 0030 556E6162 		.ascii	"Unable to allocate space for bitmap\000"
 488      6C652074 
 488      6F20616C 
 488      6C6F6361 
 488      74652073 
 489              		.section	.rodata.Ft_Esd_LoadPalette.str1.4,"aMS",%progbits,1
 490              		.align	2
 491              	.LC3:
 492 0000 556E6B6E 		.ascii	"Unknown palette format, cannot load\000"
 492      6F776E20 
 492      70616C65 
 492      74746520 
 492      666F726D 
 493              	.LC4:
 494 0024 416C6C6F 		.ascii	"Allocated space for bitmap palette\000"
 494      63617465 
 494      64207370 
 494      61636520 
 494      666F7220 
 495 0047 00       		.space	1
 496              	.LC5:
 497 0048 556E6162 		.ascii	"Unable to allocate space for bitmap palette\000"
 497      6C652074 
 497      6F20616C 
 497      6C6F6361 
 497      74652073 
 498              		.text
 499              	.Letext0:
 500              		.file 2 "FT_Eve_Hal/FT_DataTypes.h"
 501              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/lock.h"
 502              		.file 4 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_types.h"
 503              		.file 5 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 504              		.file 6 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/unistd.h"
 505              		.file 7 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/reent.h"
 506              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/stdlib.h"
 507              		.file 9 "FT_Eve_Hal/FT_Gpu_Hal.h"
 508              		.file 10 "FT_Esd_Framework/Ft_Esd_GpuAlloc.h"
 509              		.file 11 "FT_Esd_Framework/Ft_Esd_BitmapInfo.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s 			page 15


 510              		.file 12 "<built-in>"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Ft_Esd_BitmapInfo.c
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s:18     .text.nullInfo:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s:24     .text.nullInfo:0000000000000000 nullInfo
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s:41     .text.nullCell:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s:47     .text.nullCell:0000000000000000 nullCell
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s:63     .text.load_inflate_image:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s:70     .text.load_inflate_image:0000000000000000 load_inflate_image
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s:86     .text.Ft_Esd_LoadBitmap:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s:93     .text.Ft_Esd_LoadBitmap:0000000000000000 Ft_Esd_LoadBitmap
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s:199    .text.Ft_Esd_LoadBitmap:0000000000000080 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s:207    .text.Ft_Esd_LoadPalette:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s:214    .text.Ft_Esd_LoadPalette:0000000000000000 Ft_Esd_LoadPalette
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s:347    .text.Ft_Esd_LoadPalette:000000000000009c $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s:357    .text.Ft_Esd_BitmapPersist:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s:364    .text.Ft_Esd_BitmapPersist:0000000000000000 Ft_Esd_BitmapPersist
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s:402    .text.Ft_Esd_SwitchBitmapCell__Initializer:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s:409    .text.Ft_Esd_SwitchBitmapCell__Initializer:0000000000000000 Ft_Esd_SwitchBitmapCell__Initializer
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s:435    .text.Ft_Esd_SwitchBitmapCell__Initializer:0000000000000014 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s:441    .text.Ft_Esd_SwitchBitmapCell_BitmapCell:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s:448    .text.Ft_Esd_SwitchBitmapCell_BitmapCell:0000000000000000 Ft_Esd_SwitchBitmapCell_BitmapCell
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s:481    .rodata.Ft_Esd_LoadBitmap.str1.4:0000000000000000 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccxyRG82.s:490    .rodata.Ft_Esd_LoadPalette.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
Ft_Esd_GpuAlloc_Get
puts
Ft_Esd_GpuAlloc_Alloc
Ft_Esd_GpuAlloc_Free
Ft_Esd_GAlloc
