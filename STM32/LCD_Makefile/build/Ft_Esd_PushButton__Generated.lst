ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"Ft_Esd_PushButton__Generated.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Ft_Esd_PushButton_X__Default,"ax",%progbits
  18              		.align	1
  19              		.global	Ft_Esd_PushButton_X__Default
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-sp-d16
  25              	Ft_Esd_PushButton_X__Default:
  26              	.LFB24:
  27              		.file 1 "FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c"
   1:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** /*
   2:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** This file is automatically generated
   3:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** Ft_Esd_PushButton
   4:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** C Source
   5:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c ****  */
   6:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 
   7:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** #include "Ft_Esd_PushButton.h"
   8:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 
   9:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** #include "FT_Esd_CoPro_Cmds.h"
  10:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** #include "FT_Esd_Dl.h"
  11:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 
  12:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** extern void Ft_Esd_Noop(void *context);
  13:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** Ft_Esd_Theme * Ft_Esd_PushButton_Theme__Default(void *context) { return Ft_Esd_Theme_GetCurrent(); 
  14:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** ft_int16_t Ft_Esd_PushButton_X__Default(void *context) { return 0; }
  28              		.loc 1 14 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              		.loc 1 14 0
  35 0000 0020     		movs	r0, #0
  36              	.LVL1:
  37 0002 7047     		bx	lr
  38              		.cfi_endproc
  39              	.LFE24:
  41              		.section	.text.Ft_Esd_PushButton_Y__Default,"ax",%progbits
  42              		.align	1
  43              		.global	Ft_Esd_PushButton_Y__Default
  44              		.syntax unified
  45              		.thumb
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s 			page 2


  46              		.thumb_func
  47              		.fpu fpv5-sp-d16
  49              	Ft_Esd_PushButton_Y__Default:
  50              	.LFB25:
  15:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** ft_int16_t Ft_Esd_PushButton_Y__Default(void *context) { return 0; }
  51              		.loc 1 15 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56              	.LVL2:
  57              		.loc 1 15 0
  58 0000 0020     		movs	r0, #0
  59              	.LVL3:
  60 0002 7047     		bx	lr
  61              		.cfi_endproc
  62              	.LFE25:
  64              		.section	.text.Ft_Esd_PushButton_Width__Default,"ax",%progbits
  65              		.align	1
  66              		.global	Ft_Esd_PushButton_Width__Default
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  70              		.fpu fpv5-sp-d16
  72              	Ft_Esd_PushButton_Width__Default:
  73              	.LFB26:
  16:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** ft_int16_t Ft_Esd_PushButton_Width__Default(void *context) { return 120; }
  74              		.loc 1 16 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              	.LVL4:
  80              		.loc 1 16 0
  81 0000 7820     		movs	r0, #120
  82              	.LVL5:
  83 0002 7047     		bx	lr
  84              		.cfi_endproc
  85              	.LFE26:
  87              		.section	.text.Ft_Esd_PushButton_Height__Default,"ax",%progbits
  88              		.align	1
  89              		.global	Ft_Esd_PushButton_Height__Default
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  93              		.fpu fpv5-sp-d16
  95              	Ft_Esd_PushButton_Height__Default:
  96              	.LFB27:
  17:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** ft_int16_t Ft_Esd_PushButton_Height__Default(void *context) { return 36; }
  97              		.loc 1 17 0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 102              	.LVL6:
 103              		.loc 1 17 0
 104 0000 2420     		movs	r0, #36
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s 			page 3


 105              	.LVL7:
 106 0002 7047     		bx	lr
 107              		.cfi_endproc
 108              	.LFE27:
 110              		.section	.text.Ft_Esd_PushButton_Font__Default,"ax",%progbits
 111              		.align	1
 112              		.global	Ft_Esd_PushButton_Font__Default
 113              		.syntax unified
 114              		.thumb
 115              		.thumb_func
 116              		.fpu fpv5-sp-d16
 118              	Ft_Esd_PushButton_Font__Default:
 119              	.LFB28:
  18:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** ft_int16_t Ft_Esd_PushButton_Font__Default(void *context) { return 27; }
 120              		.loc 1 18 0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 125              	.LVL8:
 126              		.loc 1 18 0
 127 0000 1B20     		movs	r0, #27
 128              	.LVL9:
 129 0002 7047     		bx	lr
 130              		.cfi_endproc
 131              	.LFE28:
 133              		.section	.text.Ft_Esd_PushButton_Text__Default,"ax",%progbits
 134              		.align	1
 135              		.global	Ft_Esd_PushButton_Text__Default
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 139              		.fpu fpv5-sp-d16
 141              	Ft_Esd_PushButton_Text__Default:
 142              	.LFB29:
  19:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** const char * Ft_Esd_PushButton_Text__Default(void *context) { return "Button"; }
 143              		.loc 1 19 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
 148              	.LVL10:
 149              		.loc 1 19 0
 150 0000 0048     		ldr	r0, .L7
 151              	.LVL11:
 152 0002 7047     		bx	lr
 153              	.L8:
 154              		.align	2
 155              	.L7:
 156 0004 00000000 		.word	.LC0
 157              		.cfi_endproc
 158              	.LFE29:
 160              		.section	.text.Ft_Esd_PushButton_Primary__Default,"ax",%progbits
 161              		.align	1
 162              		.global	Ft_Esd_PushButton_Primary__Default
 163              		.syntax unified
 164              		.thumb
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s 			page 4


 165              		.thumb_func
 166              		.fpu fpv5-sp-d16
 168              	Ft_Esd_PushButton_Primary__Default:
 169              	.LFB30:
  20:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** ft_bool_t Ft_Esd_PushButton_Primary__Default(void *context) { return 1; }
 170              		.loc 1 20 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 175              	.LVL12:
 176              		.loc 1 20 0
 177 0000 0120     		movs	r0, #1
 178              	.LVL13:
 179 0002 7047     		bx	lr
 180              		.cfi_endproc
 181              	.LFE30:
 183              		.section	.text.Ft_Esd_PushButton_Touch_Tag_Down__Signal,"ax",%progbits
 184              		.align	1
 185              		.syntax unified
 186              		.thumb
 187              		.thumb_func
 188              		.fpu fpv5-sp-d16
 190              	Ft_Esd_PushButton_Touch_Tag_Down__Signal:
 191              	.LFB34:
  21:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 
  22:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** Ft_Esd_Theme * Ft_Esd_Theme_GetCurrent();
  23:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** Ft_Gpu_Hal_Context_t * Ft_Esd_GetHost();
  24:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 
  25:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** static void Ft_Esd_PushButton_Touch_Tag_Down__Signal(void *context);
  26:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** static void Ft_Esd_PushButton_Touch_Tag_Up__Signal(void *context);
  27:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** static void Ft_Esd_PushButton_Touch_Tag_Tap__Signal(void *context);
  28:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 
  29:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** void Ft_Esd_PushButton__Initializer(Ft_Esd_PushButton *context)
  30:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** {
  31:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Parent = 0;
  32:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Theme = Ft_Esd_PushButton_Theme__Default;
  33:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->X = Ft_Esd_PushButton_X__Default;
  34:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Y = Ft_Esd_PushButton_Y__Default;
  35:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Width = Ft_Esd_PushButton_Width__Default;
  36:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Height = Ft_Esd_PushButton_Height__Default;
  37:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Font = Ft_Esd_PushButton_Font__Default;
  38:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Text = Ft_Esd_PushButton_Text__Default;
  39:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Down = Ft_Esd_Noop;
  40:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Primary = Ft_Esd_PushButton_Primary__Default;
  41:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Up = Ft_Esd_Noop;
  42:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	Ft_Esd_TouchTag__Initializer(&context->Touch_Tag);
  43:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Touch_Tag.Parent = context;
  44:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Touch_Tag.Down = Ft_Esd_PushButton_Touch_Tag_Down__Signal;
  45:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Touch_Tag.Up = Ft_Esd_PushButton_Touch_Tag_Up__Signal;
  46:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Touch_Tag.Tap = Ft_Esd_PushButton_Touch_Tag_Tap__Signal;
  47:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Pushed = Ft_Esd_Noop;
  48:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** }
  49:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 
  50:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** ft_void_t Ft_Gpu_CoCmd_FgColor(Ft_Gpu_Hal_Context_t *, ft_rgb32_t);
  51:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** ft_void_t Ft_Gpu_CoCmd_Button(Ft_Gpu_Hal_Context_t *, ft_int16_t, ft_int16_t, ft_int16_t, ft_int16_
  52:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** ft_void_t Ft_Gpu_CoCmd_Number(Ft_Gpu_Hal_Context_t *, ft_int16_t, ft_int16_t, ft_int16_t, ft_uint16
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s 			page 5


  53:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 
  54:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** void Ft_Esd_PushButton_Render(Ft_Esd_PushButton *context)
  55:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** {
  56:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	void *parent = context->Parent;
  57:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_uint8_t alpha = 255;
  58:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	Ft_Esd_Dl_COLOR_A(alpha);
  59:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_uint8_t s = Ft_Esd_TouchTag_Tag(&context->Touch_Tag);
  60:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	Ft_Esd_Dl_TAG(s);
  61:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	Ft_Gpu_Hal_Context_t * phost = Ft_Esd_GetHost();
  62:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_bool_t if_1 = context->Primary(parent);
  63:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_rgb32_t c;
  64:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	if (if_1)
  65:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	{
  66:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 		Ft_Esd_Theme * theme = context->Theme(parent);
  67:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 		c = Ft_Esd_Theme_GetPrimaryColor(theme);
  68:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	}
  69:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	else
  70:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	{
  71:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 		Ft_Esd_Theme * theme_1 = context->Theme(parent);
  72:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 		c = Ft_Esd_Theme_GetCurrentColor(theme_1);
  73:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	}
  74:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	Ft_Gpu_CoCmd_FgColor(phost, c);
  75:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	Ft_Esd_Theme * theme_2 = context->Theme(parent);
  76:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_rgb32_t c_1 = Ft_Esd_Theme_GetButtonTextColor(theme_2);
  77:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	Ft_Esd_Dl_COLOR_RGB(c_1);
  78:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	Ft_Gpu_Hal_Context_t * phost_1 = Ft_Esd_GetHost();
  79:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_int16_t x = context->X(parent);
  80:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_int16_t y = context->Y(parent);
  81:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_int16_t width = context->Width(parent);
  82:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_int16_t height = context->Height(parent);
  83:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_int16_t font = context->Font(parent);
  84:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_bool_t if_2 = Ft_Esd_TouchTag_Inside(&context->Touch_Tag);
  85:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_uint16_t options;
  86:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	if (if_2)
  87:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	{
  88:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 		options = OPT_FLAT;
  89:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	}
  90:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	else
  91:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	{
  92:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 		options = 0;
  93:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	}
  94:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	const char * s_1 = context->Text(parent);
  95:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	Ft_Gpu_CoCmd_Button(phost_1, x, y, width, height, font, options, s_1);
  96:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_uint8_t s_2 = 255;
  97:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	Ft_Esd_Dl_TAG(s_2);
  98:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** }
  99:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 
 100:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** void Ft_Esd_PushButton_Start(Ft_Esd_PushButton *context)
 101:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** {
 102:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	void *parent = context->Parent;
 103:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	Ft_Esd_TouchTag_Start(&context->Touch_Tag);
 104:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** }
 105:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 
 106:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** void Ft_Esd_PushButton_Touch_Tag_Down__Signal(void *c)
 107:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** {
 192              		.loc 1 107 0
 193              		.cfi_startproc
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s 			page 6


 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              	.LVL14:
 197 0000 08B5     		push	{r3, lr}
 198              	.LCFI0:
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 3, -8
 201              		.cfi_offset 14, -4
 202              	.LVL15:
 108:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	Ft_Esd_PushButton *context = (Ft_Esd_PushButton *)c;
 109:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	void *parent = context->Parent;
 110:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Down(parent);
 203              		.loc 1 110 0
 204 0002 036A     		ldr	r3, [r0, #32]
 205 0004 0068     		ldr	r0, [r0]
 206              	.LVL16:
 207 0006 9847     		blx	r3
 208              	.LVL17:
 111:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** }
 209              		.loc 1 111 0
 210 0008 08BD     		pop	{r3, pc}
 211              		.cfi_endproc
 212              	.LFE34:
 214              		.section	.text.Ft_Esd_PushButton_Touch_Tag_Up__Signal,"ax",%progbits
 215              		.align	1
 216              		.syntax unified
 217              		.thumb
 218              		.thumb_func
 219              		.fpu fpv5-sp-d16
 221              	Ft_Esd_PushButton_Touch_Tag_Up__Signal:
 222              	.LFB35:
 112:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 
 113:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** void Ft_Esd_PushButton_Touch_Tag_Up__Signal(void *c)
 114:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** {
 223              		.loc 1 114 0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227              	.LVL18:
 228 0000 08B5     		push	{r3, lr}
 229              	.LCFI1:
 230              		.cfi_def_cfa_offset 8
 231              		.cfi_offset 3, -8
 232              		.cfi_offset 14, -4
 233              	.LVL19:
 115:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	Ft_Esd_PushButton *context = (Ft_Esd_PushButton *)c;
 116:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	void *parent = context->Parent;
 117:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Up(parent);
 234              		.loc 1 117 0
 235 0002 836A     		ldr	r3, [r0, #40]
 236 0004 0068     		ldr	r0, [r0]
 237              	.LVL20:
 238 0006 9847     		blx	r3
 239              	.LVL21:
 118:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** }
 240              		.loc 1 118 0
 241 0008 08BD     		pop	{r3, pc}
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s 			page 7


 242              		.cfi_endproc
 243              	.LFE35:
 245              		.section	.text.Ft_Esd_PushButton_Touch_Tag_Tap__Signal,"ax",%progbits
 246              		.align	1
 247              		.syntax unified
 248              		.thumb
 249              		.thumb_func
 250              		.fpu fpv5-sp-d16
 252              	Ft_Esd_PushButton_Touch_Tag_Tap__Signal:
 253              	.LFB36:
 119:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 
 120:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** void Ft_Esd_PushButton_Touch_Tag_Tap__Signal(void *c)
 121:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** {
 254              		.loc 1 121 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              	.LVL22:
 259 0000 08B5     		push	{r3, lr}
 260              	.LCFI2:
 261              		.cfi_def_cfa_offset 8
 262              		.cfi_offset 3, -8
 263              		.cfi_offset 14, -4
 264              	.LVL23:
 122:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	Ft_Esd_PushButton *context = (Ft_Esd_PushButton *)c;
 123:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	void *parent = context->Parent;
 124:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Pushed(parent);
 265              		.loc 1 124 0
 266 0002 436C     		ldr	r3, [r0, #68]
 267 0004 0068     		ldr	r0, [r0]
 268              	.LVL24:
 269 0006 9847     		blx	r3
 270              	.LVL25:
 125:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** }
 271              		.loc 1 125 0
 272 0008 08BD     		pop	{r3, pc}
 273              		.cfi_endproc
 274              	.LFE36:
 276              		.section	.text.Ft_Esd_PushButton_Theme__Default,"ax",%progbits
 277              		.align	1
 278              		.global	Ft_Esd_PushButton_Theme__Default
 279              		.syntax unified
 280              		.thumb
 281              		.thumb_func
 282              		.fpu fpv5-sp-d16
 284              	Ft_Esd_PushButton_Theme__Default:
 285              	.LFB23:
  13:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** ft_int16_t Ft_Esd_PushButton_X__Default(void *context) { return 0; }
 286              		.loc 1 13 0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290              	.LVL26:
 291 0000 08B5     		push	{r3, lr}
 292              	.LCFI3:
 293              		.cfi_def_cfa_offset 8
 294              		.cfi_offset 3, -8
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s 			page 8


 295              		.cfi_offset 14, -4
  13:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** ft_int16_t Ft_Esd_PushButton_X__Default(void *context) { return 0; }
 296              		.loc 1 13 0
 297 0002 FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
 298              	.LVL27:
 299 0006 08BD     		pop	{r3, pc}
 300              		.cfi_endproc
 301              	.LFE23:
 303              		.section	.text.Ft_Esd_PushButton__Initializer,"ax",%progbits
 304              		.align	1
 305              		.global	Ft_Esd_PushButton__Initializer
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 309              		.fpu fpv5-sp-d16
 311              	Ft_Esd_PushButton__Initializer:
 312              	.LFB31:
  30:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Parent = 0;
 313              		.loc 1 30 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317              	.LVL28:
 318 0000 38B5     		push	{r3, r4, r5, lr}
 319              	.LCFI4:
 320              		.cfi_def_cfa_offset 16
 321              		.cfi_offset 3, -16
 322              		.cfi_offset 4, -12
 323              		.cfi_offset 5, -8
 324              		.cfi_offset 14, -4
 325 0002 0446     		mov	r4, r0
  31:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Theme = Ft_Esd_PushButton_Theme__Default;
 326              		.loc 1 31 0
 327 0004 0023     		movs	r3, #0
 328 0006 0360     		str	r3, [r0]
  32:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->X = Ft_Esd_PushButton_X__Default;
 329              		.loc 1 32 0
 330 0008 0F4B     		ldr	r3, .L20
 331 000a 4360     		str	r3, [r0, #4]
  33:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Y = Ft_Esd_PushButton_Y__Default;
 332              		.loc 1 33 0
 333 000c 0F4B     		ldr	r3, .L20+4
 334 000e 8360     		str	r3, [r0, #8]
  34:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Width = Ft_Esd_PushButton_Width__Default;
 335              		.loc 1 34 0
 336 0010 0F4B     		ldr	r3, .L20+8
 337 0012 C360     		str	r3, [r0, #12]
  35:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Height = Ft_Esd_PushButton_Height__Default;
 338              		.loc 1 35 0
 339 0014 0F4B     		ldr	r3, .L20+12
 340 0016 0361     		str	r3, [r0, #16]
  36:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Font = Ft_Esd_PushButton_Font__Default;
 341              		.loc 1 36 0
 342 0018 0F4B     		ldr	r3, .L20+16
 343 001a 4361     		str	r3, [r0, #20]
  37:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Text = Ft_Esd_PushButton_Text__Default;
 344              		.loc 1 37 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s 			page 9


 345 001c 0F4B     		ldr	r3, .L20+20
 346 001e 8361     		str	r3, [r0, #24]
  38:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Down = Ft_Esd_Noop;
 347              		.loc 1 38 0
 348 0020 0F4B     		ldr	r3, .L20+24
 349 0022 C361     		str	r3, [r0, #28]
  39:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Primary = Ft_Esd_PushButton_Primary__Default;
 350              		.loc 1 39 0
 351 0024 0F4D     		ldr	r5, .L20+28
 352 0026 0562     		str	r5, [r0, #32]
  40:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Up = Ft_Esd_Noop;
 353              		.loc 1 40 0
 354 0028 0F4B     		ldr	r3, .L20+32
 355 002a 4362     		str	r3, [r0, #36]
  41:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	Ft_Esd_TouchTag__Initializer(&context->Touch_Tag);
 356              		.loc 1 41 0
 357 002c 8562     		str	r5, [r0, #40]
  42:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Touch_Tag.Parent = context;
 358              		.loc 1 42 0
 359 002e 2C30     		adds	r0, r0, #44
 360              	.LVL29:
 361 0030 FFF7FEFF 		bl	Ft_Esd_TouchTag__Initializer
 362              	.LVL30:
  43:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Touch_Tag.Down = Ft_Esd_PushButton_Touch_Tag_Down__Signal;
 363              		.loc 1 43 0
 364 0034 E462     		str	r4, [r4, #44]
  44:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Touch_Tag.Up = Ft_Esd_PushButton_Touch_Tag_Up__Signal;
 365              		.loc 1 44 0
 366 0036 0D4B     		ldr	r3, .L20+36
 367 0038 2363     		str	r3, [r4, #48]
  45:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Touch_Tag.Tap = Ft_Esd_PushButton_Touch_Tag_Tap__Signal;
 368              		.loc 1 45 0
 369 003a 0D4B     		ldr	r3, .L20+40
 370 003c 6363     		str	r3, [r4, #52]
  46:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	context->Pushed = Ft_Esd_Noop;
 371              		.loc 1 46 0
 372 003e 0D4B     		ldr	r3, .L20+44
 373 0040 A363     		str	r3, [r4, #56]
  47:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** }
 374              		.loc 1 47 0
 375 0042 6564     		str	r5, [r4, #68]
  48:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 
 376              		.loc 1 48 0
 377 0044 38BD     		pop	{r3, r4, r5, pc}
 378              	.LVL31:
 379              	.L21:
 380 0046 00BF     		.align	2
 381              	.L20:
 382 0048 00000000 		.word	Ft_Esd_PushButton_Theme__Default
 383 004c 00000000 		.word	Ft_Esd_PushButton_X__Default
 384 0050 00000000 		.word	Ft_Esd_PushButton_Y__Default
 385 0054 00000000 		.word	Ft_Esd_PushButton_Width__Default
 386 0058 00000000 		.word	Ft_Esd_PushButton_Height__Default
 387 005c 00000000 		.word	Ft_Esd_PushButton_Font__Default
 388 0060 00000000 		.word	Ft_Esd_PushButton_Text__Default
 389 0064 00000000 		.word	Ft_Esd_Noop
 390 0068 00000000 		.word	Ft_Esd_PushButton_Primary__Default
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s 			page 10


 391 006c 00000000 		.word	Ft_Esd_PushButton_Touch_Tag_Down__Signal
 392 0070 00000000 		.word	Ft_Esd_PushButton_Touch_Tag_Up__Signal
 393 0074 00000000 		.word	Ft_Esd_PushButton_Touch_Tag_Tap__Signal
 394              		.cfi_endproc
 395              	.LFE31:
 397              		.section	.text.Ft_Esd_PushButton_Render,"ax",%progbits
 398              		.align	1
 399              		.global	Ft_Esd_PushButton_Render
 400              		.syntax unified
 401              		.thumb
 402              		.thumb_func
 403              		.fpu fpv5-sp-d16
 405              	Ft_Esd_PushButton_Render:
 406              	.LFB32:
  55:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	void *parent = context->Parent;
 407              		.loc 1 55 0
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 8
 410              		@ frame_needed = 0, uses_anonymous_args = 0
 411              	.LVL32:
 412 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 413              	.LCFI5:
 414              		.cfi_def_cfa_offset 36
 415              		.cfi_offset 4, -36
 416              		.cfi_offset 5, -32
 417              		.cfi_offset 6, -28
 418              		.cfi_offset 7, -24
 419              		.cfi_offset 8, -20
 420              		.cfi_offset 9, -16
 421              		.cfi_offset 10, -12
 422              		.cfi_offset 11, -8
 423              		.cfi_offset 14, -4
 424 0004 87B0     		sub	sp, sp, #28
 425              	.LCFI6:
 426              		.cfi_def_cfa_offset 64
 427 0006 0446     		mov	r4, r0
  56:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_uint8_t alpha = 255;
 428              		.loc 1 56 0
 429 0008 0568     		ldr	r5, [r0]
 430              	.LVL33:
 431              	.LBB30:
 432              	.LBB31:
 433              		.file 2 "FT_Esd_Framework/FT_Esd_Dl.h"
   1:FT_Esd_Framework/FT_Esd_Dl.h **** 
   2:FT_Esd_Framework/FT_Esd_Dl.h **** #ifndef FT_ESD_DL_H
   3:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_DL_H
   4:FT_Esd_Framework/FT_Esd_Dl.h **** 
   5:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_DataTypes.h"
   6:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_Platform.h"
   7:FT_Esd_Framework/FT_Esd_Dl.h **** #include "Ft_Esd.h"
   8:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_Gpu.h"
   9:FT_Esd_Framework/FT_Esd_Dl.h **** #include "Ft_Esd_BitmapInfo.h"
  10:FT_Esd_Framework/FT_Esd_Dl.h **** 
  11:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_CATEGORY(EsdUtilities, DisplayName = "ESD Utilities")
  12:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_CATEGORY(EveRenderFunctions, DisplayName = "EVE Render Functions")
  13:FT_Esd_Framework/FT_Esd_Dl.h **** 
  14:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_TYPE(Ft_Gpu_Hal_Context_t *, Native = Pointer, Edit = Library)
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s 			page 11


  15:FT_Esd_Framework/FT_Esd_Dl.h **** 
  16:FT_Esd_Framework/FT_Esd_Dl.h **** // Keep cache of displaylist values that don't often change but are generally set by every widget t
  17:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_OPTIMIZE_DISPLAYLIST 1
  18:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_STATE_STACK_SIZE 5
  19:FT_Esd_Framework/FT_Esd_Dl.h **** 
  20:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_BITMAPHANDLE_INVALID 255
  21:FT_Esd_Framework/FT_Esd_Dl.h **** 
  22:FT_Esd_Framework/FT_Esd_Dl.h **** //
  23:FT_Esd_Framework/FT_Esd_Dl.h **** // Structs
  24:FT_Esd_Framework/FT_Esd_Dl.h **** //
  25:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_ESD_OPTIMIZE_DISPLAYLIST
  26:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_STATE Ft_Esd_GpuState[Ft_Esd_GpuState_I]
  27:FT_Esd_Framework/FT_Esd_Dl.h **** typedef struct
  28:FT_Esd_Framework/FT_Esd_Dl.h **** {
  29:FT_Esd_Framework/FT_Esd_Dl.h **** 	// Keep to a minimum
  30:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_81X_ENABLE
  31:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint32_t PaletteSource;
  32:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  33:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint32_t ColorRGB;
  34:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t ColorA;
  35:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t Handle;         // Current handle
  36:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t Cell;           // Current cell
  37:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_bool_t BitmapTransform; // BitmapTransform other than default is set
  38:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_81X_ENABLE
  39:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t VertexFormat;   // Current vertex format
  40:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  41:FT_Esd_Framework/FT_Esd_Dl.h **** } Ft_Esd_GpuState_T;
  42:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  43:FT_Esd_Framework/FT_Esd_Dl.h **** 
  44:FT_Esd_Framework/FT_Esd_Dl.h **** //
  45:FT_Esd_Framework/FT_Esd_Dl.h **** // Globals
  46:FT_Esd_Framework/FT_Esd_Dl.h **** //
  47:FT_Esd_Framework/FT_Esd_Dl.h **** extern Ft_Gpu_Hal_Context_t *Ft_Esd_Host;
  48:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint16_t Ft_Esd_FontHeight[32];
  49:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_ESD_OPTIMIZE_DISPLAYLIST
  50:FT_Esd_Framework/FT_Esd_Dl.h **** extern Ft_Esd_GpuState_T Ft_Esd_GpuState[FT_ESD_STATE_STACK_SIZE];
  51:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint8_t Ft_Esd_GpuState_I;
  52:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint32_t Ft_Esd_CoFgColor;
  53:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint32_t Ft_Esd_CoBgColor;
  54:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  55:FT_Esd_Framework/FT_Esd_Dl.h **** 
  56:FT_Esd_Framework/FT_Esd_Dl.h **** //Get the height of builtin font
  57:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_GetFontHeight, Type = ft_uint16_t ,DisplayName = "Get Font Height", Category = 
  58:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(i, Type = int, DisplayName = "Bitmap Handle", Default = 0, Min = 0, Max = 31)
  59:FT_Esd_Framework/FT_Esd_Dl.h **** // inline static ft_uint16_t Ft_Esd_GetFontHeight(int i) { return Ft_Esd_FontHeight[i]; }
  60:FT_Esd_Framework/FT_Esd_Dl.h **** #define Ft_Esd_GetFontHeight(i) (Ft_Esd_FontHeight[i]);
  61:FT_Esd_Framework/FT_Esd_Dl.h **** 
  62:FT_Esd_Framework/FT_Esd_Dl.h **** // Reset any cached state
  63:FT_Esd_Framework/FT_Esd_Dl.h **** void Ft_Esd_ResetGpuState();
  64:FT_Esd_Framework/FT_Esd_Dl.h **** void Ft_Esd_ResetCoState();
  65:FT_Esd_Framework/FT_Esd_Dl.h **** 
  66:FT_Esd_Framework/FT_Esd_Dl.h **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotalUsed();
  67:FT_Esd_Framework/FT_Esd_Dl.h **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotal();
  68:FT_Esd_Framework/FT_Esd_Dl.h **** 
  69:FT_Esd_Framework/FT_Esd_Dl.h **** /// Set current tag. Must be returned to 255 after usage, to ensure next widgets don't draw with in
  70:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_TAG, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  71:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(s, Type = ft_uint8_t, DisplayName = "Tag", Default = 255, Min = 0, Max = 255)
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s 			page 12


  72:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_TAG(ft_uint8_t s)
  73:FT_Esd_Framework/FT_Esd_Dl.h **** {
  74:FT_Esd_Framework/FT_Esd_Dl.h **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, TAG(s));
  75:FT_Esd_Framework/FT_Esd_Dl.h **** }
  76:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify color RGB
  77:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_RGB, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  78:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(c, Type = ft_rgb32_t, DisplayName = "Color")
  79:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_RGB(ft_rgb32_t c)
  80:FT_Esd_Framework/FT_Esd_Dl.h **** {
  81:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  82:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_rgb32_t rgb = c & 0xFFFFFF;
  83:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (rgb != FT_ESD_STATE.ColorRGB)
  84:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
  85:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  86:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, (4UL << 24) | (rgb));
  87:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  88:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.ColorRGB = rgb;
  89:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
  90:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  91:FT_Esd_Framework/FT_Esd_Dl.h **** }
  92:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify alpha channel
  93:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_A, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  94:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(alpha, Type = ft_uint8_t, Default = 255, Min = 0, Max = 255)
  95:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_A(ft_uint8_t alpha)
  96:FT_Esd_Framework/FT_Esd_Dl.h **** {
  97:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  98:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (alpha != FT_ESD_STATE.ColorA)
 434              		.loc 2 98 0
 435 000a 4A4B     		ldr	r3, .L38
 436 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 437 000e 4A4B     		ldr	r3, .L38+4
 438 0010 03EB0213 		add	r3, r3, r2, lsl #4
 439 0014 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 440 0016 FF2B     		cmp	r3, #255
 441 0018 0BD0     		beq	.L23
  99:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
 100:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 101:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, COLOR_A(alpha));
 442              		.loc 2 101 0
 443 001a 4849     		ldr	r1, .L38+8
 444 001c 484B     		ldr	r3, .L38+12
 445 001e 1868     		ldr	r0, [r3]
 446              	.LVL34:
 447 0020 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 448              	.LVL35:
 102:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 103:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.ColorA = alpha;
 449              		.loc 2 103 0
 450 0024 434B     		ldr	r3, .L38
 451 0026 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 452 0028 434B     		ldr	r3, .L38+4
 453 002a 03EB0213 		add	r3, r3, r2, lsl #4
 454 002e FF22     		movs	r2, #255
 455 0030 1A72     		strb	r2, [r3, #8]
 456              	.L23:
 457              	.LVL36:
 458              	.LBE31:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s 			page 13


 459              	.LBE30:
  59:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	Ft_Esd_Dl_TAG(s);
 460              		.loc 1 59 0
 461 0032 04F12C06 		add	r6, r4, #44
 462 0036 3046     		mov	r0, r6
 463 0038 FFF7FEFF 		bl	Ft_Esd_TouchTag_Tag
 464              	.LVL37:
 465              	.LBB32:
 466              	.LBB33:
  74:FT_Esd_Framework/FT_Esd_Dl.h **** }
 467              		.loc 2 74 0
 468 003c 40F04071 		orr	r1, r0, #50331648
 469 0040 3F4B     		ldr	r3, .L38+12
 470 0042 1868     		ldr	r0, [r3]
 471              	.LVL38:
 472 0044 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 473              	.LVL39:
 474              	.LBE33:
 475              	.LBE32:
  61:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_bool_t if_1 = context->Primary(parent);
 476              		.loc 1 61 0
 477 0048 FFF7FEFF 		bl	Ft_Esd_GetHost
 478              	.LVL40:
 479 004c 0746     		mov	r7, r0
 480              	.LVL41:
  62:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_rgb32_t c;
 481              		.loc 1 62 0
 482 004e 636A     		ldr	r3, [r4, #36]
 483 0050 2846     		mov	r0, r5
 484              	.LVL42:
 485 0052 9847     		blx	r3
 486              	.LVL43:
  64:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	{
 487              		.loc 1 64 0
 488 0054 0028     		cmp	r0, #0
 489 0056 5BD0     		beq	.L24
 490              	.LBB34:
  66:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 		c = Ft_Esd_Theme_GetPrimaryColor(theme);
 491              		.loc 1 66 0
 492 0058 6368     		ldr	r3, [r4, #4]
 493 005a 2846     		mov	r0, r5
 494              	.LVL44:
 495 005c 9847     		blx	r3
 496              	.LVL45:
 497              	.LBB35:
 498              	.LBB36:
 499              		.file 3 "FT_Esd_Widgets/FT_Esd_Theme.h"
   1:FT_Esd_Widgets/FT_Esd_Theme.h **** 
   2:FT_Esd_Widgets/FT_Esd_Theme.h **** #ifndef FT_ESD_THEME_H
   3:FT_Esd_Widgets/FT_Esd_Theme.h **** #define FT_ESD_THEME_H
   4:FT_Esd_Widgets/FT_Esd_Theme.h **** #include "FT_DataTypes.h"
   5:FT_Esd_Widgets/FT_Esd_Theme.h **** #include "Ft_Esd.h"
   6:FT_Esd_Widgets/FT_Esd_Theme.h **** 
   7:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_CATEGORY(EsdTheme, DisplayName = "ESD Theme")
   8:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_CATEGORY(EsdTheme_Themes, DisplayName = "Themes", Category = EsdTheme)
   9:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  10:FT_Esd_Widgets/FT_Esd_Theme.h **** typedef unsigned int ft_uint32_t;
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s 			page 14


  11:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  12:FT_Esd_Widgets/FT_Esd_Theme.h **** typedef struct
  13:FT_Esd_Widgets/FT_Esd_Theme.h **** {
  14:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t ClearColor;
  15:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t BackColor;
  16:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t TextColor;
  17:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t ButtonTextColor;
  18:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t DefaultColor;
  19:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t PrimaryColor;
  20:FT_Esd_Widgets/FT_Esd_Theme.h **** } Ft_Esd_Theme;
  21:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  22:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_TYPE(Ft_Esd_Theme *, Native = Pointer, Edit = Library)
  23:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  24:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_RENDER(Ft_Esd_Theme_SetCurrent, DisplayName = "Set Current Theme", Category = EsdTheme, Include
  25:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *)
  26:FT_Esd_Widgets/FT_Esd_Theme.h **** void Ft_Esd_Theme_SetCurrent(Ft_Esd_Theme *theme);
  27:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  28:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetCurrent, DisplayName = "Current Theme", Category = EsdTheme, Type = Ft
  29:FT_Esd_Widgets/FT_Esd_Theme.h **** Ft_Esd_Theme *Ft_Esd_Theme_GetCurrent();
  30:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  31:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetClearColor, DisplayName = "Get Clear Color", Category = EsdTheme, Type
  32:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  33:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetClearColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_Es
  34:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  35:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetBackColor, DisplayName = "Get Back Color", Category = EsdTheme, Type =
  36:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  37:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetBackColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_Esd
  38:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  39:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetTextColor, DisplayName = "Get Text Color", Category = EsdTheme, Type =
  40:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  41:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetTextColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_Esd
  42:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  43:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetButtonTextColor, DisplayName = "Get Button Text Color", Category = Esd
  44:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  45:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetButtonTextColor(Ft_Esd_Theme *theme) { if (!theme) return 
  46:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  47:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetCurrentColor, DisplayName = "Get Default Color", Category = EsdTheme, 
  48:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  49:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetCurrentColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_
  50:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  51:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetPrimaryColor, DisplayName = "Get Primary Color", Category = EsdTheme, 
  52:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  53:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetPrimaryColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_
 500              		.loc 3 53 0
 501 005e 0028     		cmp	r0, #0
 502 0060 52D0     		beq	.L34
 503 0062 4169     		ldr	r1, [r0, #20]
 504              	.LVL46:
 505              	.L26:
 506              	.LBE36:
 507              	.LBE35:
 508              	.LBE34:
  74:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	Ft_Esd_Theme * theme_2 = context->Theme(parent);
 509              		.loc 1 74 0
 510 0064 3846     		mov	r0, r7
 511 0066 FFF7FEFF 		bl	Ft_Gpu_CoCmd_FgColor
 512              	.LVL47:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s 			page 15


  75:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_rgb32_t c_1 = Ft_Esd_Theme_GetButtonTextColor(theme_2);
 513              		.loc 1 75 0
 514 006a 6368     		ldr	r3, [r4, #4]
 515 006c 2846     		mov	r0, r5
 516 006e 9847     		blx	r3
 517              	.LVL48:
 518              	.LBB39:
 519              	.LBB40:
  45:FT_Esd_Widgets/FT_Esd_Theme.h **** 
 520              		.loc 3 45 0
 521 0070 0028     		cmp	r0, #0
 522 0072 57D0     		beq	.L35
 523 0074 C768     		ldr	r7, [r0, #12]
 524              	.LVL49:
 525              	.L29:
 526              	.LBE40:
 527              	.LBE39:
 528              	.LBB42:
 529              	.LBB43:
  82:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (rgb != FT_ESD_STATE.ColorRGB)
 530              		.loc 2 82 0
 531 0076 27F07F47 		bic	r7, r7, #-16777216
 532              	.LVL50:
  83:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
 533              		.loc 2 83 0
 534 007a 2E4B     		ldr	r3, .L38
 535 007c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 536 007e 2E4B     		ldr	r3, .L38+4
 537 0080 03EB0213 		add	r3, r3, r2, lsl #4
 538 0084 5B68     		ldr	r3, [r3, #4]
 539 0086 9F42     		cmp	r7, r3
 540 0088 0BD0     		beq	.L30
  86:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 541              		.loc 2 86 0
 542 008a 47F08061 		orr	r1, r7, #67108864
 543 008e 2C4B     		ldr	r3, .L38+12
 544 0090 1868     		ldr	r0, [r3]
 545 0092 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 546              	.LVL51:
  88:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
 547              		.loc 2 88 0
 548 0096 274B     		ldr	r3, .L38
 549 0098 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 550 009a 274B     		ldr	r3, .L38+4
 551 009c 03EB0213 		add	r3, r3, r2, lsl #4
 552 00a0 5F60     		str	r7, [r3, #4]
 553              	.L30:
 554              	.LVL52:
 555              	.LBE43:
 556              	.LBE42:
  78:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_int16_t x = context->X(parent);
 557              		.loc 1 78 0
 558 00a2 FFF7FEFF 		bl	Ft_Esd_GetHost
 559              	.LVL53:
 560 00a6 0746     		mov	r7, r0
 561              	.LVL54:
  79:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_int16_t y = context->Y(parent);
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s 			page 16


 562              		.loc 1 79 0
 563 00a8 A368     		ldr	r3, [r4, #8]
 564 00aa 2846     		mov	r0, r5
 565              	.LVL55:
 566 00ac 9847     		blx	r3
 567              	.LVL56:
 568 00ae 0590     		str	r0, [sp, #20]
 569              	.LVL57:
  80:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_int16_t width = context->Width(parent);
 570              		.loc 1 80 0
 571 00b0 E368     		ldr	r3, [r4, #12]
 572 00b2 2846     		mov	r0, r5
 573 00b4 9847     		blx	r3
 574              	.LVL58:
 575 00b6 8046     		mov	r8, r0
 576              	.LVL59:
  81:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_int16_t height = context->Height(parent);
 577              		.loc 1 81 0
 578 00b8 2369     		ldr	r3, [r4, #16]
 579 00ba 2846     		mov	r0, r5
 580 00bc 9847     		blx	r3
 581              	.LVL60:
 582 00be 8146     		mov	r9, r0
 583              	.LVL61:
  82:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_int16_t font = context->Font(parent);
 584              		.loc 1 82 0
 585 00c0 6369     		ldr	r3, [r4, #20]
 586 00c2 2846     		mov	r0, r5
 587 00c4 9847     		blx	r3
 588              	.LVL62:
 589 00c6 8246     		mov	r10, r0
 590              	.LVL63:
  83:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_bool_t if_2 = Ft_Esd_TouchTag_Inside(&context->Touch_Tag);
 591              		.loc 1 83 0
 592 00c8 A369     		ldr	r3, [r4, #24]
 593 00ca 2846     		mov	r0, r5
 594 00cc 9847     		blx	r3
 595              	.LVL64:
 596 00ce 8346     		mov	fp, r0
 597              	.LVL65:
  84:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_uint16_t options;
 598              		.loc 1 84 0
 599 00d0 3046     		mov	r0, r6
 600 00d2 FFF7FEFF 		bl	Ft_Esd_TouchTag_Inside
 601              	.LVL66:
  86:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	{
 602              		.loc 1 86 0
 603 00d6 48BB     		cbnz	r0, .L36
  92:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	}
 604              		.loc 1 92 0
 605 00d8 0026     		movs	r6, #0
 606              	.L31:
 607              	.LVL67:
  94:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	Ft_Gpu_CoCmd_Button(phost_1, x, y, width, height, font, options, s_1);
 608              		.loc 1 94 0
 609 00da E369     		ldr	r3, [r4, #28]
 610 00dc 2846     		mov	r0, r5
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s 			page 17


 611              	.LVL68:
 612 00de 9847     		blx	r3
 613              	.LVL69:
  95:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	ft_uint8_t s_2 = 255;
 614              		.loc 1 95 0
 615 00e0 0390     		str	r0, [sp, #12]
 616 00e2 0296     		str	r6, [sp, #8]
 617 00e4 CDF804B0 		str	fp, [sp, #4]
 618 00e8 CDF800A0 		str	r10, [sp]
 619 00ec 4B46     		mov	r3, r9
 620 00ee 4246     		mov	r2, r8
 621 00f0 0599     		ldr	r1, [sp, #20]
 622 00f2 3846     		mov	r0, r7
 623              	.LVL70:
 624 00f4 FFF7FEFF 		bl	Ft_Gpu_CoCmd_Button
 625              	.LVL71:
 626              	.LBB44:
 627              	.LBB45:
  74:FT_Esd_Framework/FT_Esd_Dl.h **** }
 628              		.loc 2 74 0
 629 00f8 1249     		ldr	r1, .L38+16
 630 00fa 114B     		ldr	r3, .L38+12
 631 00fc 1868     		ldr	r0, [r3]
 632 00fe FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 633              	.LVL72:
 634              	.LBE45:
 635              	.LBE44:
  98:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 
 636              		.loc 1 98 0
 637 0102 07B0     		add	sp, sp, #28
 638              	.LCFI7:
 639              		.cfi_remember_state
 640              		.cfi_def_cfa_offset 36
 641              		@ sp needed
 642 0104 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 643              	.LVL73:
 644              	.L34:
 645              	.LCFI8:
 646              		.cfi_restore_state
 647              	.LBB46:
 648              	.LBB38:
 649              	.LBB37:
 650              		.loc 3 53 0
 651 0108 FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
 652              	.LVL74:
 653 010c 4169     		ldr	r1, [r0, #20]
 654 010e A9E7     		b	.L26
 655              	.LVL75:
 656              	.L24:
 657              	.LBE37:
 658              	.LBE38:
 659              	.LBE46:
 660              	.LBB47:
  71:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 		c = Ft_Esd_Theme_GetCurrentColor(theme_1);
 661              		.loc 1 71 0
 662 0110 6368     		ldr	r3, [r4, #4]
 663 0112 2846     		mov	r0, r5
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s 			page 18


 664              	.LVL76:
 665 0114 9847     		blx	r3
 666              	.LVL77:
 667              	.LBB48:
 668              	.LBB49:
  49:FT_Esd_Widgets/FT_Esd_Theme.h **** 
 669              		.loc 3 49 0
 670 0116 08B1     		cbz	r0, .L37
 671 0118 0169     		ldr	r1, [r0, #16]
 672 011a A3E7     		b	.L26
 673              	.L37:
 674 011c FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
 675              	.LVL78:
 676 0120 0169     		ldr	r1, [r0, #16]
 677 0122 9FE7     		b	.L26
 678              	.LVL79:
 679              	.L35:
 680              	.LBE49:
 681              	.LBE48:
 682              	.LBE47:
 683              	.LBB50:
 684              	.LBB41:
  45:FT_Esd_Widgets/FT_Esd_Theme.h **** 
 685              		.loc 3 45 0
 686 0124 FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
 687              	.LVL80:
 688 0128 C768     		ldr	r7, [r0, #12]
 689              	.LVL81:
 690 012a A4E7     		b	.L29
 691              	.LVL82:
 692              	.L36:
 693              	.LBE41:
 694              	.LBE50:
  88:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	}
 695              		.loc 1 88 0
 696 012c 4FF48076 		mov	r6, #256
 697 0130 D3E7     		b	.L31
 698              	.L39:
 699 0132 00BF     		.align	2
 700              	.L38:
 701 0134 00000000 		.word	Ft_Esd_GpuState_I
 702 0138 00000000 		.word	Ft_Esd_GpuState
 703 013c FF000010 		.word	268435711
 704 0140 00000000 		.word	Ft_Esd_Host
 705 0144 FF000003 		.word	50331903
 706              		.cfi_endproc
 707              	.LFE32:
 709              		.section	.text.Ft_Esd_PushButton_Start,"ax",%progbits
 710              		.align	1
 711              		.global	Ft_Esd_PushButton_Start
 712              		.syntax unified
 713              		.thumb
 714              		.thumb_func
 715              		.fpu fpv5-sp-d16
 717              	Ft_Esd_PushButton_Start:
 718              	.LFB33:
 101:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	void *parent = context->Parent;
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s 			page 19


 719              		.loc 1 101 0
 720              		.cfi_startproc
 721              		@ args = 0, pretend = 0, frame = 0
 722              		@ frame_needed = 0, uses_anonymous_args = 0
 723              	.LVL83:
 724 0000 08B5     		push	{r3, lr}
 725              	.LCFI9:
 726              		.cfi_def_cfa_offset 8
 727              		.cfi_offset 3, -8
 728              		.cfi_offset 14, -4
 729              	.LVL84:
 103:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** }
 730              		.loc 1 103 0
 731 0002 2C30     		adds	r0, r0, #44
 732              	.LVL85:
 733 0004 FFF7FEFF 		bl	Ft_Esd_TouchTag_Start
 734              	.LVL86:
 104:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 
 735              		.loc 1 104 0
 736 0008 08BD     		pop	{r3, pc}
 737              		.cfi_endproc
 738              	.LFE33:
 740              		.section	.text.Ft_Esd_PushButton_Update,"ax",%progbits
 741              		.align	1
 742              		.global	Ft_Esd_PushButton_Update
 743              		.syntax unified
 744              		.thumb
 745              		.thumb_func
 746              		.fpu fpv5-sp-d16
 748              	Ft_Esd_PushButton_Update:
 749              	.LFB37:
 126:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 
 127:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** void Ft_Esd_PushButton_Update(Ft_Esd_PushButton *context)
 128:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** {
 750              		.loc 1 128 0
 751              		.cfi_startproc
 752              		@ args = 0, pretend = 0, frame = 0
 753              		@ frame_needed = 0, uses_anonymous_args = 0
 754              	.LVL87:
 755 0000 08B5     		push	{r3, lr}
 756              	.LCFI10:
 757              		.cfi_def_cfa_offset 8
 758              		.cfi_offset 3, -8
 759              		.cfi_offset 14, -4
 760              	.LVL88:
 129:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	void *parent = context->Parent;
 130:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	Ft_Esd_TouchTag_Update(&context->Touch_Tag);
 761              		.loc 1 130 0
 762 0002 2C30     		adds	r0, r0, #44
 763              	.LVL89:
 764 0004 FFF7FEFF 		bl	Ft_Esd_TouchTag_Update
 765              	.LVL90:
 131:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** }
 766              		.loc 1 131 0
 767 0008 08BD     		pop	{r3, pc}
 768              		.cfi_endproc
 769              	.LFE37:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s 			page 20


 771              		.section	.text.Ft_Esd_PushButton_Pushing,"ax",%progbits
 772              		.align	1
 773              		.global	Ft_Esd_PushButton_Pushing
 774              		.syntax unified
 775              		.thumb
 776              		.thumb_func
 777              		.fpu fpv5-sp-d16
 779              	Ft_Esd_PushButton_Pushing:
 780              	.LFB38:
 132:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 
 133:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** ft_bool_t Ft_Esd_PushButton_Pushing(Ft_Esd_PushButton *context)
 134:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** {
 781              		.loc 1 134 0
 782              		.cfi_startproc
 783              		@ args = 0, pretend = 0, frame = 0
 784              		@ frame_needed = 0, uses_anonymous_args = 0
 785              	.LVL91:
 786 0000 08B5     		push	{r3, lr}
 787              	.LCFI11:
 788              		.cfi_def_cfa_offset 8
 789              		.cfi_offset 3, -8
 790              		.cfi_offset 14, -4
 791              	.LVL92:
 135:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	void *parent = context->Parent;
 136:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	return Ft_Esd_TouchTag_Inside(&context->Touch_Tag);
 792              		.loc 1 136 0
 793 0002 2C30     		adds	r0, r0, #44
 794              	.LVL93:
 795 0004 FFF7FEFF 		bl	Ft_Esd_TouchTag_Inside
 796              	.LVL94:
 137:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** }
 797              		.loc 1 137 0
 798 0008 08BD     		pop	{r3, pc}
 799              		.cfi_endproc
 800              	.LFE38:
 802              		.section	.text.Ft_Esd_PushButton_End,"ax",%progbits
 803              		.align	1
 804              		.global	Ft_Esd_PushButton_End
 805              		.syntax unified
 806              		.thumb
 807              		.thumb_func
 808              		.fpu fpv5-sp-d16
 810              	Ft_Esd_PushButton_End:
 811              	.LFB39:
 138:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 
 139:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** void Ft_Esd_PushButton_End(Ft_Esd_PushButton *context)
 140:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** {
 812              		.loc 1 140 0
 813              		.cfi_startproc
 814              		@ args = 0, pretend = 0, frame = 0
 815              		@ frame_needed = 0, uses_anonymous_args = 0
 816              	.LVL95:
 817 0000 08B5     		push	{r3, lr}
 818              	.LCFI12:
 819              		.cfi_def_cfa_offset 8
 820              		.cfi_offset 3, -8
 821              		.cfi_offset 14, -4
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s 			page 21


 822              	.LVL96:
 141:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	void *parent = context->Parent;
 142:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** 	Ft_Esd_TouchTag_End(&context->Touch_Tag);
 823              		.loc 1 142 0
 824 0002 2C30     		adds	r0, r0, #44
 825              	.LVL97:
 826 0004 FFF7FEFF 		bl	Ft_Esd_TouchTag_End
 827              	.LVL98:
 143:FT_Esd_Widgets/Ft_Esd_PushButton__Generated.c **** }
 828              		.loc 1 143 0
 829 0008 08BD     		pop	{r3, pc}
 830              		.cfi_endproc
 831              	.LFE39:
 833              		.section	.rodata.Ft_Esd_PushButton_Text__Default.str1.4,"aMS",%progbits,1
 834              		.align	2
 835              	.LC0:
 836 0000 42757474 		.ascii	"Button\000"
 836      6F6E00
 837              		.text
 838              	.Letext0:
 839              		.file 4 "FT_Eve_Hal/FT_DataTypes.h"
 840              		.file 5 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/lock.h"
 841              		.file 6 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_types.h"
 842              		.file 7 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 843              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/unistd.h"
 844              		.file 9 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/reent.h"
 845              		.file 10 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/stdlib.h"
 846              		.file 11 "FT_Eve_Hal/FT_Gpu_Hal.h"
 847              		.file 12 "FT_Esd_Framework/Ft_Esd.h"
 848              		.file 13 "FT_Esd_Widgets/Ft_Esd_DefaultTheme.h"
 849              		.file 14 "FT_Esd_Framework/Ft_Esd_TouchTag.h"
 850              		.file 15 "FT_Esd_Widgets/Ft_Esd_PushButton.h"
 851              		.file 16 "FT_Esd_Framework/FT_Esd_CoPro_Cmds.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s 			page 22


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Ft_Esd_PushButton__Generated.c
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:18     .text.Ft_Esd_PushButton_X__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:25     .text.Ft_Esd_PushButton_X__Default:0000000000000000 Ft_Esd_PushButton_X__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:42     .text.Ft_Esd_PushButton_Y__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:49     .text.Ft_Esd_PushButton_Y__Default:0000000000000000 Ft_Esd_PushButton_Y__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:65     .text.Ft_Esd_PushButton_Width__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:72     .text.Ft_Esd_PushButton_Width__Default:0000000000000000 Ft_Esd_PushButton_Width__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:88     .text.Ft_Esd_PushButton_Height__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:95     .text.Ft_Esd_PushButton_Height__Default:0000000000000000 Ft_Esd_PushButton_Height__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:111    .text.Ft_Esd_PushButton_Font__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:118    .text.Ft_Esd_PushButton_Font__Default:0000000000000000 Ft_Esd_PushButton_Font__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:134    .text.Ft_Esd_PushButton_Text__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:141    .text.Ft_Esd_PushButton_Text__Default:0000000000000000 Ft_Esd_PushButton_Text__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:156    .text.Ft_Esd_PushButton_Text__Default:0000000000000004 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:161    .text.Ft_Esd_PushButton_Primary__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:168    .text.Ft_Esd_PushButton_Primary__Default:0000000000000000 Ft_Esd_PushButton_Primary__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:184    .text.Ft_Esd_PushButton_Touch_Tag_Down__Signal:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:190    .text.Ft_Esd_PushButton_Touch_Tag_Down__Signal:0000000000000000 Ft_Esd_PushButton_Touch_Tag_Down__Signal
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:215    .text.Ft_Esd_PushButton_Touch_Tag_Up__Signal:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:221    .text.Ft_Esd_PushButton_Touch_Tag_Up__Signal:0000000000000000 Ft_Esd_PushButton_Touch_Tag_Up__Signal
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:246    .text.Ft_Esd_PushButton_Touch_Tag_Tap__Signal:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:252    .text.Ft_Esd_PushButton_Touch_Tag_Tap__Signal:0000000000000000 Ft_Esd_PushButton_Touch_Tag_Tap__Signal
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:277    .text.Ft_Esd_PushButton_Theme__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:284    .text.Ft_Esd_PushButton_Theme__Default:0000000000000000 Ft_Esd_PushButton_Theme__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:304    .text.Ft_Esd_PushButton__Initializer:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:311    .text.Ft_Esd_PushButton__Initializer:0000000000000000 Ft_Esd_PushButton__Initializer
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:382    .text.Ft_Esd_PushButton__Initializer:0000000000000048 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:398    .text.Ft_Esd_PushButton_Render:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:405    .text.Ft_Esd_PushButton_Render:0000000000000000 Ft_Esd_PushButton_Render
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:701    .text.Ft_Esd_PushButton_Render:0000000000000134 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:710    .text.Ft_Esd_PushButton_Start:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:717    .text.Ft_Esd_PushButton_Start:0000000000000000 Ft_Esd_PushButton_Start
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:741    .text.Ft_Esd_PushButton_Update:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:748    .text.Ft_Esd_PushButton_Update:0000000000000000 Ft_Esd_PushButton_Update
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:772    .text.Ft_Esd_PushButton_Pushing:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:779    .text.Ft_Esd_PushButton_Pushing:0000000000000000 Ft_Esd_PushButton_Pushing
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:803    .text.Ft_Esd_PushButton_End:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:810    .text.Ft_Esd_PushButton_End:0000000000000000 Ft_Esd_PushButton_End
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s:834    .rodata.Ft_Esd_PushButton_Text__Default.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
Ft_Esd_Theme_GetCurrent
Ft_Esd_TouchTag__Initializer
Ft_Esd_Noop
Ft_Gpu_Hal_WrCmd32
Ft_Esd_TouchTag_Tag
Ft_Esd_GetHost
Ft_Gpu_CoCmd_FgColor
Ft_Esd_TouchTag_Inside
Ft_Gpu_CoCmd_Button
Ft_Esd_GpuState_I
Ft_Esd_GpuState
Ft_Esd_Host
Ft_Esd_TouchTag_Start
Ft_Esd_TouchTag_Update
Ft_Esd_TouchTag_End
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccPqhYKY.s 			page 23


