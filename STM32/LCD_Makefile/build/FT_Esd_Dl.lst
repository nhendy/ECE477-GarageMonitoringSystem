ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"FT_Esd_Dl.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Ft_Esd_ResetGpuState,"ax",%progbits
  18              		.align	1
  19              		.global	Ft_Esd_ResetGpuState
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-sp-d16
  25              	Ft_Esd_ResetGpuState:
  26              	.LFB17:
  27              		.file 1 "FT_Esd_Framework/FT_Esd_Dl.c"
   1:FT_Esd_Framework/FT_Esd_Dl.c **** 
   2:FT_Esd_Framework/FT_Esd_Dl.c **** #include "FT_Platform.h"
   3:FT_Esd_Framework/FT_Esd_Dl.c **** #include "FT_Esd_Dl.h"
   4:FT_Esd_Framework/FT_Esd_Dl.c **** 
   5:FT_Esd_Framework/FT_Esd_Dl.c **** Ft_Esd_GpuState_T Ft_Esd_GpuState[FT_ESD_STATE_STACK_SIZE];
   6:FT_Esd_Framework/FT_Esd_Dl.c **** ft_uint8_t Ft_Esd_GpuState_I;
   7:FT_Esd_Framework/FT_Esd_Dl.c **** ft_uint32_t Ft_Esd_CoFgColor;
   8:FT_Esd_Framework/FT_Esd_Dl.c **** ft_uint32_t Ft_Esd_CoBgColor;
   9:FT_Esd_Framework/FT_Esd_Dl.c **** 
  10:FT_Esd_Framework/FT_Esd_Dl.c **** // Number of bitmap handles to use (and also the scratch handle)
  11:FT_Esd_Framework/FT_Esd_Dl.c **** #define FT_ESD_BITMAPHANDLE_NB 15UL
  12:FT_Esd_Framework/FT_Esd_Dl.c **** // List which bitmap info is using a handle
  13:FT_Esd_Framework/FT_Esd_Dl.c **** Ft_Esd_BitmapInfo *Ft_Esd_BitmapHandleInfo[FT_ESD_BITMAPHANDLE_NB] = { 0 };
  14:FT_Esd_Framework/FT_Esd_Dl.c **** Ft_Esd_GpuHandle Ft_Esd_BitmapHandleGpuHandle[FT_ESD_BITMAPHANDLE_NB] = { 0 };
  15:FT_Esd_Framework/FT_Esd_Dl.c **** ft_bool_t Ft_Esd_BitmapHandleUse[FT_ESD_BITMAPHANDLE_NB] = { 0 };
  16:FT_Esd_Framework/FT_Esd_Dl.c **** 
  17:FT_Esd_Framework/FT_Esd_Dl.c **** ft_bool_t Ft_Esd_BitmapHandleResized[FT_ESD_BITMAPHANDLE_NB] = { 0 };
  18:FT_Esd_Framework/FT_Esd_Dl.c **** 
  19:FT_Esd_Framework/FT_Esd_Dl.c **** void Ft_Esd_ResetGpuState() // Begin of frame
  20:FT_Esd_Framework/FT_Esd_Dl.c **** {
  28              		.loc 1 20 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  21:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Esd_GpuState_I = 0;
  33              		.loc 1 21 0
  34 0000 0023     		movs	r3, #0
  35 0002 0E4A     		ldr	r2, .L8
  36 0004 1370     		strb	r3, [r2]
  22:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Esd_GpuState[0] = (Ft_Esd_GpuState_T) {
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s 			page 2


  37              		.loc 1 22 0
  38 0006 0E4A     		ldr	r2, .L8+4
  39 0008 1360     		str	r3, [r2]
  40 000a 9360     		str	r3, [r2, #8]
  41 000c D360     		str	r3, [r2, #12]
  42 000e 6FF07F41 		mvn	r1, #-16777216
  43 0012 5160     		str	r1, [r2, #4]
  44 0014 FF21     		movs	r1, #255
  45 0016 1172     		strb	r1, [r2, #8]
  46 0018 0421     		movs	r1, #4
  47 001a 1173     		strb	r1, [r2, #12]
  48              	.LVL0:
  49              	.LBB2:
  23:FT_Esd_Framework/FT_Esd_Dl.c **** 		.ColorA = 0xFF,
  24:FT_Esd_Framework/FT_Esd_Dl.c **** 		.ColorRGB = 0xFFFFFF,
  25:FT_Esd_Framework/FT_Esd_Dl.c **** 		.VertexFormat = 4
  26:FT_Esd_Framework/FT_Esd_Dl.c **** 	};
  27:FT_Esd_Framework/FT_Esd_Dl.c **** 	for (int i = 0; i < FT_ESD_BITMAPHANDLE_NB; ++i)
  50              		.loc 1 27 0
  51 001c 03E0     		b	.L2
  52              	.LVL1:
  53              	.L7:
  28:FT_Esd_Framework/FT_Esd_Dl.c **** 	{
  29:FT_Esd_Framework/FT_Esd_Dl.c **** 		// 2: In use last frame
  30:FT_Esd_Framework/FT_Esd_Dl.c **** 		// 1: Not in use anymore
  31:FT_Esd_Framework/FT_Esd_Dl.c **** 		// 0: Not in use
  32:FT_Esd_Framework/FT_Esd_Dl.c **** 		if (Ft_Esd_BitmapHandleUse[i] < 2)
  33:FT_Esd_Framework/FT_Esd_Dl.c **** 			Ft_Esd_BitmapHandleUse[i] = 0;
  54              		.loc 1 33 0
  55 001e 094A     		ldr	r2, .L8+8
  56 0020 0021     		movs	r1, #0
  57 0022 D154     		strb	r1, [r2, r3]
  58              	.L4:
  27:FT_Esd_Framework/FT_Esd_Dl.c **** 	{
  59              		.loc 1 27 0 discriminator 2
  60 0024 0133     		adds	r3, r3, #1
  61              	.LVL2:
  62              	.L2:
  27:FT_Esd_Framework/FT_Esd_Dl.c **** 	{
  63              		.loc 1 27 0 is_stmt 0 discriminator 1
  64 0026 0E2B     		cmp	r3, #14
  65 0028 07D8     		bhi	.L6
  32:FT_Esd_Framework/FT_Esd_Dl.c **** 			Ft_Esd_BitmapHandleUse[i] = 0;
  66              		.loc 1 32 0 is_stmt 1
  67 002a 064A     		ldr	r2, .L8+8
  68 002c D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
  69 002e 012A     		cmp	r2, #1
  70 0030 F5D9     		bls	.L7
  34:FT_Esd_Framework/FT_Esd_Dl.c **** 		else
  35:FT_Esd_Framework/FT_Esd_Dl.c **** 			--Ft_Esd_BitmapHandleUse[i];
  71              		.loc 1 35 0
  72 0032 013A     		subs	r2, r2, #1
  73 0034 0349     		ldr	r1, .L8+8
  74 0036 CA54     		strb	r2, [r1, r3]
  75 0038 F4E7     		b	.L4
  76              	.L6:
  77              	.LBE2:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s 			page 3


  36:FT_Esd_Framework/FT_Esd_Dl.c **** 		// 2: In use this frame
  37:FT_Esd_Framework/FT_Esd_Dl.c **** 		// 1: In use last frame
  38:FT_Esd_Framework/FT_Esd_Dl.c **** 		// 0: Not in use
  39:FT_Esd_Framework/FT_Esd_Dl.c **** 	}
  40:FT_Esd_Framework/FT_Esd_Dl.c **** }
  78              		.loc 1 40 0
  79 003a 7047     		bx	lr
  80              	.L9:
  81              		.align	2
  82              	.L8:
  83 003c 00000000 		.word	Ft_Esd_GpuState_I
  84 0040 00000000 		.word	Ft_Esd_GpuState
  85 0044 00000000 		.word	.LANCHOR0
  86              		.cfi_endproc
  87              	.LFE17:
  89              		.section	.text.Ft_Esd_ResetCoState,"ax",%progbits
  90              		.align	1
  91              		.global	Ft_Esd_ResetCoState
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  95              		.fpu fpv5-sp-d16
  97              	Ft_Esd_ResetCoState:
  98              	.LFB18:
  41:FT_Esd_Framework/FT_Esd_Dl.c **** 
  42:FT_Esd_Framework/FT_Esd_Dl.c **** void Ft_Esd_ResetCoState()
  43:FT_Esd_Framework/FT_Esd_Dl.c **** {
  99              		.loc 1 43 0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
  44:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Esd_CoFgColor = 0x003870;
 104              		.loc 1 44 0
 105 0000 044B     		ldr	r3, .L11
 106 0002 43F67002 		movw	r2, #14448
 107 0006 1A60     		str	r2, [r3]
  45:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Esd_CoBgColor = 0x002040;
 108              		.loc 1 45 0
 109 0008 034B     		ldr	r3, .L11+4
 110 000a 4FF40152 		mov	r2, #8256
 111 000e 1A60     		str	r2, [r3]
  46:FT_Esd_Framework/FT_Esd_Dl.c **** }
 112              		.loc 1 46 0
 113 0010 7047     		bx	lr
 114              	.L12:
 115 0012 00BF     		.align	2
 116              	.L11:
 117 0014 00000000 		.word	Ft_Esd_CoFgColor
 118 0018 00000000 		.word	Ft_Esd_CoBgColor
 119              		.cfi_endproc
 120              	.LFE18:
 122              		.section	.text.Ft_Esd_BitmapHandle_GetTotalUsed,"ax",%progbits
 123              		.align	1
 124              		.global	Ft_Esd_BitmapHandle_GetTotalUsed
 125              		.syntax unified
 126              		.thumb
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s 			page 4


 127              		.thumb_func
 128              		.fpu fpv5-sp-d16
 130              	Ft_Esd_BitmapHandle_GetTotalUsed:
 131              	.LFB19:
  47:FT_Esd_Framework/FT_Esd_Dl.c **** 
  48:FT_Esd_Framework/FT_Esd_Dl.c **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotalUsed()
  49:FT_Esd_Framework/FT_Esd_Dl.c **** {
 132              		.loc 1 49 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              		@ link register save eliminated.
 137              	.LVL3:
 138              	.LBB3:
  50:FT_Esd_Framework/FT_Esd_Dl.c **** 	ft_uint32_t total = 0;
  51:FT_Esd_Framework/FT_Esd_Dl.c **** 	for (int i = 0; i < FT_ESD_BITMAPHANDLE_NB; ++i)
 139              		.loc 1 51 0
 140 0000 0023     		movs	r3, #0
 141              	.LBE3:
  50:FT_Esd_Framework/FT_Esd_Dl.c **** 	ft_uint32_t total = 0;
 142              		.loc 1 50 0
 143 0002 1846     		mov	r0, r3
 144              	.LBB4:
 145              		.loc 1 51 0
 146 0004 00E0     		b	.L14
 147              	.LVL4:
 148              	.L15:
 149              		.loc 1 51 0 is_stmt 0 discriminator 2
 150 0006 0133     		adds	r3, r3, #1
 151              	.LVL5:
 152              	.L14:
 153              		.loc 1 51 0 discriminator 1
 154 0008 0E2B     		cmp	r3, #14
 155 000a 05D8     		bhi	.L17
  52:FT_Esd_Framework/FT_Esd_Dl.c **** 	{
  53:FT_Esd_Framework/FT_Esd_Dl.c **** 		if (Ft_Esd_BitmapHandleUse[i] > 0)
 156              		.loc 1 53 0 is_stmt 1
 157 000c 034A     		ldr	r2, .L18
 158 000e D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 159 0010 002A     		cmp	r2, #0
 160 0012 F8D0     		beq	.L15
  54:FT_Esd_Framework/FT_Esd_Dl.c **** 		{
  55:FT_Esd_Framework/FT_Esd_Dl.c **** 			++total;
 161              		.loc 1 55 0
 162 0014 0130     		adds	r0, r0, #1
 163              	.LVL6:
 164 0016 F6E7     		b	.L15
 165              	.L17:
 166              	.LBE4:
  56:FT_Esd_Framework/FT_Esd_Dl.c **** 		}
  57:FT_Esd_Framework/FT_Esd_Dl.c **** 	}
  58:FT_Esd_Framework/FT_Esd_Dl.c **** 	return total;
  59:FT_Esd_Framework/FT_Esd_Dl.c **** }
 167              		.loc 1 59 0
 168 0018 7047     		bx	lr
 169              	.L19:
 170 001a 00BF     		.align	2
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s 			page 5


 171              	.L18:
 172 001c 00000000 		.word	.LANCHOR0
 173              		.cfi_endproc
 174              	.LFE19:
 176              		.section	.text.Ft_Esd_BitmapHandle_GetTotal,"ax",%progbits
 177              		.align	1
 178              		.global	Ft_Esd_BitmapHandle_GetTotal
 179              		.syntax unified
 180              		.thumb
 181              		.thumb_func
 182              		.fpu fpv5-sp-d16
 184              	Ft_Esd_BitmapHandle_GetTotal:
 185              	.LFB20:
  60:FT_Esd_Framework/FT_Esd_Dl.c **** 
  61:FT_Esd_Framework/FT_Esd_Dl.c **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotal()
  62:FT_Esd_Framework/FT_Esd_Dl.c **** {
 186              		.loc 1 62 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              		@ link register save eliminated.
  63:FT_Esd_Framework/FT_Esd_Dl.c **** 	return FT_ESD_BITMAPHANDLE_NB;
  64:FT_Esd_Framework/FT_Esd_Dl.c **** }
 191              		.loc 1 64 0
 192 0000 0F20     		movs	r0, #15
 193 0002 7047     		bx	lr
 194              		.cfi_endproc
 195              	.LFE20:
 197              		.section	.text.FT_Esd_Render_Rect,"ax",%progbits
 198              		.align	1
 199              		.global	FT_Esd_Render_Rect
 200              		.syntax unified
 201              		.thumb
 202              		.thumb_func
 203              		.fpu fpv5-sp-d16
 205              	FT_Esd_Render_Rect:
 206              	.LFB21:
  65:FT_Esd_Framework/FT_Esd_Dl.c **** 
  66:FT_Esd_Framework/FT_Esd_Dl.c **** void FT_Esd_Render_Rect(ft_int16_t x, ft_int16_t y, ft_int16_t w, ft_int16_t h)
  67:FT_Esd_Framework/FT_Esd_Dl.c **** {
 207              		.loc 1 67 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211              	.LVL7:
 212 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 213              	.LCFI0:
 214              		.cfi_def_cfa_offset 32
 215              		.cfi_offset 4, -32
 216              		.cfi_offset 5, -28
 217              		.cfi_offset 6, -24
 218              		.cfi_offset 7, -20
 219              		.cfi_offset 8, -16
 220              		.cfi_offset 9, -12
 221              		.cfi_offset 10, -8
 222              		.cfi_offset 14, -4
 223 0004 8046     		mov	r8, r0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s 			page 6


 224 0006 0E46     		mov	r6, r1
 225 0008 9246     		mov	r10, r2
 226 000a 9946     		mov	r9, r3
  68:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, BEGIN(RECTS));
 227              		.loc 1 68 0
 228 000c 104F     		ldr	r7, .L23
 229 000e 1149     		ldr	r1, .L23+4
 230              	.LVL8:
 231 0010 3868     		ldr	r0, [r7]
 232              	.LVL9:
 233 0012 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 234              	.LVL10:
  69:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, VERTEX2II(x, y, 0, 0));
 235              		.loc 1 69 0
 236 0016 104C     		ldr	r4, .L23+8
 237 0018 04EA4851 		and	r1, r4, r8, lsl #21
 238 001c 0F4D     		ldr	r5, .L23+12
 239 001e 05EA0633 		and	r3, r5, r6, lsl #12
 240 0022 1943     		orrs	r1, r1, r3
 241 0024 41F00041 		orr	r1, r1, #-2147483648
 242 0028 3868     		ldr	r0, [r7]
 243 002a FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 244              	.LVL11:
  70:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, VERTEX2II(x + w, y + h, 0, 0));
 245              		.loc 1 70 0
 246 002e 08EB0A01 		add	r1, r8, r10
 247 0032 04EA4154 		and	r4, r4, r1, lsl #21
 248 0036 06EB0901 		add	r1, r6, r9
 249 003a 05EA0131 		and	r1, r5, r1, lsl #12
 250 003e 2143     		orrs	r1, r1, r4
 251 0040 41F00041 		orr	r1, r1, #-2147483648
 252 0044 3868     		ldr	r0, [r7]
 253 0046 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 254              	.LVL12:
  71:FT_Esd_Framework/FT_Esd_Dl.c **** }
 255              		.loc 1 71 0
 256 004a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 257              	.L24:
 258 004e 00BF     		.align	2
 259              	.L23:
 260 0050 00000000 		.word	Ft_Esd_Host
 261 0054 0900001F 		.word	520093705
 262 0058 0000E03F 		.word	1071644672
 263 005c 00F01F00 		.word	2093056
 264              		.cfi_endproc
 265              	.LFE21:
 267              		.section	.text.Ft_Esd_Cmd_Button,"ax",%progbits
 268              		.align	1
 269              		.global	Ft_Esd_Cmd_Button
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu fpv5-sp-d16
 275              	Ft_Esd_Cmd_Button:
 276              	.LFB22:
  72:FT_Esd_Framework/FT_Esd_Dl.c **** 
  73:FT_Esd_Framework/FT_Esd_Dl.c **** ft_void_t Ft_Esd_Cmd_Button(ft_int16_t x, ft_int16_t y, ft_int16_t w, ft_int16_t h, ft_int16_t font
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s 			page 7


  74:FT_Esd_Framework/FT_Esd_Dl.c **** {
 277              		.loc 1 74 0
 278              		.cfi_startproc
 279              		@ args = 12, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281              	.LVL13:
 282 0000 30B5     		push	{r4, r5, lr}
 283              	.LCFI1:
 284              		.cfi_def_cfa_offset 12
 285              		.cfi_offset 4, -12
 286              		.cfi_offset 5, -8
 287              		.cfi_offset 14, -4
 288 0002 85B0     		sub	sp, sp, #20
 289              	.LCFI2:
 290              		.cfi_def_cfa_offset 32
  75:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Gpu_CoCmd_Button(Ft_Esd_Host, x, y, w, h, font, options, s);
 291              		.loc 1 75 0
 292 0004 094C     		ldr	r4, .L27
 293 0006 2468     		ldr	r4, [r4]
 294 0008 0A9D     		ldr	r5, [sp, #40]
 295 000a 0395     		str	r5, [sp, #12]
 296 000c BDF82450 		ldrh	r5, [sp, #36]
 297 0010 0295     		str	r5, [sp, #8]
 298 0012 BDF92050 		ldrsh	r5, [sp, #32]
 299 0016 0195     		str	r5, [sp, #4]
 300 0018 0093     		str	r3, [sp]
 301 001a 1346     		mov	r3, r2
 302              	.LVL14:
 303 001c 0A46     		mov	r2, r1
 304              	.LVL15:
 305 001e 0146     		mov	r1, r0
 306              	.LVL16:
 307 0020 2046     		mov	r0, r4
 308              	.LVL17:
 309 0022 FFF7FEFF 		bl	Ft_Gpu_CoCmd_Button
 310              	.LVL18:
  76:FT_Esd_Framework/FT_Esd_Dl.c **** }
 311              		.loc 1 76 0
 312 0026 05B0     		add	sp, sp, #20
 313              	.LCFI3:
 314              		.cfi_def_cfa_offset 12
 315              		@ sp needed
 316 0028 30BD     		pop	{r4, r5, pc}
 317              	.LVL19:
 318              	.L28:
 319 002a 00BF     		.align	2
 320              	.L27:
 321 002c 00000000 		.word	Ft_Esd_Host
 322              		.cfi_endproc
 323              	.LFE22:
 325              		.section	.text.Ft_Esd_Cmd_Number,"ax",%progbits
 326              		.align	1
 327              		.global	Ft_Esd_Cmd_Number
 328              		.syntax unified
 329              		.thumb
 330              		.thumb_func
 331              		.fpu fpv5-sp-d16
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s 			page 8


 333              	Ft_Esd_Cmd_Number:
 334              	.LFB23:
  77:FT_Esd_Framework/FT_Esd_Dl.c **** 
  78:FT_Esd_Framework/FT_Esd_Dl.c **** ft_void_t Ft_Esd_Cmd_Number(ft_int16_t x, ft_int16_t y, ft_int16_t font, ft_uint16_t options, ft_in
  79:FT_Esd_Framework/FT_Esd_Dl.c **** {
 335              		.loc 1 79 0
 336              		.cfi_startproc
 337              		@ args = 4, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339              	.LVL20:
 340 0000 30B5     		push	{r4, r5, lr}
 341              	.LCFI4:
 342              		.cfi_def_cfa_offset 12
 343              		.cfi_offset 4, -12
 344              		.cfi_offset 5, -8
 345              		.cfi_offset 14, -4
 346 0002 83B0     		sub	sp, sp, #12
 347              	.LCFI5:
 348              		.cfi_def_cfa_offset 24
  80:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Gpu_CoCmd_Number(Ft_Esd_Host, x, y, font, options, n);
 349              		.loc 1 80 0
 350 0004 064C     		ldr	r4, .L31
 351 0006 2468     		ldr	r4, [r4]
 352 0008 069D     		ldr	r5, [sp, #24]
 353 000a 0195     		str	r5, [sp, #4]
 354 000c 0093     		str	r3, [sp]
 355 000e 1346     		mov	r3, r2
 356              	.LVL21:
 357 0010 0A46     		mov	r2, r1
 358              	.LVL22:
 359 0012 0146     		mov	r1, r0
 360              	.LVL23:
 361 0014 2046     		mov	r0, r4
 362              	.LVL24:
 363 0016 FFF7FEFF 		bl	Ft_Gpu_CoCmd_Number
 364              	.LVL25:
  81:FT_Esd_Framework/FT_Esd_Dl.c **** }
 365              		.loc 1 81 0
 366 001a 03B0     		add	sp, sp, #12
 367              	.LCFI6:
 368              		.cfi_def_cfa_offset 12
 369              		@ sp needed
 370 001c 30BD     		pop	{r4, r5, pc}
 371              	.LVL26:
 372              	.L32:
 373 001e 00BF     		.align	2
 374              	.L31:
 375 0020 00000000 		.word	Ft_Esd_Host
 376              		.cfi_endproc
 377              	.LFE23:
 379              		.section	.text.Ft_Esd_Dl_Bitmap_Setup,"ax",%progbits
 380              		.align	1
 381              		.global	Ft_Esd_Dl_Bitmap_Setup
 382              		.syntax unified
 383              		.thumb
 384              		.thumb_func
 385              		.fpu fpv5-sp-d16
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s 			page 9


 387              	Ft_Esd_Dl_Bitmap_Setup:
 388              	.LFB24:
  82:FT_Esd_Framework/FT_Esd_Dl.c **** 
  83:FT_Esd_Framework/FT_Esd_Dl.c **** ft_uint8_t Ft_Esd_Dl_Bitmap_Setup(Ft_Esd_BitmapInfo *bitmapInfo)
  84:FT_Esd_Framework/FT_Esd_Dl.c **** {
 389              		.loc 1 84 0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              	.LVL27:
 394 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 395              	.LCFI7:
 396              		.cfi_def_cfa_offset 20
 397              		.cfi_offset 4, -20
 398              		.cfi_offset 5, -16
 399              		.cfi_offset 6, -12
 400              		.cfi_offset 7, -8
 401              		.cfi_offset 14, -4
 402 0002 83B0     		sub	sp, sp, #12
 403              	.LCFI8:
 404              		.cfi_def_cfa_offset 32
 405 0004 0546     		mov	r5, r0
  85:FT_Esd_Framework/FT_Esd_Dl.c **** 	// Get bitmap address
  86:FT_Esd_Framework/FT_Esd_Dl.c **** 	uint32_t addr = Ft_Esd_LoadBitmap(bitmapInfo);
 406              		.loc 1 86 0
 407 0006 FFF7FEFF 		bl	Ft_Esd_LoadBitmap
 408              	.LVL28:
  87:FT_Esd_Framework/FT_Esd_Dl.c **** 	if (addr == ~0)
 409              		.loc 1 87 0
 410 000a B0F1FF3F 		cmp	r0, #-1
 411 000e 75D0     		beq	.L43
 412 0010 0746     		mov	r7, r0
  88:FT_Esd_Framework/FT_Esd_Dl.c **** 		return FT_ESD_BITMAPHANDLE_INVALID; // Bitmap not loaded (out of memory or file not found)
  89:FT_Esd_Framework/FT_Esd_Dl.c **** 
  90:FT_Esd_Framework/FT_Esd_Dl.c **** 	uint32_t handle = bitmapInfo->BitmapHandle;
 413              		.loc 1 90 0
 414 0012 EC69     		ldr	r4, [r5, #28]
 415              	.LVL29:
  91:FT_Esd_Framework/FT_Esd_Dl.c **** 	if (!((handle < FT_ESD_BITMAPHANDLE_NB)
 416              		.loc 1 91 0
 417 0014 0E2C     		cmp	r4, #14
 418 0016 65D8     		bhi	.L44
  92:FT_Esd_Framework/FT_Esd_Dl.c **** 		&& (Ft_Esd_BitmapHandleInfo[handle] == bitmapInfo)
 419              		.loc 1 92 0
 420 0018 394B     		ldr	r3, .L53
 421 001a 53F82430 		ldr	r3, [r3, r4, lsl #2]
 422 001e AB42     		cmp	r3, r5
 423 0020 01D0     		beq	.L49
 424 0022 0023     		movs	r3, #0
 425 0024 5FE0     		b	.L39
 426              	.L49:
  93:FT_Esd_Framework/FT_Esd_Dl.c **** 		&& (Ft_Esd_BitmapHandleGpuHandle[handle].Id == bitmapInfo->GpuHandle.Id)
 427              		.loc 1 93 0
 428 0026 374B     		ldr	r3, .L53+4
 429 0028 33F82420 		ldrh	r2, [r3, r4, lsl #2]
 430 002c 2B8B     		ldrh	r3, [r5, #24]
 431 002e 9A42     		cmp	r2, r3
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s 			page 10


 432 0030 01D0     		beq	.L50
 433 0032 0023     		movs	r3, #0
 434 0034 57E0     		b	.L39
 435              	.L50:
  94:FT_Esd_Framework/FT_Esd_Dl.c **** 		&& (Ft_Esd_BitmapHandleGpuHandle[handle].Seq == bitmapInfo->GpuHandle.Seq)))
 436              		.loc 1 94 0
 437 0036 334B     		ldr	r3, .L53+4
 438 0038 03EB8403 		add	r3, r3, r4, lsl #2
 439 003c 5A88     		ldrh	r2, [r3, #2]
 440 003e 6B8B     		ldrh	r3, [r5, #26]
  91:FT_Esd_Framework/FT_Esd_Dl.c **** 		&& (Ft_Esd_BitmapHandleInfo[handle] == bitmapInfo)
 441              		.loc 1 91 0
 442 0040 9A42     		cmp	r2, r3
 443 0042 09D0     		beq	.L36
 444 0044 0023     		movs	r3, #0
 445 0046 4EE0     		b	.L39
 446              	.LVL30:
 447              	.L52:
 448              	.LBB10:
  95:FT_Esd_Framework/FT_Esd_Dl.c **** 	{
  96:FT_Esd_Framework/FT_Esd_Dl.c **** 		// Bitmap is loaded but no handle is setup, create a new handle for this bitmap
  97:FT_Esd_Framework/FT_Esd_Dl.c **** 		// printf("Find free bitmap handle for addr %i\n", (int)addr);
  98:FT_Esd_Framework/FT_Esd_Dl.c **** 
  99:FT_Esd_Framework/FT_Esd_Dl.c **** 		// Find a free handle
 100:FT_Esd_Framework/FT_Esd_Dl.c **** 		handle = FT_ESD_BITMAPHANDLE_NB; // Fallback to scratch handle
 101:FT_Esd_Framework/FT_Esd_Dl.c **** 		for (int i = 0; i < FT_ESD_BITMAPHANDLE_NB; ++i)
 102:FT_Esd_Framework/FT_Esd_Dl.c **** 		{
 103:FT_Esd_Framework/FT_Esd_Dl.c **** 			if (!Ft_Esd_BitmapHandleUse[i])
 104:FT_Esd_Framework/FT_Esd_Dl.c **** 			{
 105:FT_Esd_Framework/FT_Esd_Dl.c **** 				// Attach this handle to the bitmap info
 106:FT_Esd_Framework/FT_Esd_Dl.c **** 				handle = i;
 107:FT_Esd_Framework/FT_Esd_Dl.c **** 				Ft_Esd_BitmapHandleInfo[i] = bitmapInfo;
 449              		.loc 1 107 0
 450 0048 2D4A     		ldr	r2, .L53
 451 004a 42F82350 		str	r5, [r2, r3, lsl #2]
 108:FT_Esd_Framework/FT_Esd_Dl.c **** 				Ft_Esd_BitmapHandleGpuHandle[i] = bitmapInfo->GpuHandle;
 452              		.loc 1 108 0
 453 004e A969     		ldr	r1, [r5, #24]
 454 0050 2C4A     		ldr	r2, .L53+4
 455 0052 42F82310 		str	r1, [r2, r3, lsl #2]
 456              	.LVL31:
 457              	.L38:
 458              	.LBE10:
 109:FT_Esd_Framework/FT_Esd_Dl.c **** 				break;
 110:FT_Esd_Framework/FT_Esd_Dl.c **** 			}
 111:FT_Esd_Framework/FT_Esd_Dl.c **** 		}
 112:FT_Esd_Framework/FT_Esd_Dl.c **** 		
 113:FT_Esd_Framework/FT_Esd_Dl.c **** 		// printf("Use handle %i, addr %i, gpu alloc %i, %i, file %s\n",
 114:FT_Esd_Framework/FT_Esd_Dl.c **** 		// 	(int)handle, (int)addr, (int)bitmapInfo->GpuHandle.Id, (int)bitmapInfo->GpuHandle.Seq,
 115:FT_Esd_Framework/FT_Esd_Dl.c **** 		// 	bitmapInfo->File ? bitmapInfo->File : "");
 116:FT_Esd_Framework/FT_Esd_Dl.c **** 
 117:FT_Esd_Framework/FT_Esd_Dl.c **** 		bitmapInfo->BitmapHandle = handle;
 459              		.loc 1 117 0
 460 0056 EC61     		str	r4, [r5, #28]
 461              	.LVL32:
 462              	.L36:
 118:FT_Esd_Framework/FT_Esd_Dl.c **** 		
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s 			page 11


 119:FT_Esd_Framework/FT_Esd_Dl.c **** 		// Setup the handle
 120:FT_Esd_Framework/FT_Esd_Dl.c **** 		// Ft_Esd_Dl_BITMAP_HANDLE(handle);
 121:FT_Esd_Framework/FT_Esd_Dl.c **** 		// Ft_Gpu_CoCmd_SetBitmap(Ft_Esd_Host, addr, bitmapInfo->Format, bitmapInfo->Width, bitmapInfo->H
 122:FT_Esd_Framework/FT_Esd_Dl.c **** 	}
 123:FT_Esd_Framework/FT_Esd_Dl.c **** 
 124:FT_Esd_Framework/FT_Esd_Dl.c **** 	// TEMPORARY WORKAROUND: SetBitmap not correctly being applied some frames... Need to check!
 125:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Esd_Dl_BITMAP_HANDLE(handle);
 463              		.loc 1 125 0
 464 0058 E6B2     		uxtb	r6, r4
 465              	.LVL33:
 466              	.LBB11:
 467              	.LBB12:
 468              		.file 2 "FT_Esd_Framework/FT_Esd_Dl.h"
   1:FT_Esd_Framework/FT_Esd_Dl.h **** 
   2:FT_Esd_Framework/FT_Esd_Dl.h **** #ifndef FT_ESD_DL_H
   3:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_DL_H
   4:FT_Esd_Framework/FT_Esd_Dl.h **** 
   5:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_DataTypes.h"
   6:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_Platform.h"
   7:FT_Esd_Framework/FT_Esd_Dl.h **** #include "Ft_Esd.h"
   8:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_Gpu.h"
   9:FT_Esd_Framework/FT_Esd_Dl.h **** #include "Ft_Esd_BitmapInfo.h"
  10:FT_Esd_Framework/FT_Esd_Dl.h **** 
  11:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_CATEGORY(EsdUtilities, DisplayName = "ESD Utilities")
  12:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_CATEGORY(EveRenderFunctions, DisplayName = "EVE Render Functions")
  13:FT_Esd_Framework/FT_Esd_Dl.h **** 
  14:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_TYPE(Ft_Gpu_Hal_Context_t *, Native = Pointer, Edit = Library)
  15:FT_Esd_Framework/FT_Esd_Dl.h **** 
  16:FT_Esd_Framework/FT_Esd_Dl.h **** // Keep cache of displaylist values that don't often change but are generally set by every widget t
  17:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_OPTIMIZE_DISPLAYLIST 1
  18:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_STATE_STACK_SIZE 5
  19:FT_Esd_Framework/FT_Esd_Dl.h **** 
  20:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_BITMAPHANDLE_INVALID 255
  21:FT_Esd_Framework/FT_Esd_Dl.h **** 
  22:FT_Esd_Framework/FT_Esd_Dl.h **** //
  23:FT_Esd_Framework/FT_Esd_Dl.h **** // Structs
  24:FT_Esd_Framework/FT_Esd_Dl.h **** //
  25:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_ESD_OPTIMIZE_DISPLAYLIST
  26:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_STATE Ft_Esd_GpuState[Ft_Esd_GpuState_I]
  27:FT_Esd_Framework/FT_Esd_Dl.h **** typedef struct
  28:FT_Esd_Framework/FT_Esd_Dl.h **** {
  29:FT_Esd_Framework/FT_Esd_Dl.h **** 	// Keep to a minimum
  30:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_81X_ENABLE
  31:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint32_t PaletteSource;
  32:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  33:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint32_t ColorRGB;
  34:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t ColorA;
  35:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t Handle;         // Current handle
  36:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t Cell;           // Current cell
  37:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_bool_t BitmapTransform; // BitmapTransform other than default is set
  38:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_81X_ENABLE
  39:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t VertexFormat;   // Current vertex format
  40:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  41:FT_Esd_Framework/FT_Esd_Dl.h **** } Ft_Esd_GpuState_T;
  42:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  43:FT_Esd_Framework/FT_Esd_Dl.h **** 
  44:FT_Esd_Framework/FT_Esd_Dl.h **** //
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s 			page 12


  45:FT_Esd_Framework/FT_Esd_Dl.h **** // Globals
  46:FT_Esd_Framework/FT_Esd_Dl.h **** //
  47:FT_Esd_Framework/FT_Esd_Dl.h **** extern Ft_Gpu_Hal_Context_t *Ft_Esd_Host;
  48:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint16_t Ft_Esd_FontHeight[32];
  49:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_ESD_OPTIMIZE_DISPLAYLIST
  50:FT_Esd_Framework/FT_Esd_Dl.h **** extern Ft_Esd_GpuState_T Ft_Esd_GpuState[FT_ESD_STATE_STACK_SIZE];
  51:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint8_t Ft_Esd_GpuState_I;
  52:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint32_t Ft_Esd_CoFgColor;
  53:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint32_t Ft_Esd_CoBgColor;
  54:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  55:FT_Esd_Framework/FT_Esd_Dl.h **** 
  56:FT_Esd_Framework/FT_Esd_Dl.h **** //Get the height of builtin font
  57:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_GetFontHeight, Type = ft_uint16_t ,DisplayName = "Get Font Height", Category = 
  58:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(i, Type = int, DisplayName = "Bitmap Handle", Default = 0, Min = 0, Max = 31)
  59:FT_Esd_Framework/FT_Esd_Dl.h **** // inline static ft_uint16_t Ft_Esd_GetFontHeight(int i) { return Ft_Esd_FontHeight[i]; }
  60:FT_Esd_Framework/FT_Esd_Dl.h **** #define Ft_Esd_GetFontHeight(i) (Ft_Esd_FontHeight[i]);
  61:FT_Esd_Framework/FT_Esd_Dl.h **** 
  62:FT_Esd_Framework/FT_Esd_Dl.h **** // Reset any cached state
  63:FT_Esd_Framework/FT_Esd_Dl.h **** void Ft_Esd_ResetGpuState();
  64:FT_Esd_Framework/FT_Esd_Dl.h **** void Ft_Esd_ResetCoState();
  65:FT_Esd_Framework/FT_Esd_Dl.h **** 
  66:FT_Esd_Framework/FT_Esd_Dl.h **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotalUsed();
  67:FT_Esd_Framework/FT_Esd_Dl.h **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotal();
  68:FT_Esd_Framework/FT_Esd_Dl.h **** 
  69:FT_Esd_Framework/FT_Esd_Dl.h **** /// Set current tag. Must be returned to 255 after usage, to ensure next widgets don't draw with in
  70:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_TAG, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  71:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(s, Type = ft_uint8_t, DisplayName = "Tag", Default = 255, Min = 0, Max = 255)
  72:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_TAG(ft_uint8_t s)
  73:FT_Esd_Framework/FT_Esd_Dl.h **** {
  74:FT_Esd_Framework/FT_Esd_Dl.h **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, TAG(s));
  75:FT_Esd_Framework/FT_Esd_Dl.h **** }
  76:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify color RGB
  77:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_RGB, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  78:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(c, Type = ft_rgb32_t, DisplayName = "Color")
  79:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_RGB(ft_rgb32_t c)
  80:FT_Esd_Framework/FT_Esd_Dl.h **** {
  81:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  82:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_rgb32_t rgb = c & 0xFFFFFF;
  83:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (rgb != FT_ESD_STATE.ColorRGB)
  84:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
  85:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  86:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, (4UL << 24) | (rgb));
  87:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  88:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.ColorRGB = rgb;
  89:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
  90:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  91:FT_Esd_Framework/FT_Esd_Dl.h **** }
  92:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify alpha channel
  93:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_A, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  94:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(alpha, Type = ft_uint8_t, Default = 255, Min = 0, Max = 255)
  95:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_A(ft_uint8_t alpha)
  96:FT_Esd_Framework/FT_Esd_Dl.h **** {
  97:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  98:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (alpha != FT_ESD_STATE.ColorA)
  99:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
 100:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 101:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, COLOR_A(alpha));
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s 			page 13


 102:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 103:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.ColorA = alpha;
 104:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
 105:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 106:FT_Esd_Framework/FT_Esd_Dl.h **** }
 107:FT_Esd_Framework/FT_Esd_Dl.h **** 
 108:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify color: Alpha(31~24 bit) + RGB(23~0 bit)
 109:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_ARGB, Type = ft_void_t, Category = EveRenderFunctions, Inline)
 110:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(c, Type = ft_argb32_t, DisplayName = "Color")
 111:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_ARGB(ft_uint32_t c)
 112:FT_Esd_Framework/FT_Esd_Dl.h **** {
 113:FT_Esd_Framework/FT_Esd_Dl.h **** 	Ft_Esd_Dl_COLOR_RGB(c);
 114:FT_Esd_Framework/FT_Esd_Dl.h **** 	Ft_Esd_Dl_COLOR_A(c >> 24);
 115:FT_Esd_Framework/FT_Esd_Dl.h **** }
 116:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify bitmap handle, see BITMAP_HANDLE
 117:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_BITMAP_HANDLE, Type = ft_void_t, Category = EveRenderFunctions, Inline)
 118:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(handle, Type = ft_uint8_t, Min = 0, Max = 31)
 119:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_BITMAP_HANDLE(ft_uint8_t handle)
 120:FT_Esd_Framework/FT_Esd_Dl.h **** {
 121:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 122:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (handle != FT_ESD_STATE.Handle)
 469              		.loc 2 122 0
 470 005a 2B4B     		ldr	r3, .L53+8
 471 005c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 472 005e 2B4B     		ldr	r3, .L53+12
 473 0060 03EB0213 		add	r3, r3, r2, lsl #4
 474 0064 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 475 0066 9E42     		cmp	r6, r3
 476 0068 0DD0     		beq	.L41
 123:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
 124:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 125:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, BITMAP_HANDLE(handle));
 477              		.loc 2 125 0
 478 006a 06F01F01 		and	r1, r6, #31
 479 006e 41F0A061 		orr	r1, r1, #83886080
 480 0072 274B     		ldr	r3, .L53+16
 481 0074 1868     		ldr	r0, [r3]
 482              	.LVL34:
 483 0076 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 484              	.LVL35:
 126:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 127:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.Handle = handle;
 485              		.loc 2 127 0
 486 007a 234B     		ldr	r3, .L53+8
 487 007c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 488 007e 234B     		ldr	r3, .L53+12
 489 0080 03EB0213 		add	r3, r3, r2, lsl #4
 490 0084 5E72     		strb	r6, [r3, #9]
 491              	.L41:
 492              	.LVL36:
 493              	.LBE12:
 494              	.LBE11:
 126:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Gpu_CoCmd_SetBitmap(Ft_Esd_Host, addr, bitmapInfo->Format, bitmapInfo->Width, bitmapInfo->Heigh
 495              		.loc 1 126 0
 496 0086 2B88     		ldrh	r3, [r5]
 497 0088 AA89     		ldrh	r2, [r5, #12]
 498 008a 2149     		ldr	r1, .L53+16
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s 			page 14


 499 008c 0868     		ldr	r0, [r1]
 500 008e A988     		ldrh	r1, [r5, #4]
 501 0090 0091     		str	r1, [sp]
 502 0092 3946     		mov	r1, r7
 503 0094 FFF7FEFF 		bl	Ft_Gpu_CoCmd_SetBitmap
 504              	.LVL37:
 127:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Esd_BitmapHandleResized[handle] = 0;
 505              		.loc 1 127 0
 506 0098 1E4B     		ldr	r3, .L53+20
 507 009a 0022     		movs	r2, #0
 508 009c 1A55     		strb	r2, [r3, r4]
 128:FT_Esd_Framework/FT_Esd_Dl.c **** 
 129:FT_Esd_Framework/FT_Esd_Dl.c **** 	if (handle < FT_ESD_BITMAPHANDLE_NB) // When valid and not using scratch handle
 509              		.loc 1 129 0
 510 009e 0E2C     		cmp	r4, #14
 511 00a0 02D8     		bhi	.L42
 130:FT_Esd_Framework/FT_Esd_Dl.c **** 	{
 131:FT_Esd_Framework/FT_Esd_Dl.c **** 		Ft_Esd_BitmapHandleUse[handle] = 2; // In use
 512              		.loc 1 131 0
 513 00a2 1D4B     		ldr	r3, .L53+24
 514 00a4 0222     		movs	r2, #2
 515 00a6 1A55     		strb	r2, [r3, r4]
 516              	.L42:
 132:FT_Esd_Framework/FT_Esd_Dl.c **** 	}
 133:FT_Esd_Framework/FT_Esd_Dl.c **** 
 134:FT_Esd_Framework/FT_Esd_Dl.c **** 	// Use palette if available
 135:FT_Esd_Framework/FT_Esd_Dl.c **** 	ft_uint32_t paletteAddr = Ft_Esd_LoadPalette(bitmapInfo);
 517              		.loc 1 135 0
 518 00a8 2846     		mov	r0, r5
 519 00aa FFF7FEFF 		bl	Ft_Esd_LoadPalette
 520              	.LVL38:
 521 00ae 0446     		mov	r4, r0
 522              	.LVL39:
 136:FT_Esd_Framework/FT_Esd_Dl.c **** 	if (paletteAddr != ~0)
 523              		.loc 1 136 0
 524 00b0 B0F1FF3F 		cmp	r0, #-1
 525 00b4 13D0     		beq	.L34
 526              	.LVL40:
 527              	.LBB13:
 528              	.LBB14:
 128:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
 129:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 130:FT_Esd_Framework/FT_Esd_Dl.h **** }
 131:FT_Esd_Framework/FT_Esd_Dl.h **** 
 132:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify cell number for bitmap, see CELL 
 133:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_CELL, Type = ft_void_t, Category = EveRenderFunctions, Inline)
 134:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(cell, Type = ft_uint8_t, Min = 0, Max = 255)
 135:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_CELL(ft_uint8_t cell)
 136:FT_Esd_Framework/FT_Esd_Dl.h **** {
 137:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 138:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (cell != FT_ESD_STATE.Cell)
 139:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
 140:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 141:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, CELL(cell));
 142:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 143:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.Cell = cell;
 144:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s 			page 15


 145:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 146:FT_Esd_Framework/FT_Esd_Dl.h **** }
 147:FT_Esd_Framework/FT_Esd_Dl.h **** //Save EVE context, see SAVE_CONTEXT
 148:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_SAVE_CONTEXT, Type = ft_void_t, Category = EveRenderFunctions, Inline)
 149:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_SAVE_CONTEXT()
 150:FT_Esd_Framework/FT_Esd_Dl.h **** {
 151:FT_Esd_Framework/FT_Esd_Dl.h **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, SAVE_CONTEXT());
 152:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 153:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t nextState = Ft_Esd_GpuState_I + 1;
 154:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (nextState < FT_ESD_STATE_STACK_SIZE)
 155:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
 156:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Esd_GpuState[nextState] = Ft_Esd_GpuState[Ft_Esd_GpuState_I];
 157:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Esd_GpuState_I = nextState;
 158:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
 159:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 160:FT_Esd_Framework/FT_Esd_Dl.h **** }
 161:FT_Esd_Framework/FT_Esd_Dl.h **** //Restore EVE context, see RESTORE_CONTEXT
 162:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_RESTORE_CONTEXT, Type = ft_void_t, Category = EveRenderFunctions, Inline)
 163:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_RESTORE_CONTEXT()
 164:FT_Esd_Framework/FT_Esd_Dl.h **** {
 165:FT_Esd_Framework/FT_Esd_Dl.h **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, RESTORE_CONTEXT());
 166:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 167:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (Ft_Esd_GpuState_I > 0)
 168:FT_Esd_Framework/FT_Esd_Dl.h **** 		--Ft_Esd_GpuState_I;
 169:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 170:FT_Esd_Framework/FT_Esd_Dl.h **** }
 171:FT_Esd_Framework/FT_Esd_Dl.h **** 
 172:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify vertex format , see VERTEX_FORMAT command
 173:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_VERTEX_FORMAT, Type = ft_void_t, Category = EveRenderFunctions, Inline)
 174:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(frac, Type = ft_uint8_t, Min = 0, Max = 4)
 175:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_VERTEX_FORMAT(ft_uint8_t frac)
 176:FT_Esd_Framework/FT_Esd_Dl.h **** {
 177:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 178:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (frac != FT_ESD_STATE.VertexFormat)
 179:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
 180:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 181:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, VERTEX_FORMAT(frac));
 182:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 183:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.VertexFormat = frac;
 184:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
 185:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 186:FT_Esd_Framework/FT_Esd_Dl.h **** }
 187:FT_Esd_Framework/FT_Esd_Dl.h **** 
 188:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify vertex format , see VERTEX_FORMAT command
 189:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_PALETTE_SOURCE, Type = ft_void_t, Category = EveRenderFunctions, Inline)
 190:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(addr, Type = ft_uint32_t, Min = 0)
 191:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_PALETTE_SOURCE(ft_uint32_t addr)
 192:FT_Esd_Framework/FT_Esd_Dl.h **** {
 193:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 194:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (addr != FT_ESD_STATE.PaletteSource)
 529              		.loc 2 194 0
 530 00b6 144B     		ldr	r3, .L53+8
 531 00b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 532 00ba 1B01     		lsls	r3, r3, #4
 533 00bc 134A     		ldr	r2, .L53+12
 534 00be D358     		ldr	r3, [r2, r3]
 535 00c0 9842     		cmp	r0, r3
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s 			page 16


 536 00c2 0CD0     		beq	.L34
 195:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
 196:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 197:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, PALETTE_SOURCE(addr));
 537              		.loc 2 197 0
 538 00c4 C0F31501 		ubfx	r1, r0, #0, #22
 539 00c8 41F02851 		orr	r1, r1, #704643072
 540 00cc 104B     		ldr	r3, .L53+16
 541 00ce 1868     		ldr	r0, [r3]
 542              	.LVL41:
 543 00d0 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 544              	.LVL42:
 198:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 199:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.PaletteSource = addr;
 545              		.loc 2 199 0
 546 00d4 0C4B     		ldr	r3, .L53+8
 547 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 548 00d8 1B01     		lsls	r3, r3, #4
 549 00da 0C4A     		ldr	r2, .L53+12
 550 00dc D450     		str	r4, [r2, r3]
 551              	.LVL43:
 552              	.L34:
 553              	.LBE14:
 554              	.LBE13:
 137:FT_Esd_Framework/FT_Esd_Dl.c **** 	{
 138:FT_Esd_Framework/FT_Esd_Dl.c **** 		Ft_Esd_Dl_PALETTE_SOURCE(paletteAddr);
 139:FT_Esd_Framework/FT_Esd_Dl.c **** 	}
 140:FT_Esd_Framework/FT_Esd_Dl.c **** 
 141:FT_Esd_Framework/FT_Esd_Dl.c **** 	return handle;
 142:FT_Esd_Framework/FT_Esd_Dl.c **** }
 555              		.loc 1 142 0
 556 00de 3046     		mov	r0, r6
 557 00e0 03B0     		add	sp, sp, #12
 558              	.LCFI9:
 559              		.cfi_remember_state
 560              		.cfi_def_cfa_offset 20
 561              		@ sp needed
 562 00e2 F0BD     		pop	{r4, r5, r6, r7, pc}
 563              	.LVL44:
 564              	.L44:
 565              	.LCFI10:
 566              		.cfi_restore_state
 567 00e4 0023     		movs	r3, #0
 568              	.LVL45:
 569              	.L39:
 570              	.LBB15:
 101:FT_Esd_Framework/FT_Esd_Dl.c **** 		{
 571              		.loc 1 101 0 discriminator 1
 572 00e6 1C46     		mov	r4, r3
 573 00e8 0E2B     		cmp	r3, #14
 574 00ea 05D8     		bhi	.L51
 103:FT_Esd_Framework/FT_Esd_Dl.c **** 			{
 575              		.loc 1 103 0
 576 00ec 0A4A     		ldr	r2, .L53+24
 577 00ee D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 578 00f0 002A     		cmp	r2, #0
 579 00f2 A9D0     		beq	.L52
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s 			page 17


 101:FT_Esd_Framework/FT_Esd_Dl.c **** 		{
 580              		.loc 1 101 0 discriminator 2
 581 00f4 0133     		adds	r3, r3, #1
 582              	.LVL46:
 583 00f6 F6E7     		b	.L39
 584              	.L51:
 585              	.LBE15:
 100:FT_Esd_Framework/FT_Esd_Dl.c **** 		for (int i = 0; i < FT_ESD_BITMAPHANDLE_NB; ++i)
 586              		.loc 1 100 0
 587 00f8 0F24     		movs	r4, #15
 588 00fa ACE7     		b	.L38
 589              	.LVL47:
 590              	.L43:
  88:FT_Esd_Framework/FT_Esd_Dl.c **** 
 591              		.loc 1 88 0
 592 00fc FF26     		movs	r6, #255
 593 00fe EEE7     		b	.L34
 594              	.L54:
 595              		.align	2
 596              	.L53:
 597 0100 00000000 		.word	.LANCHOR1
 598 0104 00000000 		.word	.LANCHOR2
 599 0108 00000000 		.word	Ft_Esd_GpuState_I
 600 010c 00000000 		.word	Ft_Esd_GpuState
 601 0110 00000000 		.word	Ft_Esd_Host
 602 0114 00000000 		.word	.LANCHOR3
 603 0118 00000000 		.word	.LANCHOR0
 604              		.cfi_endproc
 605              	.LFE24:
 607              		.section	.text.Ft_Esd_Dl_Bitmap_WidthHeight,"ax",%progbits
 608              		.align	1
 609              		.global	Ft_Esd_Dl_Bitmap_WidthHeight
 610              		.syntax unified
 611              		.thumb
 612              		.thumb_func
 613              		.fpu fpv5-sp-d16
 615              	Ft_Esd_Dl_Bitmap_WidthHeight:
 616              	.LFB25:
 143:FT_Esd_Framework/FT_Esd_Dl.c **** 
 144:FT_Esd_Framework/FT_Esd_Dl.c **** void Ft_Esd_Dl_Bitmap_WidthHeight(ft_uint8_t handle, ft_uint16_t width, ft_uint16_t height)
 145:FT_Esd_Framework/FT_Esd_Dl.c **** {
 617              		.loc 1 145 0
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 0
 620              		@ frame_needed = 0, uses_anonymous_args = 0
 621              	.LVL48:
 622 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 623              	.LCFI11:
 624              		.cfi_def_cfa_offset 24
 625              		.cfi_offset 3, -24
 626              		.cfi_offset 4, -20
 627              		.cfi_offset 5, -16
 628              		.cfi_offset 6, -12
 629              		.cfi_offset 7, -8
 630              		.cfi_offset 14, -4
 631 0002 0546     		mov	r5, r0
 632 0004 0C46     		mov	r4, r1
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s 			page 18


 633 0006 1746     		mov	r7, r2
 634              	.LVL49:
 635              	.LBB18:
 636              	.LBB19:
 122:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
 637              		.loc 2 122 0
 638 0008 184B     		ldr	r3, .L58
 639 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 640              	.LVL50:
 641 000c 184B     		ldr	r3, .L58+4
 642 000e 03EB0213 		add	r3, r3, r2, lsl #4
 643 0012 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 644 0014 9842     		cmp	r0, r3
 645 0016 0DD0     		beq	.L56
 125:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 646              		.loc 2 125 0
 647 0018 00F01F01 		and	r1, r0, #31
 648              	.LVL51:
 649 001c 41F0A061 		orr	r1, r1, #83886080
 650 0020 144B     		ldr	r3, .L58+8
 651 0022 1868     		ldr	r0, [r3]
 652              	.LVL52:
 653 0024 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 654              	.LVL53:
 127:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
 655              		.loc 2 127 0
 656 0028 104B     		ldr	r3, .L58
 657 002a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 658 002c 104B     		ldr	r3, .L58+4
 659 002e 03EB0213 		add	r3, r3, r2, lsl #4
 660 0032 5D72     		strb	r5, [r3, #9]
 661              	.L56:
 662              	.LVL54:
 663              	.LBE19:
 664              	.LBE18:
 146:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Esd_Dl_BITMAP_HANDLE(handle);
 147:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, BITMAP_SIZE(NEAREST, BORDER, BORDER, width & 0x1ff, height & 0x1ff
 665              		.loc 1 147 0
 666 0034 1049     		ldr	r1, .L58+12
 667 0036 01EA4421 		and	r1, r1, r4, lsl #9
 668 003a C7F30803 		ubfx	r3, r7, #0, #9
 669 003e 1943     		orrs	r1, r1, r3
 670 0040 0C4E     		ldr	r6, .L58+8
 671 0042 41F00061 		orr	r1, r1, #134217728
 672 0046 3068     		ldr	r0, [r6]
 673 0048 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 674              	.LVL55:
 148:FT_Esd_Framework/FT_Esd_Dl.c **** #ifdef FT_81X_ENABLE
 149:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, BITMAP_SIZE_H(width >> 9, height >> 9));
 675              		.loc 1 149 0
 676 004c 610A     		lsrs	r1, r4, #9
 677 004e 8900     		lsls	r1, r1, #2
 678 0050 01F00C01 		and	r1, r1, #12
 679 0054 C7F34127 		ubfx	r7, r7, #9, #2
 680 0058 3943     		orrs	r1, r1, r7
 681 005a 41F02451 		orr	r1, r1, #687865856
 682 005e 3068     		ldr	r0, [r6]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s 			page 19


 683 0060 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 684              	.LVL56:
 150:FT_Esd_Framework/FT_Esd_Dl.c **** #endif
 151:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Esd_BitmapHandleResized[handle] = 1;
 685              		.loc 1 151 0
 686 0064 054B     		ldr	r3, .L58+16
 687 0066 0122     		movs	r2, #1
 688 0068 5A55     		strb	r2, [r3, r5]
 152:FT_Esd_Framework/FT_Esd_Dl.c **** }
 689              		.loc 1 152 0
 690 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 691              	.L59:
 692              		.align	2
 693              	.L58:
 694 006c 00000000 		.word	Ft_Esd_GpuState_I
 695 0070 00000000 		.word	Ft_Esd_GpuState
 696 0074 00000000 		.word	Ft_Esd_Host
 697 0078 00FE0300 		.word	261632
 698 007c 00000000 		.word	.LANCHOR3
 699              		.cfi_endproc
 700              	.LFE25:
 702              		.section	.text.Ft_Esd_Dl_Bitmap_WidthHeight_BILINEAR,"ax",%progbits
 703              		.align	1
 704              		.global	Ft_Esd_Dl_Bitmap_WidthHeight_BILINEAR
 705              		.syntax unified
 706              		.thumb
 707              		.thumb_func
 708              		.fpu fpv5-sp-d16
 710              	Ft_Esd_Dl_Bitmap_WidthHeight_BILINEAR:
 711              	.LFB26:
 153:FT_Esd_Framework/FT_Esd_Dl.c **** 
 154:FT_Esd_Framework/FT_Esd_Dl.c **** void Ft_Esd_Dl_Bitmap_WidthHeight_BILINEAR(ft_uint8_t handle, ft_uint16_t width, ft_uint16_t height
 155:FT_Esd_Framework/FT_Esd_Dl.c **** {
 712              		.loc 1 155 0
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 0
 715              		@ frame_needed = 0, uses_anonymous_args = 0
 716              	.LVL57:
 717 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 718              	.LCFI12:
 719              		.cfi_def_cfa_offset 24
 720              		.cfi_offset 3, -24
 721              		.cfi_offset 4, -20
 722              		.cfi_offset 5, -16
 723              		.cfi_offset 6, -12
 724              		.cfi_offset 7, -8
 725              		.cfi_offset 14, -4
 726 0002 0546     		mov	r5, r0
 727 0004 0C46     		mov	r4, r1
 728 0006 1746     		mov	r7, r2
 729              	.LVL58:
 730              	.LBB22:
 731              	.LBB23:
 122:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
 732              		.loc 2 122 0
 733 0008 184B     		ldr	r3, .L63
 734 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s 			page 20


 735              	.LVL59:
 736 000c 184B     		ldr	r3, .L63+4
 737 000e 03EB0213 		add	r3, r3, r2, lsl #4
 738 0012 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 739 0014 9842     		cmp	r0, r3
 740 0016 0DD0     		beq	.L61
 125:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 741              		.loc 2 125 0
 742 0018 00F01F01 		and	r1, r0, #31
 743              	.LVL60:
 744 001c 41F0A061 		orr	r1, r1, #83886080
 745 0020 144B     		ldr	r3, .L63+8
 746 0022 1868     		ldr	r0, [r3]
 747              	.LVL61:
 748 0024 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 749              	.LVL62:
 127:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
 750              		.loc 2 127 0
 751 0028 104B     		ldr	r3, .L63
 752 002a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 753 002c 104B     		ldr	r3, .L63+4
 754 002e 03EB0213 		add	r3, r3, r2, lsl #4
 755 0032 5D72     		strb	r5, [r3, #9]
 756              	.L61:
 757              	.LVL63:
 758              	.LBE23:
 759              	.LBE22:
 156:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Esd_Dl_BITMAP_HANDLE(handle);
 157:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, BITMAP_SIZE(BILINEAR, BORDER, BORDER, width & 0x1ff, height & 0x1f
 760              		.loc 1 157 0
 761 0034 1049     		ldr	r1, .L63+12
 762 0036 01EA4421 		and	r1, r1, r4, lsl #9
 763 003a C7F30803 		ubfx	r3, r7, #0, #9
 764 003e 1943     		orrs	r1, r1, r3
 765 0040 0C4E     		ldr	r6, .L63+8
 766 0042 41F00161 		orr	r1, r1, #135266304
 767 0046 3068     		ldr	r0, [r6]
 768 0048 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 769              	.LVL64:
 158:FT_Esd_Framework/FT_Esd_Dl.c **** #ifdef FT_81X_ENABLE
 159:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, BITMAP_SIZE_H(width >> 9, height >> 9));
 770              		.loc 1 159 0
 771 004c 610A     		lsrs	r1, r4, #9
 772 004e 8900     		lsls	r1, r1, #2
 773 0050 01F00C01 		and	r1, r1, #12
 774 0054 C7F34127 		ubfx	r7, r7, #9, #2
 775 0058 3943     		orrs	r1, r1, r7
 776 005a 41F02451 		orr	r1, r1, #687865856
 777 005e 3068     		ldr	r0, [r6]
 778 0060 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 779              	.LVL65:
 160:FT_Esd_Framework/FT_Esd_Dl.c **** #endif
 161:FT_Esd_Framework/FT_Esd_Dl.c **** 	Ft_Esd_BitmapHandleResized[handle] = 1;
 780              		.loc 1 161 0
 781 0064 054B     		ldr	r3, .L63+16
 782 0066 0122     		movs	r2, #1
 783 0068 5A55     		strb	r2, [r3, r5]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s 			page 21


 162:FT_Esd_Framework/FT_Esd_Dl.c **** }
 784              		.loc 1 162 0
 785 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 786              	.L64:
 787              		.align	2
 788              	.L63:
 789 006c 00000000 		.word	Ft_Esd_GpuState_I
 790 0070 00000000 		.word	Ft_Esd_GpuState
 791 0074 00000000 		.word	Ft_Esd_Host
 792 0078 00FE0300 		.word	261632
 793 007c 00000000 		.word	.LANCHOR3
 794              		.cfi_endproc
 795              	.LFE26:
 797              		.section	.text.Ft_Esd_Dl_Bitmap_WidthHeightReset,"ax",%progbits
 798              		.align	1
 799              		.global	Ft_Esd_Dl_Bitmap_WidthHeightReset
 800              		.syntax unified
 801              		.thumb
 802              		.thumb_func
 803              		.fpu fpv5-sp-d16
 805              	Ft_Esd_Dl_Bitmap_WidthHeightReset:
 806              	.LFB27:
 163:FT_Esd_Framework/FT_Esd_Dl.c **** 
 164:FT_Esd_Framework/FT_Esd_Dl.c **** void Ft_Esd_Dl_Bitmap_WidthHeightReset(ft_uint8_t handle)
 165:FT_Esd_Framework/FT_Esd_Dl.c **** {
 807              		.loc 1 165 0
 808              		.cfi_startproc
 809              		@ args = 0, pretend = 0, frame = 0
 810              		@ frame_needed = 0, uses_anonymous_args = 0
 811              	.LVL66:
 166:FT_Esd_Framework/FT_Esd_Dl.c **** 	if (Ft_Esd_BitmapHandleResized[handle])
 812              		.loc 1 166 0
 813 0000 084B     		ldr	r3, .L72
 814 0002 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 815 0004 03B9     		cbnz	r3, .L71
 816 0006 7047     		bx	lr
 817              	.L71:
 165:FT_Esd_Framework/FT_Esd_Dl.c **** 	if (Ft_Esd_BitmapHandleResized[handle])
 818              		.loc 1 165 0
 819 0008 10B5     		push	{r4, lr}
 820              	.LCFI13:
 821              		.cfi_def_cfa_offset 8
 822              		.cfi_offset 4, -8
 823              		.cfi_offset 14, -4
 824 000a 0446     		mov	r4, r0
 825              	.LBB24:
 167:FT_Esd_Framework/FT_Esd_Dl.c **** 	{
 168:FT_Esd_Framework/FT_Esd_Dl.c **** 		Ft_Esd_BitmapInfo *bitmapInfo = Ft_Esd_BitmapHandleInfo[handle];
 826              		.loc 1 168 0
 827 000c 064B     		ldr	r3, .L72+4
 828 000e 53F82030 		ldr	r3, [r3, r0, lsl #2]
 829              	.LVL67:
 169:FT_Esd_Framework/FT_Esd_Dl.c **** 		Ft_Esd_Dl_Bitmap_WidthHeight(handle, bitmapInfo->Width, bitmapInfo->Height);
 830              		.loc 1 169 0
 831 0012 9A88     		ldrh	r2, [r3, #4]
 832 0014 1988     		ldrh	r1, [r3]
 833 0016 FFF7FEFF 		bl	Ft_Esd_Dl_Bitmap_WidthHeight
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s 			page 22


 834              	.LVL68:
 170:FT_Esd_Framework/FT_Esd_Dl.c **** 		Ft_Esd_BitmapHandleResized[handle] = 0;
 835              		.loc 1 170 0
 836 001a 024B     		ldr	r3, .L72
 837 001c 0022     		movs	r2, #0
 838 001e 1A55     		strb	r2, [r3, r4]
 839              	.LBE24:
 171:FT_Esd_Framework/FT_Esd_Dl.c **** 	}
 172:FT_Esd_Framework/FT_Esd_Dl.c **** }
 840              		.loc 1 172 0
 841 0020 10BD     		pop	{r4, pc}
 842              	.L73:
 843 0022 00BF     		.align	2
 844              	.L72:
 845 0024 00000000 		.word	.LANCHOR3
 846 0028 00000000 		.word	.LANCHOR1
 847              		.cfi_endproc
 848              	.LFE27:
 850              		.global	Ft_Esd_BitmapHandleResized
 851              		.global	Ft_Esd_BitmapHandleUse
 852              		.global	Ft_Esd_BitmapHandleGpuHandle
 853              		.global	Ft_Esd_BitmapHandleInfo
 854              		.comm	Ft_Esd_CoBgColor,4,4
 855              		.comm	Ft_Esd_CoFgColor,4,4
 856              		.comm	Ft_Esd_GpuState_I,1,1
 857              		.comm	Ft_Esd_GpuState,80,4
 858              		.section	.bss.Ft_Esd_BitmapHandleGpuHandle,"aw",%nobits
 859              		.align	2
 860              		.set	.LANCHOR2,. + 0
 863              	Ft_Esd_BitmapHandleGpuHandle:
 864 0000 00000000 		.space	60
 864      00000000 
 864      00000000 
 864      00000000 
 864      00000000 
 865              		.section	.bss.Ft_Esd_BitmapHandleInfo,"aw",%nobits
 866              		.align	2
 867              		.set	.LANCHOR1,. + 0
 870              	Ft_Esd_BitmapHandleInfo:
 871 0000 00000000 		.space	60
 871      00000000 
 871      00000000 
 871      00000000 
 871      00000000 
 872              		.section	.bss.Ft_Esd_BitmapHandleResized,"aw",%nobits
 873              		.align	2
 874              		.set	.LANCHOR3,. + 0
 877              	Ft_Esd_BitmapHandleResized:
 878 0000 00000000 		.space	15
 878      00000000 
 878      00000000 
 878      000000
 879              		.section	.bss.Ft_Esd_BitmapHandleUse,"aw",%nobits
 880              		.align	2
 881              		.set	.LANCHOR0,. + 0
 884              	Ft_Esd_BitmapHandleUse:
 885 0000 00000000 		.space	15
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s 			page 23


 885      00000000 
 885      00000000 
 885      000000
 886              		.text
 887              	.Letext0:
 888              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/machine/_default_types
 889              		.file 4 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/lock.h"
 890              		.file 5 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_types.h"
 891              		.file 6 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 892              		.file 7 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_stdint.h"
 893              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/unistd.h"
 894              		.file 9 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/reent.h"
 895              		.file 10 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/stdlib.h"
 896              		.file 11 "FT_Eve_Hal/FT_DataTypes.h"
 897              		.file 12 "FT_Eve_Hal/FT_Gpu_Hal.h"
 898              		.file 13 "FT_Esd_Framework/Ft_Esd_GpuAlloc.h"
 899              		.file 14 "FT_Esd_Framework/Ft_Esd_BitmapInfo.h"
 900              		.file 15 "FT_Eve_Hal/FT_CoPro_Cmds.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 FT_Esd_Dl.c
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:18     .text.Ft_Esd_ResetGpuState:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:25     .text.Ft_Esd_ResetGpuState:0000000000000000 Ft_Esd_ResetGpuState
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:83     .text.Ft_Esd_ResetGpuState:000000000000003c $d
                            *COM*:0000000000000001 Ft_Esd_GpuState_I
                            *COM*:0000000000000050 Ft_Esd_GpuState
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:90     .text.Ft_Esd_ResetCoState:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:97     .text.Ft_Esd_ResetCoState:0000000000000000 Ft_Esd_ResetCoState
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:117    .text.Ft_Esd_ResetCoState:0000000000000014 $d
                            *COM*:0000000000000004 Ft_Esd_CoFgColor
                            *COM*:0000000000000004 Ft_Esd_CoBgColor
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:123    .text.Ft_Esd_BitmapHandle_GetTotalUsed:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:130    .text.Ft_Esd_BitmapHandle_GetTotalUsed:0000000000000000 Ft_Esd_BitmapHandle_GetTotalUsed
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:172    .text.Ft_Esd_BitmapHandle_GetTotalUsed:000000000000001c $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:177    .text.Ft_Esd_BitmapHandle_GetTotal:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:184    .text.Ft_Esd_BitmapHandle_GetTotal:0000000000000000 Ft_Esd_BitmapHandle_GetTotal
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:198    .text.FT_Esd_Render_Rect:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:205    .text.FT_Esd_Render_Rect:0000000000000000 FT_Esd_Render_Rect
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:260    .text.FT_Esd_Render_Rect:0000000000000050 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:268    .text.Ft_Esd_Cmd_Button:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:275    .text.Ft_Esd_Cmd_Button:0000000000000000 Ft_Esd_Cmd_Button
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:321    .text.Ft_Esd_Cmd_Button:000000000000002c $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:326    .text.Ft_Esd_Cmd_Number:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:333    .text.Ft_Esd_Cmd_Number:0000000000000000 Ft_Esd_Cmd_Number
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:375    .text.Ft_Esd_Cmd_Number:0000000000000020 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:380    .text.Ft_Esd_Dl_Bitmap_Setup:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:387    .text.Ft_Esd_Dl_Bitmap_Setup:0000000000000000 Ft_Esd_Dl_Bitmap_Setup
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:597    .text.Ft_Esd_Dl_Bitmap_Setup:0000000000000100 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:608    .text.Ft_Esd_Dl_Bitmap_WidthHeight:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:615    .text.Ft_Esd_Dl_Bitmap_WidthHeight:0000000000000000 Ft_Esd_Dl_Bitmap_WidthHeight
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:694    .text.Ft_Esd_Dl_Bitmap_WidthHeight:000000000000006c $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:703    .text.Ft_Esd_Dl_Bitmap_WidthHeight_BILINEAR:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:710    .text.Ft_Esd_Dl_Bitmap_WidthHeight_BILINEAR:0000000000000000 Ft_Esd_Dl_Bitmap_WidthHeight_BILINEAR
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:789    .text.Ft_Esd_Dl_Bitmap_WidthHeight_BILINEAR:000000000000006c $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:798    .text.Ft_Esd_Dl_Bitmap_WidthHeightReset:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:805    .text.Ft_Esd_Dl_Bitmap_WidthHeightReset:0000000000000000 Ft_Esd_Dl_Bitmap_WidthHeightReset
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:845    .text.Ft_Esd_Dl_Bitmap_WidthHeightReset:0000000000000024 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:877    .bss.Ft_Esd_BitmapHandleResized:0000000000000000 Ft_Esd_BitmapHandleResized
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:884    .bss.Ft_Esd_BitmapHandleUse:0000000000000000 Ft_Esd_BitmapHandleUse
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:863    .bss.Ft_Esd_BitmapHandleGpuHandle:0000000000000000 Ft_Esd_BitmapHandleGpuHandle
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:870    .bss.Ft_Esd_BitmapHandleInfo:0000000000000000 Ft_Esd_BitmapHandleInfo
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:859    .bss.Ft_Esd_BitmapHandleGpuHandle:0000000000000000 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:866    .bss.Ft_Esd_BitmapHandleInfo:0000000000000000 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:873    .bss.Ft_Esd_BitmapHandleResized:0000000000000000 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccU36ww2.s:880    .bss.Ft_Esd_BitmapHandleUse:0000000000000000 $d

UNDEFINED SYMBOLS
Ft_Gpu_Hal_WrCmd32
Ft_Esd_Host
Ft_Gpu_CoCmd_Button
Ft_Gpu_CoCmd_Number
Ft_Esd_LoadBitmap
Ft_Gpu_CoCmd_SetBitmap
Ft_Esd_LoadPalette
