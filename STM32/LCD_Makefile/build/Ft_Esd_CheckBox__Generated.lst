ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"Ft_Esd_CheckBox__Generated.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Ft_Esd_CheckBox_Font__Default,"ax",%progbits
  18              		.align	1
  19              		.global	Ft_Esd_CheckBox_Font__Default
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-sp-d16
  25              	Ft_Esd_CheckBox_Font__Default:
  26              	.LFB31:
  27              		.file 1 "FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c"
   1:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** /*
   2:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** This file is automatically generated
   3:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** Ft_Esd_CheckBox
   4:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** C Source
   5:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** */
   6:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
   7:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** #include "Ft_Esd_CheckBox.h"
   8:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
   9:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** #include "FT_Esd_Dl.h"
  10:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** #include "FT_Esd_Primitives.h"
  11:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** #include "Ft_Esd_Elements.h"
  12:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
  13:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** extern void Ft_Esd_Noop(void *context);
  14:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** Ft_Esd_Theme * Ft_Esd_CheckBox_Theme__Default(void *context) { return Ft_Esd_Theme_GetCurrent(); }
  15:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** ft_uint8_t Ft_Esd_CheckBox_Font__Default(void *context) { return 27; }
  28              		.loc 1 15 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              		.loc 1 15 0
  35 0000 1B20     		movs	r0, #27
  36              	.LVL1:
  37 0002 7047     		bx	lr
  38              		.cfi_endproc
  39              	.LFE31:
  41              		.section	.text.Ft_Esd_CheckBox_X__Default,"ax",%progbits
  42              		.align	1
  43              		.global	Ft_Esd_CheckBox_X__Default
  44              		.syntax unified
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 2


  45              		.thumb
  46              		.thumb_func
  47              		.fpu fpv5-sp-d16
  49              	Ft_Esd_CheckBox_X__Default:
  50              	.LFB32:
  16:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** int Ft_Esd_CheckBox_X__Default(void *context) { return 0L; }
  51              		.loc 1 16 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56              	.LVL2:
  57              		.loc 1 16 0
  58 0000 0020     		movs	r0, #0
  59              	.LVL3:
  60 0002 7047     		bx	lr
  61              		.cfi_endproc
  62              	.LFE32:
  64              		.section	.text.Ft_Esd_CheckBox_Y__Default,"ax",%progbits
  65              		.align	1
  66              		.global	Ft_Esd_CheckBox_Y__Default
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  70              		.fpu fpv5-sp-d16
  72              	Ft_Esd_CheckBox_Y__Default:
  73              	.LFB33:
  17:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** int Ft_Esd_CheckBox_Y__Default(void *context) { return 0L; }
  74              		.loc 1 17 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              	.LVL4:
  80              		.loc 1 17 0
  81 0000 0020     		movs	r0, #0
  82              	.LVL5:
  83 0002 7047     		bx	lr
  84              		.cfi_endproc
  85              	.LFE33:
  87              		.section	.text.Ft_Esd_CheckBox_Width__Default,"ax",%progbits
  88              		.align	1
  89              		.global	Ft_Esd_CheckBox_Width__Default
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  93              		.fpu fpv5-sp-d16
  95              	Ft_Esd_CheckBox_Width__Default:
  96              	.LFB34:
  18:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** int Ft_Esd_CheckBox_Width__Default(void *context) { return 20L; }
  97              		.loc 1 18 0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 102              	.LVL6:
 103              		.loc 1 18 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 3


 104 0000 1420     		movs	r0, #20
 105              	.LVL7:
 106 0002 7047     		bx	lr
 107              		.cfi_endproc
 108              	.LFE34:
 110              		.section	.text.Ft_Esd_CheckBox_Height__Default,"ax",%progbits
 111              		.align	1
 112              		.global	Ft_Esd_CheckBox_Height__Default
 113              		.syntax unified
 114              		.thumb
 115              		.thumb_func
 116              		.fpu fpv5-sp-d16
 118              	Ft_Esd_CheckBox_Height__Default:
 119              	.LFB35:
  19:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** int Ft_Esd_CheckBox_Height__Default(void *context) { return 20L; }
 120              		.loc 1 19 0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 125              	.LVL8:
 126              		.loc 1 19 0
 127 0000 1420     		movs	r0, #20
 128              	.LVL9:
 129 0002 7047     		bx	lr
 130              		.cfi_endproc
 131              	.LFE35:
 133              		.section	.text.Ft_Esd_CheckBox_Alpha__Default,"ax",%progbits
 134              		.align	1
 135              		.global	Ft_Esd_CheckBox_Alpha__Default
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 139              		.fpu fpv5-sp-d16
 141              	Ft_Esd_CheckBox_Alpha__Default:
 142              	.LFB36:
  20:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** ft_uint8_t Ft_Esd_CheckBox_Alpha__Default(void *context) { return 255; }
 143              		.loc 1 20 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
 148              	.LVL10:
 149              		.loc 1 20 0
 150 0000 FF20     		movs	r0, #255
 151              	.LVL11:
 152 0002 7047     		bx	lr
 153              		.cfi_endproc
 154              	.LFE36:
 156              		.section	.text.Ft_Esd_CheckBox_Text__Default,"ax",%progbits
 157              		.align	1
 158              		.global	Ft_Esd_CheckBox_Text__Default
 159              		.syntax unified
 160              		.thumb
 161              		.thumb_func
 162              		.fpu fpv5-sp-d16
 164              	Ft_Esd_CheckBox_Text__Default:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 4


 165              	.LFB37:
  21:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** char * Ft_Esd_CheckBox_Text__Default(void *context) { return "Option"; }
 166              		.loc 1 21 0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170              		@ link register save eliminated.
 171              	.LVL12:
 172              		.loc 1 21 0
 173 0000 0048     		ldr	r0, .L8
 174              	.LVL13:
 175 0002 7047     		bx	lr
 176              	.L9:
 177              		.align	2
 178              	.L8:
 179 0004 00000000 		.word	.LC0
 180              		.cfi_endproc
 181              	.LFE37:
 183              		.section	.text.Ft_Esd_CheckBox_Changed__Noop,"ax",%progbits
 184              		.align	1
 185              		.global	Ft_Esd_CheckBox_Changed__Noop
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 189              		.fpu fpv5-sp-d16
 191              	Ft_Esd_CheckBox_Changed__Noop:
 192              	.LFB38:
  22:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** void Ft_Esd_CheckBox_Changed__Noop(void *context, ft_bool_t value) { }
 193              		.loc 1 22 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              		@ link register save eliminated.
 198              	.LVL14:
 199              		.loc 1 22 0
 200 0000 7047     		bx	lr
 201              		.cfi_endproc
 202              	.LFE38:
 204              		.section	.text.Ft_Esd_CheckBox_ESD_Label_AlignY__Property,"ax",%progbits
 205              		.align	1
 206              		.syntax unified
 207              		.thumb
 208              		.thumb_func
 209              		.fpu fpv5-sp-d16
 211              	Ft_Esd_CheckBox_ESD_Label_AlignY__Property:
 212              	.LFB39:
  23:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
  24:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** Ft_Esd_Theme * Ft_Esd_Theme_GetCurrent();
  25:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** static Ft_Esd_Theme * Ft_Esd_CheckBox_ESD_Label_Theme__Property(void *context);
  26:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** static ft_int16_t Ft_Esd_CheckBox_ESD_Label_Font__Property(void *context);
  27:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** static const char * Ft_Esd_CheckBox_ESD_Label_Text__Property(void *context);
  28:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** static ft_int16_t Ft_Esd_CheckBox_ESD_Label_X__Property(void *context);
  29:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** static ft_int16_t Ft_Esd_CheckBox_ESD_Label_Y__Property(void *context);
  30:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** static ft_int16_t Ft_Esd_CheckBox_ESD_Label_Width__Property(void *context);
  31:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** static ft_int16_t Ft_Esd_CheckBox_ESD_Label_Height__Property(void *context);
  32:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** static ft_uint16_t Ft_Esd_CheckBox_ESD_Label_AlignY__Property(void *context) { return 1; }
 213              		.loc 1 32 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 5


 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217              		@ link register save eliminated.
 218              	.LVL15:
 219              		.loc 1 32 0
 220 0000 0120     		movs	r0, #1
 221              	.LVL16:
 222 0002 7047     		bx	lr
 223              		.cfi_endproc
 224              	.LFE39:
 226              		.section	.text.Ft_Esd_CheckBox_Touch_Tag_Tap__Signal,"ax",%progbits
 227              		.align	1
 228              		.syntax unified
 229              		.thumb
 230              		.thumb_func
 231              		.fpu fpv5-sp-d16
 233              	Ft_Esd_CheckBox_Touch_Tag_Tap__Signal:
 234              	.LFB42:
  33:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
  34:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** static void Ft_Esd_CheckBox_Touch_Tag_Tap__Signal(void *context);
  35:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
  36:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** void Ft_Esd_CheckBox__Initializer(Ft_Esd_CheckBox *context)
  37:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** {
  38:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Parent = 0;
  39:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_TouchTag__Initializer(&context->Touch_Tag);
  40:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Touch_Tag.Parent = context;
  41:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Touch_Tag.Tap = Ft_Esd_CheckBox_Touch_Tag_Tap__Signal;
  42:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Theme = Ft_Esd_CheckBox_Theme__Default;
  43:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Font = Ft_Esd_CheckBox_Font__Default;
  44:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->X = Ft_Esd_CheckBox_X__Default;
  45:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Y = Ft_Esd_CheckBox_Y__Default;
  46:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Width = Ft_Esd_CheckBox_Width__Default;
  47:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Height = Ft_Esd_CheckBox_Height__Default;
  48:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Alpha = Ft_Esd_CheckBox_Alpha__Default;
  49:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Text = Ft_Esd_CheckBox_Text__Default;
  50:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Value = 0;
  51:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Toggled = Ft_Esd_Noop;
  52:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Changed = Ft_Esd_CheckBox_Changed__Noop;
  53:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_Label__Initializer(&context->ESD_Label);
  54:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->ESD_Label.Parent = context;
  55:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->ESD_Label.Theme = Ft_Esd_CheckBox_ESD_Label_Theme__Property;
  56:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->ESD_Label.Font = Ft_Esd_CheckBox_ESD_Label_Font__Property;
  57:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->ESD_Label.Text = Ft_Esd_CheckBox_ESD_Label_Text__Property;
  58:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->ESD_Label.X = Ft_Esd_CheckBox_ESD_Label_X__Property;
  59:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->ESD_Label.Y = Ft_Esd_CheckBox_ESD_Label_Y__Property;
  60:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->ESD_Label.Width = Ft_Esd_CheckBox_ESD_Label_Width__Property;
  61:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->ESD_Label.Height = Ft_Esd_CheckBox_ESD_Label_Height__Property;
  62:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->ESD_Label.AlignY = Ft_Esd_CheckBox_ESD_Label_AlignY__Property;
  63:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** }
  64:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
  65:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** static ft_argb32_t Ft_Esd_CheckBox_Color_A_RGB_Combine__return(Ft_Esd_CheckBox *context);
  66:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
  67:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** void Ft_Esd_Elements_PanelSunken(ft_rgb32_t, ft_int16_t, ft_int16_t, ft_int16_t, ft_int16_t, ft_int
  68:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
  69:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** void Ft_Esd_CheckBox_Render(Ft_Esd_CheckBox *context)
  70:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** {
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 6


  71:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	void *parent = context->Parent;
  72:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	ft_uint8_t alpha = context->Alpha(parent);
  73:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_Dl_COLOR_A(alpha);
  74:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	ft_uint8_t s = Ft_Esd_TouchTag_Tag(&context->Touch_Tag);
  75:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_Dl_TAG(s);
  76:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_Theme * theme = context->Theme(parent);
  77:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	ft_rgb32_t color = Ft_Esd_Theme_GetBackColor(theme);
  78:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int x = context->X(parent);
  79:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int y = context->Y(parent);
  80:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int left = context->Width(parent);
  81:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int right = context->Height(parent);
  82:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int if_1 = left <= right;
  83:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int width;
  84:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	if (if_1)
  85:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	{
  86:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		width = context->Width(parent);
  87:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	}
  88:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	else
  89:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	{
  90:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		width = context->Height(parent);
  91:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	}
  92:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int height = context->Height(parent);
  93:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	ft_int16_t radius = 4;
  94:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_Elements_PanelSunken(color, x, y, width, height, radius);
  95:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	ft_bool_t left_1 = context->Value;
  96:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	ft_bool_t right_1 = Ft_Esd_TouchTag_Inside(&context->Touch_Tag);
  97:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int if_2 = left_1 || right_1;
  98:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	if (if_2)
  99:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	{
 100:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_3 = context->X(parent);
 101:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_5 = context->Width(parent);
 102:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_3 = context->Height(parent);
 103:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_3 = left_5 <= right_3;
 104:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_4;
 105:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		if (if_3)
 106:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 107:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_4 = context->Width(parent);
 108:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 109:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		else
 110:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 111:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_4 = context->Height(parent);
 112:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 113:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_4 = 10L;
 114:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_2 = left_4 / right_4;
 115:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_2 = left_3 + right_2;
 116:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_7 = context->Width(parent);
 117:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_6 = context->Height(parent);
 118:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_4 = left_7 <= right_6;
 119:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_6;
 120:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		if (if_4)
 121:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 122:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_6 = context->Width(parent);
 123:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 124:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		else
 125:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 126:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_6 = context->Height(parent);
 127:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 7


 128:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_7 = 10L;
 129:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_5 = left_6 / right_7;
 130:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int x0 = left_2 + right_5;
 131:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_8 = context->Y(parent);
 132:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_10 = context->Width(parent);
 133:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_9 = context->Height(parent);
 134:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_5 = left_10 <= right_9;
 135:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_9;
 136:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		if (if_5)
 137:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 138:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_9 = context->Width(parent);
 139:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 140:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		else
 141:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 142:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_9 = context->Height(parent);
 143:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 144:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_10 = 2L;
 145:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_8 = left_9 / right_10;
 146:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int y0 = left_8 + right_8;
 147:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_11 = context->X(parent);
 148:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_13 = context->Width(parent);
 149:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_12 = context->Height(parent);
 150:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_6 = left_13 <= right_12;
 151:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_12;
 152:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		if (if_6)
 153:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 154:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_12 = context->Width(parent);
 155:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 156:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		else
 157:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 158:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_12 = context->Height(parent);
 159:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 160:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_13 = 3L;
 161:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_11 = left_12 / right_13;
 162:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int x1 = left_11 + right_11;
 163:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_16 = context->Y(parent);
 164:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_17 = context->Width(parent);
 165:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_15 = context->Height(parent);
 166:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_7 = left_17 <= right_15;
 167:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_14;
 168:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		if (if_7)
 169:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 170:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			right_14 = context->Width(parent);
 171:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 172:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		else
 173:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 174:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			right_14 = context->Height(parent);
 175:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 176:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_15 = left_16 + right_14;
 177:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_19 = context->Width(parent);
 178:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_17 = context->Height(parent);
 179:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_8 = left_19 <= right_17;
 180:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_18;
 181:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		if (if_8)
 182:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 183:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_18 = context->Width(parent);
 184:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 8


 185:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		else
 186:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 187:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_18 = context->Height(parent);
 188:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 189:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_18 = 10L;
 190:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_16 = left_18 / right_18;
 191:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_14 = left_15 - right_16;
 192:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_21 = context->Width(parent);
 193:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_20 = context->Height(parent);
 194:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_9 = left_21 <= right_20;
 195:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_20;
 196:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		if (if_9)
 197:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 198:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_20 = context->Width(parent);
 199:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 200:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		else
 201:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 202:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_20 = context->Height(parent);
 203:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 204:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_21 = 10L;
 205:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_19 = left_20 / right_21;
 206:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int y1 = left_14 - right_19;
 207:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_24 = context->Width(parent);
 208:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_22 = context->Height(parent);
 209:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_10 = left_24 <= right_22;
 210:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_23;
 211:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		if (if_10)
 212:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 213:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_23 = context->Width(parent);
 214:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 215:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		else
 216:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 217:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_23 = context->Height(parent);
 218:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 219:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_23 = 10L;
 220:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_22 = left_23 / right_23;
 221:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_24 = 2L;
 222:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int width_1 = left_22 * right_24;
 223:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		ft_argb32_t color_1 = Ft_Esd_CheckBox_Color_A_RGB_Combine__return(context);
 224:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		Ft_Esd_Render_Line(x0, y0, x1, y1, width_1, color_1);
 225:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_25 = context->X(parent);
 226:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_27 = context->Width(parent);
 227:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_26 = context->Height(parent);
 228:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_11 = left_27 <= right_26;
 229:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_26;
 230:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		if (if_11)
 231:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 232:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_26 = context->Width(parent);
 233:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 234:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		else
 235:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 236:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_26 = context->Height(parent);
 237:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 238:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_27 = 3L;
 239:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_25 = left_26 / right_27;
 240:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int x0_1 = left_25 + right_25;
 241:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_30 = context->Y(parent);
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 9


 242:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_31 = context->Width(parent);
 243:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_29 = context->Height(parent);
 244:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_12 = left_31 <= right_29;
 245:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_28;
 246:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		if (if_12)
 247:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 248:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			right_28 = context->Width(parent);
 249:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 250:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		else
 251:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 252:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			right_28 = context->Height(parent);
 253:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 254:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_29 = left_30 + right_28;
 255:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_33 = context->Width(parent);
 256:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_31 = context->Height(parent);
 257:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_13 = left_33 <= right_31;
 258:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_32;
 259:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		if (if_13)
 260:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 261:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_32 = context->Width(parent);
 262:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 263:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		else
 264:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 265:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_32 = context->Height(parent);
 266:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 267:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_32 = 10L;
 268:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_30 = left_32 / right_32;
 269:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_28 = left_29 - right_30;
 270:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_35 = context->Width(parent);
 271:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_34 = context->Height(parent);
 272:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_14 = left_35 <= right_34;
 273:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_34;
 274:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		if (if_14)
 275:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 276:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_34 = context->Width(parent);
 277:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 278:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		else
 279:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 280:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_34 = context->Height(parent);
 281:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 282:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_35 = 10L;
 283:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_33 = left_34 / right_35;
 284:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int y0_1 = left_28 - right_33;
 285:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_38 = context->X(parent);
 286:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_39 = context->Width(parent);
 287:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_37 = context->Height(parent);
 288:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_15 = left_39 <= right_37;
 289:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_36;
 290:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		if (if_15)
 291:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 292:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			right_36 = context->Width(parent);
 293:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 294:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		else
 295:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 296:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			right_36 = context->Height(parent);
 297:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 298:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_37 = left_38 + right_36;
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 10


 299:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_41 = context->Width(parent);
 300:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_39 = context->Height(parent);
 301:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_16 = left_41 <= right_39;
 302:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_40;
 303:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		if (if_16)
 304:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 305:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_40 = context->Width(parent);
 306:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 307:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		else
 308:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 309:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_40 = context->Height(parent);
 310:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 311:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_40 = 10L;
 312:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_38 = left_40 / right_40;
 313:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_36 = left_37 - right_38;
 314:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_43 = context->Width(parent);
 315:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_42 = context->Height(parent);
 316:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_17 = left_43 <= right_42;
 317:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_42;
 318:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		if (if_17)
 319:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 320:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_42 = context->Width(parent);
 321:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 322:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		else
 323:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 324:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_42 = context->Height(parent);
 325:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 326:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_43 = 10L;
 327:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_41 = left_42 / right_43;
 328:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int x1_1 = left_36 - right_41;
 329:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_45 = context->Y(parent);
 330:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_47 = context->Width(parent);
 331:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_45 = context->Height(parent);
 332:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_18 = left_47 <= right_45;
 333:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_46;
 334:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		if (if_18)
 335:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 336:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_46 = context->Width(parent);
 337:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 338:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		else
 339:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 340:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_46 = context->Height(parent);
 341:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 342:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_46 = 10L;
 343:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_44 = left_46 / right_46;
 344:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_44 = left_45 + right_44;
 345:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_49 = context->Width(parent);
 346:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_48 = context->Height(parent);
 347:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_19 = left_49 <= right_48;
 348:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_48;
 349:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		if (if_19)
 350:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 351:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_48 = context->Width(parent);
 352:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 353:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		else
 354:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 355:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_48 = context->Height(parent);
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 11


 356:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 357:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_49 = 10L;
 358:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_47 = left_48 / right_49;
 359:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int y1_1 = left_44 + right_47;
 360:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_52 = context->Width(parent);
 361:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_50 = context->Height(parent);
 362:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_20 = left_52 <= right_50;
 363:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_51;
 364:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		if (if_20)
 365:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 366:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_51 = context->Width(parent);
 367:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 368:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		else
 369:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 370:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 			left_51 = context->Height(parent);
 371:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 372:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_51 = 10L;
 373:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_50 = left_51 / right_51;
 374:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_52 = 2L;
 375:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int width_2 = left_50 * right_52;
 376:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		ft_argb32_t color_2 = Ft_Esd_CheckBox_Color_A_RGB_Combine__return(context);
 377:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		Ft_Esd_Render_Line(x0_1, y0_1, x1_1, y1_1, width_2, color_2);
 378:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	}
 379:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	else
 380:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	{
 381:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	}
 382:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	ft_uint8_t s_1 = 255;
 383:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_Dl_TAG(s_1);
 384:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_Label_Render(&context->ESD_Label);
 385:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** }
 386:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
 387:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** void Ft_Esd_CheckBox_Touch_Tag_Tap__Signal(void *c)
 388:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** {
 235              		.loc 1 388 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              	.LVL17:
 240 0000 38B5     		push	{r3, r4, r5, lr}
 241              	.LCFI0:
 242              		.cfi_def_cfa_offset 16
 243              		.cfi_offset 3, -16
 244              		.cfi_offset 4, -12
 245              		.cfi_offset 5, -8
 246              		.cfi_offset 14, -4
 247 0002 0446     		mov	r4, r0
 248              	.LVL18:
 389:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_CheckBox *context = (Ft_Esd_CheckBox *)c;
 390:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	void *parent = context->Parent;
 249              		.loc 1 390 0
 250 0004 0568     		ldr	r5, [r0]
 251              	.LVL19:
 391:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	ft_bool_t value = context->Value;
 252              		.loc 1 391 0
 253 0006 90F83C10 		ldrb	r1, [r0, #60]	@ zero_extendqisi2
 254              	.LVL20:
 392:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int set_variable = !value;
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 12


 255              		.loc 1 392 0
 256 000a B1FA81F1 		clz	r1, r1
 257              	.LVL21:
 258 000e 4909     		lsrs	r1, r1, #5
 259              	.LVL22:
 393:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Value = set_variable;
 260              		.loc 1 393 0
 261 0010 80F83C10 		strb	r1, [r0, #60]
 262              	.LVL23:
 394:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Changed(parent, set_variable);
 263              		.loc 1 394 0
 264 0014 436C     		ldr	r3, [r0, #68]
 265 0016 2846     		mov	r0, r5
 266              	.LVL24:
 267 0018 9847     		blx	r3
 268              	.LVL25:
 395:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Toggled(parent);
 269              		.loc 1 395 0
 270 001a 236C     		ldr	r3, [r4, #64]
 271 001c 2846     		mov	r0, r5
 272 001e 9847     		blx	r3
 273              	.LVL26:
 396:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** }
 274              		.loc 1 396 0
 275 0020 38BD     		pop	{r3, r4, r5, pc}
 276              		.cfi_endproc
 277              	.LFE42:
 279              		.section	.text.Ft_Esd_CheckBox_ESD_Label_Theme__Property,"ax",%progbits
 280              		.align	1
 281              		.syntax unified
 282              		.thumb
 283              		.thumb_func
 284              		.fpu fpv5-sp-d16
 286              	Ft_Esd_CheckBox_ESD_Label_Theme__Property:
 287              	.LFB48:
 397:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
 398:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** void Ft_Esd_CheckBox_Start(Ft_Esd_CheckBox *context)
 399:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** {
 400:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	void *parent = context->Parent;
 401:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_TouchTag_Start(&context->Touch_Tag);
 402:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** }
 403:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
 404:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** void Ft_Esd_CheckBox_Update(Ft_Esd_CheckBox *context)
 405:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** {
 406:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	void *parent = context->Parent;
 407:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_TouchTag_Update(&context->Touch_Tag);
 408:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** }
 409:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
 410:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** void Ft_Esd_CheckBox_End(Ft_Esd_CheckBox *context)
 411:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** {
 412:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	void *parent = context->Parent;
 413:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_TouchTag_End(&context->Touch_Tag);
 414:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** }
 415:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
 416:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** ft_argb32_t Ft_Esd_CheckBox_Color_A_RGB_Combine__return(Ft_Esd_CheckBox *context)
 417:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** {
 418:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	void *parent = context->Parent;
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 13


 419:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	ft_bool_t if_21 = Ft_Esd_TouchTag_Inside(&context->Touch_Tag);
 420:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	ft_rgb32_t rgb;
 421:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	if (if_21)
 422:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	{
 423:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		Ft_Esd_Theme * theme_1 = context->Theme(parent);
 424:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		rgb = Ft_Esd_Theme_GetTextColor(theme_1);
 425:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	}
 426:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	else
 427:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	{
 428:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		Ft_Esd_Theme * theme_2 = context->Theme(parent);
 429:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		rgb = Ft_Esd_Theme_GetPrimaryColor(theme_2);
 430:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	}
 431:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	ft_uint8_t a = context->Alpha(parent);
 432:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	return Ft_Esd_ColorARGB_Combine(rgb, a);
 433:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** }
 434:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
 435:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** void Ft_Esd_CheckBox_Toggle(Ft_Esd_CheckBox *context)
 436:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** {
 437:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	void *parent = context->Parent;
 438:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	ft_bool_t value_1 = context->Value;
 439:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int set_variable_1 = !value_1;
 440:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Value = set_variable_1;
 441:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Changed(parent, set_variable_1);
 442:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Toggled(parent);
 443:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** }
 444:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
 445:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** Ft_Esd_Theme * Ft_Esd_CheckBox_ESD_Label_Theme__Property(void *c)
 446:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** {
 288              		.loc 1 446 0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 0
 291              		@ frame_needed = 0, uses_anonymous_args = 0
 292              	.LVL27:
 293 0000 08B5     		push	{r3, lr}
 294              	.LCFI1:
 295              		.cfi_def_cfa_offset 8
 296              		.cfi_offset 3, -8
 297              		.cfi_offset 14, -4
 298              	.LVL28:
 447:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_CheckBox *context = (Ft_Esd_CheckBox *)c;
 448:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	void *parent = context->Parent;
 449:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	return context->Theme(parent);
 299              		.loc 1 449 0
 300 0002 C369     		ldr	r3, [r0, #28]
 301 0004 0068     		ldr	r0, [r0]
 302              	.LVL29:
 303 0006 9847     		blx	r3
 304              	.LVL30:
 450:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** }
 305              		.loc 1 450 0
 306 0008 08BD     		pop	{r3, pc}
 307              		.cfi_endproc
 308              	.LFE48:
 310              		.section	.text.Ft_Esd_CheckBox_ESD_Label_Font__Property,"ax",%progbits
 311              		.align	1
 312              		.syntax unified
 313              		.thumb
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 14


 314              		.thumb_func
 315              		.fpu fpv5-sp-d16
 317              	Ft_Esd_CheckBox_ESD_Label_Font__Property:
 318              	.LFB49:
 451:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
 452:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** ft_int16_t Ft_Esd_CheckBox_ESD_Label_Font__Property(void *c)
 453:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** {
 319              		.loc 1 453 0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323              	.LVL31:
 324 0000 08B5     		push	{r3, lr}
 325              	.LCFI2:
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 3, -8
 328              		.cfi_offset 14, -4
 329              	.LVL32:
 454:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_CheckBox *context = (Ft_Esd_CheckBox *)c;
 455:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	void *parent = context->Parent;
 456:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	return context->Font(parent);
 330              		.loc 1 456 0
 331 0002 036A     		ldr	r3, [r0, #32]
 332 0004 0068     		ldr	r0, [r0]
 333              	.LVL33:
 334 0006 9847     		blx	r3
 335              	.LVL34:
 457:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** }
 336              		.loc 1 457 0
 337 0008 00B2     		sxth	r0, r0
 338 000a 08BD     		pop	{r3, pc}
 339              		.cfi_endproc
 340              	.LFE49:
 342              		.section	.text.Ft_Esd_CheckBox_ESD_Label_Text__Property,"ax",%progbits
 343              		.align	1
 344              		.syntax unified
 345              		.thumb
 346              		.thumb_func
 347              		.fpu fpv5-sp-d16
 349              	Ft_Esd_CheckBox_ESD_Label_Text__Property:
 350              	.LFB50:
 458:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
 459:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** const char * Ft_Esd_CheckBox_ESD_Label_Text__Property(void *c)
 460:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** {
 351              		.loc 1 460 0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 0
 354              		@ frame_needed = 0, uses_anonymous_args = 0
 355              	.LVL35:
 356 0000 08B5     		push	{r3, lr}
 357              	.LCFI3:
 358              		.cfi_def_cfa_offset 8
 359              		.cfi_offset 3, -8
 360              		.cfi_offset 14, -4
 361              	.LVL36:
 461:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_CheckBox *context = (Ft_Esd_CheckBox *)c;
 462:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	void *parent = context->Parent;
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 15


 463:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	return context->Text(parent);
 362              		.loc 1 463 0
 363 0002 836B     		ldr	r3, [r0, #56]
 364 0004 0068     		ldr	r0, [r0]
 365              	.LVL37:
 366 0006 9847     		blx	r3
 367              	.LVL38:
 464:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** }
 368              		.loc 1 464 0
 369 0008 08BD     		pop	{r3, pc}
 370              		.cfi_endproc
 371              	.LFE50:
 373              		.section	.text.Ft_Esd_CheckBox_ESD_Label_X__Property,"ax",%progbits
 374              		.align	1
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
 378              		.fpu fpv5-sp-d16
 380              	Ft_Esd_CheckBox_ESD_Label_X__Property:
 381              	.LFB51:
 465:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
 466:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** ft_int16_t Ft_Esd_CheckBox_ESD_Label_X__Property(void *c)
 467:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** {
 382              		.loc 1 467 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              	.LVL39:
 387 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 388              	.LCFI4:
 389              		.cfi_def_cfa_offset 24
 390              		.cfi_offset 3, -24
 391              		.cfi_offset 4, -20
 392              		.cfi_offset 5, -16
 393              		.cfi_offset 6, -12
 394              		.cfi_offset 7, -8
 395              		.cfi_offset 14, -4
 396 0002 0446     		mov	r4, r0
 397              	.LVL40:
 468:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_CheckBox *context = (Ft_Esd_CheckBox *)c;
 469:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	void *parent = context->Parent;
 398              		.loc 1 469 0
 399 0004 0568     		ldr	r5, [r0]
 400              	.LVL41:
 470:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int left_54 = context->X(parent);
 401              		.loc 1 470 0
 402 0006 436A     		ldr	r3, [r0, #36]
 403 0008 2846     		mov	r0, r5
 404              	.LVL42:
 405 000a 9847     		blx	r3
 406              	.LVL43:
 407 000c 0646     		mov	r6, r0
 408              	.LVL44:
 471:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int left_55 = context->Width(parent);
 409              		.loc 1 471 0
 410 000e E36A     		ldr	r3, [r4, #44]
 411 0010 2846     		mov	r0, r5
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 16


 412              	.LVL45:
 413 0012 9847     		blx	r3
 414              	.LVL46:
 415 0014 0746     		mov	r7, r0
 416              	.LVL47:
 472:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int right_54 = context->Height(parent);
 417              		.loc 1 472 0
 418 0016 236B     		ldr	r3, [r4, #48]
 419 0018 2846     		mov	r0, r5
 420              	.LVL48:
 421 001a 9847     		blx	r3
 422              	.LVL49:
 473:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int if_22 = left_55 <= right_54;
 474:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int right_53;
 475:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	if (if_22)
 423              		.loc 1 475 0
 424 001c 8742     		cmp	r7, r0
 425 001e 1CDC     		bgt	.L21
 476:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	{
 477:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		right_53 = context->Width(parent);
 426              		.loc 1 477 0
 427 0020 E36A     		ldr	r3, [r4, #44]
 428 0022 2846     		mov	r0, r5
 429              	.LVL50:
 430 0024 9847     		blx	r3
 431              	.LVL51:
 432              	.L22:
 478:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	}
 479:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	else
 480:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	{
 481:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		right_53 = context->Height(parent);
 482:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	}
 483:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int left_53 = left_54 + right_53;
 433              		.loc 1 483 0
 434 0026 0644     		add	r6, r6, r0
 435              	.LVL52:
 484:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int left_58 = context->Width(parent);
 436              		.loc 1 484 0
 437 0028 E36A     		ldr	r3, [r4, #44]
 438 002a 2846     		mov	r0, r5
 439              	.LVL53:
 440 002c 9847     		blx	r3
 441              	.LVL54:
 442 002e 0746     		mov	r7, r0
 443              	.LVL55:
 485:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int right_56 = context->Height(parent);
 444              		.loc 1 485 0
 445 0030 236B     		ldr	r3, [r4, #48]
 446 0032 2846     		mov	r0, r5
 447              	.LVL56:
 448 0034 9847     		blx	r3
 449              	.LVL57:
 486:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int if_23 = left_58 <= right_56;
 487:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int left_57;
 488:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	if (if_23)
 450              		.loc 1 488 0
 451 0036 8742     		cmp	r7, r0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 17


 452 0038 13DD     		ble	.L27
 489:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	{
 490:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		left_57 = context->Width(parent);
 491:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	}
 492:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	else
 493:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	{
 494:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		left_57 = context->Height(parent);
 453              		.loc 1 494 0
 454 003a 236B     		ldr	r3, [r4, #48]
 455 003c 2846     		mov	r0, r5
 456              	.LVL58:
 457 003e 9847     		blx	r3
 458              	.LVL59:
 459 0040 0746     		mov	r7, r0
 460              	.LVL60:
 461              	.L24:
 495:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	}
 496:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	ft_uint8_t i = context->Font(parent);
 462              		.loc 1 496 0
 463 0042 236A     		ldr	r3, [r4, #32]
 464 0044 2846     		mov	r0, r5
 465              	.LVL61:
 466 0046 9847     		blx	r3
 467              	.LVL62:
 497:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	ft_uint16_t right_57 = Ft_Esd_GetFontHeight(i);
 468              		.loc 1 497 0
 469 0048 094B     		ldr	r3, .L29
 470 004a 33F81000 		ldrh	r0, [r3, r0, lsl #1]
 471              	.LVL63:
 498:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int left_56 = left_57 + right_57;
 499:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int right_58 = 4L;
 500:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int right_55 = left_56 / right_58;
 472              		.loc 1 500 0
 473 004e C019     		adds	r0, r0, r7
 474              	.LVL64:
 475 0050 0CD4     		bmi	.L28
 476              	.L25:
 477              	.LVL65:
 501:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	return left_53 + right_55;
 478              		.loc 1 501 0
 479 0052 06EBA000 		add	r0, r6, r0, asr #2
 480              	.LVL66:
 502:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** }
 481              		.loc 1 502 0
 482 0056 00B2     		sxth	r0, r0
 483 0058 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 484              	.LVL67:
 485              	.L21:
 481:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	}
 486              		.loc 1 481 0
 487 005a 236B     		ldr	r3, [r4, #48]
 488 005c 2846     		mov	r0, r5
 489              	.LVL68:
 490 005e 9847     		blx	r3
 491              	.LVL69:
 492 0060 E1E7     		b	.L22
 493              	.LVL70:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 18


 494              	.L27:
 490:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	}
 495              		.loc 1 490 0
 496 0062 E36A     		ldr	r3, [r4, #44]
 497 0064 2846     		mov	r0, r5
 498              	.LVL71:
 499 0066 9847     		blx	r3
 500              	.LVL72:
 501 0068 0746     		mov	r7, r0
 502              	.LVL73:
 503 006a EAE7     		b	.L24
 504              	.LVL74:
 505              	.L28:
 500:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	return left_53 + right_55;
 506              		.loc 1 500 0
 507 006c 0330     		adds	r0, r0, #3
 508 006e F0E7     		b	.L25
 509              	.L30:
 510              		.align	2
 511              	.L29:
 512 0070 00000000 		.word	Ft_Esd_FontHeight
 513              		.cfi_endproc
 514              	.LFE51:
 516              		.section	.text.Ft_Esd_CheckBox_ESD_Label_Y__Property,"ax",%progbits
 517              		.align	1
 518              		.syntax unified
 519              		.thumb
 520              		.thumb_func
 521              		.fpu fpv5-sp-d16
 523              	Ft_Esd_CheckBox_ESD_Label_Y__Property:
 524              	.LFB52:
 503:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
 504:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** ft_int16_t Ft_Esd_CheckBox_ESD_Label_Y__Property(void *c)
 505:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** {
 525              		.loc 1 505 0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 0
 528              		@ frame_needed = 0, uses_anonymous_args = 0
 529              	.LVL75:
 530 0000 08B5     		push	{r3, lr}
 531              	.LCFI5:
 532              		.cfi_def_cfa_offset 8
 533              		.cfi_offset 3, -8
 534              		.cfi_offset 14, -4
 535              	.LVL76:
 506:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_CheckBox *context = (Ft_Esd_CheckBox *)c;
 507:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	void *parent = context->Parent;
 508:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	return context->Y(parent);
 536              		.loc 1 508 0
 537 0002 836A     		ldr	r3, [r0, #40]
 538 0004 0068     		ldr	r0, [r0]
 539              	.LVL77:
 540 0006 9847     		blx	r3
 541              	.LVL78:
 509:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** }
 542              		.loc 1 509 0
 543 0008 00B2     		sxth	r0, r0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 19


 544 000a 08BD     		pop	{r3, pc}
 545              		.cfi_endproc
 546              	.LFE52:
 548              		.section	.text.Ft_Esd_CheckBox_ESD_Label_Width__Property,"ax",%progbits
 549              		.align	1
 550              		.syntax unified
 551              		.thumb
 552              		.thumb_func
 553              		.fpu fpv5-sp-d16
 555              	Ft_Esd_CheckBox_ESD_Label_Width__Property:
 556              	.LFB53:
 510:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
 511:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** ft_int16_t Ft_Esd_CheckBox_ESD_Label_Width__Property(void *c)
 512:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** {
 557              		.loc 1 512 0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 0
 560              		@ frame_needed = 0, uses_anonymous_args = 0
 561              	.LVL79:
 562 0000 08B5     		push	{r3, lr}
 563              	.LCFI6:
 564              		.cfi_def_cfa_offset 8
 565              		.cfi_offset 3, -8
 566              		.cfi_offset 14, -4
 567              	.LVL80:
 513:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_CheckBox *context = (Ft_Esd_CheckBox *)c;
 514:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	void *parent = context->Parent;
 515:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	return context->Width(parent);
 568              		.loc 1 515 0
 569 0002 C36A     		ldr	r3, [r0, #44]
 570 0004 0068     		ldr	r0, [r0]
 571              	.LVL81:
 572 0006 9847     		blx	r3
 573              	.LVL82:
 516:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** }
 574              		.loc 1 516 0
 575 0008 00B2     		sxth	r0, r0
 576 000a 08BD     		pop	{r3, pc}
 577              		.cfi_endproc
 578              	.LFE53:
 580              		.section	.text.Ft_Esd_CheckBox_ESD_Label_Height__Property,"ax",%progbits
 581              		.align	1
 582              		.syntax unified
 583              		.thumb
 584              		.thumb_func
 585              		.fpu fpv5-sp-d16
 587              	Ft_Esd_CheckBox_ESD_Label_Height__Property:
 588              	.LFB54:
 517:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
 518:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** ft_int16_t Ft_Esd_CheckBox_ESD_Label_Height__Property(void *c)
 519:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** {
 589              		.loc 1 519 0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 0
 592              		@ frame_needed = 0, uses_anonymous_args = 0
 593              	.LVL83:
 594 0000 08B5     		push	{r3, lr}
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 20


 595              	.LCFI7:
 596              		.cfi_def_cfa_offset 8
 597              		.cfi_offset 3, -8
 598              		.cfi_offset 14, -4
 599              	.LVL84:
 520:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_CheckBox *context = (Ft_Esd_CheckBox *)c;
 521:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	void *parent = context->Parent;
 522:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	return context->Height(parent);
 600              		.loc 1 522 0
 601 0002 036B     		ldr	r3, [r0, #48]
 602 0004 0068     		ldr	r0, [r0]
 603              	.LVL85:
 604 0006 9847     		blx	r3
 605              	.LVL86:
 523:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** }
 606              		.loc 1 523 0
 607 0008 00B2     		sxth	r0, r0
 608 000a 08BD     		pop	{r3, pc}
 609              		.cfi_endproc
 610              	.LFE54:
 612              		.section	.text.Ft_Esd_CheckBox_Theme__Default,"ax",%progbits
 613              		.align	1
 614              		.global	Ft_Esd_CheckBox_Theme__Default
 615              		.syntax unified
 616              		.thumb
 617              		.thumb_func
 618              		.fpu fpv5-sp-d16
 620              	Ft_Esd_CheckBox_Theme__Default:
 621              	.LFB30:
  14:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** ft_uint8_t Ft_Esd_CheckBox_Font__Default(void *context) { return 27; }
 622              		.loc 1 14 0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 0
 625              		@ frame_needed = 0, uses_anonymous_args = 0
 626              	.LVL87:
 627 0000 08B5     		push	{r3, lr}
 628              	.LCFI8:
 629              		.cfi_def_cfa_offset 8
 630              		.cfi_offset 3, -8
 631              		.cfi_offset 14, -4
  14:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** ft_uint8_t Ft_Esd_CheckBox_Font__Default(void *context) { return 27; }
 632              		.loc 1 14 0
 633 0002 FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
 634              	.LVL88:
 635 0006 08BD     		pop	{r3, pc}
 636              		.cfi_endproc
 637              	.LFE30:
 639              		.section	.text.Ft_Esd_CheckBox_Color_A_RGB_Combine__return,"ax",%progbits
 640              		.align	1
 641              		.syntax unified
 642              		.thumb
 643              		.thumb_func
 644              		.fpu fpv5-sp-d16
 646              	Ft_Esd_CheckBox_Color_A_RGB_Combine__return:
 647              	.LFB46:
 417:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	void *parent = context->Parent;
 648              		.loc 1 417 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 21


 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 0
 651              		@ frame_needed = 0, uses_anonymous_args = 0
 652              	.LVL89:
 653 0000 70B5     		push	{r4, r5, r6, lr}
 654              	.LCFI9:
 655              		.cfi_def_cfa_offset 16
 656              		.cfi_offset 4, -16
 657              		.cfi_offset 5, -12
 658              		.cfi_offset 6, -8
 659              		.cfi_offset 14, -4
 660 0002 0446     		mov	r4, r0
 418:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	ft_bool_t if_21 = Ft_Esd_TouchTag_Inside(&context->Touch_Tag);
 661              		.loc 1 418 0
 662 0004 50F8046B 		ldr	r6, [r0], #4
 663              	.LVL90:
 419:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	ft_rgb32_t rgb;
 664              		.loc 1 419 0
 665 0008 FFF7FEFF 		bl	Ft_Esd_TouchTag_Inside
 666              	.LVL91:
 421:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	{
 667              		.loc 1 421 0
 668 000c 48B1     		cbz	r0, .L40
 669              	.LBB21:
 423:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		rgb = Ft_Esd_Theme_GetTextColor(theme_1);
 670              		.loc 1 423 0
 671 000e E369     		ldr	r3, [r4, #28]
 672 0010 3046     		mov	r0, r6
 673              	.LVL92:
 674 0012 9847     		blx	r3
 675              	.LVL93:
 676              	.LBB22:
 677              	.LBB23:
 678              		.file 2 "FT_Esd_Widgets/FT_Esd_Theme.h"
   1:FT_Esd_Widgets/FT_Esd_Theme.h **** 
   2:FT_Esd_Widgets/FT_Esd_Theme.h **** #ifndef FT_ESD_THEME_H
   3:FT_Esd_Widgets/FT_Esd_Theme.h **** #define FT_ESD_THEME_H
   4:FT_Esd_Widgets/FT_Esd_Theme.h **** #include "FT_DataTypes.h"
   5:FT_Esd_Widgets/FT_Esd_Theme.h **** #include "Ft_Esd.h"
   6:FT_Esd_Widgets/FT_Esd_Theme.h **** 
   7:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_CATEGORY(EsdTheme, DisplayName = "ESD Theme")
   8:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_CATEGORY(EsdTheme_Themes, DisplayName = "Themes", Category = EsdTheme)
   9:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  10:FT_Esd_Widgets/FT_Esd_Theme.h **** typedef unsigned int ft_uint32_t;
  11:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  12:FT_Esd_Widgets/FT_Esd_Theme.h **** typedef struct
  13:FT_Esd_Widgets/FT_Esd_Theme.h **** {
  14:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t ClearColor;
  15:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t BackColor;
  16:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t TextColor;
  17:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t ButtonTextColor;
  18:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t DefaultColor;
  19:FT_Esd_Widgets/FT_Esd_Theme.h **** 	ft_rgb32_t PrimaryColor;
  20:FT_Esd_Widgets/FT_Esd_Theme.h **** } Ft_Esd_Theme;
  21:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  22:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_TYPE(Ft_Esd_Theme *, Native = Pointer, Edit = Library)
  23:FT_Esd_Widgets/FT_Esd_Theme.h **** 
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 22


  24:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_RENDER(Ft_Esd_Theme_SetCurrent, DisplayName = "Set Current Theme", Category = EsdTheme, Include
  25:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *)
  26:FT_Esd_Widgets/FT_Esd_Theme.h **** void Ft_Esd_Theme_SetCurrent(Ft_Esd_Theme *theme);
  27:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  28:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetCurrent, DisplayName = "Current Theme", Category = EsdTheme, Type = Ft
  29:FT_Esd_Widgets/FT_Esd_Theme.h **** Ft_Esd_Theme *Ft_Esd_Theme_GetCurrent();
  30:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  31:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetClearColor, DisplayName = "Get Clear Color", Category = EsdTheme, Type
  32:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  33:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetClearColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_Es
  34:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  35:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetBackColor, DisplayName = "Get Back Color", Category = EsdTheme, Type =
  36:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  37:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetBackColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_Esd
  38:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  39:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetTextColor, DisplayName = "Get Text Color", Category = EsdTheme, Type =
  40:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  41:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetTextColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_Esd
 679              		.loc 2 41 0
 680 0014 08B1     		cbz	r0, .L45
 681 0016 8568     		ldr	r5, [r0, #8]
 682 0018 08E0     		b	.L42
 683              	.L45:
 684 001a FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
 685              	.LVL94:
 686 001e 8568     		ldr	r5, [r0, #8]
 687 0020 04E0     		b	.L42
 688              	.LVL95:
 689              	.L40:
 690              	.LBE23:
 691              	.LBE22:
 692              	.LBE21:
 693              	.LBB24:
 428:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		rgb = Ft_Esd_Theme_GetPrimaryColor(theme_2);
 694              		.loc 1 428 0
 695 0022 E369     		ldr	r3, [r4, #28]
 696 0024 3046     		mov	r0, r6
 697              	.LVL96:
 698 0026 9847     		blx	r3
 699              	.LVL97:
 700              	.LBB25:
 701              	.LBB26:
  42:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  43:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetButtonTextColor, DisplayName = "Get Button Text Color", Category = Esd
  44:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  45:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetButtonTextColor(Ft_Esd_Theme *theme) { if (!theme) return 
  46:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  47:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetCurrentColor, DisplayName = "Get Default Color", Category = EsdTheme, 
  48:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  49:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetCurrentColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_
  50:FT_Esd_Widgets/FT_Esd_Theme.h **** 
  51:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_FUNCTION(Ft_Esd_Theme_GetPrimaryColor, DisplayName = "Get Primary Color", Category = EsdTheme, 
  52:FT_Esd_Widgets/FT_Esd_Theme.h **** ESD_PARAMETER(theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent)
  53:FT_Esd_Widgets/FT_Esd_Theme.h **** inline static ft_rgb32_t Ft_Esd_Theme_GetPrimaryColor(Ft_Esd_Theme *theme) { if (!theme) return Ft_
 702              		.loc 2 53 0
 703 0028 40B1     		cbz	r0, .L46
 704 002a 4569     		ldr	r5, [r0, #20]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 23


 705              	.LVL98:
 706              	.L42:
 707              	.LBE26:
 708              	.LBE25:
 709              	.LBE24:
 431:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	return Ft_Esd_ColorARGB_Combine(rgb, a);
 710              		.loc 1 431 0
 711 002c 636B     		ldr	r3, [r4, #52]
 712 002e 3046     		mov	r0, r6
 713 0030 9847     		blx	r3
 714              	.LVL99:
 715              	.LBB29:
 716              	.LBB30:
 717              		.file 3 "FT_Esd_Framework/FT_Esd_Primitives.h"
   1:FT_Esd_Framework/FT_Esd_Primitives.h **** 
   2:FT_Esd_Framework/FT_Esd_Primitives.h **** #ifndef FT_ESD_PRIMITIVES_H
   3:FT_Esd_Framework/FT_Esd_Primitives.h **** #define FT_ESD_PRIMITIVES_H
   4:FT_Esd_Framework/FT_Esd_Primitives.h **** 
   5:FT_Esd_Framework/FT_Esd_Primitives.h **** #include "Ft_Esd.h"
   6:FT_Esd_Framework/FT_Esd_Primitives.h **** #include "Ft_Esd_Theme.h"
   7:FT_Esd_Framework/FT_Esd_Primitives.h **** #include "Ft_Esd_DefaultTheme.h"
   8:FT_Esd_Framework/FT_Esd_Primitives.h **** #include "Ft_Esd_BitmapInfo.h"
   9:FT_Esd_Framework/FT_Esd_Primitives.h **** 
  10:FT_Esd_Framework/FT_Esd_Primitives.h **** // Ft_Esd_Render_Rectangle
  11:FT_Esd_Framework/FT_Esd_Primitives.h **** // Ft_Esd_Render_Line
  12:FT_Esd_Framework/FT_Esd_Primitives.h **** // Ft_Esd_Render_Point
  13:FT_Esd_Framework/FT_Esd_Primitives.h **** // Ft_Esd_Render_Bitmap
  14:FT_Esd_Framework/FT_Esd_Primitives.h **** // Ft_Esd_Render_LineStrip
  15:FT_Esd_Framework/FT_Esd_Primitives.h **** // Ft_Esd_Render_EdgeStrip
  16:FT_Esd_Framework/FT_Esd_Primitives.h **** 
  17:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_CATEGORY(EsdWidgets, DisplayName = "ESD Widgets")
  18:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_CATEGORY(EsdElements, DisplayName = "Elements", Category = EsdWidgets)
  19:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_CATEGORY(EsdPrimitives, DisplayName = "ESD Primitives")
  20:FT_Esd_Framework/FT_Esd_Primitives.h **** 
  21:FT_Esd_Framework/FT_Esd_Primitives.h **** // TODO: Hooking RGB to ARGB should automatically 0xFF the alpha channel in the code generation
  22:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_FUNCTION(Ft_Esd_ColorARGB_Combine, Type = ft_argb32_t, DisplayName = "Color A+RGB Combine", Cat
  23:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(rgb, Type = ft_rgb32_t, Default = #FFFFFF)
  24:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(a, Type = ft_uint8_t, Default = 255)
  25:FT_Esd_Framework/FT_Esd_Primitives.h **** static inline ft_argb32_t Ft_Esd_ColorARGB_Combine(ft_rgb32_t rgb, ft_uint8_t a)
  26:FT_Esd_Framework/FT_Esd_Primitives.h **** { return (rgb & 0xFFFFFF) | (((ft_argb32_t)a) << 24); }
 718              		.loc 3 26 0
 719 0032 25F07F45 		bic	r5, r5, #-16777216
 720              	.LVL100:
 721              	.LBE30:
 722              	.LBE29:
 433:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
 723              		.loc 1 433 0
 724 0036 45EA0060 		orr	r0, r5, r0, lsl #24
 725              	.LVL101:
 726 003a 70BD     		pop	{r4, r5, r6, pc}
 727              	.LVL102:
 728              	.L46:
 729              	.LBB31:
 730              	.LBB28:
 731              	.LBB27:
 732              		.loc 2 53 0
 733 003c FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 24


 734              	.LVL103:
 735 0040 4569     		ldr	r5, [r0, #20]
 736 0042 F3E7     		b	.L42
 737              	.LBE27:
 738              	.LBE28:
 739              	.LBE31:
 740              		.cfi_endproc
 741              	.LFE46:
 743              		.section	.text.Ft_Esd_CheckBox__Initializer,"ax",%progbits
 744              		.align	1
 745              		.global	Ft_Esd_CheckBox__Initializer
 746              		.syntax unified
 747              		.thumb
 748              		.thumb_func
 749              		.fpu fpv5-sp-d16
 751              	Ft_Esd_CheckBox__Initializer:
 752              	.LFB40:
  37:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Parent = 0;
 753              		.loc 1 37 0
 754              		.cfi_startproc
 755              		@ args = 0, pretend = 0, frame = 0
 756              		@ frame_needed = 0, uses_anonymous_args = 0
 757              	.LVL104:
 758 0000 38B5     		push	{r3, r4, r5, lr}
 759              	.LCFI10:
 760              		.cfi_def_cfa_offset 16
 761              		.cfi_offset 3, -16
 762              		.cfi_offset 4, -12
 763              		.cfi_offset 5, -8
 764              		.cfi_offset 14, -4
 765 0002 0446     		mov	r4, r0
  38:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_TouchTag__Initializer(&context->Touch_Tag);
 766              		.loc 1 38 0
 767 0004 0025     		movs	r5, #0
 768 0006 40F8045B 		str	r5, [r0], #4
 769              	.LVL105:
  39:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Touch_Tag.Parent = context;
 770              		.loc 1 39 0
 771 000a FFF7FEFF 		bl	Ft_Esd_TouchTag__Initializer
 772              	.LVL106:
  40:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Touch_Tag.Tap = Ft_Esd_CheckBox_Touch_Tag_Tap__Signal;
 773              		.loc 1 40 0
 774 000e 6460     		str	r4, [r4, #4]
  41:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Theme = Ft_Esd_CheckBox_Theme__Default;
 775              		.loc 1 41 0
 776 0010 164B     		ldr	r3, .L49
 777 0012 2361     		str	r3, [r4, #16]
  42:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Font = Ft_Esd_CheckBox_Font__Default;
 778              		.loc 1 42 0
 779 0014 164B     		ldr	r3, .L49+4
 780 0016 E361     		str	r3, [r4, #28]
  43:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->X = Ft_Esd_CheckBox_X__Default;
 781              		.loc 1 43 0
 782 0018 164B     		ldr	r3, .L49+8
 783 001a 2362     		str	r3, [r4, #32]
  44:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Y = Ft_Esd_CheckBox_Y__Default;
 784              		.loc 1 44 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 25


 785 001c 164B     		ldr	r3, .L49+12
 786 001e 6362     		str	r3, [r4, #36]
  45:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Width = Ft_Esd_CheckBox_Width__Default;
 787              		.loc 1 45 0
 788 0020 164B     		ldr	r3, .L49+16
 789 0022 A362     		str	r3, [r4, #40]
  46:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Height = Ft_Esd_CheckBox_Height__Default;
 790              		.loc 1 46 0
 791 0024 164B     		ldr	r3, .L49+20
 792 0026 E362     		str	r3, [r4, #44]
  47:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Alpha = Ft_Esd_CheckBox_Alpha__Default;
 793              		.loc 1 47 0
 794 0028 164B     		ldr	r3, .L49+24
 795 002a 2363     		str	r3, [r4, #48]
  48:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Text = Ft_Esd_CheckBox_Text__Default;
 796              		.loc 1 48 0
 797 002c 164B     		ldr	r3, .L49+28
 798 002e 6363     		str	r3, [r4, #52]
  49:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Value = 0;
 799              		.loc 1 49 0
 800 0030 164B     		ldr	r3, .L49+32
 801 0032 A363     		str	r3, [r4, #56]
  50:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Toggled = Ft_Esd_Noop;
 802              		.loc 1 50 0
 803 0034 84F83C50 		strb	r5, [r4, #60]
  51:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Changed = Ft_Esd_CheckBox_Changed__Noop;
 804              		.loc 1 51 0
 805 0038 154B     		ldr	r3, .L49+36
 806 003a 2364     		str	r3, [r4, #64]
  52:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_Label__Initializer(&context->ESD_Label);
 807              		.loc 1 52 0
 808 003c 154B     		ldr	r3, .L49+40
 809 003e 6364     		str	r3, [r4, #68]
  53:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->ESD_Label.Parent = context;
 810              		.loc 1 53 0
 811 0040 04F14800 		add	r0, r4, #72
 812 0044 FFF7FEFF 		bl	Ft_Esd_Label__Initializer
 813              	.LVL107:
  54:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->ESD_Label.Theme = Ft_Esd_CheckBox_ESD_Label_Theme__Property;
 814              		.loc 1 54 0
 815 0048 A464     		str	r4, [r4, #72]
  55:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->ESD_Label.Font = Ft_Esd_CheckBox_ESD_Label_Font__Property;
 816              		.loc 1 55 0
 817 004a 134B     		ldr	r3, .L49+44
 818 004c E364     		str	r3, [r4, #76]
  56:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->ESD_Label.Text = Ft_Esd_CheckBox_ESD_Label_Text__Property;
 819              		.loc 1 56 0
 820 004e 134B     		ldr	r3, .L49+48
 821 0050 2365     		str	r3, [r4, #80]
  57:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->ESD_Label.X = Ft_Esd_CheckBox_ESD_Label_X__Property;
 822              		.loc 1 57 0
 823 0052 134B     		ldr	r3, .L49+52
 824 0054 6365     		str	r3, [r4, #84]
  58:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->ESD_Label.Y = Ft_Esd_CheckBox_ESD_Label_Y__Property;
 825              		.loc 1 58 0
 826 0056 134B     		ldr	r3, .L49+56
 827 0058 A365     		str	r3, [r4, #88]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 26


  59:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->ESD_Label.Width = Ft_Esd_CheckBox_ESD_Label_Width__Property;
 828              		.loc 1 59 0
 829 005a 134B     		ldr	r3, .L49+60
 830 005c E365     		str	r3, [r4, #92]
  60:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->ESD_Label.Height = Ft_Esd_CheckBox_ESD_Label_Height__Property;
 831              		.loc 1 60 0
 832 005e 134B     		ldr	r3, .L49+64
 833 0060 2366     		str	r3, [r4, #96]
  61:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->ESD_Label.AlignY = Ft_Esd_CheckBox_ESD_Label_AlignY__Property;
 834              		.loc 1 61 0
 835 0062 134B     		ldr	r3, .L49+68
 836 0064 6366     		str	r3, [r4, #100]
  62:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** }
 837              		.loc 1 62 0
 838 0066 134B     		ldr	r3, .L49+72
 839 0068 E366     		str	r3, [r4, #108]
  63:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
 840              		.loc 1 63 0
 841 006a 38BD     		pop	{r3, r4, r5, pc}
 842              	.LVL108:
 843              	.L50:
 844              		.align	2
 845              	.L49:
 846 006c 00000000 		.word	Ft_Esd_CheckBox_Touch_Tag_Tap__Signal
 847 0070 00000000 		.word	Ft_Esd_CheckBox_Theme__Default
 848 0074 00000000 		.word	Ft_Esd_CheckBox_Font__Default
 849 0078 00000000 		.word	Ft_Esd_CheckBox_X__Default
 850 007c 00000000 		.word	Ft_Esd_CheckBox_Y__Default
 851 0080 00000000 		.word	Ft_Esd_CheckBox_Width__Default
 852 0084 00000000 		.word	Ft_Esd_CheckBox_Height__Default
 853 0088 00000000 		.word	Ft_Esd_CheckBox_Alpha__Default
 854 008c 00000000 		.word	Ft_Esd_CheckBox_Text__Default
 855 0090 00000000 		.word	Ft_Esd_Noop
 856 0094 00000000 		.word	Ft_Esd_CheckBox_Changed__Noop
 857 0098 00000000 		.word	Ft_Esd_CheckBox_ESD_Label_Theme__Property
 858 009c 00000000 		.word	Ft_Esd_CheckBox_ESD_Label_Font__Property
 859 00a0 00000000 		.word	Ft_Esd_CheckBox_ESD_Label_Text__Property
 860 00a4 00000000 		.word	Ft_Esd_CheckBox_ESD_Label_X__Property
 861 00a8 00000000 		.word	Ft_Esd_CheckBox_ESD_Label_Y__Property
 862 00ac 00000000 		.word	Ft_Esd_CheckBox_ESD_Label_Width__Property
 863 00b0 00000000 		.word	Ft_Esd_CheckBox_ESD_Label_Height__Property
 864 00b4 00000000 		.word	Ft_Esd_CheckBox_ESD_Label_AlignY__Property
 865              		.cfi_endproc
 866              	.LFE40:
 868              		.section	.text.Ft_Esd_CheckBox_Render,"ax",%progbits
 869              		.align	1
 870              		.global	Ft_Esd_CheckBox_Render
 871              		.syntax unified
 872              		.thumb
 873              		.thumb_func
 874              		.fpu fpv5-sp-d16
 876              	Ft_Esd_CheckBox_Render:
 877              	.LFB41:
  70:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	void *parent = context->Parent;
 878              		.loc 1 70 0
 879              		.cfi_startproc
 880              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 27


 881              		@ frame_needed = 0, uses_anonymous_args = 0
 882              	.LVL109:
 883 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 884              	.LCFI11:
 885              		.cfi_def_cfa_offset 32
 886              		.cfi_offset 4, -32
 887              		.cfi_offset 5, -28
 888              		.cfi_offset 6, -24
 889              		.cfi_offset 7, -20
 890              		.cfi_offset 8, -16
 891              		.cfi_offset 9, -12
 892              		.cfi_offset 10, -8
 893              		.cfi_offset 14, -4
 894 0004 82B0     		sub	sp, sp, #8
 895              	.LCFI12:
 896              		.cfi_def_cfa_offset 40
 897 0006 0446     		mov	r4, r0
  71:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	ft_uint8_t alpha = context->Alpha(parent);
 898              		.loc 1 71 0
 899 0008 0568     		ldr	r5, [r0]
 900              	.LVL110:
  72:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_Dl_COLOR_A(alpha);
 901              		.loc 1 72 0
 902 000a 436B     		ldr	r3, [r0, #52]
 903 000c 2846     		mov	r0, r5
 904              	.LVL111:
 905 000e 9847     		blx	r3
 906              	.LVL112:
 907              	.LBB45:
 908              	.LBB46:
 909              		.file 4 "FT_Esd_Framework/FT_Esd_Dl.h"
   1:FT_Esd_Framework/FT_Esd_Dl.h **** 
   2:FT_Esd_Framework/FT_Esd_Dl.h **** #ifndef FT_ESD_DL_H
   3:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_DL_H
   4:FT_Esd_Framework/FT_Esd_Dl.h **** 
   5:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_DataTypes.h"
   6:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_Platform.h"
   7:FT_Esd_Framework/FT_Esd_Dl.h **** #include "Ft_Esd.h"
   8:FT_Esd_Framework/FT_Esd_Dl.h **** #include "FT_Gpu.h"
   9:FT_Esd_Framework/FT_Esd_Dl.h **** #include "Ft_Esd_BitmapInfo.h"
  10:FT_Esd_Framework/FT_Esd_Dl.h **** 
  11:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_CATEGORY(EsdUtilities, DisplayName = "ESD Utilities")
  12:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_CATEGORY(EveRenderFunctions, DisplayName = "EVE Render Functions")
  13:FT_Esd_Framework/FT_Esd_Dl.h **** 
  14:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_TYPE(Ft_Gpu_Hal_Context_t *, Native = Pointer, Edit = Library)
  15:FT_Esd_Framework/FT_Esd_Dl.h **** 
  16:FT_Esd_Framework/FT_Esd_Dl.h **** // Keep cache of displaylist values that don't often change but are generally set by every widget t
  17:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_OPTIMIZE_DISPLAYLIST 1
  18:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_STATE_STACK_SIZE 5
  19:FT_Esd_Framework/FT_Esd_Dl.h **** 
  20:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_BITMAPHANDLE_INVALID 255
  21:FT_Esd_Framework/FT_Esd_Dl.h **** 
  22:FT_Esd_Framework/FT_Esd_Dl.h **** //
  23:FT_Esd_Framework/FT_Esd_Dl.h **** // Structs
  24:FT_Esd_Framework/FT_Esd_Dl.h **** //
  25:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_ESD_OPTIMIZE_DISPLAYLIST
  26:FT_Esd_Framework/FT_Esd_Dl.h **** #define FT_ESD_STATE Ft_Esd_GpuState[Ft_Esd_GpuState_I]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 28


  27:FT_Esd_Framework/FT_Esd_Dl.h **** typedef struct
  28:FT_Esd_Framework/FT_Esd_Dl.h **** {
  29:FT_Esd_Framework/FT_Esd_Dl.h **** 	// Keep to a minimum
  30:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_81X_ENABLE
  31:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint32_t PaletteSource;
  32:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  33:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint32_t ColorRGB;
  34:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t ColorA;
  35:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t Handle;         // Current handle
  36:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t Cell;           // Current cell
  37:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_bool_t BitmapTransform; // BitmapTransform other than default is set
  38:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_81X_ENABLE
  39:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_uint8_t VertexFormat;   // Current vertex format
  40:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  41:FT_Esd_Framework/FT_Esd_Dl.h **** } Ft_Esd_GpuState_T;
  42:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  43:FT_Esd_Framework/FT_Esd_Dl.h **** 
  44:FT_Esd_Framework/FT_Esd_Dl.h **** //
  45:FT_Esd_Framework/FT_Esd_Dl.h **** // Globals
  46:FT_Esd_Framework/FT_Esd_Dl.h **** //
  47:FT_Esd_Framework/FT_Esd_Dl.h **** extern Ft_Gpu_Hal_Context_t *Ft_Esd_Host;
  48:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint16_t Ft_Esd_FontHeight[32];
  49:FT_Esd_Framework/FT_Esd_Dl.h **** #ifdef FT_ESD_OPTIMIZE_DISPLAYLIST
  50:FT_Esd_Framework/FT_Esd_Dl.h **** extern Ft_Esd_GpuState_T Ft_Esd_GpuState[FT_ESD_STATE_STACK_SIZE];
  51:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint8_t Ft_Esd_GpuState_I;
  52:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint32_t Ft_Esd_CoFgColor;
  53:FT_Esd_Framework/FT_Esd_Dl.h **** extern ft_uint32_t Ft_Esd_CoBgColor;
  54:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  55:FT_Esd_Framework/FT_Esd_Dl.h **** 
  56:FT_Esd_Framework/FT_Esd_Dl.h **** //Get the height of builtin font
  57:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_GetFontHeight, Type = ft_uint16_t ,DisplayName = "Get Font Height", Category = 
  58:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(i, Type = int, DisplayName = "Bitmap Handle", Default = 0, Min = 0, Max = 31)
  59:FT_Esd_Framework/FT_Esd_Dl.h **** // inline static ft_uint16_t Ft_Esd_GetFontHeight(int i) { return Ft_Esd_FontHeight[i]; }
  60:FT_Esd_Framework/FT_Esd_Dl.h **** #define Ft_Esd_GetFontHeight(i) (Ft_Esd_FontHeight[i]);
  61:FT_Esd_Framework/FT_Esd_Dl.h **** 
  62:FT_Esd_Framework/FT_Esd_Dl.h **** // Reset any cached state
  63:FT_Esd_Framework/FT_Esd_Dl.h **** void Ft_Esd_ResetGpuState();
  64:FT_Esd_Framework/FT_Esd_Dl.h **** void Ft_Esd_ResetCoState();
  65:FT_Esd_Framework/FT_Esd_Dl.h **** 
  66:FT_Esd_Framework/FT_Esd_Dl.h **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotalUsed();
  67:FT_Esd_Framework/FT_Esd_Dl.h **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotal();
  68:FT_Esd_Framework/FT_Esd_Dl.h **** 
  69:FT_Esd_Framework/FT_Esd_Dl.h **** /// Set current tag. Must be returned to 255 after usage, to ensure next widgets don't draw with in
  70:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_TAG, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  71:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(s, Type = ft_uint8_t, DisplayName = "Tag", Default = 255, Min = 0, Max = 255)
  72:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_TAG(ft_uint8_t s)
  73:FT_Esd_Framework/FT_Esd_Dl.h **** {
  74:FT_Esd_Framework/FT_Esd_Dl.h **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, TAG(s));
  75:FT_Esd_Framework/FT_Esd_Dl.h **** }
  76:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify color RGB
  77:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_RGB, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  78:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(c, Type = ft_rgb32_t, DisplayName = "Color")
  79:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_RGB(ft_rgb32_t c)
  80:FT_Esd_Framework/FT_Esd_Dl.h **** {
  81:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  82:FT_Esd_Framework/FT_Esd_Dl.h **** 	ft_rgb32_t rgb = c & 0xFFFFFF;
  83:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (rgb != FT_ESD_STATE.ColorRGB)
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 29


  84:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
  85:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  86:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, (4UL << 24) | (rgb));
  87:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  88:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.ColorRGB = rgb;
  89:FT_Esd_Framework/FT_Esd_Dl.h **** 	}
  90:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
  91:FT_Esd_Framework/FT_Esd_Dl.h **** }
  92:FT_Esd_Framework/FT_Esd_Dl.h **** //Specify alpha channel
  93:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_A, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  94:FT_Esd_Framework/FT_Esd_Dl.h **** ESD_PARAMETER(alpha, Type = ft_uint8_t, Default = 255, Min = 0, Max = 255)
  95:FT_Esd_Framework/FT_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_A(ft_uint8_t alpha)
  96:FT_Esd_Framework/FT_Esd_Dl.h **** {
  97:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  98:FT_Esd_Framework/FT_Esd_Dl.h **** 	if (alpha != FT_ESD_STATE.ColorA)
 910              		.loc 4 98 0
 911 0010 B74B     		ldr	r3, .L98
 912 0012 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 913 0014 B74B     		ldr	r3, .L98+4
 914 0016 03EB0213 		add	r3, r3, r2, lsl #4
 915 001a 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 916 001c 9842     		cmp	r0, r3
 917 001e 0CD0     		beq	.L52
 918 0020 0646     		mov	r6, r0
  99:FT_Esd_Framework/FT_Esd_Dl.h **** 	{
 100:FT_Esd_Framework/FT_Esd_Dl.h **** #endif
 101:FT_Esd_Framework/FT_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, COLOR_A(alpha));
 919              		.loc 4 101 0
 920 0022 40F08051 		orr	r1, r0, #268435456
 921 0026 B44B     		ldr	r3, .L98+8
 922 0028 1868     		ldr	r0, [r3]
 923              	.LVL113:
 924 002a FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 925              	.LVL114:
 102:FT_Esd_Framework/FT_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 103:FT_Esd_Framework/FT_Esd_Dl.h **** 		FT_ESD_STATE.ColorA = alpha;
 926              		.loc 4 103 0
 927 002e B04B     		ldr	r3, .L98
 928 0030 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 929 0032 B04B     		ldr	r3, .L98+4
 930 0034 03EB0213 		add	r3, r3, r2, lsl #4
 931 0038 1E72     		strb	r6, [r3, #8]
 932              	.L52:
 933              	.LBE46:
 934              	.LBE45:
  74:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	Ft_Esd_Dl_TAG(s);
 935              		.loc 1 74 0
 936 003a 271D     		adds	r7, r4, #4
 937 003c 3846     		mov	r0, r7
 938 003e FFF7FEFF 		bl	Ft_Esd_TouchTag_Tag
 939              	.LVL115:
 940              	.LBB47:
 941              	.LBB48:
  74:FT_Esd_Framework/FT_Esd_Dl.h **** }
 942              		.loc 4 74 0
 943 0042 40F04071 		orr	r1, r0, #50331648
 944 0046 AC4B     		ldr	r3, .L98+8
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 30


 945 0048 1868     		ldr	r0, [r3]
 946              	.LVL116:
 947 004a FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 948              	.LVL117:
 949              	.LBE48:
 950              	.LBE47:
  76:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	ft_rgb32_t color = Ft_Esd_Theme_GetBackColor(theme);
 951              		.loc 1 76 0
 952 004e E369     		ldr	r3, [r4, #28]
 953 0050 2846     		mov	r0, r5
 954 0052 9847     		blx	r3
 955              	.LVL118:
 956              	.LBB49:
 957              	.LBB50:
  37:FT_Esd_Widgets/FT_Esd_Theme.h **** 
 958              		.loc 2 37 0
 959 0054 0028     		cmp	r0, #0
 960 0056 00F0D881 		beq	.L96
 961 005a D0F804A0 		ldr	r10, [r0, #4]
 962              	.LVL119:
 963              	.L54:
 964              	.LBE50:
 965              	.LBE49:
  78:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int y = context->Y(parent);
 966              		.loc 1 78 0
 967 005e 636A     		ldr	r3, [r4, #36]
 968 0060 2846     		mov	r0, r5
 969 0062 9847     		blx	r3
 970              	.LVL120:
 971 0064 0646     		mov	r6, r0
 972              	.LVL121:
  79:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int left = context->Width(parent);
 973              		.loc 1 79 0
 974 0066 A36A     		ldr	r3, [r4, #40]
 975 0068 2846     		mov	r0, r5
 976              	.LVL122:
 977 006a 9847     		blx	r3
 978              	.LVL123:
 979 006c 8046     		mov	r8, r0
 980              	.LVL124:
  80:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int right = context->Height(parent);
 981              		.loc 1 80 0
 982 006e E36A     		ldr	r3, [r4, #44]
 983 0070 2846     		mov	r0, r5
 984              	.LVL125:
 985 0072 9847     		blx	r3
 986              	.LVL126:
 987 0074 8146     		mov	r9, r0
 988              	.LVL127:
  81:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int if_1 = left <= right;
 989              		.loc 1 81 0
 990 0076 236B     		ldr	r3, [r4, #48]
 991 0078 2846     		mov	r0, r5
 992              	.LVL128:
 993 007a 9847     		blx	r3
 994              	.LVL129:
  84:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	{
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 31


 995              		.loc 1 84 0
 996 007c 8145     		cmp	r9, r0
 997 007e 00F3C981 		bgt	.L55
  86:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	}
 998              		.loc 1 86 0
 999 0082 E36A     		ldr	r3, [r4, #44]
 1000 0084 2846     		mov	r0, r5
 1001              	.LVL130:
 1002 0086 9847     		blx	r3
 1003              	.LVL131:
 1004 0088 8146     		mov	r9, r0
 1005              	.LVL132:
 1006              	.L56:
  92:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	ft_int16_t radius = 4;
 1007              		.loc 1 92 0
 1008 008a 236B     		ldr	r3, [r4, #48]
 1009 008c 2846     		mov	r0, r5
 1010              	.LVL133:
 1011 008e 9847     		blx	r3
 1012              	.LVL134:
  94:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	ft_bool_t left_1 = context->Value;
 1013              		.loc 1 94 0
 1014 0090 0423     		movs	r3, #4
 1015 0092 0193     		str	r3, [sp, #4]
 1016 0094 00B2     		sxth	r0, r0
 1017              	.LVL135:
 1018 0096 0090     		str	r0, [sp]
 1019 0098 0FFA89F3 		sxth	r3, r9
 1020 009c 0FFA88F2 		sxth	r2, r8
 1021 00a0 31B2     		sxth	r1, r6
 1022 00a2 5046     		mov	r0, r10
 1023 00a4 FFF7FEFF 		bl	Ft_Esd_Elements_PanelSunken
 1024              	.LVL136:
  95:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	ft_bool_t right_1 = Ft_Esd_TouchTag_Inside(&context->Touch_Tag);
 1025              		.loc 1 95 0
 1026 00a8 94F83C60 		ldrb	r6, [r4, #60]	@ zero_extendqisi2
 1027              	.LVL137:
  96:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int if_2 = left_1 || right_1;
 1028              		.loc 1 96 0
 1029 00ac 3846     		mov	r0, r7
 1030 00ae FFF7FEFF 		bl	Ft_Esd_TouchTag_Inside
 1031              	.LVL138:
  98:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	{
 1032              		.loc 1 98 0
 1033 00b2 3043     		orrs	r0, r0, r6
 1034              	.LVL139:
 1035 00b4 10F0FF0F 		tst	r0, #255
 1036 00b8 00F09B81 		beq	.L57
 1037              	.LBB52:
 100:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_5 = context->Width(parent);
 1038              		.loc 1 100 0
 1039 00bc 636A     		ldr	r3, [r4, #36]
 1040 00be 2846     		mov	r0, r5
 1041 00c0 9847     		blx	r3
 1042              	.LVL140:
 1043 00c2 8046     		mov	r8, r0
 1044              	.LVL141:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 32


 101:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_3 = context->Height(parent);
 1045              		.loc 1 101 0
 1046 00c4 E36A     		ldr	r3, [r4, #44]
 1047 00c6 2846     		mov	r0, r5
 1048              	.LVL142:
 1049 00c8 9847     		blx	r3
 1050              	.LVL143:
 1051 00ca 0646     		mov	r6, r0
 1052              	.LVL144:
 102:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_3 = left_5 <= right_3;
 1053              		.loc 1 102 0
 1054 00cc 236B     		ldr	r3, [r4, #48]
 1055 00ce 2846     		mov	r0, r5
 1056              	.LVL145:
 1057 00d0 9847     		blx	r3
 1058              	.LVL146:
 105:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 1059              		.loc 1 105 0
 1060 00d2 8642     		cmp	r6, r0
 1061 00d4 00F3A381 		bgt	.L58
 107:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 1062              		.loc 1 107 0
 1063 00d8 E36A     		ldr	r3, [r4, #44]
 1064 00da 2846     		mov	r0, r5
 1065              	.LVL147:
 1066 00dc 9847     		blx	r3
 1067              	.LVL148:
 1068              	.L59:
 114:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_2 = left_3 + right_2;
 1069              		.loc 1 114 0
 1070 00de 874B     		ldr	r3, .L98+12
 1071 00e0 83FB0023 		smull	r2, r3, r3, r0
 1072 00e4 C017     		asrs	r0, r0, #31
 1073              	.LVL149:
 1074 00e6 C0EBA300 		rsb	r0, r0, r3, asr #2
 1075              	.LVL150:
 115:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_7 = context->Width(parent);
 1076              		.loc 1 115 0
 1077 00ea 8044     		add	r8, r8, r0
 1078              	.LVL151:
 116:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_6 = context->Height(parent);
 1079              		.loc 1 116 0
 1080 00ec E36A     		ldr	r3, [r4, #44]
 1081 00ee 2846     		mov	r0, r5
 1082              	.LVL152:
 1083 00f0 9847     		blx	r3
 1084              	.LVL153:
 1085 00f2 0646     		mov	r6, r0
 1086              	.LVL154:
 117:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_4 = left_7 <= right_6;
 1087              		.loc 1 117 0
 1088 00f4 236B     		ldr	r3, [r4, #48]
 1089 00f6 2846     		mov	r0, r5
 1090              	.LVL155:
 1091 00f8 9847     		blx	r3
 1092              	.LVL156:
 120:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 33


 1093              		.loc 1 120 0
 1094 00fa 8642     		cmp	r6, r0
 1095 00fc 00F39381 		bgt	.L60
 122:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 1096              		.loc 1 122 0
 1097 0100 E36A     		ldr	r3, [r4, #44]
 1098 0102 2846     		mov	r0, r5
 1099              	.LVL157:
 1100 0104 9847     		blx	r3
 1101              	.LVL158:
 1102              	.L61:
 129:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int x0 = left_2 + right_5;
 1103              		.loc 1 129 0
 1104 0106 7D4B     		ldr	r3, .L98+12
 1105 0108 83FB0023 		smull	r2, r3, r3, r0
 1106 010c C017     		asrs	r0, r0, #31
 1107              	.LVL159:
 1108 010e C0EBA300 		rsb	r0, r0, r3, asr #2
 1109              	.LVL160:
 130:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_8 = context->Y(parent);
 1110              		.loc 1 130 0
 1111 0112 8044     		add	r8, r8, r0
 1112              	.LVL161:
 131:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_10 = context->Width(parent);
 1113              		.loc 1 131 0
 1114 0114 A36A     		ldr	r3, [r4, #40]
 1115 0116 2846     		mov	r0, r5
 1116              	.LVL162:
 1117 0118 9847     		blx	r3
 1118              	.LVL163:
 1119 011a 8146     		mov	r9, r0
 1120              	.LVL164:
 132:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_9 = context->Height(parent);
 1121              		.loc 1 132 0
 1122 011c E36A     		ldr	r3, [r4, #44]
 1123 011e 2846     		mov	r0, r5
 1124              	.LVL165:
 1125 0120 9847     		blx	r3
 1126              	.LVL166:
 1127 0122 0646     		mov	r6, r0
 1128              	.LVL167:
 133:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_5 = left_10 <= right_9;
 1129              		.loc 1 133 0
 1130 0124 236B     		ldr	r3, [r4, #48]
 1131 0126 2846     		mov	r0, r5
 1132              	.LVL168:
 1133 0128 9847     		blx	r3
 1134              	.LVL169:
 136:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 1135              		.loc 1 136 0
 1136 012a 8642     		cmp	r6, r0
 1137 012c 00F37F81 		bgt	.L62
 138:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 1138              		.loc 1 138 0
 1139 0130 E36A     		ldr	r3, [r4, #44]
 1140 0132 2846     		mov	r0, r5
 1141              	.LVL170:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 34


 1142 0134 9847     		blx	r3
 1143              	.LVL171:
 1144              	.L63:
 145:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int y0 = left_8 + right_8;
 1145              		.loc 1 145 0
 1146 0136 0346     		mov	r3, r0
 1147 0138 0028     		cmp	r0, #0
 1148 013a C0F27C81 		blt	.L97
 1149              	.L64:
 1150              	.LVL172:
 146:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_11 = context->X(parent);
 1151              		.loc 1 146 0
 1152 013e 09EB6309 		add	r9, r9, r3, asr #1
 1153              	.LVL173:
 147:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_13 = context->Width(parent);
 1154              		.loc 1 147 0
 1155 0142 636A     		ldr	r3, [r4, #36]
 1156              	.LVL174:
 1157 0144 2846     		mov	r0, r5
 1158              	.LVL175:
 1159 0146 9847     		blx	r3
 1160              	.LVL176:
 1161 0148 8246     		mov	r10, r0
 1162              	.LVL177:
 148:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_12 = context->Height(parent);
 1163              		.loc 1 148 0
 1164 014a E36A     		ldr	r3, [r4, #44]
 1165 014c 2846     		mov	r0, r5
 1166              	.LVL178:
 1167 014e 9847     		blx	r3
 1168              	.LVL179:
 1169 0150 0646     		mov	r6, r0
 1170              	.LVL180:
 149:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_6 = left_13 <= right_12;
 1171              		.loc 1 149 0
 1172 0152 236B     		ldr	r3, [r4, #48]
 1173 0154 2846     		mov	r0, r5
 1174              	.LVL181:
 1175 0156 9847     		blx	r3
 1176              	.LVL182:
 152:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 1177              		.loc 1 152 0
 1178 0158 8642     		cmp	r6, r0
 1179 015a 00F36E81 		bgt	.L65
 154:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 1180              		.loc 1 154 0
 1181 015e E36A     		ldr	r3, [r4, #44]
 1182 0160 2846     		mov	r0, r5
 1183              	.LVL183:
 1184 0162 9847     		blx	r3
 1185              	.LVL184:
 1186              	.L66:
 161:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int x1 = left_11 + right_11;
 1187              		.loc 1 161 0
 1188 0164 664B     		ldr	r3, .L98+16
 1189 0166 83FB0023 		smull	r2, r3, r3, r0
 1190 016a A3EBE070 		sub	r0, r3, r0, asr #31
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 35


 1191              	.LVL185:
 162:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_16 = context->Y(parent);
 1192              		.loc 1 162 0
 1193 016e 8244     		add	r10, r10, r0
 1194              	.LVL186:
 163:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_17 = context->Width(parent);
 1195              		.loc 1 163 0
 1196 0170 A36A     		ldr	r3, [r4, #40]
 1197 0172 2846     		mov	r0, r5
 1198              	.LVL187:
 1199 0174 9847     		blx	r3
 1200              	.LVL188:
 1201 0176 0646     		mov	r6, r0
 1202              	.LVL189:
 164:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_15 = context->Height(parent);
 1203              		.loc 1 164 0
 1204 0178 E36A     		ldr	r3, [r4, #44]
 1205 017a 2846     		mov	r0, r5
 1206              	.LVL190:
 1207 017c 9847     		blx	r3
 1208              	.LVL191:
 1209 017e 0746     		mov	r7, r0
 1210              	.LVL192:
 165:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_7 = left_17 <= right_15;
 1211              		.loc 1 165 0
 1212 0180 236B     		ldr	r3, [r4, #48]
 1213 0182 2846     		mov	r0, r5
 1214              	.LVL193:
 1215 0184 9847     		blx	r3
 1216              	.LVL194:
 168:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 1217              		.loc 1 168 0
 1218 0186 8742     		cmp	r7, r0
 1219 0188 00F35B81 		bgt	.L67
 170:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 1220              		.loc 1 170 0
 1221 018c E36A     		ldr	r3, [r4, #44]
 1222 018e 2846     		mov	r0, r5
 1223              	.LVL195:
 1224 0190 9847     		blx	r3
 1225              	.LVL196:
 1226              	.L68:
 176:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_19 = context->Width(parent);
 1227              		.loc 1 176 0
 1228 0192 8719     		adds	r7, r0, r6
 1229              	.LVL197:
 177:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_17 = context->Height(parent);
 1230              		.loc 1 177 0
 1231 0194 E36A     		ldr	r3, [r4, #44]
 1232 0196 2846     		mov	r0, r5
 1233              	.LVL198:
 1234 0198 9847     		blx	r3
 1235              	.LVL199:
 1236 019a 0646     		mov	r6, r0
 1237              	.LVL200:
 178:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_8 = left_19 <= right_17;
 1238              		.loc 1 178 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 36


 1239 019c 236B     		ldr	r3, [r4, #48]
 1240 019e 2846     		mov	r0, r5
 1241              	.LVL201:
 1242 01a0 9847     		blx	r3
 1243              	.LVL202:
 181:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 1244              		.loc 1 181 0
 1245 01a2 8642     		cmp	r6, r0
 1246 01a4 00F35181 		bgt	.L69
 183:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 1247              		.loc 1 183 0
 1248 01a8 E36A     		ldr	r3, [r4, #44]
 1249 01aa 2846     		mov	r0, r5
 1250              	.LVL203:
 1251 01ac 9847     		blx	r3
 1252              	.LVL204:
 1253              	.L70:
 190:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_14 = left_15 - right_16;
 1254              		.loc 1 190 0
 1255 01ae 534B     		ldr	r3, .L98+12
 1256 01b0 83FB0023 		smull	r2, r3, r3, r0
 1257 01b4 C617     		asrs	r6, r0, #31
 1258              	.LVL205:
 1259 01b6 C6EBA306 		rsb	r6, r6, r3, asr #2
 1260              	.LVL206:
 191:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_21 = context->Width(parent);
 1261              		.loc 1 191 0
 1262 01ba BE1B     		subs	r6, r7, r6
 1263              	.LVL207:
 192:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_20 = context->Height(parent);
 1264              		.loc 1 192 0
 1265 01bc E36A     		ldr	r3, [r4, #44]
 1266              	.LVL208:
 1267 01be 2846     		mov	r0, r5
 1268              	.LVL209:
 1269 01c0 9847     		blx	r3
 1270              	.LVL210:
 1271 01c2 0746     		mov	r7, r0
 1272              	.LVL211:
 193:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_9 = left_21 <= right_20;
 1273              		.loc 1 193 0
 1274 01c4 236B     		ldr	r3, [r4, #48]
 1275 01c6 2846     		mov	r0, r5
 1276              	.LVL212:
 1277 01c8 9847     		blx	r3
 1278              	.LVL213:
 196:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 1279              		.loc 1 196 0
 1280 01ca 8742     		cmp	r7, r0
 1281 01cc 00F34181 		bgt	.L71
 198:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 1282              		.loc 1 198 0
 1283 01d0 E36A     		ldr	r3, [r4, #44]
 1284 01d2 2846     		mov	r0, r5
 1285              	.LVL214:
 1286 01d4 9847     		blx	r3
 1287              	.LVL215:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 37


 1288              	.L72:
 205:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int y1 = left_14 - right_19;
 1289              		.loc 1 205 0
 1290 01d6 494F     		ldr	r7, .L98+12
 1291              	.LVL216:
 1292 01d8 87FB0037 		smull	r3, r7, r7, r0
 1293 01dc C017     		asrs	r0, r0, #31
 1294              	.LVL217:
 1295 01de C0EBA700 		rsb	r0, r0, r7, asr #2
 1296              	.LVL218:
 206:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_24 = context->Width(parent);
 1297              		.loc 1 206 0
 1298 01e2 371A     		subs	r7, r6, r0
 1299              	.LVL219:
 207:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_22 = context->Height(parent);
 1300              		.loc 1 207 0
 1301 01e4 E36A     		ldr	r3, [r4, #44]
 1302 01e6 2846     		mov	r0, r5
 1303              	.LVL220:
 1304 01e8 9847     		blx	r3
 1305              	.LVL221:
 1306 01ea 0646     		mov	r6, r0
 1307              	.LVL222:
 208:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_10 = left_24 <= right_22;
 1308              		.loc 1 208 0
 1309 01ec 236B     		ldr	r3, [r4, #48]
 1310 01ee 2846     		mov	r0, r5
 1311              	.LVL223:
 1312 01f0 9847     		blx	r3
 1313              	.LVL224:
 211:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 1314              		.loc 1 211 0
 1315 01f2 8642     		cmp	r6, r0
 1316 01f4 00F33181 		bgt	.L73
 213:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 1317              		.loc 1 213 0
 1318 01f8 E36A     		ldr	r3, [r4, #44]
 1319 01fa 2846     		mov	r0, r5
 1320              	.LVL225:
 1321 01fc 9847     		blx	r3
 1322              	.LVL226:
 1323              	.L74:
 220:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_24 = 2L;
 1324              		.loc 1 220 0
 1325 01fe 3F4E     		ldr	r6, .L98+12
 1326              	.LVL227:
 1327 0200 86FB0036 		smull	r3, r6, r6, r0
 1328 0204 C017     		asrs	r0, r0, #31
 1329              	.LVL228:
 1330 0206 C0EBA606 		rsb	r6, r0, r6, asr #2
 1331              	.LVL229:
 223:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		Ft_Esd_Render_Line(x0, y0, x1, y1, width_1, color_1);
 1332              		.loc 1 223 0
 1333 020a 2046     		mov	r0, r4
 1334 020c FFF7FEFF 		bl	Ft_Esd_CheckBox_Color_A_RGB_Combine__return
 1335              	.LVL230:
 1336              	.LBB53:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 38


 1337              	.LBB54:
  27:FT_Esd_Framework/FT_Esd_Primitives.h **** 
  28:FT_Esd_Framework/FT_Esd_Primitives.h **** // Basic bitmap rendering
  29:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_RENDER(Ft_Esd_Render_Bitmap, Type = ft_void_t, DisplayName = "ESD Bitmap", Category = EsdPrimit
  30:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(x, Type = ft_int16_t, Default = 0)
  31:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(y, Type = ft_int16_t, Default = 0)
  32:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(bitmapCell, Type = Ft_Esd_BitmapCell *, DisplayName = "Bitmap Cell")
  33:FT_Esd_Framework/FT_Esd_Primitives.h **** // Color to be multiplied with bitmap color, can be used for alpha fade for example
  34:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(c, Type = ft_argb32_t, DisplayName = "Color", Default = #FFFFFFFF)
  35:FT_Esd_Framework/FT_Esd_Primitives.h **** ft_void_t Ft_Esd_Render_Bitmap(ft_int16_t x, ft_int16_t y, Ft_Esd_BitmapCell *bitmapCell, ft_argb32
  36:FT_Esd_Framework/FT_Esd_Primitives.h **** 
  37:FT_Esd_Framework/FT_Esd_Primitives.h **** // Scaled bitmap rendering
  38:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_RENDER(Ft_Esd_Render_BitmapScaled, Type = ft_void_t, DisplayName = "ESD Bitmap Scaled", Categor
  39:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(x, Type = ft_int16_t, Default = 0)
  40:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(y, Type = ft_int16_t, Default = 0)
  41:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(bitmapCell, Type = Ft_Esd_BitmapCell *, DisplayName = "Bitmap Cell")
  42:FT_Esd_Framework/FT_Esd_Primitives.h **** // Color to be multiplied with bitmap color, can be used for alpha fade for example
  43:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(c, Type = ft_argb32_t, DisplayName = "Color", Default = #FFFFFFFF)
  44:FT_Esd_Framework/FT_Esd_Primitives.h **** // Horizontal scaling factor
  45:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(xscale, Type = ft_int32_f16_t, DisplayName = "Horizontal Scale", Default = 1)
  46:FT_Esd_Framework/FT_Esd_Primitives.h **** // Vertical scaling factor
  47:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(yscale, Type = ft_int32_f16_t, DisplayName = "Vertical Scale", Default = 1)
  48:FT_Esd_Framework/FT_Esd_Primitives.h **** // Horizontal offset
  49:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(xoffset, Type = ft_int32_f16_t, DisplayName = "X Offset", Default = 0)
  50:FT_Esd_Framework/FT_Esd_Primitives.h **** // Vertical offset
  51:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(yoffset, Type = ft_int32_f16_t, DisplayName = "Y Offset", Default = 0)
  52:FT_Esd_Framework/FT_Esd_Primitives.h **** // Width used as rendering boundary
  53:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(width, Type = ft_int16_t, DisplayName = "Render Width", Default = 200)
  54:FT_Esd_Framework/FT_Esd_Primitives.h **** // Height used as rendering boundary
  55:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(height, Type = ft_int16_t, DisplayName = "Render Height", Default = 100)
  56:FT_Esd_Framework/FT_Esd_Primitives.h **** ft_void_t Ft_Esd_Render_BitmapScaled(ft_int16_t x, ft_int16_t y, Ft_Esd_BitmapCell *bitmapCell, ft_
  57:FT_Esd_Framework/FT_Esd_Primitives.h **** 
  58:FT_Esd_Framework/FT_Esd_Primitives.h **** 
  59:FT_Esd_Framework/FT_Esd_Primitives.h **** // Rotated bitmap rendering
  60:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_RENDER(Ft_Esd_Render_BitmapRotate, Type = ft_void_t, DisplayName = "ESD Bitmap Rotated", Catego
  61:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(x, Type = ft_int16_t, Default = 0)
  62:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(y, Type = ft_int16_t, Default = 0)
  63:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(bitmapCell, Type = Ft_Esd_BitmapCell *, DisplayName = "Bitmap Cell")
  64:FT_Esd_Framework/FT_Esd_Primitives.h **** // Color to be multiplied with bitmap color, can be used for alpha fade for example
  65:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(c, Type = ft_argb32_t, DisplayName = "Color", Default = #FFFFFFFF)
  66:FT_Esd_Framework/FT_Esd_Primitives.h **** //rotation parameter
  67:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(rotateEffi, Type = ft_int32_t, DisplayName = "rotation angle", Default = 0)
  68:FT_Esd_Framework/FT_Esd_Primitives.h **** // center point X 
  69:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(x_center, Type = ft_int32_f16_t, DisplayName = "X of center point", Default = 0)
  70:FT_Esd_Framework/FT_Esd_Primitives.h **** // certer point y
  71:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(y_center, Type = ft_int32_f16_t, DisplayName = "Y of center point", Default = 0)
  72:FT_Esd_Framework/FT_Esd_Primitives.h **** // Width used as rendering boundary
  73:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(width, Type = ft_int16_t, DisplayName = "Render Width", Default = 200)
  74:FT_Esd_Framework/FT_Esd_Primitives.h **** // Height used as rendering boundary
  75:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(height, Type = ft_int16_t, DisplayName = "Render Height", Default = 100)
  76:FT_Esd_Framework/FT_Esd_Primitives.h **** //radius of needle
  77:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(radius, Type = ft_int16_t, DisplayName = "rotation radius", Default = 0)
  78:FT_Esd_Framework/FT_Esd_Primitives.h **** ft_void_t Ft_Esd_Render_BitmapRotate(ft_int16_t x, ft_int16_t y, Ft_Esd_BitmapCell *bitmapCell, ft_
  79:FT_Esd_Framework/FT_Esd_Primitives.h **** 
  80:FT_Esd_Framework/FT_Esd_Primitives.h **** 
  81:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_RENDER(Ft_Esd_Render_RectangleF, Type = ft_void_t, DisplayName = "ESD Rectangle (Fixed Point)",
  82:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(x, Type = ft_int32_f4_t, Default = 0)
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 39


  83:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(y, Type = ft_int32_f4_t, Default = 0)
  84:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(width, Type = ft_int32_f4_t, Default = 60)
  85:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(height, Type = ft_int32_f4_t, Default = 20)
  86:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(radius, Type = ft_int32_f4_t, Default = 4)
  87:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(color, Type = ft_argb32_t, DisplayName = "Color", Default = #FFFFFFFF)
  88:FT_Esd_Framework/FT_Esd_Primitives.h **** ft_void_t Ft_Esd_Render_RectangleF(ft_int32_f4_t x, ft_int32_f4_t y, ft_int32_f4_t w, ft_int32_f4_t
  89:FT_Esd_Framework/FT_Esd_Primitives.h **** 
  90:FT_Esd_Framework/FT_Esd_Primitives.h **** // Basic rectangle rendering
  91:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_RENDER(Ft_Esd_Render_Rectangle, Type = ft_void_t, DisplayName = "ESD Rectangle (Integer)", Incl
  92:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(x, Type = ft_int32_t, Default = 0)
  93:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(y, Type = ft_int32_t, Default = 0)
  94:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(width, Type = ft_int32_t, Default = 60)
  95:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(height, Type = ft_int32_t, Default = 20)
  96:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(radius, Type = ft_int32_t, Default = 4)
  97:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(color, Type = ft_argb32_t, DisplayName = "Color", Default = #FFFFFFFF)
  98:FT_Esd_Framework/FT_Esd_Primitives.h **** static inline ft_void_t Ft_Esd_Render_Rectangle(ft_int32_t x, ft_int32_t y, ft_int32_f4_t w, ft_int
  99:FT_Esd_Framework/FT_Esd_Primitives.h **** { Ft_Esd_Render_RectangleF(x << 4, y << 4, w << 4, h << 4, radius << 4, color); }
 100:FT_Esd_Framework/FT_Esd_Primitives.h **** 
 101:FT_Esd_Framework/FT_Esd_Primitives.h **** 
 102:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_RENDER(Ft_Esd_Render_LineF, Type = ft_void_t, DisplayName = "ESD Line (Fixed Point)", Include =
 103:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(x0, Type = ft_int32_f4_t, Default = 0)
 104:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(y0, Type = ft_int32_f4_t, Default = 0)
 105:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(x1, Type = ft_int32_f4_t, Default = 60)
 106:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(y1, Type = ft_int32_f4_t, Default = 20)
 107:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(width, Type = ft_int32_f3_t, Default = 2, EditRole = None)
 108:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(color, Type = ft_argb32_t, DisplayName = "Color", Default = #FFFFFFFF)
 109:FT_Esd_Framework/FT_Esd_Primitives.h **** ft_void_t Ft_Esd_Render_LineF(ft_int32_f4_t x0, ft_int32_f4_t y0, ft_int32_f4_t x1, ft_int32_f4_t y
 110:FT_Esd_Framework/FT_Esd_Primitives.h **** 
 111:FT_Esd_Framework/FT_Esd_Primitives.h **** // Basic line rendering
 112:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_RENDER(Ft_Esd_Render_Line, Type = ft_void_t, DisplayName = "ESD Line (Integer)", Include = "FT_
 113:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(x0, Type = ft_int32_t, Default = 0)
 114:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(y0, Type = ft_int32_t, Default = 0)
 115:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(x1, Type = ft_int32_t, Default = 60)
 116:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(y1, Type = ft_int32_t, Default = 20)
 117:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(width, Type = ft_int32_t, Default = 4, EditRole = None)
 118:FT_Esd_Framework/FT_Esd_Primitives.h **** ESD_PARAMETER(color, Type = ft_argb32_t, DisplayName = "Color", Default = #FFFFFFFF)
 119:FT_Esd_Framework/FT_Esd_Primitives.h **** static inline ft_void_t Ft_Esd_Render_Line(ft_int32_t x0, ft_int32_t y0, ft_int32_t x1, ft_int32_t 
 120:FT_Esd_Framework/FT_Esd_Primitives.h **** { Ft_Esd_Render_LineF(x0 << 4, y0 << 4, x1 << 4, y1 << 4, width << 3, color); }
 1338              		.loc 3 120 0
 1339 0210 0190     		str	r0, [sp, #4]
 1340 0212 3601     		lsls	r6, r6, #4
 1341              	.LVL231:
 1342 0214 0096     		str	r6, [sp]
 1343 0216 3B01     		lsls	r3, r7, #4
 1344 0218 4FEA0A12 		lsl	r2, r10, #4
 1345 021c 4FEA0911 		lsl	r1, r9, #4
 1346 0220 4FEA0810 		lsl	r0, r8, #4
 1347              	.LVL232:
 1348 0224 FFF7FEFF 		bl	Ft_Esd_Render_LineF
 1349              	.LVL233:
 1350              	.LBE54:
 1351              	.LBE53:
 225:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_27 = context->Width(parent);
 1352              		.loc 1 225 0
 1353 0228 636A     		ldr	r3, [r4, #36]
 1354 022a 2846     		mov	r0, r5
 1355 022c 9847     		blx	r3
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 40


 1356              	.LVL234:
 1357 022e 8146     		mov	r9, r0
 1358              	.LVL235:
 226:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_26 = context->Height(parent);
 1359              		.loc 1 226 0
 1360 0230 E36A     		ldr	r3, [r4, #44]
 1361 0232 2846     		mov	r0, r5
 1362              	.LVL236:
 1363 0234 9847     		blx	r3
 1364              	.LVL237:
 1365 0236 0646     		mov	r6, r0
 1366              	.LVL238:
 227:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_11 = left_27 <= right_26;
 1367              		.loc 1 227 0
 1368 0238 236B     		ldr	r3, [r4, #48]
 1369 023a 2846     		mov	r0, r5
 1370              	.LVL239:
 1371 023c 9847     		blx	r3
 1372              	.LVL240:
 230:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 1373              		.loc 1 230 0
 1374 023e 8642     		cmp	r6, r0
 1375 0240 00F30F81 		bgt	.L75
 232:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 1376              		.loc 1 232 0
 1377 0244 E36A     		ldr	r3, [r4, #44]
 1378 0246 2846     		mov	r0, r5
 1379              	.LVL241:
 1380 0248 9847     		blx	r3
 1381              	.LVL242:
 1382              	.L76:
 239:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int x0_1 = left_25 + right_25;
 1383              		.loc 1 239 0
 1384 024a 2D4B     		ldr	r3, .L98+16
 1385 024c 83FB0023 		smull	r2, r3, r3, r0
 1386 0250 A3EBE070 		sub	r0, r3, r0, asr #31
 1387              	.LVL243:
 240:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_30 = context->Y(parent);
 1388              		.loc 1 240 0
 1389 0254 8144     		add	r9, r9, r0
 1390              	.LVL244:
 241:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_31 = context->Width(parent);
 1391              		.loc 1 241 0
 1392 0256 A36A     		ldr	r3, [r4, #40]
 1393 0258 2846     		mov	r0, r5
 1394              	.LVL245:
 1395 025a 9847     		blx	r3
 1396              	.LVL246:
 1397 025c 0646     		mov	r6, r0
 1398              	.LVL247:
 242:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_29 = context->Height(parent);
 1399              		.loc 1 242 0
 1400 025e E36A     		ldr	r3, [r4, #44]
 1401 0260 2846     		mov	r0, r5
 1402              	.LVL248:
 1403 0262 9847     		blx	r3
 1404              	.LVL249:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 41


 1405 0264 0746     		mov	r7, r0
 1406              	.LVL250:
 243:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_12 = left_31 <= right_29;
 1407              		.loc 1 243 0
 1408 0266 236B     		ldr	r3, [r4, #48]
 1409 0268 2846     		mov	r0, r5
 1410              	.LVL251:
 1411 026a 9847     		blx	r3
 1412              	.LVL252:
 246:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 1413              		.loc 1 246 0
 1414 026c 8742     		cmp	r7, r0
 1415 026e 00F3FC80 		bgt	.L77
 248:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 1416              		.loc 1 248 0
 1417 0272 E36A     		ldr	r3, [r4, #44]
 1418 0274 2846     		mov	r0, r5
 1419              	.LVL253:
 1420 0276 9847     		blx	r3
 1421              	.LVL254:
 1422              	.L78:
 254:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_33 = context->Width(parent);
 1423              		.loc 1 254 0
 1424 0278 0644     		add	r6, r6, r0
 1425              	.LVL255:
 255:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_31 = context->Height(parent);
 1426              		.loc 1 255 0
 1427 027a E36A     		ldr	r3, [r4, #44]
 1428 027c 2846     		mov	r0, r5
 1429              	.LVL256:
 1430 027e 9847     		blx	r3
 1431              	.LVL257:
 1432 0280 0746     		mov	r7, r0
 1433              	.LVL258:
 256:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_13 = left_33 <= right_31;
 1434              		.loc 1 256 0
 1435 0282 236B     		ldr	r3, [r4, #48]
 1436 0284 2846     		mov	r0, r5
 1437              	.LVL259:
 1438 0286 9847     		blx	r3
 1439              	.LVL260:
 259:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 1440              		.loc 1 259 0
 1441 0288 8742     		cmp	r7, r0
 1442 028a 00F3F280 		bgt	.L79
 261:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 1443              		.loc 1 261 0
 1444 028e E36A     		ldr	r3, [r4, #44]
 1445 0290 2846     		mov	r0, r5
 1446              	.LVL261:
 1447 0292 9847     		blx	r3
 1448              	.LVL262:
 1449              	.L80:
 268:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_28 = left_29 - right_30;
 1450              		.loc 1 268 0
 1451 0294 194B     		ldr	r3, .L98+12
 1452 0296 83FB0023 		smull	r2, r3, r3, r0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 42


 1453 029a C017     		asrs	r0, r0, #31
 1454              	.LVL263:
 1455 029c C0EBA303 		rsb	r3, r0, r3, asr #2
 1456              	.LVL264:
 269:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_35 = context->Width(parent);
 1457              		.loc 1 269 0
 1458 02a0 F61A     		subs	r6, r6, r3
 1459              	.LVL265:
 270:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_34 = context->Height(parent);
 1460              		.loc 1 270 0
 1461 02a2 E36A     		ldr	r3, [r4, #44]
 1462              	.LVL266:
 1463 02a4 2846     		mov	r0, r5
 1464 02a6 9847     		blx	r3
 1465              	.LVL267:
 1466 02a8 0746     		mov	r7, r0
 1467              	.LVL268:
 271:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_14 = left_35 <= right_34;
 1468              		.loc 1 271 0
 1469 02aa 236B     		ldr	r3, [r4, #48]
 1470 02ac 2846     		mov	r0, r5
 1471              	.LVL269:
 1472 02ae 9847     		blx	r3
 1473              	.LVL270:
 274:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 1474              		.loc 1 274 0
 1475 02b0 8742     		cmp	r7, r0
 1476 02b2 00F3E280 		bgt	.L81
 276:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 1477              		.loc 1 276 0
 1478 02b6 E36A     		ldr	r3, [r4, #44]
 1479 02b8 2846     		mov	r0, r5
 1480              	.LVL271:
 1481 02ba 9847     		blx	r3
 1482              	.LVL272:
 1483              	.L82:
 283:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int y0_1 = left_28 - right_33;
 1484              		.loc 1 283 0
 1485 02bc 0F4B     		ldr	r3, .L98+12
 1486 02be 83FB0023 		smull	r2, r3, r3, r0
 1487 02c2 C017     		asrs	r0, r0, #31
 1488              	.LVL273:
 1489 02c4 C0EBA300 		rsb	r0, r0, r3, asr #2
 1490              	.LVL274:
 284:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_38 = context->X(parent);
 1491              		.loc 1 284 0
 1492 02c8 361A     		subs	r6, r6, r0
 1493              	.LVL275:
 285:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_39 = context->Width(parent);
 1494              		.loc 1 285 0
 1495 02ca 636A     		ldr	r3, [r4, #36]
 1496 02cc 2846     		mov	r0, r5
 1497              	.LVL276:
 1498 02ce 9847     		blx	r3
 1499              	.LVL277:
 1500 02d0 0746     		mov	r7, r0
 1501              	.LVL278:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 43


 286:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_37 = context->Height(parent);
 1502              		.loc 1 286 0
 1503 02d2 E36A     		ldr	r3, [r4, #44]
 1504 02d4 2846     		mov	r0, r5
 1505              	.LVL279:
 1506 02d6 9847     		blx	r3
 1507              	.LVL280:
 1508 02d8 8046     		mov	r8, r0
 1509              	.LVL281:
 287:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_15 = left_39 <= right_37;
 1510              		.loc 1 287 0
 1511 02da 236B     		ldr	r3, [r4, #48]
 1512 02dc 2846     		mov	r0, r5
 1513              	.LVL282:
 1514 02de 9847     		blx	r3
 1515              	.LVL283:
 290:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 1516              		.loc 1 290 0
 1517 02e0 8045     		cmp	r8, r0
 1518 02e2 00F3CE80 		bgt	.L83
 292:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 1519              		.loc 1 292 0
 1520 02e6 E36A     		ldr	r3, [r4, #44]
 1521 02e8 2846     		mov	r0, r5
 1522              	.LVL284:
 1523 02ea 9847     		blx	r3
 1524              	.LVL285:
 1525 02ec 0AE0     		b	.L99
 1526              	.L100:
 1527 02ee 00BF     		.align	2
 1528              	.L98:
 1529 02f0 00000000 		.word	Ft_Esd_GpuState_I
 1530 02f4 00000000 		.word	Ft_Esd_GpuState
 1531 02f8 00000000 		.word	Ft_Esd_Host
 1532 02fc 67666666 		.word	1717986919
 1533 0300 56555555 		.word	1431655766
 1534              	.L99:
 1535              	.LVL286:
 1536              	.L84:
 298:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_41 = context->Width(parent);
 1537              		.loc 1 298 0
 1538 0304 0744     		add	r7, r7, r0
 1539              	.LVL287:
 299:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_39 = context->Height(parent);
 1540              		.loc 1 299 0
 1541 0306 E36A     		ldr	r3, [r4, #44]
 1542 0308 2846     		mov	r0, r5
 1543              	.LVL288:
 1544 030a 9847     		blx	r3
 1545              	.LVL289:
 1546 030c 8046     		mov	r8, r0
 1547              	.LVL290:
 300:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_16 = left_41 <= right_39;
 1548              		.loc 1 300 0
 1549 030e 236B     		ldr	r3, [r4, #48]
 1550 0310 2846     		mov	r0, r5
 1551              	.LVL291:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 44


 1552 0312 9847     		blx	r3
 1553              	.LVL292:
 303:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 1554              		.loc 1 303 0
 1555 0314 8045     		cmp	r8, r0
 1556 0316 00F3B880 		bgt	.L85
 305:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 1557              		.loc 1 305 0
 1558 031a E36A     		ldr	r3, [r4, #44]
 1559 031c 2846     		mov	r0, r5
 1560              	.LVL293:
 1561 031e 9847     		blx	r3
 1562              	.LVL294:
 1563              	.L86:
 312:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_36 = left_37 - right_38;
 1564              		.loc 1 312 0
 1565 0320 644B     		ldr	r3, .L101
 1566 0322 83FB0023 		smull	r2, r3, r3, r0
 1567 0326 C017     		asrs	r0, r0, #31
 1568              	.LVL295:
 1569 0328 C0EBA303 		rsb	r3, r0, r3, asr #2
 1570              	.LVL296:
 313:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_43 = context->Width(parent);
 1571              		.loc 1 313 0
 1572 032c FF1A     		subs	r7, r7, r3
 1573              	.LVL297:
 314:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_42 = context->Height(parent);
 1574              		.loc 1 314 0
 1575 032e E36A     		ldr	r3, [r4, #44]
 1576              	.LVL298:
 1577 0330 2846     		mov	r0, r5
 1578 0332 9847     		blx	r3
 1579              	.LVL299:
 1580 0334 8046     		mov	r8, r0
 1581              	.LVL300:
 315:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_17 = left_43 <= right_42;
 1582              		.loc 1 315 0
 1583 0336 236B     		ldr	r3, [r4, #48]
 1584 0338 2846     		mov	r0, r5
 1585              	.LVL301:
 1586 033a 9847     		blx	r3
 1587              	.LVL302:
 318:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 1588              		.loc 1 318 0
 1589 033c 8045     		cmp	r8, r0
 1590 033e 00F3A880 		bgt	.L87
 320:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 1591              		.loc 1 320 0
 1592 0342 E36A     		ldr	r3, [r4, #44]
 1593 0344 2846     		mov	r0, r5
 1594              	.LVL303:
 1595 0346 9847     		blx	r3
 1596              	.LVL304:
 1597              	.L88:
 327:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int x1_1 = left_36 - right_41;
 1598              		.loc 1 327 0
 1599 0348 5A4B     		ldr	r3, .L101
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 45


 1600 034a 83FB0023 		smull	r2, r3, r3, r0
 1601 034e C017     		asrs	r0, r0, #31
 1602              	.LVL305:
 1603 0350 C0EBA300 		rsb	r0, r0, r3, asr #2
 1604              	.LVL306:
 328:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_45 = context->Y(parent);
 1605              		.loc 1 328 0
 1606 0354 3F1A     		subs	r7, r7, r0
 1607              	.LVL307:
 329:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_47 = context->Width(parent);
 1608              		.loc 1 329 0
 1609 0356 A36A     		ldr	r3, [r4, #40]
 1610 0358 2846     		mov	r0, r5
 1611              	.LVL308:
 1612 035a 9847     		blx	r3
 1613              	.LVL309:
 1614 035c 8046     		mov	r8, r0
 1615              	.LVL310:
 330:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_45 = context->Height(parent);
 1616              		.loc 1 330 0
 1617 035e E36A     		ldr	r3, [r4, #44]
 1618 0360 2846     		mov	r0, r5
 1619              	.LVL311:
 1620 0362 9847     		blx	r3
 1621              	.LVL312:
 1622 0364 8246     		mov	r10, r0
 1623              	.LVL313:
 331:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_18 = left_47 <= right_45;
 1624              		.loc 1 331 0
 1625 0366 236B     		ldr	r3, [r4, #48]
 1626 0368 2846     		mov	r0, r5
 1627              	.LVL314:
 1628 036a 9847     		blx	r3
 1629              	.LVL315:
 334:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 1630              		.loc 1 334 0
 1631 036c 8245     		cmp	r10, r0
 1632 036e 00F39480 		bgt	.L89
 336:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 1633              		.loc 1 336 0
 1634 0372 E36A     		ldr	r3, [r4, #44]
 1635 0374 2846     		mov	r0, r5
 1636              	.LVL316:
 1637 0376 9847     		blx	r3
 1638              	.LVL317:
 1639              	.L90:
 343:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_44 = left_45 + right_44;
 1640              		.loc 1 343 0
 1641 0378 4E4B     		ldr	r3, .L101
 1642 037a 83FB003A 		smull	r3, r10, r3, r0
 1643              	.LVL318:
 1644 037e C017     		asrs	r0, r0, #31
 1645              	.LVL319:
 1646 0380 C0EBAA00 		rsb	r0, r0, r10, asr #2
 1647              	.LVL320:
 344:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_49 = context->Width(parent);
 1648              		.loc 1 344 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 46


 1649 0384 08EB000A 		add	r10, r8, r0
 1650              	.LVL321:
 345:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_48 = context->Height(parent);
 1651              		.loc 1 345 0
 1652 0388 E36A     		ldr	r3, [r4, #44]
 1653 038a 2846     		mov	r0, r5
 1654              	.LVL322:
 1655 038c 9847     		blx	r3
 1656              	.LVL323:
 1657 038e 8046     		mov	r8, r0
 1658              	.LVL324:
 346:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_19 = left_49 <= right_48;
 1659              		.loc 1 346 0
 1660 0390 236B     		ldr	r3, [r4, #48]
 1661 0392 2846     		mov	r0, r5
 1662              	.LVL325:
 1663 0394 9847     		blx	r3
 1664              	.LVL326:
 349:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 1665              		.loc 1 349 0
 1666 0396 8045     		cmp	r8, r0
 1667 0398 00F38380 		bgt	.L91
 351:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 1668              		.loc 1 351 0
 1669 039c E36A     		ldr	r3, [r4, #44]
 1670 039e 2846     		mov	r0, r5
 1671              	.LVL327:
 1672 03a0 9847     		blx	r3
 1673              	.LVL328:
 1674              	.L92:
 358:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int y1_1 = left_44 + right_47;
 1675              		.loc 1 358 0
 1676 03a2 444B     		ldr	r3, .L101
 1677 03a4 83FB0038 		smull	r3, r8, r3, r0
 1678              	.LVL329:
 1679 03a8 C017     		asrs	r0, r0, #31
 1680              	.LVL330:
 1681 03aa C0EBA800 		rsb	r0, r0, r8, asr #2
 1682              	.LVL331:
 359:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int left_52 = context->Width(parent);
 1683              		.loc 1 359 0
 1684 03ae 0AEB0008 		add	r8, r10, r0
 1685              	.LVL332:
 360:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_50 = context->Height(parent);
 1686              		.loc 1 360 0
 1687 03b2 E36A     		ldr	r3, [r4, #44]
 1688 03b4 2846     		mov	r0, r5
 1689              	.LVL333:
 1690 03b6 9847     		blx	r3
 1691              	.LVL334:
 1692 03b8 8246     		mov	r10, r0
 1693              	.LVL335:
 361:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int if_20 = left_52 <= right_50;
 1694              		.loc 1 361 0
 1695 03ba 236B     		ldr	r3, [r4, #48]
 1696 03bc 2846     		mov	r0, r5
 1697              	.LVL336:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 47


 1698 03be 9847     		blx	r3
 1699              	.LVL337:
 364:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		{
 1700              		.loc 1 364 0
 1701 03c0 8245     		cmp	r10, r0
 1702 03c2 72DC     		bgt	.L93
 366:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 1703              		.loc 1 366 0
 1704 03c4 E36A     		ldr	r3, [r4, #44]
 1705 03c6 2846     		mov	r0, r5
 1706              	.LVL338:
 1707 03c8 9847     		blx	r3
 1708              	.LVL339:
 1709              	.L94:
 373:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int right_52 = 2L;
 1710              		.loc 1 373 0
 1711 03ca 3A4D     		ldr	r5, .L101
 1712              	.LVL340:
 1713 03cc 85FB0035 		smull	r3, r5, r5, r0
 1714 03d0 C017     		asrs	r0, r0, #31
 1715              	.LVL341:
 1716 03d2 C0EBA505 		rsb	r5, r0, r5, asr #2
 1717              	.LVL342:
 376:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		Ft_Esd_Render_Line(x0_1, y0_1, x1_1, y1_1, width_2, color_2);
 1718              		.loc 1 376 0
 1719 03d6 2046     		mov	r0, r4
 1720 03d8 FFF7FEFF 		bl	Ft_Esd_CheckBox_Color_A_RGB_Combine__return
 1721              	.LVL343:
 1722              	.LBB55:
 1723              	.LBB56:
 1724              		.loc 3 120 0
 1725 03dc 0190     		str	r0, [sp, #4]
 1726 03de 2D01     		lsls	r5, r5, #4
 1727              	.LVL344:
 1728 03e0 0095     		str	r5, [sp]
 1729 03e2 4FEA0813 		lsl	r3, r8, #4
 1730 03e6 3A01     		lsls	r2, r7, #4
 1731 03e8 3101     		lsls	r1, r6, #4
 1732 03ea 4FEA0910 		lsl	r0, r9, #4
 1733              	.LVL345:
 1734 03ee FFF7FEFF 		bl	Ft_Esd_Render_LineF
 1735              	.LVL346:
 1736              	.L57:
 1737              	.LBE56:
 1738              	.LBE55:
 1739              	.LBE52:
 1740              	.LBB57:
 1741              	.LBB58:
  74:FT_Esd_Framework/FT_Esd_Dl.h **** }
 1742              		.loc 4 74 0
 1743 03f2 3149     		ldr	r1, .L101+4
 1744 03f4 314B     		ldr	r3, .L101+8
 1745 03f6 1868     		ldr	r0, [r3]
 1746 03f8 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 1747              	.LVL347:
 1748              	.LBE58:
 1749              	.LBE57:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 48


 384:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** }
 1750              		.loc 1 384 0
 1751 03fc 04F14800 		add	r0, r4, #72
 1752 0400 FFF7FEFF 		bl	Ft_Esd_Label_Render
 1753              	.LVL348:
 385:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
 1754              		.loc 1 385 0
 1755 0404 02B0     		add	sp, sp, #8
 1756              	.LCFI13:
 1757              		.cfi_remember_state
 1758              		.cfi_def_cfa_offset 32
 1759              		@ sp needed
 1760 0406 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1761              	.LVL349:
 1762              	.L96:
 1763              	.LCFI14:
 1764              		.cfi_restore_state
 1765              	.LBB59:
 1766              	.LBB51:
  37:FT_Esd_Widgets/FT_Esd_Theme.h **** 
 1767              		.loc 2 37 0
 1768 040a FFF7FEFF 		bl	Ft_Esd_Theme_GetCurrent
 1769              	.LVL350:
 1770 040e D0F804A0 		ldr	r10, [r0, #4]
 1771 0412 24E6     		b	.L54
 1772              	.LVL351:
 1773              	.L55:
 1774              	.LBE51:
 1775              	.LBE59:
  90:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	}
 1776              		.loc 1 90 0
 1777 0414 236B     		ldr	r3, [r4, #48]
 1778 0416 2846     		mov	r0, r5
 1779              	.LVL352:
 1780 0418 9847     		blx	r3
 1781              	.LVL353:
 1782 041a 8146     		mov	r9, r0
 1783              	.LVL354:
 1784 041c 35E6     		b	.L56
 1785              	.LVL355:
 1786              	.L58:
 1787              	.LBB60:
 111:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 1788              		.loc 1 111 0
 1789 041e 236B     		ldr	r3, [r4, #48]
 1790 0420 2846     		mov	r0, r5
 1791              	.LVL356:
 1792 0422 9847     		blx	r3
 1793              	.LVL357:
 1794 0424 5BE6     		b	.L59
 1795              	.LVL358:
 1796              	.L60:
 126:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 1797              		.loc 1 126 0
 1798 0426 236B     		ldr	r3, [r4, #48]
 1799 0428 2846     		mov	r0, r5
 1800              	.LVL359:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 49


 1801 042a 9847     		blx	r3
 1802              	.LVL360:
 1803 042c 6BE6     		b	.L61
 1804              	.LVL361:
 1805              	.L62:
 142:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 1806              		.loc 1 142 0
 1807 042e 236B     		ldr	r3, [r4, #48]
 1808 0430 2846     		mov	r0, r5
 1809              	.LVL362:
 1810 0432 9847     		blx	r3
 1811              	.LVL363:
 1812 0434 7FE6     		b	.L63
 1813              	.LVL364:
 1814              	.L97:
 145:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		int y0 = left_8 + right_8;
 1815              		.loc 1 145 0
 1816 0436 431C     		adds	r3, r0, #1
 1817 0438 81E6     		b	.L64
 1818              	.LVL365:
 1819              	.L65:
 158:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 1820              		.loc 1 158 0
 1821 043a 236B     		ldr	r3, [r4, #48]
 1822 043c 2846     		mov	r0, r5
 1823              	.LVL366:
 1824 043e 9847     		blx	r3
 1825              	.LVL367:
 1826 0440 90E6     		b	.L66
 1827              	.LVL368:
 1828              	.L67:
 174:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 1829              		.loc 1 174 0
 1830 0442 236B     		ldr	r3, [r4, #48]
 1831 0444 2846     		mov	r0, r5
 1832              	.LVL369:
 1833 0446 9847     		blx	r3
 1834              	.LVL370:
 1835 0448 A3E6     		b	.L68
 1836              	.LVL371:
 1837              	.L69:
 187:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 1838              		.loc 1 187 0
 1839 044a 236B     		ldr	r3, [r4, #48]
 1840 044c 2846     		mov	r0, r5
 1841              	.LVL372:
 1842 044e 9847     		blx	r3
 1843              	.LVL373:
 1844 0450 ADE6     		b	.L70
 1845              	.LVL374:
 1846              	.L71:
 202:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 1847              		.loc 1 202 0
 1848 0452 236B     		ldr	r3, [r4, #48]
 1849 0454 2846     		mov	r0, r5
 1850              	.LVL375:
 1851 0456 9847     		blx	r3
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 50


 1852              	.LVL376:
 1853 0458 BDE6     		b	.L72
 1854              	.LVL377:
 1855              	.L73:
 217:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 1856              		.loc 1 217 0
 1857 045a 236B     		ldr	r3, [r4, #48]
 1858 045c 2846     		mov	r0, r5
 1859              	.LVL378:
 1860 045e 9847     		blx	r3
 1861              	.LVL379:
 1862 0460 CDE6     		b	.L74
 1863              	.LVL380:
 1864              	.L75:
 236:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 1865              		.loc 1 236 0
 1866 0462 236B     		ldr	r3, [r4, #48]
 1867 0464 2846     		mov	r0, r5
 1868              	.LVL381:
 1869 0466 9847     		blx	r3
 1870              	.LVL382:
 1871 0468 EFE6     		b	.L76
 1872              	.LVL383:
 1873              	.L77:
 252:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 1874              		.loc 1 252 0
 1875 046a 236B     		ldr	r3, [r4, #48]
 1876 046c 2846     		mov	r0, r5
 1877              	.LVL384:
 1878 046e 9847     		blx	r3
 1879              	.LVL385:
 1880 0470 02E7     		b	.L78
 1881              	.LVL386:
 1882              	.L79:
 265:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 1883              		.loc 1 265 0
 1884 0472 236B     		ldr	r3, [r4, #48]
 1885 0474 2846     		mov	r0, r5
 1886              	.LVL387:
 1887 0476 9847     		blx	r3
 1888              	.LVL388:
 1889 0478 0CE7     		b	.L80
 1890              	.LVL389:
 1891              	.L81:
 280:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 1892              		.loc 1 280 0
 1893 047a 236B     		ldr	r3, [r4, #48]
 1894 047c 2846     		mov	r0, r5
 1895              	.LVL390:
 1896 047e 9847     		blx	r3
 1897              	.LVL391:
 1898 0480 1CE7     		b	.L82
 1899              	.LVL392:
 1900              	.L83:
 296:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 1901              		.loc 1 296 0
 1902 0482 236B     		ldr	r3, [r4, #48]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 51


 1903 0484 2846     		mov	r0, r5
 1904              	.LVL393:
 1905 0486 9847     		blx	r3
 1906              	.LVL394:
 1907 0488 3CE7     		b	.L84
 1908              	.LVL395:
 1909              	.L85:
 309:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 1910              		.loc 1 309 0
 1911 048a 236B     		ldr	r3, [r4, #48]
 1912 048c 2846     		mov	r0, r5
 1913              	.LVL396:
 1914 048e 9847     		blx	r3
 1915              	.LVL397:
 1916 0490 46E7     		b	.L86
 1917              	.LVL398:
 1918              	.L87:
 324:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 1919              		.loc 1 324 0
 1920 0492 236B     		ldr	r3, [r4, #48]
 1921 0494 2846     		mov	r0, r5
 1922              	.LVL399:
 1923 0496 9847     		blx	r3
 1924              	.LVL400:
 1925 0498 56E7     		b	.L88
 1926              	.LVL401:
 1927              	.L89:
 340:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 1928              		.loc 1 340 0
 1929 049a 236B     		ldr	r3, [r4, #48]
 1930 049c 2846     		mov	r0, r5
 1931              	.LVL402:
 1932 049e 9847     		blx	r3
 1933              	.LVL403:
 1934 04a0 6AE7     		b	.L90
 1935              	.LVL404:
 1936              	.L91:
 355:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 1937              		.loc 1 355 0
 1938 04a2 236B     		ldr	r3, [r4, #48]
 1939 04a4 2846     		mov	r0, r5
 1940              	.LVL405:
 1941 04a6 9847     		blx	r3
 1942              	.LVL406:
 1943 04a8 7BE7     		b	.L92
 1944              	.LVL407:
 1945              	.L93:
 370:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 		}
 1946              		.loc 1 370 0
 1947 04aa 236B     		ldr	r3, [r4, #48]
 1948 04ac 2846     		mov	r0, r5
 1949              	.LVL408:
 1950 04ae 9847     		blx	r3
 1951              	.LVL409:
 1952 04b0 8BE7     		b	.L94
 1953              	.L102:
 1954 04b2 00BF     		.align	2
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 52


 1955              	.L101:
 1956 04b4 67666666 		.word	1717986919
 1957 04b8 FF000003 		.word	50331903
 1958 04bc 00000000 		.word	Ft_Esd_Host
 1959              	.LBE60:
 1960              		.cfi_endproc
 1961              	.LFE41:
 1963              		.section	.text.Ft_Esd_CheckBox_Start,"ax",%progbits
 1964              		.align	1
 1965              		.global	Ft_Esd_CheckBox_Start
 1966              		.syntax unified
 1967              		.thumb
 1968              		.thumb_func
 1969              		.fpu fpv5-sp-d16
 1971              	Ft_Esd_CheckBox_Start:
 1972              	.LFB43:
 399:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	void *parent = context->Parent;
 1973              		.loc 1 399 0
 1974              		.cfi_startproc
 1975              		@ args = 0, pretend = 0, frame = 0
 1976              		@ frame_needed = 0, uses_anonymous_args = 0
 1977              	.LVL410:
 1978 0000 08B5     		push	{r3, lr}
 1979              	.LCFI15:
 1980              		.cfi_def_cfa_offset 8
 1981              		.cfi_offset 3, -8
 1982              		.cfi_offset 14, -4
 1983              	.LVL411:
 401:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** }
 1984              		.loc 1 401 0
 1985 0002 0430     		adds	r0, r0, #4
 1986              	.LVL412:
 1987 0004 FFF7FEFF 		bl	Ft_Esd_TouchTag_Start
 1988              	.LVL413:
 402:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
 1989              		.loc 1 402 0
 1990 0008 08BD     		pop	{r3, pc}
 1991              		.cfi_endproc
 1992              	.LFE43:
 1994              		.section	.text.Ft_Esd_CheckBox_Update,"ax",%progbits
 1995              		.align	1
 1996              		.global	Ft_Esd_CheckBox_Update
 1997              		.syntax unified
 1998              		.thumb
 1999              		.thumb_func
 2000              		.fpu fpv5-sp-d16
 2002              	Ft_Esd_CheckBox_Update:
 2003              	.LFB44:
 405:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	void *parent = context->Parent;
 2004              		.loc 1 405 0
 2005              		.cfi_startproc
 2006              		@ args = 0, pretend = 0, frame = 0
 2007              		@ frame_needed = 0, uses_anonymous_args = 0
 2008              	.LVL414:
 2009 0000 08B5     		push	{r3, lr}
 2010              	.LCFI16:
 2011              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 53


 2012              		.cfi_offset 3, -8
 2013              		.cfi_offset 14, -4
 2014              	.LVL415:
 407:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** }
 2015              		.loc 1 407 0
 2016 0002 0430     		adds	r0, r0, #4
 2017              	.LVL416:
 2018 0004 FFF7FEFF 		bl	Ft_Esd_TouchTag_Update
 2019              	.LVL417:
 408:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
 2020              		.loc 1 408 0
 2021 0008 08BD     		pop	{r3, pc}
 2022              		.cfi_endproc
 2023              	.LFE44:
 2025              		.section	.text.Ft_Esd_CheckBox_End,"ax",%progbits
 2026              		.align	1
 2027              		.global	Ft_Esd_CheckBox_End
 2028              		.syntax unified
 2029              		.thumb
 2030              		.thumb_func
 2031              		.fpu fpv5-sp-d16
 2033              	Ft_Esd_CheckBox_End:
 2034              	.LFB45:
 411:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	void *parent = context->Parent;
 2035              		.loc 1 411 0
 2036              		.cfi_startproc
 2037              		@ args = 0, pretend = 0, frame = 0
 2038              		@ frame_needed = 0, uses_anonymous_args = 0
 2039              	.LVL418:
 2040 0000 08B5     		push	{r3, lr}
 2041              	.LCFI17:
 2042              		.cfi_def_cfa_offset 8
 2043              		.cfi_offset 3, -8
 2044              		.cfi_offset 14, -4
 2045              	.LVL419:
 413:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** }
 2046              		.loc 1 413 0
 2047 0002 0430     		adds	r0, r0, #4
 2048              	.LVL420:
 2049 0004 FFF7FEFF 		bl	Ft_Esd_TouchTag_End
 2050              	.LVL421:
 414:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
 2051              		.loc 1 414 0
 2052 0008 08BD     		pop	{r3, pc}
 2053              		.cfi_endproc
 2054              	.LFE45:
 2056              		.section	.text.Ft_Esd_CheckBox_Toggle,"ax",%progbits
 2057              		.align	1
 2058              		.global	Ft_Esd_CheckBox_Toggle
 2059              		.syntax unified
 2060              		.thumb
 2061              		.thumb_func
 2062              		.fpu fpv5-sp-d16
 2064              	Ft_Esd_CheckBox_Toggle:
 2065              	.LFB47:
 436:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	void *parent = context->Parent;
 2066              		.loc 1 436 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 54


 2067              		.cfi_startproc
 2068              		@ args = 0, pretend = 0, frame = 0
 2069              		@ frame_needed = 0, uses_anonymous_args = 0
 2070              	.LVL422:
 2071 0000 38B5     		push	{r3, r4, r5, lr}
 2072              	.LCFI18:
 2073              		.cfi_def_cfa_offset 16
 2074              		.cfi_offset 3, -16
 2075              		.cfi_offset 4, -12
 2076              		.cfi_offset 5, -8
 2077              		.cfi_offset 14, -4
 2078 0002 0446     		mov	r4, r0
 437:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	ft_bool_t value_1 = context->Value;
 2079              		.loc 1 437 0
 2080 0004 0568     		ldr	r5, [r0]
 2081              	.LVL423:
 438:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	int set_variable_1 = !value_1;
 2082              		.loc 1 438 0
 2083 0006 90F83C10 		ldrb	r1, [r0, #60]	@ zero_extendqisi2
 2084              	.LVL424:
 439:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Value = set_variable_1;
 2085              		.loc 1 439 0
 2086 000a B1FA81F1 		clz	r1, r1
 2087              	.LVL425:
 2088 000e 4909     		lsrs	r1, r1, #5
 2089              	.LVL426:
 440:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Changed(parent, set_variable_1);
 2090              		.loc 1 440 0
 2091 0010 80F83C10 		strb	r1, [r0, #60]
 2092              	.LVL427:
 441:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 	context->Toggled(parent);
 2093              		.loc 1 441 0
 2094 0014 436C     		ldr	r3, [r0, #68]
 2095 0016 2846     		mov	r0, r5
 2096              	.LVL428:
 2097 0018 9847     		blx	r3
 2098              	.LVL429:
 442:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** }
 2099              		.loc 1 442 0
 2100 001a 236C     		ldr	r3, [r4, #64]
 2101 001c 2846     		mov	r0, r5
 2102 001e 9847     		blx	r3
 2103              	.LVL430:
 443:FT_Esd_Widgets/Ft_Esd_CheckBox__Generated.c **** 
 2104              		.loc 1 443 0
 2105 0020 38BD     		pop	{r3, r4, r5, pc}
 2106              		.cfi_endproc
 2107              	.LFE47:
 2109              		.section	.rodata.Ft_Esd_CheckBox_Text__Default.str1.4,"aMS",%progbits,1
 2110              		.align	2
 2111              	.LC0:
 2112 0000 4F707469 		.ascii	"Option\000"
 2112      6F6E00
 2113              		.text
 2114              	.Letext0:
 2115              		.file 5 "FT_Eve_Hal/FT_DataTypes.h"
 2116              		.file 6 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/lock.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 55


 2117              		.file 7 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_types.h"
 2118              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 2119              		.file 9 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/unistd.h"
 2120              		.file 10 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/reent.h"
 2121              		.file 11 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/stdlib.h"
 2122              		.file 12 "FT_Eve_Hal/FT_Gpu_Hal.h"
 2123              		.file 13 "FT_Esd_Framework/Ft_Esd.h"
 2124              		.file 14 "FT_Esd_Widgets/Ft_Esd_DefaultTheme.h"
 2125              		.file 15 "FT_Esd_Widgets/Ft_Esd_Label.h"
 2126              		.file 16 "FT_Esd_Framework/Ft_Esd_TouchTag.h"
 2127              		.file 17 "FT_Esd_Widgets/Ft_Esd_CheckBox.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 56


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Ft_Esd_CheckBox__Generated.c
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:18     .text.Ft_Esd_CheckBox_Font__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:25     .text.Ft_Esd_CheckBox_Font__Default:0000000000000000 Ft_Esd_CheckBox_Font__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:42     .text.Ft_Esd_CheckBox_X__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:49     .text.Ft_Esd_CheckBox_X__Default:0000000000000000 Ft_Esd_CheckBox_X__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:65     .text.Ft_Esd_CheckBox_Y__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:72     .text.Ft_Esd_CheckBox_Y__Default:0000000000000000 Ft_Esd_CheckBox_Y__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:88     .text.Ft_Esd_CheckBox_Width__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:95     .text.Ft_Esd_CheckBox_Width__Default:0000000000000000 Ft_Esd_CheckBox_Width__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:111    .text.Ft_Esd_CheckBox_Height__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:118    .text.Ft_Esd_CheckBox_Height__Default:0000000000000000 Ft_Esd_CheckBox_Height__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:134    .text.Ft_Esd_CheckBox_Alpha__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:141    .text.Ft_Esd_CheckBox_Alpha__Default:0000000000000000 Ft_Esd_CheckBox_Alpha__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:157    .text.Ft_Esd_CheckBox_Text__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:164    .text.Ft_Esd_CheckBox_Text__Default:0000000000000000 Ft_Esd_CheckBox_Text__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:179    .text.Ft_Esd_CheckBox_Text__Default:0000000000000004 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:184    .text.Ft_Esd_CheckBox_Changed__Noop:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:191    .text.Ft_Esd_CheckBox_Changed__Noop:0000000000000000 Ft_Esd_CheckBox_Changed__Noop
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:205    .text.Ft_Esd_CheckBox_ESD_Label_AlignY__Property:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:211    .text.Ft_Esd_CheckBox_ESD_Label_AlignY__Property:0000000000000000 Ft_Esd_CheckBox_ESD_Label_AlignY__Property
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:227    .text.Ft_Esd_CheckBox_Touch_Tag_Tap__Signal:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:233    .text.Ft_Esd_CheckBox_Touch_Tag_Tap__Signal:0000000000000000 Ft_Esd_CheckBox_Touch_Tag_Tap__Signal
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:280    .text.Ft_Esd_CheckBox_ESD_Label_Theme__Property:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:286    .text.Ft_Esd_CheckBox_ESD_Label_Theme__Property:0000000000000000 Ft_Esd_CheckBox_ESD_Label_Theme__Property
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:311    .text.Ft_Esd_CheckBox_ESD_Label_Font__Property:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:317    .text.Ft_Esd_CheckBox_ESD_Label_Font__Property:0000000000000000 Ft_Esd_CheckBox_ESD_Label_Font__Property
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:343    .text.Ft_Esd_CheckBox_ESD_Label_Text__Property:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:349    .text.Ft_Esd_CheckBox_ESD_Label_Text__Property:0000000000000000 Ft_Esd_CheckBox_ESD_Label_Text__Property
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:374    .text.Ft_Esd_CheckBox_ESD_Label_X__Property:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:380    .text.Ft_Esd_CheckBox_ESD_Label_X__Property:0000000000000000 Ft_Esd_CheckBox_ESD_Label_X__Property
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:512    .text.Ft_Esd_CheckBox_ESD_Label_X__Property:0000000000000070 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:517    .text.Ft_Esd_CheckBox_ESD_Label_Y__Property:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:523    .text.Ft_Esd_CheckBox_ESD_Label_Y__Property:0000000000000000 Ft_Esd_CheckBox_ESD_Label_Y__Property
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:549    .text.Ft_Esd_CheckBox_ESD_Label_Width__Property:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:555    .text.Ft_Esd_CheckBox_ESD_Label_Width__Property:0000000000000000 Ft_Esd_CheckBox_ESD_Label_Width__Property
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:581    .text.Ft_Esd_CheckBox_ESD_Label_Height__Property:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:587    .text.Ft_Esd_CheckBox_ESD_Label_Height__Property:0000000000000000 Ft_Esd_CheckBox_ESD_Label_Height__Property
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:613    .text.Ft_Esd_CheckBox_Theme__Default:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:620    .text.Ft_Esd_CheckBox_Theme__Default:0000000000000000 Ft_Esd_CheckBox_Theme__Default
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:640    .text.Ft_Esd_CheckBox_Color_A_RGB_Combine__return:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:646    .text.Ft_Esd_CheckBox_Color_A_RGB_Combine__return:0000000000000000 Ft_Esd_CheckBox_Color_A_RGB_Combine__return
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:744    .text.Ft_Esd_CheckBox__Initializer:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:751    .text.Ft_Esd_CheckBox__Initializer:0000000000000000 Ft_Esd_CheckBox__Initializer
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:846    .text.Ft_Esd_CheckBox__Initializer:000000000000006c $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:869    .text.Ft_Esd_CheckBox_Render:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:876    .text.Ft_Esd_CheckBox_Render:0000000000000000 Ft_Esd_CheckBox_Render
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:1529   .text.Ft_Esd_CheckBox_Render:00000000000002f0 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:1538   .text.Ft_Esd_CheckBox_Render:0000000000000304 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:1956   .text.Ft_Esd_CheckBox_Render:00000000000004b4 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:1964   .text.Ft_Esd_CheckBox_Start:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:1971   .text.Ft_Esd_CheckBox_Start:0000000000000000 Ft_Esd_CheckBox_Start
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:1995   .text.Ft_Esd_CheckBox_Update:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:2002   .text.Ft_Esd_CheckBox_Update:0000000000000000 Ft_Esd_CheckBox_Update
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:2026   .text.Ft_Esd_CheckBox_End:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:2033   .text.Ft_Esd_CheckBox_End:0000000000000000 Ft_Esd_CheckBox_End
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:2057   .text.Ft_Esd_CheckBox_Toggle:0000000000000000 $t
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s 			page 57


/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:2064   .text.Ft_Esd_CheckBox_Toggle:0000000000000000 Ft_Esd_CheckBox_Toggle
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccUPYH90.s:2110   .rodata.Ft_Esd_CheckBox_Text__Default.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
Ft_Esd_FontHeight
Ft_Esd_Theme_GetCurrent
Ft_Esd_TouchTag_Inside
Ft_Esd_TouchTag__Initializer
Ft_Esd_Label__Initializer
Ft_Esd_Noop
Ft_Gpu_Hal_WrCmd32
Ft_Esd_TouchTag_Tag
Ft_Esd_Elements_PanelSunken
Ft_Esd_Render_LineF
Ft_Esd_GpuState_I
Ft_Esd_GpuState
Ft_Esd_Host
Ft_Esd_Label_Render
Ft_Esd_TouchTag_Start
Ft_Esd_TouchTag_Update
Ft_Esd_TouchTag_End
