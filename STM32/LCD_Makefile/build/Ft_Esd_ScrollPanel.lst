ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"Ft_Esd_ScrollPanel.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Ft_Esd_ScrollPanel_Update_Scroll,"ax",%progbits
  18              		.align	1
  19              		.global	Ft_Esd_ScrollPanel_Update_Scroll
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-sp-d16
  25              	Ft_Esd_ScrollPanel_Update_Scroll:
  26              	.LFB23:
  27              		.file 1 "FT_Esd_Widgets/Ft_Esd_ScrollPanel.c"
   1:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** #include "Ft_Esd.h"
   2:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** #include "Ft_Esd_ScrollPanel.h"
   3:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** #include "Ft_Esd_Layout.h"
   4:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** #include "Ft_Esd_Dl.h"
   5:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** #include "Ft_Esd_TouchArea.h"
   6:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 
   7:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** #include <stdlib.h>
   8:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 
   9:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** extern Ft_Gpu_Hal_Context_t *Ft_Esd_Host;
  10:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 
  11:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** #define FT_ESD_SCROLLPANEL_SCISSOR 2
  12:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 
  13:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** ESD_METHOD(Ft_Esd_ScrollPanel_Update_Scroll, Context = Ft_Esd_ScrollPanel)
  14:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** void Ft_Esd_ScrollPanel_Update_Scroll(Ft_Esd_ScrollPanel *context)
  15:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** {
  28              		.loc 1 15 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 38B5     		push	{r3, r4, r5, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 3, -16
  37              		.cfi_offset 4, -12
  38              		.cfi_offset 5, -8
  39              		.cfi_offset 14, -4
  40 0002 0446     		mov	r4, r0
  16:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	ft_bool_t touching = context->TouchArea.Touching;
  41              		.loc 1 16 0
  42 0004 037D     		ldrb	r3, [r0, #20]	@ zero_extendqisi2
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s 			page 2


  43              	.LVL1:
  17:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	if (touching)
  44              		.loc 1 17 0
  45 0006 63B9     		cbnz	r3, .L4
  46              	.LVL2:
  47              	.L2:
  18:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	{
  19:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		ft_int16_t touchY = Ft_Esd_TouchArea_TouchY(&context->TouchArea);
  20:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		ft_int16_t diffY = touchY - context->PreviousTouchY;
  21:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		context->OffsetY = context->PreviousOffsetY - diffY;
  22:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		context->OffsetYChanged(context->Parent, context->OffsetY);
  23:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		if (diffY > 5 || diffY < -5)
  24:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		{
  25:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 			// Cancel any ongoing button presses
  26:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 			Ft_Esd_TouchTag_SuppressCurrentTags();
  27:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		}
  28:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	}
  29:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	int offsetYRange = context->CurrentY - context->Height(context->Parent) + context->Margin(context-
  48              		.loc 1 29 0
  49 0008 A56D     		ldr	r5, [r4, #88]
  50 000a A36B     		ldr	r3, [r4, #56]
  51 000c 2068     		ldr	r0, [r4]
  52 000e 9847     		blx	r3
  53              	.LVL3:
  54 0010 2D1A     		subs	r5, r5, r0
  55 0012 636C     		ldr	r3, [r4, #68]
  56 0014 2068     		ldr	r0, [r4]
  57 0016 9847     		blx	r3
  58              	.LVL4:
  59 0018 2844     		add	r0, r0, r5
  60              	.LVL5:
  30:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	context->OffsetYRange = offsetYRange > 0 ? offsetYRange : 0;
  61              		.loc 1 30 0
  62 001a 20EAE070 		bic	r0, r0, r0, asr #31
  63              	.LVL6:
  64 001e A064     		str	r0, [r4, #72]
  31:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** }
  65              		.loc 1 31 0
  66 0020 38BD     		pop	{r3, r4, r5, pc}
  67              	.LVL7:
  68              	.L4:
  69              	.LBB2:
  19:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		ft_int16_t diffY = touchY - context->PreviousTouchY;
  70              		.loc 1 19 0
  71 0022 0430     		adds	r0, r0, #4
  72              	.LVL8:
  73 0024 FFF7FEFF 		bl	Ft_Esd_TouchArea_TouchY
  74              	.LVL9:
  20:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		context->OffsetY = context->PreviousOffsetY - diffY;
  75              		.loc 1 20 0
  76 0028 B4F84C50 		ldrh	r5, [r4, #76]
  77 002c 451B     		subs	r5, r0, r5
  78 002e ADB2     		uxth	r5, r5
  79 0030 2BB2     		sxth	r3, r5
  80              	.LVL10:
  21:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		context->OffsetYChanged(context->Parent, context->OffsetY);
  81              		.loc 1 21 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s 			page 3


  82 0032 B4F95C10 		ldrsh	r1, [r4, #92]
  83 0036 C91A     		subs	r1, r1, r3
  84 0038 2164     		str	r1, [r4, #64]
  22:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		if (diffY > 5 || diffY < -5)
  85              		.loc 1 22 0
  86 003a 236D     		ldr	r3, [r4, #80]
  87              	.LVL11:
  88 003c 09B2     		sxth	r1, r1
  89 003e 2068     		ldr	r0, [r4]
  90              	.LVL12:
  91 0040 9847     		blx	r3
  92              	.LVL13:
  23:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		{
  93              		.loc 1 23 0
  94 0042 0535     		adds	r5, r5, #5
  95              	.LVL14:
  96 0044 ADB2     		uxth	r5, r5
  97              	.LVL15:
  98 0046 0A2D     		cmp	r5, #10
  99 0048 DED9     		bls	.L2
 100              	.LBB3:
  26:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		}
 101              		.loc 1 26 0
 102 004a FFF7FEFF 		bl	Ft_Esd_TouchTag_SuppressCurrentTags
 103              	.LVL16:
 104 004e DBE7     		b	.L2
 105              	.LBE3:
 106              	.LBE2:
 107              		.cfi_endproc
 108              	.LFE23:
 110              		.section	.text.Ft_Esd_ScrollPanel_Update_Contents,"ax",%progbits
 111              		.align	1
 112              		.global	Ft_Esd_ScrollPanel_Update_Contents
 113              		.syntax unified
 114              		.thumb
 115              		.thumb_func
 116              		.fpu fpv5-sp-d16
 118              	Ft_Esd_ScrollPanel_Update_Contents:
 119              	.LFB24:
  32:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 
  33:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** ESD_METHOD(Ft_Esd_ScrollPanel_Update_Contents, Context = Ft_Esd_ScrollPanel)
  34:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** void Ft_Esd_ScrollPanel_Update_Contents(Ft_Esd_ScrollPanel *context)
  35:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** {
 120              		.loc 1 35 0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              	.LVL17:
 125 0000 38B5     		push	{r3, r4, r5, lr}
 126              	.LCFI1:
 127              		.cfi_def_cfa_offset 16
 128              		.cfi_offset 3, -16
 129              		.cfi_offset 4, -12
 130              		.cfi_offset 5, -8
 131              		.cfi_offset 14, -4
 132 0002 0546     		mov	r5, r0
  36:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	Ft_Esd_LayoutChild *last = context->First;
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s 			page 4


 133              		.loc 1 36 0
 134 0004 046E     		ldr	r4, [r0, #96]
 135              	.LVL18:
  37:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	while (last)
 136              		.loc 1 37 0
 137 0006 00E0     		b	.L6
 138              	.LVL19:
 139              	.L7:
  38:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	{
  39:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		context->Current = last;
  40:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		if (last->Update)
  41:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		{
  42:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 			last->Update(last->Child);
  43:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		}
  44:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		last = last->Next;
 140              		.loc 1 44 0
 141 0008 A469     		ldr	r4, [r4, #24]
 142              	.LVL20:
 143              	.L6:
  37:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	while (last)
 144              		.loc 1 37 0
 145 000a 34B1     		cbz	r4, .L10
  39:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		if (last->Update)
 146              		.loc 1 39 0
 147 000c 6C66     		str	r4, [r5, #100]
  40:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		{
 148              		.loc 1 40 0
 149 000e E368     		ldr	r3, [r4, #12]
 150 0010 002B     		cmp	r3, #0
 151 0012 F9D0     		beq	.L7
  42:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		}
 152              		.loc 1 42 0
 153 0014 2068     		ldr	r0, [r4]
 154 0016 9847     		blx	r3
 155              	.LVL21:
 156 0018 F6E7     		b	.L7
 157              	.L10:
  45:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	}
  46:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** }
 158              		.loc 1 46 0
 159 001a 38BD     		pop	{r3, r4, r5, pc}
 160              		.cfi_endproc
 161              	.LFE24:
 163              		.section	.text.Ft_Esd_ScrollPanel_Render_Contents,"ax",%progbits
 164              		.align	1
 165              		.global	Ft_Esd_ScrollPanel_Render_Contents
 166              		.syntax unified
 167              		.thumb
 168              		.thumb_func
 169              		.fpu fpv5-sp-d16
 171              	Ft_Esd_ScrollPanel_Render_Contents:
 172              	.LFB25:
  47:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 
  48:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** ESD_METHOD(Ft_Esd_ScrollPanel_Render_Contents, Context = Ft_Esd_ScrollPanel)
  49:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** void Ft_Esd_ScrollPanel_Render_Contents(Ft_Esd_ScrollPanel *context)
  50:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** {
 173              		.loc 1 50 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s 			page 5


 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 8
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              	.LVL22:
 178 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 179              	.LCFI2:
 180              		.cfi_def_cfa_offset 36
 181              		.cfi_offset 4, -36
 182              		.cfi_offset 5, -32
 183              		.cfi_offset 6, -28
 184              		.cfi_offset 7, -24
 185              		.cfi_offset 8, -20
 186              		.cfi_offset 9, -16
 187              		.cfi_offset 10, -12
 188              		.cfi_offset 11, -8
 189              		.cfi_offset 14, -4
 190 0004 83B0     		sub	sp, sp, #12
 191              	.LCFI3:
 192              		.cfi_def_cfa_offset 48
 193 0006 0446     		mov	r4, r0
  51:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	Ft_Gpu_Hal_Context_t *phost = Ft_Esd_Host;
 194              		.loc 1 51 0
 195 0008 DFF870B1 		ldr	fp, .L21+16
 196 000c DBF80030 		ldr	r3, [fp]
 197 0010 0193     		str	r3, [sp, #4]
 198              	.LVL23:
  52:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	Ft_Esd_LayoutChild *last = context->First;
 199              		.loc 1 52 0
 200 0012 056E     		ldr	r5, [r0, #96]
 201              	.LVL24:
  53:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	context->CurrentY = 0;
 202              		.loc 1 53 0
 203 0014 0023     		movs	r3, #0
 204              	.LVL25:
 205 0016 8365     		str	r3, [r0, #88]
  54:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	context->CurrentX = 0;
 206              		.loc 1 54 0
 207 0018 4365     		str	r3, [r0, #84]
  55:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	ft_int16_t boundWidth = context->Width(context->Parent);
 208              		.loc 1 55 0
 209 001a 436B     		ldr	r3, [r0, #52]
 210 001c 0068     		ldr	r0, [r0]
 211              	.LVL26:
 212 001e 9847     		blx	r3
 213              	.LVL27:
 214 0020 8046     		mov	r8, r0
 215              	.LVL28:
  56:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	ft_int16_t boundHeight = context->Height(context->Parent);
 216              		.loc 1 56 0
 217 0022 A36B     		ldr	r3, [r4, #56]
 218 0024 2068     		ldr	r0, [r4]
 219 0026 9847     		blx	r3
 220              	.LVL29:
 221 0028 8246     		mov	r10, r0
 222              	.LVL30:
  57:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	ft_int16_t columns = context->Columns(context->Parent);
 223              		.loc 1 57 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s 			page 6


 224 002a E36B     		ldr	r3, [r4, #60]
 225 002c 2068     		ldr	r0, [r4]
 226 002e 9847     		blx	r3
 227              	.LVL31:
 228 0030 06B2     		sxth	r6, r0
 229              	.LVL32:
  58:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	ft_int16_t scissorX = context->X(context->Parent) + FT_ESD_SCROLLPANEL_SCISSOR;
 230              		.loc 1 58 0
 231 0032 E36A     		ldr	r3, [r4, #44]
 232 0034 2068     		ldr	r0, [r4]
 233 0036 9847     		blx	r3
 234              	.LVL33:
 235 0038 1FFA80F9 		uxth	r9, r0
 236 003c 09F10209 		add	r9, r9, #2
 237 0040 1FFA89F9 		uxth	r9, r9
 238              	.LVL34:
  59:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	ft_int16_t scissorY = context->Y(context->Parent) + FT_ESD_SCROLLPANEL_SCISSOR;
 239              		.loc 1 59 0
 240 0044 236B     		ldr	r3, [r4, #48]
 241 0046 2068     		ldr	r0, [r4]
 242 0048 9847     		blx	r3
 243              	.LVL35:
 244 004a 87B2     		uxth	r7, r0
 245 004c 0237     		adds	r7, r7, #2
 246 004e BFB2     		uxth	r7, r7
 247              	.LVL36:
  60:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	ft_int16_t scissorWidth = boundWidth - FT_ESD_SCROLLPANEL_SCISSOR * 2;
 248              		.loc 1 60 0
 249 0050 A8F10408 		sub	r8, r8, #4
 250              	.LVL37:
 251 0054 1FFA88F8 		uxth	r8, r8
 252              	.LVL38:
  61:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	ft_int16_t scissorHeight = boundHeight - FT_ESD_SCROLLPANEL_SCISSOR * 2;
 253              		.loc 1 61 0
 254 0058 AAF10401 		sub	r1, r10, #4
 255 005c 8BB2     		uxth	r3, r1
 256 005e 0093     		str	r3, [sp]
 257              	.LVL39:
 258              	.LBB10:
 259              	.LBB11:
 260              		.file 2 "FT_Esd_Framework/Ft_Esd_Dl.h"
   1:FT_Esd_Framework/Ft_Esd_Dl.h **** 
   2:FT_Esd_Framework/Ft_Esd_Dl.h **** #ifndef FT_ESD_DL_H
   3:FT_Esd_Framework/Ft_Esd_Dl.h **** #define FT_ESD_DL_H
   4:FT_Esd_Framework/Ft_Esd_Dl.h **** 
   5:FT_Esd_Framework/Ft_Esd_Dl.h **** #include "FT_DataTypes.h"
   6:FT_Esd_Framework/Ft_Esd_Dl.h **** #include "FT_Platform.h"
   7:FT_Esd_Framework/Ft_Esd_Dl.h **** #include "Ft_Esd.h"
   8:FT_Esd_Framework/Ft_Esd_Dl.h **** #include "FT_Gpu.h"
   9:FT_Esd_Framework/Ft_Esd_Dl.h **** #include "Ft_Esd_BitmapInfo.h"
  10:FT_Esd_Framework/Ft_Esd_Dl.h **** 
  11:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_CATEGORY(EsdUtilities, DisplayName = "ESD Utilities")
  12:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_CATEGORY(EveRenderFunctions, DisplayName = "EVE Render Functions")
  13:FT_Esd_Framework/Ft_Esd_Dl.h **** 
  14:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_TYPE(Ft_Gpu_Hal_Context_t *, Native = Pointer, Edit = Library)
  15:FT_Esd_Framework/Ft_Esd_Dl.h **** 
  16:FT_Esd_Framework/Ft_Esd_Dl.h **** // Keep cache of displaylist values that don't often change but are generally set by every widget t
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s 			page 7


  17:FT_Esd_Framework/Ft_Esd_Dl.h **** #define FT_ESD_OPTIMIZE_DISPLAYLIST 1
  18:FT_Esd_Framework/Ft_Esd_Dl.h **** #define FT_ESD_STATE_STACK_SIZE 5
  19:FT_Esd_Framework/Ft_Esd_Dl.h **** 
  20:FT_Esd_Framework/Ft_Esd_Dl.h **** #define FT_ESD_BITMAPHANDLE_INVALID 255
  21:FT_Esd_Framework/Ft_Esd_Dl.h **** 
  22:FT_Esd_Framework/Ft_Esd_Dl.h **** //
  23:FT_Esd_Framework/Ft_Esd_Dl.h **** // Structs
  24:FT_Esd_Framework/Ft_Esd_Dl.h **** //
  25:FT_Esd_Framework/Ft_Esd_Dl.h **** #ifdef FT_ESD_OPTIMIZE_DISPLAYLIST
  26:FT_Esd_Framework/Ft_Esd_Dl.h **** #define FT_ESD_STATE Ft_Esd_GpuState[Ft_Esd_GpuState_I]
  27:FT_Esd_Framework/Ft_Esd_Dl.h **** typedef struct
  28:FT_Esd_Framework/Ft_Esd_Dl.h **** {
  29:FT_Esd_Framework/Ft_Esd_Dl.h **** 	// Keep to a minimum
  30:FT_Esd_Framework/Ft_Esd_Dl.h **** #ifdef FT_81X_ENABLE
  31:FT_Esd_Framework/Ft_Esd_Dl.h **** 	ft_uint32_t PaletteSource;
  32:FT_Esd_Framework/Ft_Esd_Dl.h **** #endif
  33:FT_Esd_Framework/Ft_Esd_Dl.h **** 	ft_uint32_t ColorRGB;
  34:FT_Esd_Framework/Ft_Esd_Dl.h **** 	ft_uint8_t ColorA;
  35:FT_Esd_Framework/Ft_Esd_Dl.h **** 	ft_uint8_t Handle;         // Current handle
  36:FT_Esd_Framework/Ft_Esd_Dl.h **** 	ft_uint8_t Cell;           // Current cell
  37:FT_Esd_Framework/Ft_Esd_Dl.h **** 	ft_bool_t BitmapTransform; // BitmapTransform other than default is set
  38:FT_Esd_Framework/Ft_Esd_Dl.h **** #ifdef FT_81X_ENABLE
  39:FT_Esd_Framework/Ft_Esd_Dl.h **** 	ft_uint8_t VertexFormat;   // Current vertex format
  40:FT_Esd_Framework/Ft_Esd_Dl.h **** #endif
  41:FT_Esd_Framework/Ft_Esd_Dl.h **** } Ft_Esd_GpuState_T;
  42:FT_Esd_Framework/Ft_Esd_Dl.h **** #endif
  43:FT_Esd_Framework/Ft_Esd_Dl.h **** 
  44:FT_Esd_Framework/Ft_Esd_Dl.h **** //
  45:FT_Esd_Framework/Ft_Esd_Dl.h **** // Globals
  46:FT_Esd_Framework/Ft_Esd_Dl.h **** //
  47:FT_Esd_Framework/Ft_Esd_Dl.h **** extern Ft_Gpu_Hal_Context_t *Ft_Esd_Host;
  48:FT_Esd_Framework/Ft_Esd_Dl.h **** extern ft_uint16_t Ft_Esd_FontHeight[32];
  49:FT_Esd_Framework/Ft_Esd_Dl.h **** #ifdef FT_ESD_OPTIMIZE_DISPLAYLIST
  50:FT_Esd_Framework/Ft_Esd_Dl.h **** extern Ft_Esd_GpuState_T Ft_Esd_GpuState[FT_ESD_STATE_STACK_SIZE];
  51:FT_Esd_Framework/Ft_Esd_Dl.h **** extern ft_uint8_t Ft_Esd_GpuState_I;
  52:FT_Esd_Framework/Ft_Esd_Dl.h **** extern ft_uint32_t Ft_Esd_CoFgColor;
  53:FT_Esd_Framework/Ft_Esd_Dl.h **** extern ft_uint32_t Ft_Esd_CoBgColor;
  54:FT_Esd_Framework/Ft_Esd_Dl.h **** #endif
  55:FT_Esd_Framework/Ft_Esd_Dl.h **** 
  56:FT_Esd_Framework/Ft_Esd_Dl.h **** //Get the height of builtin font
  57:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_GetFontHeight, Type = ft_uint16_t ,DisplayName = "Get Font Height", Category = 
  58:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_PARAMETER(i, Type = int, DisplayName = "Bitmap Handle", Default = 0, Min = 0, Max = 31)
  59:FT_Esd_Framework/Ft_Esd_Dl.h **** // inline static ft_uint16_t Ft_Esd_GetFontHeight(int i) { return Ft_Esd_FontHeight[i]; }
  60:FT_Esd_Framework/Ft_Esd_Dl.h **** #define Ft_Esd_GetFontHeight(i) (Ft_Esd_FontHeight[i]);
  61:FT_Esd_Framework/Ft_Esd_Dl.h **** 
  62:FT_Esd_Framework/Ft_Esd_Dl.h **** // Reset any cached state
  63:FT_Esd_Framework/Ft_Esd_Dl.h **** void Ft_Esd_ResetGpuState();
  64:FT_Esd_Framework/Ft_Esd_Dl.h **** void Ft_Esd_ResetCoState();
  65:FT_Esd_Framework/Ft_Esd_Dl.h **** 
  66:FT_Esd_Framework/Ft_Esd_Dl.h **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotalUsed();
  67:FT_Esd_Framework/Ft_Esd_Dl.h **** ft_uint32_t Ft_Esd_BitmapHandle_GetTotal();
  68:FT_Esd_Framework/Ft_Esd_Dl.h **** 
  69:FT_Esd_Framework/Ft_Esd_Dl.h **** /// Set current tag. Must be returned to 255 after usage, to ensure next widgets don't draw with in
  70:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_TAG, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  71:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_PARAMETER(s, Type = ft_uint8_t, DisplayName = "Tag", Default = 255, Min = 0, Max = 255)
  72:FT_Esd_Framework/Ft_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_TAG(ft_uint8_t s)
  73:FT_Esd_Framework/Ft_Esd_Dl.h **** {
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s 			page 8


  74:FT_Esd_Framework/Ft_Esd_Dl.h **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, TAG(s));
  75:FT_Esd_Framework/Ft_Esd_Dl.h **** }
  76:FT_Esd_Framework/Ft_Esd_Dl.h **** //Specify color RGB
  77:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_RGB, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  78:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_PARAMETER(c, Type = ft_rgb32_t, DisplayName = "Color")
  79:FT_Esd_Framework/Ft_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_RGB(ft_rgb32_t c)
  80:FT_Esd_Framework/Ft_Esd_Dl.h **** {
  81:FT_Esd_Framework/Ft_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  82:FT_Esd_Framework/Ft_Esd_Dl.h **** 	ft_rgb32_t rgb = c & 0xFFFFFF;
  83:FT_Esd_Framework/Ft_Esd_Dl.h **** 	if (rgb != FT_ESD_STATE.ColorRGB)
  84:FT_Esd_Framework/Ft_Esd_Dl.h **** 	{
  85:FT_Esd_Framework/Ft_Esd_Dl.h **** #endif
  86:FT_Esd_Framework/Ft_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, (4UL << 24) | (rgb));
  87:FT_Esd_Framework/Ft_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  88:FT_Esd_Framework/Ft_Esd_Dl.h **** 		FT_ESD_STATE.ColorRGB = rgb;
  89:FT_Esd_Framework/Ft_Esd_Dl.h **** 	}
  90:FT_Esd_Framework/Ft_Esd_Dl.h **** #endif
  91:FT_Esd_Framework/Ft_Esd_Dl.h **** }
  92:FT_Esd_Framework/Ft_Esd_Dl.h **** //Specify alpha channel
  93:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_A, Type = ft_void_t, Category = EveRenderFunctions, Inline)
  94:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_PARAMETER(alpha, Type = ft_uint8_t, Default = 255, Min = 0, Max = 255)
  95:FT_Esd_Framework/Ft_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_A(ft_uint8_t alpha)
  96:FT_Esd_Framework/Ft_Esd_Dl.h **** {
  97:FT_Esd_Framework/Ft_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
  98:FT_Esd_Framework/Ft_Esd_Dl.h **** 	if (alpha != FT_ESD_STATE.ColorA)
  99:FT_Esd_Framework/Ft_Esd_Dl.h **** 	{
 100:FT_Esd_Framework/Ft_Esd_Dl.h **** #endif
 101:FT_Esd_Framework/Ft_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, COLOR_A(alpha));
 102:FT_Esd_Framework/Ft_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 103:FT_Esd_Framework/Ft_Esd_Dl.h **** 		FT_ESD_STATE.ColorA = alpha;
 104:FT_Esd_Framework/Ft_Esd_Dl.h **** 	}
 105:FT_Esd_Framework/Ft_Esd_Dl.h **** #endif
 106:FT_Esd_Framework/Ft_Esd_Dl.h **** }
 107:FT_Esd_Framework/Ft_Esd_Dl.h **** 
 108:FT_Esd_Framework/Ft_Esd_Dl.h **** //Specify color: Alpha(31~24 bit) + RGB(23~0 bit)
 109:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_COLOR_ARGB, Type = ft_void_t, Category = EveRenderFunctions, Inline)
 110:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_PARAMETER(c, Type = ft_argb32_t, DisplayName = "Color")
 111:FT_Esd_Framework/Ft_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_COLOR_ARGB(ft_uint32_t c)
 112:FT_Esd_Framework/Ft_Esd_Dl.h **** {
 113:FT_Esd_Framework/Ft_Esd_Dl.h **** 	Ft_Esd_Dl_COLOR_RGB(c);
 114:FT_Esd_Framework/Ft_Esd_Dl.h **** 	Ft_Esd_Dl_COLOR_A(c >> 24);
 115:FT_Esd_Framework/Ft_Esd_Dl.h **** }
 116:FT_Esd_Framework/Ft_Esd_Dl.h **** //Specify bitmap handle, see BITMAP_HANDLE
 117:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_BITMAP_HANDLE, Type = ft_void_t, Category = EveRenderFunctions, Inline)
 118:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_PARAMETER(handle, Type = ft_uint8_t, Min = 0, Max = 31)
 119:FT_Esd_Framework/Ft_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_BITMAP_HANDLE(ft_uint8_t handle)
 120:FT_Esd_Framework/Ft_Esd_Dl.h **** {
 121:FT_Esd_Framework/Ft_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 122:FT_Esd_Framework/Ft_Esd_Dl.h **** 	if (handle != FT_ESD_STATE.Handle)
 123:FT_Esd_Framework/Ft_Esd_Dl.h **** 	{
 124:FT_Esd_Framework/Ft_Esd_Dl.h **** #endif
 125:FT_Esd_Framework/Ft_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, BITMAP_HANDLE(handle));
 126:FT_Esd_Framework/Ft_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 127:FT_Esd_Framework/Ft_Esd_Dl.h **** 		FT_ESD_STATE.Handle = handle;
 128:FT_Esd_Framework/Ft_Esd_Dl.h **** 	}
 129:FT_Esd_Framework/Ft_Esd_Dl.h **** #endif
 130:FT_Esd_Framework/Ft_Esd_Dl.h **** }
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s 			page 9


 131:FT_Esd_Framework/Ft_Esd_Dl.h **** 
 132:FT_Esd_Framework/Ft_Esd_Dl.h **** //Specify cell number for bitmap, see CELL 
 133:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_CELL, Type = ft_void_t, Category = EveRenderFunctions, Inline)
 134:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_PARAMETER(cell, Type = ft_uint8_t, Min = 0, Max = 255)
 135:FT_Esd_Framework/Ft_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_CELL(ft_uint8_t cell)
 136:FT_Esd_Framework/Ft_Esd_Dl.h **** {
 137:FT_Esd_Framework/Ft_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 138:FT_Esd_Framework/Ft_Esd_Dl.h **** 	if (cell != FT_ESD_STATE.Cell)
 139:FT_Esd_Framework/Ft_Esd_Dl.h **** 	{
 140:FT_Esd_Framework/Ft_Esd_Dl.h **** #endif
 141:FT_Esd_Framework/Ft_Esd_Dl.h **** 		Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, CELL(cell));
 142:FT_Esd_Framework/Ft_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 143:FT_Esd_Framework/Ft_Esd_Dl.h **** 		FT_ESD_STATE.Cell = cell;
 144:FT_Esd_Framework/Ft_Esd_Dl.h **** 	}
 145:FT_Esd_Framework/Ft_Esd_Dl.h **** #endif
 146:FT_Esd_Framework/Ft_Esd_Dl.h **** }
 147:FT_Esd_Framework/Ft_Esd_Dl.h **** //Save EVE context, see SAVE_CONTEXT
 148:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_SAVE_CONTEXT, Type = ft_void_t, Category = EveRenderFunctions, Inline)
 149:FT_Esd_Framework/Ft_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_SAVE_CONTEXT()
 150:FT_Esd_Framework/Ft_Esd_Dl.h **** {
 151:FT_Esd_Framework/Ft_Esd_Dl.h **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, SAVE_CONTEXT());
 261              		.loc 2 151 0
 262 0060 4FF00851 		mov	r1, #570425344
 263 0064 DBF80000 		ldr	r0, [fp]
 264 0068 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 265              	.LVL40:
 152:FT_Esd_Framework/Ft_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 153:FT_Esd_Framework/Ft_Esd_Dl.h **** 	ft_uint8_t nextState = Ft_Esd_GpuState_I + 1;
 266              		.loc 2 153 0
 267 006c 3F4B     		ldr	r3, .L21
 268 006e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 269 0070 02F1010C 		add	ip, r2, #1
 270 0074 5FFA8CFC 		uxtb	ip, ip
 271              	.LVL41:
 154:FT_Esd_Framework/Ft_Esd_Dl.h **** 	if (nextState < FT_ESD_STATE_STACK_SIZE)
 272              		.loc 2 154 0
 273 0078 BCF1040F 		cmp	ip, #4
 274 007c 0AD8     		bhi	.L12
 155:FT_Esd_Framework/Ft_Esd_Dl.h **** 	{
 156:FT_Esd_Framework/Ft_Esd_Dl.h **** 		Ft_Esd_GpuState[nextState] = Ft_Esd_GpuState[Ft_Esd_GpuState_I];
 275              		.loc 2 156 0
 276 007e 3C4B     		ldr	r3, .L21+4
 277 0080 03EB0C1E 		add	lr, r3, ip, lsl #4
 278 0084 03EB0213 		add	r3, r3, r2, lsl #4
 279 0088 0FCB     		ldm	r3, {r0, r1, r2, r3}
 280 008a 8EE80F00 		stm	lr, {r0, r1, r2, r3}
 157:FT_Esd_Framework/Ft_Esd_Dl.h **** 		Ft_Esd_GpuState_I = nextState;
 281              		.loc 2 157 0
 282 008e 374B     		ldr	r3, .L21
 283 0090 83F800C0 		strb	ip, [r3]
 284              	.L12:
 285              	.LVL42:
 286              	.LBE11:
 287              	.LBE10:
  62:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	Ft_Esd_Dl_SAVE_CONTEXT();
  63:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	Ft_Gpu_Hal_WrCmd32(phost, SCISSOR_XY(scissorX, scissorY));
 288              		.loc 1 63 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s 			page 10


 289 0094 3749     		ldr	r1, .L21+8
 290 0096 01EAC929 		and	r9, r1, r9, lsl #11
 291              	.LVL43:
 292 009a C7F30A01 		ubfx	r1, r7, #0, #11
 293 009e 49EA0101 		orr	r1, r9, r1
 294 00a2 41F0D851 		orr	r1, r1, #452984832
 295 00a6 019F     		ldr	r7, [sp, #4]
 296              	.LVL44:
 297 00a8 3846     		mov	r0, r7
 298 00aa FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 299              	.LVL45:
  64:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	Ft_Gpu_Hal_WrCmd32(phost, SCISSOR_SIZE(scissorWidth, scissorHeight));
 300              		.loc 1 64 0
 301 00ae 3249     		ldr	r1, .L21+12
 302 00b0 01EA0838 		and	r8, r1, r8, lsl #12
 303              	.LVL46:
 304 00b4 009B     		ldr	r3, [sp]
 305 00b6 C3F30B01 		ubfx	r1, r3, #0, #12
 306 00ba 48EA0101 		orr	r1, r8, r1
 307 00be 41F0E051 		orr	r1, r1, #469762048
 308 00c2 3846     		mov	r0, r7
 309 00c4 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 310              	.LVL47:
  65:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	int count = 0;
 311              		.loc 1 65 0
 312 00c8 0027     		movs	r7, #0
  66:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	while (last)
 313              		.loc 1 66 0
 314 00ca 08E0     		b	.L13
 315              	.LVL48:
 316              	.L16:
 317              	.LBB12:
  67:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	{
  68:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		context->Current = last;
  69:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		if (last->Render)
  70:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		{
  71:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		    if ( ((count+1)%(columns))==0 ){
  72:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 				ft_int16_t height = last->Height(context->Parent);
  73:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 				ft_int16_t bottom = context->CurrentY + height;
  74:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 				if (bottom >= context->OffsetY && context->CurrentY < (context->OffsetY + boundHeight - context
  75:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 				{
  76:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 					last->Render(last->Child);
  77:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 				}
  78:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 				context->CurrentY = bottom + context->Margin(context->Parent);
 318              		.loc 1 78 0
 319 00cc 636C     		ldr	r3, [r4, #68]
 320 00ce 2068     		ldr	r0, [r4]
 321 00d0 9847     		blx	r3
 322              	.LVL49:
 323 00d2 4044     		add	r0, r0, r8
 324 00d4 A065     		str	r0, [r4, #88]
  79:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 				context->CurrentX = 0;
 325              		.loc 1 79 0
 326 00d6 0023     		movs	r3, #0
 327 00d8 6365     		str	r3, [r4, #84]
 328              	.L14:
 329              	.LBE12:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s 			page 11


  80:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		    }
  81:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 			else
  82:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		    {
  83:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 				ft_int16_t width = last->Width(context->Parent);
  84:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 				ft_int16_t right = context->CurrentX + width;
  85:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 				ft_int16_t height = last->Height(context->Parent);
  86:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 				ft_int16_t bottom = context->CurrentY + height;
  87:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 				last->Render(last->Child);
  88:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 				context->CurrentX = right + context->Margin(context->Parent);
  89:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		    }
  90:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		}
  91:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		last = last->Next;
 330              		.loc 1 91 0
 331 00da AD69     		ldr	r5, [r5, #24]
 332              	.LVL50:
  92:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		count++;
 333              		.loc 1 92 0
 334 00dc 0137     		adds	r7, r7, #1
 335              	.LVL51:
 336              	.L13:
  66:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	{
 337              		.loc 1 66 0
 338 00de 002D     		cmp	r5, #0
 339 00e0 34D0     		beq	.L20
  68:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		if (last->Render)
 340              		.loc 1 68 0
 341 00e2 6566     		str	r5, [r4, #100]
  69:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		{
 342              		.loc 1 69 0
 343 00e4 2B69     		ldr	r3, [r5, #16]
 344 00e6 002B     		cmp	r3, #0
 345 00e8 F7D0     		beq	.L14
  71:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 				ft_int16_t height = last->Height(context->Parent);
 346              		.loc 1 71 0
 347 00ea 7A1C     		adds	r2, r7, #1
 348 00ec 92FBF6F3 		sdiv	r3, r2, r6
 349 00f0 06FB1323 		mls	r3, r6, r3, r2
 350 00f4 BBB9     		cbnz	r3, .L15
 351              	.LBB13:
  72:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 				ft_int16_t bottom = context->CurrentY + height;
 352              		.loc 1 72 0
 353 00f6 AB68     		ldr	r3, [r5, #8]
 354 00f8 2068     		ldr	r0, [r4]
 355 00fa 9847     		blx	r3
 356              	.LVL52:
  73:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 				if (bottom >= context->OffsetY && context->CurrentY < (context->OffsetY + boundHeight - context
 357              		.loc 1 73 0
 358 00fc D4F85890 		ldr	r9, [r4, #88]
 359 0100 4844     		add	r0, r0, r9
 360              	.LVL53:
 361 0102 0FFA80F8 		sxth	r8, r0
  74:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 				{
 362              		.loc 1 74 0
 363 0106 206C     		ldr	r0, [r4, #64]
 364 0108 8045     		cmp	r8, r0
 365 010a DFDB     		blt	.L16
  74:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 				{
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s 			page 12


 366              		.loc 1 74 0 is_stmt 0 discriminator 1
 367 010c 0AEB000B 		add	fp, r10, r0
 368 0110 636C     		ldr	r3, [r4, #68]
 369 0112 2068     		ldr	r0, [r4]
 370 0114 9847     		blx	r3
 371              	.LVL54:
 372 0116 ABEB4000 		sub	r0, fp, r0, lsl #1
 373 011a 8145     		cmp	r9, r0
 374 011c D6DA     		bge	.L16
  76:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 				}
 375              		.loc 1 76 0 is_stmt 1
 376 011e 2B69     		ldr	r3, [r5, #16]
 377 0120 2868     		ldr	r0, [r5]
 378 0122 9847     		blx	r3
 379              	.LVL55:
 380 0124 D2E7     		b	.L16
 381              	.L15:
 382              	.LBE13:
 383              	.LBB14:
  83:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 				ft_int16_t right = context->CurrentX + width;
 384              		.loc 1 83 0
 385 0126 6B68     		ldr	r3, [r5, #4]
 386 0128 2068     		ldr	r0, [r4]
 387 012a 9847     		blx	r3
 388              	.LVL56:
  84:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 				ft_int16_t height = last->Height(context->Parent);
 389              		.loc 1 84 0
 390 012c 636D     		ldr	r3, [r4, #84]
 391 012e 1844     		add	r0, r0, r3
 392              	.LVL57:
 393 0130 0FFA80F8 		sxth	r8, r0
 394              	.LVL58:
  85:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 				ft_int16_t bottom = context->CurrentY + height;
 395              		.loc 1 85 0
 396 0134 AB68     		ldr	r3, [r5, #8]
 397 0136 2068     		ldr	r0, [r4]
 398 0138 9847     		blx	r3
 399              	.LVL59:
  87:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 				context->CurrentX = right + context->Margin(context->Parent);
 400              		.loc 1 87 0
 401 013a 2B69     		ldr	r3, [r5, #16]
 402 013c 2868     		ldr	r0, [r5]
 403 013e 9847     		blx	r3
 404              	.LVL60:
  88:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		    }
 405              		.loc 1 88 0
 406 0140 636C     		ldr	r3, [r4, #68]
 407 0142 2068     		ldr	r0, [r4]
 408 0144 9847     		blx	r3
 409              	.LVL61:
 410 0146 4044     		add	r0, r0, r8
 411 0148 6065     		str	r0, [r4, #84]
 412 014a C6E7     		b	.L14
 413              	.LVL62:
 414              	.L20:
 415              	.LBE14:
 416              	.LBB15:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s 			page 13


 417              	.LBB16:
 158:FT_Esd_Framework/Ft_Esd_Dl.h **** 	}
 159:FT_Esd_Framework/Ft_Esd_Dl.h **** #endif
 160:FT_Esd_Framework/Ft_Esd_Dl.h **** }
 161:FT_Esd_Framework/Ft_Esd_Dl.h **** //Restore EVE context, see RESTORE_CONTEXT
 162:FT_Esd_Framework/Ft_Esd_Dl.h **** ESD_FUNCTION(Ft_Esd_Dl_RESTORE_CONTEXT, Type = ft_void_t, Category = EveRenderFunctions, Inline)
 163:FT_Esd_Framework/Ft_Esd_Dl.h **** inline static ft_void_t Ft_Esd_Dl_RESTORE_CONTEXT()
 164:FT_Esd_Framework/Ft_Esd_Dl.h **** {
 165:FT_Esd_Framework/Ft_Esd_Dl.h **** 	Ft_Gpu_Hal_WrCmd32(Ft_Esd_Host, RESTORE_CONTEXT());
 418              		.loc 2 165 0
 419 014c 4FF00C51 		mov	r1, #587202560
 420 0150 0A4B     		ldr	r3, .L21+16
 421 0152 1868     		ldr	r0, [r3]
 422 0154 FFF7FEFF 		bl	Ft_Gpu_Hal_WrCmd32
 423              	.LVL63:
 166:FT_Esd_Framework/Ft_Esd_Dl.h **** #if FT_ESD_OPTIMIZE_DISPLAYLIST
 167:FT_Esd_Framework/Ft_Esd_Dl.h **** 	if (Ft_Esd_GpuState_I > 0)
 424              		.loc 2 167 0
 425 0158 044B     		ldr	r3, .L21
 426 015a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 427 015c 13B1     		cbz	r3, .L11
 168:FT_Esd_Framework/Ft_Esd_Dl.h **** 		--Ft_Esd_GpuState_I;
 428              		.loc 2 168 0
 429 015e 013B     		subs	r3, r3, #1
 430 0160 024A     		ldr	r2, .L21
 431 0162 1370     		strb	r3, [r2]
 432              	.L11:
 433              	.LBE16:
 434              	.LBE15:
  93:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	}
  94:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	Ft_Esd_Dl_RESTORE_CONTEXT();
  95:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** }
 435              		.loc 1 95 0
 436 0164 03B0     		add	sp, sp, #12
 437              	.LCFI4:
 438              		.cfi_def_cfa_offset 36
 439              	.LVL64:
 440              		@ sp needed
 441 0166 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 442              	.LVL65:
 443              	.L22:
 444 016a 00BF     		.align	2
 445              	.L21:
 446 016c 00000000 		.word	Ft_Esd_GpuState_I
 447 0170 00000000 		.word	Ft_Esd_GpuState
 448 0174 00F83F00 		.word	4192256
 449 0178 00F0FF00 		.word	16773120
 450 017c 00000000 		.word	Ft_Esd_Host
 451              		.cfi_endproc
 452              	.LFE25:
 454              		.section	.text.Ft_Esd_ScrollPanel_Add,"ax",%progbits
 455              		.align	1
 456              		.global	Ft_Esd_ScrollPanel_Add
 457              		.syntax unified
 458              		.thumb
 459              		.thumb_func
 460              		.fpu fpv5-sp-d16
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s 			page 14


 462              	Ft_Esd_ScrollPanel_Add:
 463              	.LFB26:
  96:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 
  97:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** void Ft_Esd_ScrollPanel_Add(Ft_Esd_ScrollPanel *context, Ft_Esd_LayoutChild *child)
  98:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** {
 464              		.loc 1 98 0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 468              		@ link register save eliminated.
 469              	.LVL66:
  99:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	Ft_Esd_LayoutChild *last = context->First;
 470              		.loc 1 99 0
 471 0000 026E     		ldr	r2, [r0, #96]
 472              	.LVL67:
 100:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	if (last)
 473              		.loc 1 100 0
 474 0002 12B9     		cbnz	r2, .L25
 101:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	{
 102:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		while (last->Next)
 103:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		{
 104:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 			last = last->Next;
 105:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		}
 106:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		last->Next = child;
 107:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		child->Previous = last;
 108:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	}
 109:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	else
 110:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	{
 111:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		context->First = child;
 475              		.loc 1 111 0
 476 0004 0166     		str	r1, [r0, #96]
 112:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	}
 113:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** }
 477              		.loc 1 113 0
 478 0006 7047     		bx	lr
 479              	.L27:
 104:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		}
 480              		.loc 1 104 0
 481 0008 1A46     		mov	r2, r3
 482              	.LVL68:
 483              	.L25:
 102:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		{
 484              		.loc 1 102 0
 485 000a 9369     		ldr	r3, [r2, #24]
 486 000c 002B     		cmp	r3, #0
 487 000e FBD1     		bne	.L27
 106:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		child->Previous = last;
 488              		.loc 1 106 0
 489 0010 9161     		str	r1, [r2, #24]
 107:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	}
 490              		.loc 1 107 0
 491 0012 4A61     		str	r2, [r1, #20]
 492 0014 7047     		bx	lr
 493              		.cfi_endproc
 494              	.LFE26:
 496              		.section	.text.Ft_Esd_ScrollPanel_Remove,"ax",%progbits
 497              		.align	1
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s 			page 15


 498              		.global	Ft_Esd_ScrollPanel_Remove
 499              		.syntax unified
 500              		.thumb
 501              		.thumb_func
 502              		.fpu fpv5-sp-d16
 504              	Ft_Esd_ScrollPanel_Remove:
 505              	.LFB27:
 114:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 
 115:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** void Ft_Esd_ScrollPanel_Remove(Ft_Esd_ScrollPanel *context, Ft_Esd_LayoutChild *child)
 116:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** {
 506              		.loc 1 116 0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 0
 509              		@ frame_needed = 0, uses_anonymous_args = 0
 510              		@ link register save eliminated.
 511              	.LVL69:
 117:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	Ft_Esd_LayoutChild *previous = child->Previous;
 512              		.loc 1 117 0
 513 0000 4A69     		ldr	r2, [r1, #20]
 514              	.LVL70:
 118:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	Ft_Esd_LayoutChild *next = child->Next;
 515              		.loc 1 118 0
 516 0002 8B69     		ldr	r3, [r1, #24]
 517              	.LVL71:
 119:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	if (previous)
 518              		.loc 1 119 0
 519 0004 02B1     		cbz	r2, .L29
 120:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	{
 121:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		previous->Next = next;
 520              		.loc 1 121 0
 521 0006 9361     		str	r3, [r2, #24]
 522              	.L29:
 122:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	}
 123:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	if (next)
 523              		.loc 1 123 0
 524 0008 03B1     		cbz	r3, .L30
 124:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	{
 125:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		next->Previous = previous;
 525              		.loc 1 125 0
 526 000a 5A61     		str	r2, [r3, #20]
 527              	.L30:
 126:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	}
 127:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	if (context->Current == child)
 528              		.loc 1 127 0
 529 000c 436E     		ldr	r3, [r0, #100]
 530              	.LVL72:
 531 000e 8B42     		cmp	r3, r1
 532 0010 03D0     		beq	.L33
 533              	.L31:
 128:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	{
 129:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		context->Current = child->Previous;
 130:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	}
 131:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	if (context->First == child)
 534              		.loc 1 131 0
 535 0012 036E     		ldr	r3, [r0, #96]
 536 0014 8B42     		cmp	r3, r1
 537 0016 03D0     		beq	.L34
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s 			page 16


 538              	.L28:
 132:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	{
 133:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 		context->First = child->Next;
 134:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	}
 135:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** }
 539              		.loc 1 135 0
 540 0018 7047     		bx	lr
 541              	.L33:
 129:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	}
 542              		.loc 1 129 0
 543 001a 4B69     		ldr	r3, [r1, #20]
 544 001c 4366     		str	r3, [r0, #100]
 545 001e F8E7     		b	.L31
 546              	.L34:
 133:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	}
 547              		.loc 1 133 0
 548 0020 8B69     		ldr	r3, [r1, #24]
 549 0022 0366     		str	r3, [r0, #96]
 550              		.loc 1 135 0
 551 0024 F8E7     		b	.L28
 552              		.cfi_endproc
 553              	.LFE27:
 555              		.section	.text.Ft_Esd_ScrollPanel_ChildX,"ax",%progbits
 556              		.align	1
 557              		.global	Ft_Esd_ScrollPanel_ChildX
 558              		.syntax unified
 559              		.thumb
 560              		.thumb_func
 561              		.fpu fpv5-sp-d16
 563              	Ft_Esd_ScrollPanel_ChildX:
 564              	.LFB28:
 136:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 
 137:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** ft_int16_t Ft_Esd_ScrollPanel_ChildX(Ft_Esd_ScrollPanel *context)
 138:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** {
 565              		.loc 1 138 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 569              	.LVL73:
 570 0000 38B5     		push	{r3, r4, r5, lr}
 571              	.LCFI5:
 572              		.cfi_def_cfa_offset 16
 573              		.cfi_offset 3, -16
 574              		.cfi_offset 4, -12
 575              		.cfi_offset 5, -8
 576              		.cfi_offset 14, -4
 577 0002 0546     		mov	r5, r0
 139:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	return context->X(context->Parent) + context->CurrentX + context->Margin(context->Parent);
 578              		.loc 1 139 0
 579 0004 C36A     		ldr	r3, [r0, #44]
 580 0006 0068     		ldr	r0, [r0]
 581              	.LVL74:
 582 0008 9847     		blx	r3
 583              	.LVL75:
 584 000a 6B6D     		ldr	r3, [r5, #84]
 585 000c 13FA80F0 		uxtah	r0, r3, r0
 586 0010 84B2     		uxth	r4, r0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s 			page 17


 587 0012 6B6C     		ldr	r3, [r5, #68]
 588 0014 2868     		ldr	r0, [r5]
 589 0016 9847     		blx	r3
 590              	.LVL76:
 591 0018 2044     		add	r0, r0, r4
 140:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** }
 592              		.loc 1 140 0
 593 001a 00B2     		sxth	r0, r0
 594 001c 38BD     		pop	{r3, r4, r5, pc}
 595              		.cfi_endproc
 596              	.LFE28:
 598              		.section	.text.Ft_Esd_ScrollPanel_ChildY,"ax",%progbits
 599              		.align	1
 600              		.global	Ft_Esd_ScrollPanel_ChildY
 601              		.syntax unified
 602              		.thumb
 603              		.thumb_func
 604              		.fpu fpv5-sp-d16
 606              	Ft_Esd_ScrollPanel_ChildY:
 607              	.LFB29:
 141:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 
 142:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** ft_int16_t Ft_Esd_ScrollPanel_ChildY(Ft_Esd_ScrollPanel *context)
 143:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** {
 608              		.loc 1 143 0
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 0
 611              		@ frame_needed = 0, uses_anonymous_args = 0
 612              	.LVL77:
 613 0000 38B5     		push	{r3, r4, r5, lr}
 614              	.LCFI6:
 615              		.cfi_def_cfa_offset 16
 616              		.cfi_offset 3, -16
 617              		.cfi_offset 4, -12
 618              		.cfi_offset 5, -8
 619              		.cfi_offset 14, -4
 620 0002 0546     		mov	r5, r0
 144:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	return context->Y(context->Parent) + context->CurrentY - context->OffsetY + context->Margin(contex
 621              		.loc 1 144 0
 622 0004 036B     		ldr	r3, [r0, #48]
 623 0006 0068     		ldr	r0, [r0]
 624              	.LVL78:
 625 0008 9847     		blx	r3
 626              	.LVL79:
 627 000a AB6D     		ldr	r3, [r5, #88]
 628 000c 13FA80F4 		uxtah	r4, r3, r0
 629 0010 A4B2     		uxth	r4, r4
 630 0012 286C     		ldr	r0, [r5, #64]
 631 0014 241A     		subs	r4, r4, r0
 632 0016 A4B2     		uxth	r4, r4
 633 0018 6B6C     		ldr	r3, [r5, #68]
 634 001a 2868     		ldr	r0, [r5]
 635 001c 9847     		blx	r3
 636              	.LVL80:
 637 001e 2044     		add	r0, r0, r4
 145:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** }
 638              		.loc 1 145 0
 639 0020 00B2     		sxth	r0, r0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s 			page 18


 640 0022 38BD     		pop	{r3, r4, r5, pc}
 641              		.cfi_endproc
 642              	.LFE29:
 644              		.section	.text.Ft_Esd_ScrollPanel_ChildWidth,"ax",%progbits
 645              		.align	1
 646              		.global	Ft_Esd_ScrollPanel_ChildWidth
 647              		.syntax unified
 648              		.thumb
 649              		.thumb_func
 650              		.fpu fpv5-sp-d16
 652              	Ft_Esd_ScrollPanel_ChildWidth:
 653              	.LFB30:
 146:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 
 147:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** ft_int16_t Ft_Esd_ScrollPanel_ChildWidth(Ft_Esd_ScrollPanel *context)
 148:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** {
 654              		.loc 1 148 0
 655              		.cfi_startproc
 656              		@ args = 0, pretend = 0, frame = 0
 657              		@ frame_needed = 0, uses_anonymous_args = 0
 658              	.LVL81:
 659 0000 38B5     		push	{r3, r4, r5, lr}
 660              	.LCFI7:
 661              		.cfi_def_cfa_offset 16
 662              		.cfi_offset 3, -16
 663              		.cfi_offset 4, -12
 664              		.cfi_offset 5, -8
 665              		.cfi_offset 14, -4
 666 0002 0446     		mov	r4, r0
 149:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	return context->Width(context->Parent) - (context->Margin(context->Parent) * 2);
 667              		.loc 1 149 0
 668 0004 436B     		ldr	r3, [r0, #52]
 669 0006 0068     		ldr	r0, [r0]
 670              	.LVL82:
 671 0008 9847     		blx	r3
 672              	.LVL83:
 673 000a 85B2     		uxth	r5, r0
 674 000c 636C     		ldr	r3, [r4, #68]
 675 000e 2068     		ldr	r0, [r4]
 676 0010 9847     		blx	r3
 677              	.LVL84:
 678 0012 A5EB4000 		sub	r0, r5, r0, lsl #1
 150:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** }
 679              		.loc 1 150 0
 680 0016 00B2     		sxth	r0, r0
 681 0018 38BD     		pop	{r3, r4, r5, pc}
 682              		.cfi_endproc
 683              	.LFE30:
 685              		.section	.text.Ft_Esd_ScrollPanel_ChildHeight,"ax",%progbits
 686              		.align	1
 687              		.global	Ft_Esd_ScrollPanel_ChildHeight
 688              		.syntax unified
 689              		.thumb
 690              		.thumb_func
 691              		.fpu fpv5-sp-d16
 693              	Ft_Esd_ScrollPanel_ChildHeight:
 694              	.LFB31:
 151:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s 			page 19


 152:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** ft_int16_t Ft_Esd_ScrollPanel_ChildHeight(Ft_Esd_ScrollPanel *context)
 153:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** {
 695              		.loc 1 153 0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 0
 698              		@ frame_needed = 0, uses_anonymous_args = 0
 699              	.LVL85:
 700 0000 08B5     		push	{r3, lr}
 701              	.LCFI8:
 702              		.cfi_def_cfa_offset 8
 703              		.cfi_offset 3, -8
 704              		.cfi_offset 14, -4
 154:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** 	return context->Current->Height(context->Parent);
 705              		.loc 1 154 0
 706 0002 436E     		ldr	r3, [r0, #100]
 707 0004 9B68     		ldr	r3, [r3, #8]
 708 0006 0068     		ldr	r0, [r0]
 709              	.LVL86:
 710 0008 9847     		blx	r3
 711              	.LVL87:
 155:FT_Esd_Widgets/Ft_Esd_ScrollPanel.c **** }
 712              		.loc 1 155 0
 713 000a 08BD     		pop	{r3, pc}
 714              		.cfi_endproc
 715              	.LFE31:
 717              		.text
 718              	.Letext0:
 719              		.file 3 "FT_Eve_Hal/FT_DataTypes.h"
 720              		.file 4 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/lock.h"
 721              		.file 5 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_types.h"
 722              		.file 6 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 723              		.file 7 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/unistd.h"
 724              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/reent.h"
 725              		.file 9 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/stdlib.h"
 726              		.file 10 "FT_Eve_Hal/FT_Gpu_Hal.h"
 727              		.file 11 "FT_Esd_Framework/Ft_Esd.h"
 728              		.file 12 "FT_Esd_Widgets/Ft_Esd_Layout.h"
 729              		.file 13 "FT_Esd_Widgets/Ft_Esd_Theme.h"
 730              		.file 14 "FT_Esd_Widgets/Ft_Esd_TouchArea.h"
 731              		.file 15 "FT_Esd_Widgets/Ft_Esd_ScrollPanel.h"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Ft_Esd_ScrollPanel.c
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s:18     .text.Ft_Esd_ScrollPanel_Update_Scroll:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s:25     .text.Ft_Esd_ScrollPanel_Update_Scroll:0000000000000000 Ft_Esd_ScrollPanel_Update_Scroll
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s:111    .text.Ft_Esd_ScrollPanel_Update_Contents:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s:118    .text.Ft_Esd_ScrollPanel_Update_Contents:0000000000000000 Ft_Esd_ScrollPanel_Update_Contents
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s:164    .text.Ft_Esd_ScrollPanel_Render_Contents:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s:171    .text.Ft_Esd_ScrollPanel_Render_Contents:0000000000000000 Ft_Esd_ScrollPanel_Render_Contents
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s:446    .text.Ft_Esd_ScrollPanel_Render_Contents:000000000000016c $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s:455    .text.Ft_Esd_ScrollPanel_Add:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s:462    .text.Ft_Esd_ScrollPanel_Add:0000000000000000 Ft_Esd_ScrollPanel_Add
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s:497    .text.Ft_Esd_ScrollPanel_Remove:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s:504    .text.Ft_Esd_ScrollPanel_Remove:0000000000000000 Ft_Esd_ScrollPanel_Remove
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s:556    .text.Ft_Esd_ScrollPanel_ChildX:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s:563    .text.Ft_Esd_ScrollPanel_ChildX:0000000000000000 Ft_Esd_ScrollPanel_ChildX
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s:599    .text.Ft_Esd_ScrollPanel_ChildY:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s:606    .text.Ft_Esd_ScrollPanel_ChildY:0000000000000000 Ft_Esd_ScrollPanel_ChildY
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s:645    .text.Ft_Esd_ScrollPanel_ChildWidth:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s:652    .text.Ft_Esd_ScrollPanel_ChildWidth:0000000000000000 Ft_Esd_ScrollPanel_ChildWidth
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s:686    .text.Ft_Esd_ScrollPanel_ChildHeight:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccVxAbEE.s:693    .text.Ft_Esd_ScrollPanel_ChildHeight:0000000000000000 Ft_Esd_ScrollPanel_ChildHeight

UNDEFINED SYMBOLS
Ft_Esd_TouchArea_TouchY
Ft_Esd_TouchTag_SuppressCurrentTags
Ft_Gpu_Hal_WrCmd32
Ft_Esd_GpuState_I
Ft_Esd_GpuState
Ft_Esd_Host
