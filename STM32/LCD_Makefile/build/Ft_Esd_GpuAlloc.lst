ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"Ft_Esd_GpuAlloc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Ft_Esd_GpuAlloc_Reset,"ax",%progbits
  18              		.align	1
  19              		.global	Ft_Esd_GpuAlloc_Reset
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-sp-d16
  25              	Ft_Esd_GpuAlloc_Reset:
  26              	.LFB3:
  27              		.file 1 "FT_Esd_Framework/Ft_Esd_GpuAlloc.c"
   1:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** /*
   2:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
   3:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** Allocation mechanism for RAM_G.
   4:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
   5:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** */
   6:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
   7:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** #include "Ft_Esd.h"
   8:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** #include "Ft_Esd_GpuAlloc.h"
   9:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
  10:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** #include "FT_Platform.h"
  11:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** #include "FT_Gpu.h"
  12:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
  13:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** #ifdef ESD_SIMULATION
  14:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** static int s_ErrorGpuAllocFailed = 0;
  15:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** #endif
  16:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
  17:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** void Ft_Esd_GpuAlloc_Reset(Ft_Esd_GpuAlloc *ga)
  18:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** {
  28              		.loc 1 18 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34 0000 10B4     		push	{r4}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 4, -4
  38              	.LVL1:
  39              	.LBB2:
  19:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** #ifdef ESD_SIMULATION
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s 			page 2


  20:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	s_ErrorGpuAllocFailed = 0;
  21:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** #endif
  22:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
  23:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	for (int id = 0; id < MAX_NUM_ALLOCATIONS; ++id)
  40              		.loc 1 23 0
  41 0002 0023     		movs	r3, #0
  42 0004 08E0     		b	.L2
  43              	.LVL2:
  44              	.L3:
  24:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	{
  25:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		ga->AllocRefs[id].Idx = MAX_NUM_ALLOCATIONS;
  45              		.loc 1 25 0 discriminator 3
  46 0006 4022     		movs	r2, #64
  47 0008 20F82320 		strh	r2, [r0, r3, lsl #2]	@ movhi
  26:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		++ga->AllocRefs[id].Seq; // Seq is always cycled, initial value not important
  48              		.loc 1 26 0 discriminator 3
  49 000c 00EB8301 		add	r1, r0, r3, lsl #2
  50 0010 4A88     		ldrh	r2, [r1, #2]
  51 0012 0132     		adds	r2, r2, #1
  52 0014 4A80     		strh	r2, [r1, #2]	@ movhi
  23:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	{
  53              		.loc 1 23 0 discriminator 3
  54 0016 0133     		adds	r3, r3, #1
  55              	.LVL3:
  56              	.L2:
  23:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	{
  57              		.loc 1 23 0 is_stmt 0 discriminator 1
  58 0018 3F2B     		cmp	r3, #63
  59 001a F4D9     		bls	.L3
  60              	.LBE2:
  61              	.LBB3:
  27:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	}
  28:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
  29:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	for (int idx = 0; idx < MAX_NUM_ALLOCATIONS; ++idx)
  62              		.loc 1 29 0 is_stmt 1
  63 001c 0022     		movs	r2, #0
  64 001e 10E0     		b	.L4
  65              	.LVL4:
  66              	.L5:
  30:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	{
  31:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		ga->AllocEntries[idx].Address = RAM_G_SIZE;
  67              		.loc 1 31 0 discriminator 3
  68 0020 5100     		lsls	r1, r2, #1
  69 0022 1144     		add	r1, r1, r2
  70 0024 8B00     		lsls	r3, r1, #2
  71 0026 0344     		add	r3, r3, r0
  72 0028 4FF48011 		mov	r1, #1048576
  73 002c C3F80011 		str	r1, [r3, #256]
  32:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		ga->AllocEntries[idx].Length = 0;
  74              		.loc 1 32 0 discriminator 3
  75 0030 0021     		movs	r1, #0
  76 0032 C3F80411 		str	r1, [r3, #260]
  33:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		ga->AllocEntries[idx].Id = MAX_NUM_ALLOCATIONS;
  77              		.loc 1 33 0 discriminator 3
  78 0036 4024     		movs	r4, #64
  79 0038 A3F80841 		strh	r4, [r3, #264]	@ movhi
  34:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		ga->AllocEntries[idx].Flags = 0;
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s 			page 3


  80              		.loc 1 34 0 discriminator 3
  81 003c A3F80A11 		strh	r1, [r3, #266]	@ movhi
  29:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	{
  82              		.loc 1 29 0 discriminator 3
  83 0040 0132     		adds	r2, r2, #1
  84              	.LVL5:
  85              	.L4:
  29:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	{
  86              		.loc 1 29 0 is_stmt 0 discriminator 1
  87 0042 3F2A     		cmp	r2, #63
  88 0044 ECD9     		bls	.L5
  89              	.LBE3:
  35:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	}
  36:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
  37:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	// First allocation entry is unallocated entry of entire RAM_G_SIZE
  38:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	ga->AllocEntries[0].Address = 0;
  90              		.loc 1 38 0 is_stmt 1
  91 0046 0023     		movs	r3, #0
  92 0048 C0F80031 		str	r3, [r0, #256]
  39:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	ga->AllocEntries[0].Length = RAM_G_SIZE;
  93              		.loc 1 39 0
  94 004c 4FF48013 		mov	r3, #1048576
  95 0050 C0F80431 		str	r3, [r0, #260]
  40:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	ga->NbAllocEntries = 1;
  96              		.loc 1 40 0
  97 0054 0123     		movs	r3, #1
  98 0056 C0F80034 		str	r3, [r0, #1024]
  41:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** }
  99              		.loc 1 41 0
 100 005a 5DF8044B 		ldr	r4, [sp], #4
 101              	.LCFI1:
 102              		.cfi_restore 4
 103              		.cfi_def_cfa_offset 0
 104 005e 7047     		bx	lr
 105              		.cfi_endproc
 106              	.LFE3:
 108              		.section	.text.Ft_Esd_GpuAlloc_InsertFree,"ax",%progbits
 109              		.align	1
 110              		.global	Ft_Esd_GpuAlloc_InsertFree
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 114              		.fpu fpv5-sp-d16
 116              	Ft_Esd_GpuAlloc_InsertFree:
 117              	.LFB4:
  42:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
  43:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** void Ft_Esd_GpuAlloc_InsertFree(Ft_Esd_GpuAlloc *ga, ft_uint32_t atidx, ft_uint32_t size)
  44:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** {
 118              		.loc 1 44 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
 123              	.LVL6:
 124 0000 F0B4     		push	{r4, r5, r6, r7}
 125              	.LCFI2:
 126              		.cfi_def_cfa_offset 16
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s 			page 4


 127              		.cfi_offset 4, -16
 128              		.cfi_offset 5, -12
 129              		.cfi_offset 6, -8
 130              		.cfi_offset 7, -4
 131 0002 0546     		mov	r5, r0
 132 0004 0E46     		mov	r6, r1
 133 0006 9446     		mov	ip, r2
 134              	.LBB4:
  45:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	// First move entries one step forward
  46:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	for (int idx = (ga->NbAllocEntries - 1); idx >= atidx; --idx)
 135              		.loc 1 46 0
 136 0008 D0F80074 		ldr	r7, [r0, #1024]
 137 000c 7C1E     		subs	r4, r7, #1
 138              	.LVL7:
 139 000e 10E0     		b	.L8
 140              	.LVL8:
 141              	.L9:
 142              	.LBB5:
  47:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	{
  48:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		int id = ga->AllocEntries[idx].Id;
  49:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		if (id < MAX_NUM_ALLOCATIONS)
  50:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		{
  51:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			// Move reference idx one ahead
  52:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			++ga->AllocRefs[id].Idx;
  53:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		}
  54:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		ga->AllocEntries[idx + 1] = ga->AllocEntries[idx];
 143              		.loc 1 54 0 discriminator 2
 144 0010 621C     		adds	r2, r4, #1
 145 0012 02EB4202 		add	r2, r2, r2, lsl #1
 146 0016 9300     		lsls	r3, r2, #2
 147              	.LVL9:
 148 0018 2B44     		add	r3, r3, r5
 149 001a 03F58073 		add	r3, r3, #256
 150 001e 04EB4401 		add	r1, r4, r4, lsl #1
 151 0022 8A00     		lsls	r2, r1, #2
 152 0024 2A44     		add	r2, r2, r5
 153 0026 02F58072 		add	r2, r2, #256
 154 002a 07CA     		ldm	r2, {r0, r1, r2}
 155 002c 83E80700 		stm	r3, {r0, r1, r2}
 156              	.LBE5:
  46:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	{
 157              		.loc 1 46 0 discriminator 2
 158 0030 013C     		subs	r4, r4, #1
 159              	.LVL10:
 160              	.L8:
  46:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	{
 161              		.loc 1 46 0 is_stmt 0 discriminator 1
 162 0032 B442     		cmp	r4, r6
 163 0034 0DD3     		bcc	.L12
 164              	.LBB6:
  48:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		if (id < MAX_NUM_ALLOCATIONS)
 165              		.loc 1 48 0 is_stmt 1
 166 0036 04EB4402 		add	r2, r4, r4, lsl #1
 167 003a 9300     		lsls	r3, r2, #2
 168 003c 2B44     		add	r3, r3, r5
 169 003e B3F80831 		ldrh	r3, [r3, #264]
 170              	.LVL11:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s 			page 5


  49:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		{
 171              		.loc 1 49 0
 172 0042 3F2B     		cmp	r3, #63
 173 0044 E4D8     		bhi	.L9
  52:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		}
 174              		.loc 1 52 0
 175 0046 35F82320 		ldrh	r2, [r5, r3, lsl #2]
 176 004a 0132     		adds	r2, r2, #1
 177 004c 25F82320 		strh	r2, [r5, r3, lsl #2]	@ movhi
 178 0050 DEE7     		b	.L9
 179              	.LVL12:
 180              	.L12:
 181              	.LBE6:
 182              	.LBE4:
  55:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	}
  56:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
  57:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	// Set the free space entry
  58:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	ga->AllocEntries[atidx].Address = ga->AllocEntries[atidx - 1].Address + ga->AllocEntries[atidx - 1
 183              		.loc 1 58 0
 184 0052 701E     		subs	r0, r6, #1
 185 0054 4300     		lsls	r3, r0, #1
 186 0056 1918     		adds	r1, r3, r0
 187 0058 8A00     		lsls	r2, r1, #2
 188 005a 2A44     		add	r2, r2, r5
 189 005c D2F80011 		ldr	r1, [r2, #256]
 190 0060 0344     		add	r3, r3, r0
 191 0062 9A00     		lsls	r2, r3, #2
 192 0064 2A44     		add	r2, r2, r5
 193 0066 D2F80431 		ldr	r3, [r2, #260]
 194 006a 1944     		add	r1, r1, r3
 195 006c 7200     		lsls	r2, r6, #1
 196 006e 9019     		adds	r0, r2, r6
 197 0070 8300     		lsls	r3, r0, #2
 198 0072 1846     		mov	r0, r3
 199 0074 2B44     		add	r3, r3, r5
 200 0076 C3F80011 		str	r1, [r3, #256]
  59:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	ga->AllocEntries[atidx].Length = size;
 201              		.loc 1 59 0
 202 007a C3F804C1 		str	ip, [r3, #260]
  60:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	ga->AllocEntries[atidx].Id = MAX_NUM_ALLOCATIONS;
 203              		.loc 1 60 0
 204 007e 4021     		movs	r1, #64
 205 0080 A3F80811 		strh	r1, [r3, #264]	@ movhi
  61:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	ga->AllocEntries[atidx].Flags = 0;
 206              		.loc 1 61 0
 207 0084 0346     		mov	r3, r0
 208 0086 2B44     		add	r3, r3, r5
 209 0088 0022     		movs	r2, #0
 210 008a A3F80A21 		strh	r2, [r3, #266]	@ movhi
  62:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	++ga->NbAllocEntries;
 211              		.loc 1 62 0
 212 008e 0137     		adds	r7, r7, #1
 213 0090 C5F80074 		str	r7, [r5, #1024]
  63:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** }
 214              		.loc 1 63 0
 215 0094 F0BC     		pop	{r4, r5, r6, r7}
 216              	.LCFI3:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s 			page 6


 217              		.cfi_restore 7
 218              		.cfi_restore 6
 219              		.cfi_restore 5
 220              		.cfi_restore 4
 221              		.cfi_def_cfa_offset 0
 222              	.LVL13:
 223 0096 7047     		bx	lr
 224              		.cfi_endproc
 225              	.LFE4:
 227              		.section	.text.Ft_Esd_GpuAlloc_Alloc,"ax",%progbits
 228              		.align	1
 229              		.global	Ft_Esd_GpuAlloc_Alloc
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 233              		.fpu fpv5-sp-d16
 235              	Ft_Esd_GpuAlloc_Alloc:
 236              	.LFB5:
  64:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
  65:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** Ft_Esd_GpuHandle Ft_Esd_GpuAlloc_Alloc(Ft_Esd_GpuAlloc *ga, ft_uint32_t size, ft_uint16_t flags)
  66:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** {
 237              		.loc 1 66 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 8
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              	.LVL14:
 242 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 243              	.LCFI4:
 244              		.cfi_def_cfa_offset 20
 245              		.cfi_offset 4, -20
 246              		.cfi_offset 5, -16
 247              		.cfi_offset 6, -12
 248              		.cfi_offset 7, -8
 249              		.cfi_offset 14, -4
 250 0002 83B0     		sub	sp, sp, #12
 251              	.LCFI5:
 252              		.cfi_def_cfa_offset 32
  67:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	if (ga->NbAllocEntries >= MAX_NUM_ALLOCATIONS)
 253              		.loc 1 67 0
 254 0004 D0F80054 		ldr	r5, [r0, #1024]
 255 0008 3F2D     		cmp	r5, #63
 256 000a 44D8     		bhi	.L14
  68:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	{
  69:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		goto ReturnInvalidHandle;
  70:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	}
  71:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
  72:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	// Always align size to 4 bytes
  73:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	size = (size + 3UL) & ~3UL;
 257              		.loc 1 73 0
 258 000c 0331     		adds	r1, r1, #3
 259              	.LVL15:
 260 000e 21F00306 		bic	r6, r1, #3
 261              	.LVL16:
 262              	.LBB7:
  74:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
  75:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	// Scan through the AllocEntries, find the first open allocation that is large enough
  76:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	for (int idx = 0; idx < ga->NbAllocEntries; ++idx)
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s 			page 7


 263              		.loc 1 76 0
 264 0012 0021     		movs	r1, #0
 265 0014 24E0     		b	.L15
 266              	.LVL17:
 267              	.L26:
 268 0016 0546     		mov	r5, r0
 269              	.LVL18:
 270              	.LBB8:
 271              	.LBB9:
  77:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	{
  78:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		// Check if allocation entry is unallocated and large enough
  79:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		if (ga->AllocEntries[idx].Id == MAX_NUM_ALLOCATIONS
  80:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			&& ga->AllocEntries[idx].Length >= size)
  81:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		{
  82:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			// Find an unused handle
  83:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			for (int id = 0; id < MAX_NUM_ALLOCATIONS; ++id)
  84:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			{
  85:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 				if (ga->AllocRefs[id].Idx == MAX_NUM_ALLOCATIONS)
  86:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 				{
  87:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 					// Allocate this block
  88:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 					ft_uint32_t remaining = ga->AllocEntries[idx].Length - size;
  89:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 					ga->AllocEntries[idx].Length = size;
 272              		.loc 1 89 0
 273 0018 4F00     		lsls	r7, r1, #1
 274 001a 0F44     		add	r7, r7, r1
 275 001c B800     		lsls	r0, r7, #2
 276              	.LVL19:
 277 001e 2844     		add	r0, r0, r5
 278 0020 C0F80461 		str	r6, [r0, #260]
  90:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 					ga->AllocEntries[idx].Id = id;
 279              		.loc 1 90 0
 280 0024 A7B2     		uxth	r7, r4
 281 0026 A0F80871 		strh	r7, [r0, #264]	@ movhi
  91:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 					flags |= GA_USED_FLAG;
 282              		.loc 1 91 0
 283 002a 42F00202 		orr	r2, r2, #2
 284              	.LVL20:
  92:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 					ga->AllocEntries[idx].Flags = flags;
 285              		.loc 1 92 0
 286 002e A0F80A21 		strh	r2, [r0, #266]	@ movhi
  93:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 					ga->AllocRefs[id].Idx = idx;
 287              		.loc 1 93 0
 288 0032 25F82410 		strh	r1, [r5, r4, lsl #2]	@ movhi
  94:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 					++ga->AllocRefs[id].Seq;
 289              		.loc 1 94 0
 290 0036 05EB8400 		add	r0, r5, r4, lsl #2
 291 003a 4288     		ldrh	r2, [r0, #2]
 292              	.LVL21:
 293 003c 0132     		adds	r2, r2, #1
 294 003e 4280     		strh	r2, [r0, #2]	@ movhi
  95:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
  96:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 					// Insert free space entry after
  97:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 					if (remaining)
 295              		.loc 1 97 0
 296 0040 9A1B     		subs	r2, r3, r6
 297              	.LVL22:
 298 0042 07D1     		bne	.L25
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s 			page 8


 299              	.LVL23:
 300              	.L19:
  98:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 					{
  99:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 						Ft_Esd_GpuAlloc_InsertFree(ga, idx + 1, remaining);
 100:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 					}
 101:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
 102:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** #ifdef ESD_SIMULATION
 103:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 					s_ErrorGpuAllocFailed = 0;
 104:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** #endif
 105:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
 106:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 					// printf("Alloc id %i\n", id);
 107:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
 108:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 					// Return the valid gpu ram handle
 109:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 					return (Ft_Esd_GpuHandle) {
 110:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 						.Id = id,
 111:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 						.Seq = ga->AllocRefs[id].Seq
 301              		.loc 1 111 0
 302 0044 05EB8400 		add	r0, r5, r4, lsl #2
 303 0048 4388     		ldrh	r3, [r0, #2]
 109:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 						.Id = id,
 304              		.loc 1 109 0
 305 004a ADF80470 		strh	r7, [sp, #4]	@ movhi
 306 004e ADF80630 		strh	r3, [sp, #6]	@ movhi
 307 0052 26E0     		b	.L20
 308              	.LVL24:
 309              	.L25:
  99:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 					}
 310              		.loc 1 99 0
 311 0054 0131     		adds	r1, r1, #1
 312              	.LVL25:
 313 0056 2846     		mov	r0, r5
 314 0058 FFF7FEFF 		bl	Ft_Esd_GpuAlloc_InsertFree
 315              	.LVL26:
 316 005c F2E7     		b	.L19
 317              	.LVL27:
 318              	.L16:
 319              	.LBE9:
 320              	.LBE8:
  76:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	{
 321              		.loc 1 76 0 discriminator 2
 322 005e 0131     		adds	r1, r1, #1
 323              	.LVL28:
 324              	.L15:
  76:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	{
 325              		.loc 1 76 0 is_stmt 0 discriminator 1
 326 0060 8D42     		cmp	r5, r1
 327 0062 18D9     		bls	.L14
  79:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			&& ga->AllocEntries[idx].Length >= size)
 328              		.loc 1 79 0 is_stmt 1
 329 0064 01EB4104 		add	r4, r1, r1, lsl #1
 330 0068 A300     		lsls	r3, r4, #2
 331 006a 0344     		add	r3, r3, r0
 332 006c B3F80831 		ldrh	r3, [r3, #264]
 333 0070 402B     		cmp	r3, #64
 334 0072 F4D1     		bne	.L16
  80:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		{
 335              		.loc 1 80 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s 			page 9


 336 0074 01EB4104 		add	r4, r1, r1, lsl #1
 337 0078 A300     		lsls	r3, r4, #2
 338 007a 0344     		add	r3, r3, r0
 339 007c D3F80431 		ldr	r3, [r3, #260]
 340 0080 B342     		cmp	r3, r6
 341 0082 ECD3     		bcc	.L16
 342              	.LBB10:
  83:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			{
 343              		.loc 1 83 0
 344 0084 0024     		movs	r4, #0
 345              	.L17:
 346              	.LVL29:
  83:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			{
 347              		.loc 1 83 0 is_stmt 0 discriminator 1
 348 0086 3F2C     		cmp	r4, #63
 349 0088 05D8     		bhi	.L14
  85:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 				{
 350              		.loc 1 85 0 is_stmt 1
 351 008a 30F82450 		ldrh	r5, [r0, r4, lsl #2]
 352 008e 402D     		cmp	r5, #64
 353 0090 C1D0     		beq	.L26
  83:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			{
 354              		.loc 1 83 0 discriminator 2
 355 0092 0134     		adds	r4, r4, #1
 356              	.LVL30:
 357 0094 F7E7     		b	.L17
 358              	.LVL31:
 359              	.L14:
 360              	.LBE10:
 361              	.LBE7:
 112:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 					};
 113:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 				}
 114:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			}
 115:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
 116:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			// No invalid handle found
 117:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			goto ReturnInvalidHandle;
 118:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		}
 119:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	}
 120:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
 121:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	// No space left, return an invalid allocation handle...
 122:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** ReturnInvalidHandle:
 123:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
 124:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** #ifdef ESD_SIMULATION
 125:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	if (!s_ErrorGpuAllocFailed)
 126:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	{
 127:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		Ft_Esd_LogError("Unable to allocate RAM_G space");
 128:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		s_ErrorGpuAllocFailed = 1;
 129:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	}
 130:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** #endif
 131:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
 132:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	return (Ft_Esd_GpuHandle) {
 362              		.loc 1 132 0
 363 0096 4023     		movs	r3, #64
 364 0098 ADF80430 		strh	r3, [sp, #4]	@ movhi
 365 009c 0023     		movs	r3, #0
 366 009e ADF80630 		strh	r3, [sp, #6]	@ movhi
 367              	.LVL32:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s 			page 10


 368              	.L20:
 369 00a2 0020     		movs	r0, #0
 370 00a4 BDF80430 		ldrh	r3, [sp, #4]
 371 00a8 63F30F00 		bfi	r0, r3, #0, #16
 372 00ac BDF80630 		ldrh	r3, [sp, #6]
 373 00b0 63F31F40 		bfi	r0, r3, #16, #16
 133:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		.Id = MAX_NUM_ALLOCATIONS,
 134:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		.Seq = 0
 135:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	};
 136:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** }
 374              		.loc 1 136 0
 375 00b4 03B0     		add	sp, sp, #12
 376              	.LCFI6:
 377              		.cfi_def_cfa_offset 20
 378              		@ sp needed
 379 00b6 F0BD     		pop	{r4, r5, r6, r7, pc}
 380              		.cfi_endproc
 381              	.LFE5:
 383              		.section	.text.Ft_Esd_GpuAlloc_Get,"ax",%progbits
 384              		.align	1
 385              		.global	Ft_Esd_GpuAlloc_Get
 386              		.syntax unified
 387              		.thumb
 388              		.thumb_func
 389              		.fpu fpv5-sp-d16
 391              	Ft_Esd_GpuAlloc_Get:
 392              	.LFB6:
 137:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
 138:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** ft_uint32_t Ft_Esd_GpuAlloc_Get(Ft_Esd_GpuAlloc *ga, Ft_Esd_GpuHandle handle)
 139:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** {
 393              		.loc 1 139 0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 8
 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397              		@ link register save eliminated.
 398              	.LVL33:
 399 0000 10B4     		push	{r4}
 400              	.LCFI7:
 401              		.cfi_def_cfa_offset 4
 402              		.cfi_offset 4, -4
 403 0002 83B0     		sub	sp, sp, #12
 404              	.LCFI8:
 405              		.cfi_def_cfa_offset 16
 406 0004 0191     		str	r1, [sp, #4]
 140:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	if (handle.Id < MAX_NUM_ALLOCATIONS)
 407              		.loc 1 140 0
 408 0006 89B2     		uxth	r1, r1
 409 0008 3F29     		cmp	r1, #63
 410 000a 18D8     		bhi	.L29
 141:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	{
 142:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		if (ga->AllocRefs[handle.Id].Seq == handle.Seq)
 411              		.loc 1 142 0
 412 000c 00EB8103 		add	r3, r0, r1, lsl #2
 413 0010 5A88     		ldrh	r2, [r3, #2]
 414 0012 BDF80630 		ldrh	r3, [sp, #6]
 415 0016 9A42     		cmp	r2, r3
 416 0018 14D1     		bne	.L30
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s 			page 11


 417              	.LVL34:
 418              	.LBB11:
 143:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		{
 144:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			ft_uint16_t id = handle.Id;
 145:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			ft_uint16_t idx = ga->AllocRefs[id].Idx;
 419              		.loc 1 145 0
 420 001a 30F82110 		ldrh	r1, [r0, r1, lsl #2]
 421              	.LVL35:
 146:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			ga->AllocEntries[idx].Flags |= GA_USED_FLAG;
 422              		.loc 1 146 0
 423 001e 4B00     		lsls	r3, r1, #1
 424 0020 5A18     		adds	r2, r3, r1
 425 0022 00EB8202 		add	r2, r0, r2, lsl #2
 426 0026 B2F80A41 		ldrh	r4, [r2, #266]
 427 002a 44F00204 		orr	r4, r4, #2
 428 002e A2F80A41 		strh	r4, [r2, #266]	@ movhi
 147:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			return ga->AllocEntries[idx].Address;
 429              		.loc 1 147 0
 430 0032 D2F80001 		ldr	r0, [r2, #256]
 431              	.LVL36:
 432              	.L27:
 433              	.LBE11:
 148:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		}
 149:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	}
 150:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
 151:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	return ~0;
 152:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** }
 434              		.loc 1 152 0
 435 0036 03B0     		add	sp, sp, #12
 436              	.LCFI9:
 437              		.cfi_remember_state
 438              		.cfi_def_cfa_offset 4
 439              		@ sp needed
 440 0038 5DF8044B 		ldr	r4, [sp], #4
 441              	.LCFI10:
 442              		.cfi_restore 4
 443              		.cfi_def_cfa_offset 0
 444 003c 7047     		bx	lr
 445              	.LVL37:
 446              	.L29:
 447              	.LCFI11:
 448              		.cfi_restore_state
 151:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** }
 449              		.loc 1 151 0
 450 003e 4FF0FF30 		mov	r0, #-1
 451              	.LVL38:
 452 0042 F8E7     		b	.L27
 453              	.LVL39:
 454              	.L30:
 455 0044 4FF0FF30 		mov	r0, #-1
 456              	.LVL40:
 457 0048 F5E7     		b	.L27
 458              		.cfi_endproc
 459              	.LFE6:
 461              		.section	.text.Ft_Esd_GpuAlloc_CollapseFree,"ax",%progbits
 462              		.align	1
 463              		.global	Ft_Esd_GpuAlloc_CollapseFree
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s 			page 12


 464              		.syntax unified
 465              		.thumb
 466              		.thumb_func
 467              		.fpu fpv5-sp-d16
 469              	Ft_Esd_GpuAlloc_CollapseFree:
 470              	.LFB7:
 153:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
 154:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** void Ft_Esd_GpuAlloc_CollapseFree(Ft_Esd_GpuAlloc *ga, ft_uint32_t idxat)
 155:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** {
 471              		.loc 1 155 0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 0
 474              		@ frame_needed = 0, uses_anonymous_args = 0
 475              	.LVL41:
 476 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 477              	.LCFI12:
 478              		.cfi_def_cfa_offset 20
 479              		.cfi_offset 4, -20
 480              		.cfi_offset 5, -16
 481              		.cfi_offset 6, -12
 482              		.cfi_offset 7, -8
 483              		.cfi_offset 14, -4
 484 0002 0746     		mov	r7, r0
 485              	.LVL42:
 156:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	int shift = 0;
 157:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	if (idxat + 1 < ga->NbAllocEntries && ga->AllocEntries[idxat + 1].Id == MAX_NUM_ALLOCATIONS)
 486              		.loc 1 157 0
 487 0004 4B1C     		adds	r3, r1, #1
 488 0006 D0F80024 		ldr	r2, [r0, #1024]
 489 000a 9342     		cmp	r3, r2
 490 000c 1BD2     		bcs	.L39
 491              		.loc 1 157 0 is_stmt 0 discriminator 1
 492 000e 03EB4304 		add	r4, r3, r3, lsl #1
 493 0012 A000     		lsls	r0, r4, #2
 494              	.LVL43:
 495 0014 0446     		mov	r4, r0
 496 0016 3844     		add	r0, r0, r7
 497 0018 B0F80801 		ldrh	r0, [r0, #264]
 498 001c 4028     		cmp	r0, #64
 499 001e 02D0     		beq	.L42
 156:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	int shift = 0;
 500              		.loc 1 156 0 is_stmt 1
 501 0020 4FF0000E 		mov	lr, #0
 502 0024 11E0     		b	.L33
 503              	.L42:
 504              	.LVL44:
 158:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	{
 159:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		// Next entry is free, add to collapse
 160:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		++shift;
 161:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		ga->AllocEntries[idxat].Length += ga->AllocEntries[idxat + 1].Length;
 505              		.loc 1 161 0
 506 0026 2046     		mov	r0, r4
 507 0028 3844     		add	r0, r0, r7
 508 002a D0F80441 		ldr	r4, [r0, #260]
 509 002e 4800     		lsls	r0, r1, #1
 510 0030 0844     		add	r0, r0, r1
 511 0032 8300     		lsls	r3, r0, #2
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s 			page 13


 512 0034 3B44     		add	r3, r3, r7
 513 0036 D3F80401 		ldr	r0, [r3, #260]
 514 003a 2044     		add	r0, r0, r4
 515 003c C3F80401 		str	r0, [r3, #260]
 160:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		ga->AllocEntries[idxat].Length += ga->AllocEntries[idxat + 1].Length;
 516              		.loc 1 160 0
 517 0040 4FF0010E 		mov	lr, #1
 518 0044 01E0     		b	.L33
 519              	.LVL45:
 520              	.L39:
 156:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	int shift = 0;
 521              		.loc 1 156 0
 522 0046 4FF0000E 		mov	lr, #0
 523              	.LVL46:
 524              	.L33:
 162:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	}
 163:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	if (idxat > 0 && ga->AllocEntries[idxat - 1].Id == MAX_NUM_ALLOCATIONS)
 525              		.loc 1 163 0
 526 004a 41B1     		cbz	r1, .L34
 527              		.loc 1 163 0 is_stmt 0 discriminator 1
 528 004c 481E     		subs	r0, r1, #1
 529 004e 00EB4004 		add	r4, r0, r0, lsl #1
 530 0052 A300     		lsls	r3, r4, #2
 531 0054 3B44     		add	r3, r3, r7
 532 0056 B3F80831 		ldrh	r3, [r3, #264]
 533 005a 402B     		cmp	r3, #64
 534 005c 08D0     		beq	.L43
 535              	.L34:
 164:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	{
 165:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		// Previous entry is free, add to collapse
 166:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		--idxat;
 167:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		++shift;
 168:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		ga->AllocEntries[idxat].Length += ga->AllocEntries[idxat + 1].Length;
 169:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	}
 170:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	if (shift)
 536              		.loc 1 170 0 is_stmt 1
 537 005e BEF1000F 		cmp	lr, #0
 538 0062 34D0     		beq	.L32
 171:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	{
 172:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		// Collapse indices
 173:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		ga->NbAllocEntries -= shift;
 539              		.loc 1 173 0
 540 0064 A2EB0E0C 		sub	ip, r2, lr
 541 0068 C7F800C4 		str	ip, [r7, #1024]
 542              	.LBB12:
 174:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		for (int idx = idxat + 1; idx < ga->NbAllocEntries; ++idx)
 543              		.loc 1 174 0
 544 006c 4C1C     		adds	r4, r1, #1
 545              	.LVL47:
 546 006e 13E0     		b	.L36
 547              	.LVL48:
 548              	.L43:
 549              	.LBE12:
 167:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		ga->AllocEntries[idxat].Length += ga->AllocEntries[idxat + 1].Length;
 550              		.loc 1 167 0
 551 0070 0EF1010E 		add	lr, lr, #1
 552              	.LVL49:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s 			page 14


 168:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	}
 553              		.loc 1 168 0
 554 0074 01EB4101 		add	r1, r1, r1, lsl #1
 555 0078 8B00     		lsls	r3, r1, #2
 556 007a 3B44     		add	r3, r3, r7
 557 007c D3F80441 		ldr	r4, [r3, #260]
 558 0080 4100     		lsls	r1, r0, #1
 559 0082 0144     		add	r1, r1, r0
 560 0084 8B00     		lsls	r3, r1, #2
 561 0086 3B44     		add	r3, r3, r7
 562 0088 D3F80411 		ldr	r1, [r3, #260]
 563 008c 2144     		add	r1, r1, r4
 564 008e C3F80411 		str	r1, [r3, #260]
 166:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		++shift;
 565              		.loc 1 166 0
 566 0092 0146     		mov	r1, r0
 567 0094 E3E7     		b	.L34
 568              	.LVL50:
 569              	.L37:
 570              	.LBB14:
 571              		.loc 1 174 0 discriminator 2
 572 0096 0134     		adds	r4, r4, #1
 573              	.LVL51:
 574              	.L36:
 575              		.loc 1 174 0 is_stmt 0 discriminator 1
 576 0098 A445     		cmp	ip, r4
 577 009a 18D9     		bls	.L32
 578              	.LBB13:
 175:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		{
 176:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			ga->AllocEntries[idx] = ga->AllocEntries[idx + shift];
 579              		.loc 1 176 0 is_stmt 1
 580 009c 0EEB0402 		add	r2, lr, r4
 581 00a0 6300     		lsls	r3, r4, #1
 582 00a2 2344     		add	r3, r3, r4
 583 00a4 9D00     		lsls	r5, r3, #2
 584 00a6 3D44     		add	r5, r5, r7
 585 00a8 05F58076 		add	r6, r5, #256
 586 00ac 02EB4202 		add	r2, r2, r2, lsl #1
 587 00b0 9300     		lsls	r3, r2, #2
 588 00b2 3B44     		add	r3, r3, r7
 589 00b4 03F58073 		add	r3, r3, #256
 590 00b8 93E80700 		ldm	r3, {r0, r1, r2}
 591 00bc 86E80700 		stm	r6, {r0, r1, r2}
 177:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			int id = ga->AllocEntries[idx].Id;
 592              		.loc 1 177 0
 593 00c0 B5F80831 		ldrh	r3, [r5, #264]
 594              	.LVL52:
 178:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			if (id < MAX_NUM_ALLOCATIONS)
 595              		.loc 1 178 0
 596 00c4 3F2B     		cmp	r3, #63
 597 00c6 E6D8     		bhi	.L37
 179:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			{
 180:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 				ga->AllocRefs[id].Idx = idx;
 598              		.loc 1 180 0
 599 00c8 27F82340 		strh	r4, [r7, r3, lsl #2]	@ movhi
 600 00cc E3E7     		b	.L37
 601              	.LVL53:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s 			page 15


 602              	.L32:
 603              	.LBE13:
 604              	.LBE14:
 181:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			}
 182:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		}
 183:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	}
 184:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** }
 605              		.loc 1 184 0
 606 00ce F0BD     		pop	{r4, r5, r6, r7, pc}
 607              		.cfi_endproc
 608              	.LFE7:
 610              		.section	.text.Ft_Esd_GpuAlloc_FreeId,"ax",%progbits
 611              		.align	1
 612              		.global	Ft_Esd_GpuAlloc_FreeId
 613              		.syntax unified
 614              		.thumb
 615              		.thumb_func
 616              		.fpu fpv5-sp-d16
 618              	Ft_Esd_GpuAlloc_FreeId:
 619              	.LFB8:
 185:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
 186:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** void Ft_Esd_GpuAlloc_FreeId(Ft_Esd_GpuAlloc *ga, int id)
 187:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** {
 620              		.loc 1 187 0
 621              		.cfi_startproc
 622              		@ args = 0, pretend = 0, frame = 0
 623              		@ frame_needed = 0, uses_anonymous_args = 0
 624              	.LVL54:
 625 0000 70B5     		push	{r4, r5, r6, lr}
 626              	.LCFI13:
 627              		.cfi_def_cfa_offset 16
 628              		.cfi_offset 4, -16
 629              		.cfi_offset 5, -12
 630              		.cfi_offset 6, -8
 631              		.cfi_offset 14, -4
 632 0002 0346     		mov	r3, r0
 633 0004 0A46     		mov	r2, r1
 188:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	// printf("Free id %i\n", id);
 189:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
 190:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** #ifdef ESD_SIMULATION
 191:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	s_ErrorGpuAllocFailed = 0;
 192:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** #endif
 193:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
 194:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	int idx = ga->AllocRefs[id].Idx;
 634              		.loc 1 194 0
 635 0006 30F82110 		ldrh	r1, [r0, r1, lsl #2]
 636              	.LVL55:
 195:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
 196:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	// Invalidate handle reference
 197:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	ga->AllocRefs[id].Idx = MAX_NUM_ALLOCATIONS;
 637              		.loc 1 197 0
 638 000a 4025     		movs	r5, #64
 639 000c 20F82250 		strh	r5, [r0, r2, lsl #2]	@ movhi
 198:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	++ga->AllocRefs[id].Seq;
 640              		.loc 1 198 0
 641 0010 00EB8202 		add	r2, r0, r2, lsl #2
 642              	.LVL56:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s 			page 16


 643 0014 5488     		ldrh	r4, [r2, #2]
 644 0016 0134     		adds	r4, r4, #1
 645 0018 5480     		strh	r4, [r2, #2]	@ movhi
 199:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
 200:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	// Free entry
 201:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	ga->AllocEntries[idx].Id = MAX_NUM_ALLOCATIONS;
 646              		.loc 1 201 0
 647 001a 4A00     		lsls	r2, r1, #1
 648 001c 5618     		adds	r6, r2, r1
 649 001e B400     		lsls	r4, r6, #2
 650 0020 2646     		mov	r6, r4
 651 0022 0444     		add	r4, r4, r0
 652 0024 A4F80851 		strh	r5, [r4, #264]	@ movhi
 202:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	ga->AllocEntries[idx].Flags = 0;
 653              		.loc 1 202 0
 654 0028 3344     		add	r3, r3, r6
 655 002a 0022     		movs	r2, #0
 656 002c A3F80A21 		strh	r2, [r3, #266]	@ movhi
 203:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
 204:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	// Collapse neighbouring entries
 205:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	Ft_Esd_GpuAlloc_CollapseFree(ga, idx);
 657              		.loc 1 205 0
 658 0030 FFF7FEFF 		bl	Ft_Esd_GpuAlloc_CollapseFree
 659              	.LVL57:
 206:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** }
 660              		.loc 1 206 0
 661 0034 70BD     		pop	{r4, r5, r6, pc}
 662              		.cfi_endproc
 663              	.LFE8:
 665              		.section	.text.Ft_Esd_GpuAlloc_Free,"ax",%progbits
 666              		.align	1
 667              		.global	Ft_Esd_GpuAlloc_Free
 668              		.syntax unified
 669              		.thumb
 670              		.thumb_func
 671              		.fpu fpv5-sp-d16
 673              	Ft_Esd_GpuAlloc_Free:
 674              	.LFB9:
 207:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
 208:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** void Ft_Esd_GpuAlloc_Free(Ft_Esd_GpuAlloc *ga, Ft_Esd_GpuHandle handle)
 209:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** {
 675              		.loc 1 209 0
 676              		.cfi_startproc
 677              		@ args = 0, pretend = 0, frame = 8
 678              		@ frame_needed = 0, uses_anonymous_args = 0
 679              	.LVL58:
 680 0000 00B5     		push	{lr}
 681              	.LCFI14:
 682              		.cfi_def_cfa_offset 4
 683              		.cfi_offset 14, -4
 684 0002 83B0     		sub	sp, sp, #12
 685              	.LCFI15:
 686              		.cfi_def_cfa_offset 16
 687 0004 0191     		str	r1, [sp, #4]
 210:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	int id = handle.Id;
 688              		.loc 1 210 0
 689 0006 89B2     		uxth	r1, r1
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s 			page 17


 690              	.LVL59:
 211:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	if (id < MAX_NUM_ALLOCATIONS
 691              		.loc 1 211 0
 692 0008 3F29     		cmp	r1, #63
 693 000a 06D8     		bhi	.L46
 212:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		&& ga->AllocRefs[id].Seq == handle.Seq)
 694              		.loc 1 212 0
 695 000c 00EB8103 		add	r3, r0, r1, lsl #2
 696 0010 5A88     		ldrh	r2, [r3, #2]
 697 0012 BDF80630 		ldrh	r3, [sp, #6]
 698 0016 9A42     		cmp	r2, r3
 699 0018 02D0     		beq	.L49
 700              	.LVL60:
 701              	.L46:
 213:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	{
 214:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		Ft_Esd_GpuAlloc_FreeId(ga, id);
 215:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	}
 216:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** }
 702              		.loc 1 216 0
 703 001a 03B0     		add	sp, sp, #12
 704              	.LCFI16:
 705              		.cfi_remember_state
 706              		.cfi_def_cfa_offset 4
 707              		@ sp needed
 708 001c 5DF804FB 		ldr	pc, [sp], #4
 709              	.LVL61:
 710              	.L49:
 711              	.LCFI17:
 712              		.cfi_restore_state
 214:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	}
 713              		.loc 1 214 0
 714 0020 FFF7FEFF 		bl	Ft_Esd_GpuAlloc_FreeId
 715              	.LVL62:
 716              		.loc 1 216 0
 717 0024 F9E7     		b	.L46
 718              		.cfi_endproc
 719              	.LFE9:
 721              		.section	.text.Ft_Esd_GpuAlloc_Update,"ax",%progbits
 722              		.align	1
 723              		.global	Ft_Esd_GpuAlloc_Update
 724              		.syntax unified
 725              		.thumb
 726              		.thumb_func
 727              		.fpu fpv5-sp-d16
 729              	Ft_Esd_GpuAlloc_Update:
 730              	.LFB10:
 217:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
 218:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** void Ft_Esd_GpuAlloc_Update(Ft_Esd_GpuAlloc *ga)
 219:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** {
 731              		.loc 1 219 0
 732              		.cfi_startproc
 733              		@ args = 0, pretend = 0, frame = 0
 734              		@ frame_needed = 0, uses_anonymous_args = 0
 735              	.LVL63:
 736 0000 38B5     		push	{r3, r4, r5, lr}
 737              	.LCFI18:
 738              		.cfi_def_cfa_offset 16
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s 			page 18


 739              		.cfi_offset 3, -16
 740              		.cfi_offset 4, -12
 741              		.cfi_offset 5, -8
 742              		.cfi_offset 14, -4
 743 0002 0546     		mov	r5, r0
 744              	.LVL64:
 745              	.LBB15:
 220:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	for (int idx = 0; idx < ga->NbAllocEntries; ++idx)
 746              		.loc 1 220 0
 747 0004 0024     		movs	r4, #0
 748 0006 08E0     		b	.L51
 749              	.LVL65:
 750              	.L53:
 221:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	{
 222:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		// Check if allocation entry is allocated
 223:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		if (ga->AllocEntries[idx].Id < MAX_NUM_ALLOCATIONS)
 224:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		{
 225:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			// If GC flag is set and used flag is not set, free this memory
 226:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			if (ga->AllocEntries[idx].Flags & GA_GC_FLAG)
 227:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			{
 228:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 				if (!(ga->AllocEntries[idx].Flags & GA_USED_FLAG))
 229:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 				{
 230:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 					Ft_Esd_GpuAlloc_FreeId(ga, ga->AllocEntries[idx].Id);
 231:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
 232:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 					// Due to free collapse, the current idx may become another allocated entry
 233:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 					--idx;
 234:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 					continue;
 235:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 				}
 236:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			}
 237:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
 238:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			// Always clear the used flag on update
 239:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			ga->AllocEntries[idx].Flags &= ~GA_USED_FLAG;
 751              		.loc 1 239 0
 752 0008 04EB4401 		add	r1, r4, r4, lsl #1
 753 000c 8A00     		lsls	r2, r1, #2
 754 000e 2A44     		add	r2, r2, r5
 755 0010 23F00203 		bic	r3, r3, #2
 756 0014 A2F80A31 		strh	r3, [r2, #266]	@ movhi
 757              	.L52:
 220:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	for (int idx = 0; idx < ga->NbAllocEntries; ++idx)
 758              		.loc 1 220 0 discriminator 2
 759 0018 0134     		adds	r4, r4, #1
 760              	.LVL66:
 761              	.L51:
 220:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	for (int idx = 0; idx < ga->NbAllocEntries; ++idx)
 762              		.loc 1 220 0 is_stmt 0 discriminator 1
 763 001a D5F80034 		ldr	r3, [r5, #1024]
 764 001e A342     		cmp	r3, r4
 765 0020 18D9     		bls	.L56
 223:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		{
 766              		.loc 1 223 0 is_stmt 1
 767 0022 04EB4402 		add	r2, r4, r4, lsl #1
 768 0026 9300     		lsls	r3, r2, #2
 769 0028 2B44     		add	r3, r3, r5
 770 002a B3F80811 		ldrh	r1, [r3, #264]
 771 002e 3F29     		cmp	r1, #63
 772 0030 F2D8     		bhi	.L52
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s 			page 19


 226:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			{
 773              		.loc 1 226 0
 774 0032 04EB4402 		add	r2, r4, r4, lsl #1
 775 0036 9300     		lsls	r3, r2, #2
 776 0038 2B44     		add	r3, r3, r5
 777 003a B3F80A31 		ldrh	r3, [r3, #266]
 778 003e 13F0010F 		tst	r3, #1
 779 0042 E1D0     		beq	.L53
 228:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 				{
 780              		.loc 1 228 0
 781 0044 13F0020F 		tst	r3, #2
 782 0048 DED1     		bne	.L53
 230:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
 783              		.loc 1 230 0
 784 004a 2846     		mov	r0, r5
 785 004c FFF7FEFF 		bl	Ft_Esd_GpuAlloc_FreeId
 786              	.LVL67:
 233:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 					continue;
 787              		.loc 1 233 0
 788 0050 013C     		subs	r4, r4, #1
 789              	.LVL68:
 234:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 				}
 790              		.loc 1 234 0
 791 0052 E1E7     		b	.L52
 792              	.L56:
 793              	.LBE15:
 240:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		}
 241:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	}
 242:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** }
 794              		.loc 1 242 0
 795 0054 38BD     		pop	{r3, r4, r5, pc}
 796              		.cfi_endproc
 797              	.LFE10:
 799              		.section	.text.Ft_Esd_GpuAlloc_GetTotalUsed,"ax",%progbits
 800              		.align	1
 801              		.global	Ft_Esd_GpuAlloc_GetTotalUsed
 802              		.syntax unified
 803              		.thumb
 804              		.thumb_func
 805              		.fpu fpv5-sp-d16
 807              	Ft_Esd_GpuAlloc_GetTotalUsed:
 808              	.LFB11:
 243:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
 244:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** // Get total used GPU RAM
 245:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** ft_uint32_t Ft_Esd_GpuAlloc_GetTotalUsed(Ft_Esd_GpuAlloc *ga)
 246:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** {
 809              		.loc 1 246 0
 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 0
 812              		@ frame_needed = 0, uses_anonymous_args = 0
 813              		@ link register save eliminated.
 814              	.LVL69:
 815 0000 10B4     		push	{r4}
 816              	.LCFI19:
 817              		.cfi_def_cfa_offset 4
 818              		.cfi_offset 4, -4
 819              	.LVL70:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s 			page 20


 820              	.LBB16:
 247:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	ft_uint32_t total = 0;
 248:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	for (int idx = 0; idx < ga->NbAllocEntries; ++idx)
 821              		.loc 1 248 0
 822 0002 0023     		movs	r3, #0
 823              	.LBE16:
 247:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	ft_uint32_t total = 0;
 824              		.loc 1 247 0
 825 0004 1C46     		mov	r4, r3
 826              	.LBB17:
 827              		.loc 1 248 0
 828 0006 00E0     		b	.L58
 829              	.LVL71:
 830              	.L59:
 831              		.loc 1 248 0 is_stmt 0 discriminator 2
 832 0008 0133     		adds	r3, r3, #1
 833              	.LVL72:
 834              	.L58:
 835              		.loc 1 248 0 discriminator 1
 836 000a D0F80024 		ldr	r2, [r0, #1024]
 837 000e 9A42     		cmp	r2, r3
 838 0010 0FD9     		bls	.L62
 249:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	{
 250:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		// Check if allocation entry is allocated
 251:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		if (ga->AllocEntries[idx].Id < MAX_NUM_ALLOCATIONS)
 839              		.loc 1 251 0 is_stmt 1
 840 0012 03EB4301 		add	r1, r3, r3, lsl #1
 841 0016 8A00     		lsls	r2, r1, #2
 842 0018 0244     		add	r2, r2, r0
 843 001a B2F80821 		ldrh	r2, [r2, #264]
 844 001e 3F2A     		cmp	r2, #63
 845 0020 F2D8     		bhi	.L59
 252:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		{
 253:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			// Add the size of the allocated block to the total
 254:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			total += (ft_uint32_t)ga->AllocEntries[idx].Length;
 846              		.loc 1 254 0
 847 0022 03EB4301 		add	r1, r3, r3, lsl #1
 848 0026 8A00     		lsls	r2, r1, #2
 849 0028 0244     		add	r2, r2, r0
 850 002a D2F80421 		ldr	r2, [r2, #260]
 851 002e 1444     		add	r4, r4, r2
 852              	.LVL73:
 853 0030 EAE7     		b	.L59
 854              	.L62:
 855              	.LBE17:
 255:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		}
 256:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	}
 257:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	return total;
 258:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** }
 856              		.loc 1 258 0
 857 0032 2046     		mov	r0, r4
 858              	.LVL74:
 859 0034 5DF8044B 		ldr	r4, [sp], #4
 860              	.LCFI20:
 861              		.cfi_restore 4
 862              		.cfi_def_cfa_offset 0
 863              	.LVL75:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s 			page 21


 864 0038 7047     		bx	lr
 865              		.cfi_endproc
 866              	.LFE11:
 868              		.section	.text.Ft_Esd_GpuAlloc_GetTotal,"ax",%progbits
 869              		.align	1
 870              		.global	Ft_Esd_GpuAlloc_GetTotal
 871              		.syntax unified
 872              		.thumb
 873              		.thumb_func
 874              		.fpu fpv5-sp-d16
 876              	Ft_Esd_GpuAlloc_GetTotal:
 877              	.LFB12:
 259:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
 260:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** // Get total GPU RAM
 261:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** ft_uint32_t Ft_Esd_GpuAlloc_GetTotal(Ft_Esd_GpuAlloc *ga)
 262:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** {
 878              		.loc 1 262 0
 879              		.cfi_startproc
 880              		@ args = 0, pretend = 0, frame = 0
 881              		@ frame_needed = 0, uses_anonymous_args = 0
 882              		@ link register save eliminated.
 883              	.LVL76:
 263:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	return RAM_G_SIZE;
 264:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** }
 884              		.loc 1 264 0
 885 0000 4FF48010 		mov	r0, #1048576
 886              	.LVL77:
 887 0004 7047     		bx	lr
 888              		.cfi_endproc
 889              	.LFE12:
 891              		.section	.text.Ft_Esd_GpuAlloc_Print,"ax",%progbits
 892              		.align	1
 893              		.global	Ft_Esd_GpuAlloc_Print
 894              		.syntax unified
 895              		.thumb
 896              		.thumb_func
 897              		.fpu fpv5-sp-d16
 899              	Ft_Esd_GpuAlloc_Print:
 900              	.LFB13:
 265:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 
 266:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** #ifndef NDEBUG
 267:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** void Ft_Esd_GpuAlloc_Print(Ft_Esd_GpuAlloc *ga)
 268:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** {
 901              		.loc 1 268 0
 902              		.cfi_startproc
 903              		@ args = 0, pretend = 0, frame = 0
 904              		@ frame_needed = 0, uses_anonymous_args = 0
 905              	.LVL78:
 906 0000 30B5     		push	{r4, r5, lr}
 907              	.LCFI21:
 908              		.cfi_def_cfa_offset 12
 909              		.cfi_offset 4, -12
 910              		.cfi_offset 5, -8
 911              		.cfi_offset 14, -4
 912 0002 83B0     		sub	sp, sp, #12
 913              	.LCFI22:
 914              		.cfi_def_cfa_offset 24
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s 			page 22


 915 0004 0546     		mov	r5, r0
 269:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	printf("GpuAlloc:\n");
 916              		.loc 1 269 0
 917 0006 0F48     		ldr	r0, .L68
 918              	.LVL79:
 919 0008 FFF7FEFF 		bl	puts
 920              	.LVL80:
 921              	.LBB18:
 270:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	for (int idx = 0; idx < ga->NbAllocEntries; ++idx)
 922              		.loc 1 270 0
 923 000c 0024     		movs	r4, #0
 924 000e 12E0     		b	.L65
 925              	.LVL81:
 926              	.L66:
 271:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	{
 272:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 		printf("%i: id: %i, addr: %i, len: %i, flags: %i\n",
 273:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			idx,
 274:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			(int)ga->AllocEntries[idx].Id,
 927              		.loc 1 274 0 discriminator 3
 928 0010 6300     		lsls	r3, r4, #1
 929 0012 2344     		add	r3, r3, r4
 930 0014 9900     		lsls	r1, r3, #2
 931 0016 2944     		add	r1, r1, r5
 932 0018 B1F80821 		ldrh	r2, [r1, #264]
 275:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			(int)ga->AllocEntries[idx].Address,
 933              		.loc 1 275 0 discriminator 3
 934 001c D1F80031 		ldr	r3, [r1, #256]
 276:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			(int)ga->AllocEntries[idx].Length,
 935              		.loc 1 276 0 discriminator 3
 936 0020 D1F80401 		ldr	r0, [r1, #260]
 277:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			(int)ga->AllocEntries[idx].Flags);
 937              		.loc 1 277 0 discriminator 3
 938 0024 B1F80A11 		ldrh	r1, [r1, #266]
 272:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 			idx,
 939              		.loc 1 272 0 discriminator 3
 940 0028 0191     		str	r1, [sp, #4]
 941 002a 0090     		str	r0, [sp]
 942 002c 2146     		mov	r1, r4
 943 002e 0648     		ldr	r0, .L68+4
 944 0030 FFF7FEFF 		bl	printf
 945              	.LVL82:
 270:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	{
 946              		.loc 1 270 0 discriminator 3
 947 0034 0134     		adds	r4, r4, #1
 948              	.LVL83:
 949              	.L65:
 270:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	{
 950              		.loc 1 270 0 is_stmt 0 discriminator 1
 951 0036 D5F80034 		ldr	r3, [r5, #1024]
 952 003a A342     		cmp	r3, r4
 953 003c E8D8     		bhi	.L66
 954              	.LBE18:
 278:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** 	}
 279:FT_Esd_Framework/Ft_Esd_GpuAlloc.c **** }
 955              		.loc 1 279 0 is_stmt 1
 956 003e 03B0     		add	sp, sp, #12
 957              	.LCFI23:
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s 			page 23


 958              		.cfi_def_cfa_offset 12
 959              		@ sp needed
 960 0040 30BD     		pop	{r4, r5, pc}
 961              	.LVL84:
 962              	.L69:
 963 0042 00BF     		.align	2
 964              	.L68:
 965 0044 00000000 		.word	.LC0
 966 0048 0C000000 		.word	.LC1
 967              		.cfi_endproc
 968              	.LFE13:
 970              		.section	.rodata.Ft_Esd_GpuAlloc_Print.str1.4,"aMS",%progbits,1
 971              		.align	2
 972              	.LC0:
 973 0000 47707541 		.ascii	"GpuAlloc:\000"
 973      6C6C6F63 
 973      3A00
 974 000a 0000     		.space	2
 975              	.LC1:
 976 000c 25693A20 		.ascii	"%i: id: %i, addr: %i, len: %i, flags: %i\012\000"
 976      69643A20 
 976      25692C20 
 976      61646472 
 976      3A202569 
 977              		.text
 978              	.Letext0:
 979              		.file 2 "FT_Eve_Hal/FT_DataTypes.h"
 980              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/lock.h"
 981              		.file 4 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_types.h"
 982              		.file 5 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 983              		.file 6 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/unistd.h"
 984              		.file 7 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/reent.h"
 985              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/stdlib.h"
 986              		.file 9 "FT_Esd_Framework/Ft_Esd_GpuAlloc.h"
 987              		.file 10 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/stdio.h"
 988              		.file 11 "<built-in>"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Ft_Esd_GpuAlloc.c
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s:18     .text.Ft_Esd_GpuAlloc_Reset:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s:25     .text.Ft_Esd_GpuAlloc_Reset:0000000000000000 Ft_Esd_GpuAlloc_Reset
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s:109    .text.Ft_Esd_GpuAlloc_InsertFree:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s:116    .text.Ft_Esd_GpuAlloc_InsertFree:0000000000000000 Ft_Esd_GpuAlloc_InsertFree
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s:228    .text.Ft_Esd_GpuAlloc_Alloc:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s:235    .text.Ft_Esd_GpuAlloc_Alloc:0000000000000000 Ft_Esd_GpuAlloc_Alloc
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s:384    .text.Ft_Esd_GpuAlloc_Get:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s:391    .text.Ft_Esd_GpuAlloc_Get:0000000000000000 Ft_Esd_GpuAlloc_Get
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s:462    .text.Ft_Esd_GpuAlloc_CollapseFree:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s:469    .text.Ft_Esd_GpuAlloc_CollapseFree:0000000000000000 Ft_Esd_GpuAlloc_CollapseFree
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s:611    .text.Ft_Esd_GpuAlloc_FreeId:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s:618    .text.Ft_Esd_GpuAlloc_FreeId:0000000000000000 Ft_Esd_GpuAlloc_FreeId
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s:666    .text.Ft_Esd_GpuAlloc_Free:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s:673    .text.Ft_Esd_GpuAlloc_Free:0000000000000000 Ft_Esd_GpuAlloc_Free
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s:722    .text.Ft_Esd_GpuAlloc_Update:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s:729    .text.Ft_Esd_GpuAlloc_Update:0000000000000000 Ft_Esd_GpuAlloc_Update
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s:800    .text.Ft_Esd_GpuAlloc_GetTotalUsed:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s:807    .text.Ft_Esd_GpuAlloc_GetTotalUsed:0000000000000000 Ft_Esd_GpuAlloc_GetTotalUsed
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s:869    .text.Ft_Esd_GpuAlloc_GetTotal:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s:876    .text.Ft_Esd_GpuAlloc_GetTotal:0000000000000000 Ft_Esd_GpuAlloc_GetTotal
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s:892    .text.Ft_Esd_GpuAlloc_Print:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s:899    .text.Ft_Esd_GpuAlloc_Print:0000000000000000 Ft_Esd_GpuAlloc_Print
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s:965    .text.Ft_Esd_GpuAlloc_Print:0000000000000044 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccojhr42.s:971    .rodata.Ft_Esd_GpuAlloc_Print.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
puts
printf
