ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccMUnnZl.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB142:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccMUnnZl.s 			page 2


  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* USER CODE END Header */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  42:Src/main.c    **** #include "main.h"
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  45:Src/main.c    **** /* USER CODE BEGIN Includes */
  46:Src/main.c    **** #include "FT_Platform.h"
  47:Src/main.c    **** #include "Ft_Esd.h"
  48:Src/main.c    **** #include "Ft_Esd_GpuAlloc.h"
  49:Src/main.c    **** /* USER CODE END Includes */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  52:Src/main.c    **** /* USER CODE BEGIN PTD */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE END PTD */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  57:Src/main.c    **** /* USER CODE BEGIN PD */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE END PD */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  62:Src/main.c    **** /* USER CODE BEGIN PM */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE END PM */
  65:Src/main.c    **** 
  66:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  67:Src/main.c    **** 
  68:Src/main.c    **** SPI_HandleTypeDef hspi1;
  69:Src/main.c    **** SPI_HandleTypeDef hspi2;
  70:Src/main.c    **** 
  71:Src/main.c    **** /* USER CODE BEGIN PV */
  72:Src/main.c    **** 
  73:Src/main.c    **** /* USER CODE END PV */
  74:Src/main.c    **** 
  75:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  76:Src/main.c    **** void SystemClock_Config(void);
  77:Src/main.c    **** static void MX_GPIO_Init(void);
  78:Src/main.c    **** static void MX_SPI1_Init(void);
  79:Src/main.c    **** static void MX_SPI2_Init(void);
  80:Src/main.c    **** /* USER CODE BEGIN PFP */
  81:Src/main.c    **** extern ft_void_t FT800_BootupConfig();
  82:Src/main.c    **** /* USER CODE END PFP */
  83:Src/main.c    **** 
  84:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  85:Src/main.c    **** /* USER CODE BEGIN 0 */
  86:Src/main.c    **** 
  87:Src/main.c    **** /* USER CODE END 0 */
  88:Src/main.c    **** 
  89:Src/main.c    **** /**
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccMUnnZl.s 			page 3


  90:Src/main.c    ****   * @brief  The application entry point.
  91:Src/main.c    ****   * @retval int
  92:Src/main.c    ****   */
  93:Src/main.c    **** int main(void)
  94:Src/main.c    **** {
  95:Src/main.c    ****   /* USER CODE BEGIN 1 */
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* USER CODE END 1 */
  98:Src/main.c    **** 
  99:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 100:Src/main.c    **** 
 101:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 102:Src/main.c    ****   HAL_Init();
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* USER CODE BEGIN Init */
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* USER CODE END Init */
 107:Src/main.c    **** 
 108:Src/main.c    ****   /* Configure the system clock */
 109:Src/main.c    ****   SystemClock_Config();
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* USER CODE END SysInit */
 114:Src/main.c    **** 
 115:Src/main.c    ****   /* Initialize all configured peripherals */
 116:Src/main.c    ****   MX_GPIO_Init();
 117:Src/main.c    ****   MX_SPI1_Init();
 118:Src/main.c    ****   MX_SPI2_Init();
 119:Src/main.c    ****   /* USER CODE BEGIN 2 */
 120:Src/main.c    **** FT800_BootupConfig();
 121:Src/main.c    ****   /* USER CODE END 2 */
 122:Src/main.c    **** 
 123:Src/main.c    ****   /* Infinite loop */
 124:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 125:Src/main.c    ****   while (1)
 126:Src/main.c    ****   {
 127:Src/main.c    ****     /* USER CODE END WHILE */
 128:Src/main.c    **** 
 129:Src/main.c    ****     /* USER CODE BEGIN 3 */
 130:Src/main.c    ****   }
 131:Src/main.c    ****   /* USER CODE END 3 */
 132:Src/main.c    **** }
 133:Src/main.c    **** 
 134:Src/main.c    **** /**
 135:Src/main.c    ****   * @brief System Clock Configuration
 136:Src/main.c    ****   * @retval None
 137:Src/main.c    ****   */
 138:Src/main.c    **** void SystemClock_Config(void)
 139:Src/main.c    **** {
 140:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 141:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 142:Src/main.c    **** 
 143:Src/main.c    ****   /**Configure the main internal regulator output voltage
 144:Src/main.c    ****   */
 145:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 146:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccMUnnZl.s 			page 4


 147:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks
 148:Src/main.c    ****   */
 149:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 150:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 151:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 152:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 153:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 154:Src/main.c    ****   {
 155:Src/main.c    ****     Error_Handler();
 156:Src/main.c    ****   }
 157:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks
 158:Src/main.c    ****   */
 159:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 160:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 161:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 162:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 163:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 164:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 165:Src/main.c    **** 
 166:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 167:Src/main.c    ****   {
 168:Src/main.c    ****     Error_Handler();
 169:Src/main.c    ****   }
 170:Src/main.c    **** }
 171:Src/main.c    **** 
 172:Src/main.c    **** /**
 173:Src/main.c    ****   * @brief SPI1 Initialization Function
 174:Src/main.c    ****   * @param None
 175:Src/main.c    ****   * @retval None
 176:Src/main.c    ****   */
 177:Src/main.c    **** static void MX_SPI1_Init(void)
 178:Src/main.c    **** {
 179:Src/main.c    **** 
 180:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 0 */
 181:Src/main.c    **** 
 182:Src/main.c    ****   /* USER CODE END SPI1_Init 0 */
 183:Src/main.c    **** 
 184:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 1 */
 185:Src/main.c    **** 
 186:Src/main.c    ****   /* USER CODE END SPI1_Init 1 */
 187:Src/main.c    ****   /* SPI1 parameter configuration*/
 188:Src/main.c    ****   hspi1.Instance = SPI1;
 189:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 190:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 191:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 192:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 193:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 194:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 195:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 196:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 197:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 198:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 199:Src/main.c    ****   hspi1.Init.CRCPolynomial = 7;
 200:Src/main.c    ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 201:Src/main.c    ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 202:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 203:Src/main.c    ****   {
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccMUnnZl.s 			page 5


 204:Src/main.c    ****     Error_Handler();
 205:Src/main.c    ****   }
 206:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 2 */
 207:Src/main.c    **** 
 208:Src/main.c    ****   /* USER CODE END SPI1_Init 2 */
 209:Src/main.c    **** 
 210:Src/main.c    **** }
 211:Src/main.c    **** 
 212:Src/main.c    **** /**
 213:Src/main.c    ****   * @brief SPI2 Initialization Function
 214:Src/main.c    ****   * @param None
 215:Src/main.c    ****   * @retval None
 216:Src/main.c    ****   */
 217:Src/main.c    **** static void MX_SPI2_Init(void)
 218:Src/main.c    **** {
 219:Src/main.c    **** 
 220:Src/main.c    ****   /* USER CODE BEGIN SPI2_Init 0 */
 221:Src/main.c    **** 
 222:Src/main.c    ****   /* USER CODE END SPI2_Init 0 */
 223:Src/main.c    **** 
 224:Src/main.c    ****   /* USER CODE BEGIN SPI2_Init 1 */
 225:Src/main.c    **** 
 226:Src/main.c    ****   /* USER CODE END SPI2_Init 1 */
 227:Src/main.c    ****   /* SPI2 parameter configuration*/
 228:Src/main.c    ****   hspi2.Instance = SPI2;
 229:Src/main.c    ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 230:Src/main.c    ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 231:Src/main.c    ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 232:Src/main.c    ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 233:Src/main.c    ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 234:Src/main.c    ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 235:Src/main.c    ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 236:Src/main.c    ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 237:Src/main.c    ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 238:Src/main.c    ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 239:Src/main.c    ****   hspi2.Init.CRCPolynomial = 7;
 240:Src/main.c    ****   hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 241:Src/main.c    ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 242:Src/main.c    ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 243:Src/main.c    ****   {
 244:Src/main.c    ****     Error_Handler();
 245:Src/main.c    ****   }
 246:Src/main.c    ****   /* USER CODE BEGIN SPI2_Init 2 */
 247:Src/main.c    **** 
 248:Src/main.c    ****   /* USER CODE END SPI2_Init 2 */
 249:Src/main.c    **** 
 250:Src/main.c    **** }
 251:Src/main.c    **** 
 252:Src/main.c    **** /**
 253:Src/main.c    ****   * @brief GPIO Initialization Function
 254:Src/main.c    ****   * @param None
 255:Src/main.c    ****   * @retval None
 256:Src/main.c    ****   */
 257:Src/main.c    **** static void MX_GPIO_Init(void)
 258:Src/main.c    **** {
  27              		.loc 1 258 0
  28              		.cfi_startproc
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccMUnnZl.s 			page 6


  29              		@ args = 0, pretend = 0, frame = 32
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 30B5     		push	{r4, r5, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  37 0002 89B0     		sub	sp, sp, #36
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 48
 259:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 259 0
  41 0004 0024     		movs	r4, #0
  42 0006 0394     		str	r4, [sp, #12]
  43 0008 0494     		str	r4, [sp, #16]
  44 000a 0594     		str	r4, [sp, #20]
  45 000c 0694     		str	r4, [sp, #24]
  46 000e 0794     		str	r4, [sp, #28]
  47              	.LBB2:
 260:Src/main.c    **** 
 261:Src/main.c    ****   /* GPIO Ports Clock Enable */
 262:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  48              		.loc 1 262 0
  49 0010 164B     		ldr	r3, .L3
  50 0012 1A6B     		ldr	r2, [r3, #48]
  51 0014 42F00402 		orr	r2, r2, #4
  52 0018 1A63     		str	r2, [r3, #48]
  53 001a 1A6B     		ldr	r2, [r3, #48]
  54 001c 02F00402 		and	r2, r2, #4
  55 0020 0092     		str	r2, [sp]
  56 0022 009A     		ldr	r2, [sp]
  57              	.LBE2:
  58              	.LBB3:
 263:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  59              		.loc 1 263 0
  60 0024 1A6B     		ldr	r2, [r3, #48]
  61 0026 42F00102 		orr	r2, r2, #1
  62 002a 1A63     		str	r2, [r3, #48]
  63 002c 1A6B     		ldr	r2, [r3, #48]
  64 002e 02F00102 		and	r2, r2, #1
  65 0032 0192     		str	r2, [sp, #4]
  66 0034 019A     		ldr	r2, [sp, #4]
  67              	.LBE3:
  68              	.LBB4:
 264:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  69              		.loc 1 264 0
  70 0036 1A6B     		ldr	r2, [r3, #48]
  71 0038 42F00202 		orr	r2, r2, #2
  72 003c 1A63     		str	r2, [r3, #48]
  73 003e 1B6B     		ldr	r3, [r3, #48]
  74 0040 03F00203 		and	r3, r3, #2
  75 0044 0293     		str	r3, [sp, #8]
  76 0046 029B     		ldr	r3, [sp, #8]
  77              	.LBE4:
 265:Src/main.c    **** 
 266:Src/main.c    ****   /*Configure GPIO pin Output Level */
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccMUnnZl.s 			page 7


 267:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
  78              		.loc 1 267 0
  79 0048 094D     		ldr	r5, .L3+4
  80 004a 2246     		mov	r2, r4
  81 004c 0321     		movs	r1, #3
  82 004e 2846     		mov	r0, r5
  83 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
  84              	.LVL0:
 268:Src/main.c    **** 
 269:Src/main.c    ****   /*Configure GPIO pins : PB0 PB1 */
 270:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
  85              		.loc 1 270 0
  86 0054 0323     		movs	r3, #3
  87 0056 0393     		str	r3, [sp, #12]
 271:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  88              		.loc 1 271 0
  89 0058 0123     		movs	r3, #1
  90 005a 0493     		str	r3, [sp, #16]
 272:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  91              		.loc 1 272 0
  92 005c 0594     		str	r4, [sp, #20]
 273:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  93              		.loc 1 273 0
  94 005e 0694     		str	r4, [sp, #24]
 274:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
  95              		.loc 1 274 0
  96 0060 03A9     		add	r1, sp, #12
  97 0062 2846     		mov	r0, r5
  98 0064 FFF7FEFF 		bl	HAL_GPIO_Init
  99              	.LVL1:
 275:Src/main.c    **** 
 276:Src/main.c    **** }
 100              		.loc 1 276 0
 101 0068 09B0     		add	sp, sp, #36
 102              	.LCFI2:
 103              		.cfi_def_cfa_offset 12
 104              		@ sp needed
 105 006a 30BD     		pop	{r4, r5, pc}
 106              	.L4:
 107              		.align	2
 108              	.L3:
 109 006c 00380240 		.word	1073887232
 110 0070 00040240 		.word	1073873920
 111              		.cfi_endproc
 112              	.LFE142:
 114              		.section	.text.MX_SPI1_Init,"ax",%progbits
 115              		.align	1
 116              		.syntax unified
 117              		.thumb
 118              		.thumb_func
 119              		.fpu fpv5-sp-d16
 121              	MX_SPI1_Init:
 122              	.LFB140:
 178:Src/main.c    **** 
 123              		.loc 1 178 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccMUnnZl.s 			page 8


 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127 0000 08B5     		push	{r3, lr}
 128              	.LCFI3:
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 3, -8
 131              		.cfi_offset 14, -4
 188:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 132              		.loc 1 188 0
 133 0002 0D48     		ldr	r0, .L7
 134 0004 0D4B     		ldr	r3, .L7+4
 135 0006 0360     		str	r3, [r0]
 189:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 136              		.loc 1 189 0
 137 0008 4FF48273 		mov	r3, #260
 138 000c 4360     		str	r3, [r0, #4]
 190:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 139              		.loc 1 190 0
 140 000e 0023     		movs	r3, #0
 141 0010 8360     		str	r3, [r0, #8]
 191:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 142              		.loc 1 191 0
 143 0012 4FF4E062 		mov	r2, #1792
 144 0016 C260     		str	r2, [r0, #12]
 192:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 145              		.loc 1 192 0
 146 0018 0361     		str	r3, [r0, #16]
 193:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 147              		.loc 1 193 0
 148 001a 4361     		str	r3, [r0, #20]
 194:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 149              		.loc 1 194 0
 150 001c 4FF40072 		mov	r2, #512
 151 0020 8261     		str	r2, [r0, #24]
 195:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 152              		.loc 1 195 0
 153 0022 C361     		str	r3, [r0, #28]
 196:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 154              		.loc 1 196 0
 155 0024 0362     		str	r3, [r0, #32]
 197:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 156              		.loc 1 197 0
 157 0026 4362     		str	r3, [r0, #36]
 198:Src/main.c    ****   hspi1.Init.CRCPolynomial = 7;
 158              		.loc 1 198 0
 159 0028 8362     		str	r3, [r0, #40]
 199:Src/main.c    ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 160              		.loc 1 199 0
 161 002a 0722     		movs	r2, #7
 162 002c C262     		str	r2, [r0, #44]
 200:Src/main.c    ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 163              		.loc 1 200 0
 164 002e 0363     		str	r3, [r0, #48]
 201:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 165              		.loc 1 201 0
 166 0030 4363     		str	r3, [r0, #52]
 202:Src/main.c    ****   {
 167              		.loc 1 202 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccMUnnZl.s 			page 9


 168 0032 FFF7FEFF 		bl	HAL_SPI_Init
 169              	.LVL2:
 210:Src/main.c    **** 
 170              		.loc 1 210 0
 171 0036 08BD     		pop	{r3, pc}
 172              	.L8:
 173              		.align	2
 174              	.L7:
 175 0038 00000000 		.word	hspi1
 176 003c 00300140 		.word	1073819648
 177              		.cfi_endproc
 178              	.LFE140:
 180              		.section	.text.MX_SPI2_Init,"ax",%progbits
 181              		.align	1
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 185              		.fpu fpv5-sp-d16
 187              	MX_SPI2_Init:
 188              	.LFB141:
 218:Src/main.c    **** 
 189              		.loc 1 218 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193 0000 08B5     		push	{r3, lr}
 194              	.LCFI4:
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 3, -8
 197              		.cfi_offset 14, -4
 228:Src/main.c    ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 198              		.loc 1 228 0
 199 0002 0E48     		ldr	r0, .L11
 200 0004 0E4B     		ldr	r3, .L11+4
 201 0006 0360     		str	r3, [r0]
 229:Src/main.c    ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 202              		.loc 1 229 0
 203 0008 4FF48273 		mov	r3, #260
 204 000c 4360     		str	r3, [r0, #4]
 230:Src/main.c    ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 205              		.loc 1 230 0
 206 000e 0023     		movs	r3, #0
 207 0010 8360     		str	r3, [r0, #8]
 231:Src/main.c    ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 208              		.loc 1 231 0
 209 0012 4FF4E062 		mov	r2, #1792
 210 0016 C260     		str	r2, [r0, #12]
 232:Src/main.c    ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 211              		.loc 1 232 0
 212 0018 0361     		str	r3, [r0, #16]
 233:Src/main.c    ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 213              		.loc 1 233 0
 214 001a 4361     		str	r3, [r0, #20]
 234:Src/main.c    ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 215              		.loc 1 234 0
 216 001c 4FF40072 		mov	r2, #512
 217 0020 8261     		str	r2, [r0, #24]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccMUnnZl.s 			page 10


 235:Src/main.c    ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 218              		.loc 1 235 0
 219 0022 C361     		str	r3, [r0, #28]
 236:Src/main.c    ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 220              		.loc 1 236 0
 221 0024 0362     		str	r3, [r0, #32]
 237:Src/main.c    ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 222              		.loc 1 237 0
 223 0026 4362     		str	r3, [r0, #36]
 238:Src/main.c    ****   hspi2.Init.CRCPolynomial = 7;
 224              		.loc 1 238 0
 225 0028 8362     		str	r3, [r0, #40]
 239:Src/main.c    ****   hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 226              		.loc 1 239 0
 227 002a 0722     		movs	r2, #7
 228 002c C262     		str	r2, [r0, #44]
 240:Src/main.c    ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 229              		.loc 1 240 0
 230 002e 0363     		str	r3, [r0, #48]
 241:Src/main.c    ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 231              		.loc 1 241 0
 232 0030 0823     		movs	r3, #8
 233 0032 4363     		str	r3, [r0, #52]
 242:Src/main.c    ****   {
 234              		.loc 1 242 0
 235 0034 FFF7FEFF 		bl	HAL_SPI_Init
 236              	.LVL3:
 250:Src/main.c    **** 
 237              		.loc 1 250 0
 238 0038 08BD     		pop	{r3, pc}
 239              	.L12:
 240 003a 00BF     		.align	2
 241              	.L11:
 242 003c 00000000 		.word	hspi2
 243 0040 00380040 		.word	1073756160
 244              		.cfi_endproc
 245              	.LFE141:
 247              		.section	.text.SystemClock_Config,"ax",%progbits
 248              		.align	1
 249              		.global	SystemClock_Config
 250              		.syntax unified
 251              		.thumb
 252              		.thumb_func
 253              		.fpu fpv5-sp-d16
 255              	SystemClock_Config:
 256              	.LFB139:
 139:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 257              		.loc 1 139 0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 80
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261 0000 10B5     		push	{r4, lr}
 262              	.LCFI5:
 263              		.cfi_def_cfa_offset 8
 264              		.cfi_offset 4, -8
 265              		.cfi_offset 14, -4
 266 0002 94B0     		sub	sp, sp, #80
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccMUnnZl.s 			page 11


 267              	.LCFI6:
 268              		.cfi_def_cfa_offset 88
 140:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 269              		.loc 1 140 0
 270 0004 3022     		movs	r2, #48
 271 0006 0021     		movs	r1, #0
 272 0008 08A8     		add	r0, sp, #32
 273 000a FFF7FEFF 		bl	memset
 274              	.LVL4:
 141:Src/main.c    **** 
 275              		.loc 1 141 0
 276 000e 0024     		movs	r4, #0
 277 0010 0394     		str	r4, [sp, #12]
 278 0012 0494     		str	r4, [sp, #16]
 279 0014 0594     		str	r4, [sp, #20]
 280 0016 0694     		str	r4, [sp, #24]
 281 0018 0794     		str	r4, [sp, #28]
 282              	.LBB5:
 145:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 283              		.loc 1 145 0
 284 001a 164B     		ldr	r3, .L15
 285 001c 1A6C     		ldr	r2, [r3, #64]
 286 001e 42F08052 		orr	r2, r2, #268435456
 287 0022 1A64     		str	r2, [r3, #64]
 288 0024 1B6C     		ldr	r3, [r3, #64]
 289 0026 03F08053 		and	r3, r3, #268435456
 290 002a 0193     		str	r3, [sp, #4]
 291 002c 019B     		ldr	r3, [sp, #4]
 292              	.LBE5:
 293              	.LBB6:
 146:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks
 294              		.loc 1 146 0
 295 002e 124A     		ldr	r2, .L15+4
 296 0030 1368     		ldr	r3, [r2]
 297 0032 23F44043 		bic	r3, r3, #49152
 298 0036 43F48043 		orr	r3, r3, #16384
 299 003a 1360     		str	r3, [r2]
 300 003c 1368     		ldr	r3, [r2]
 301 003e 03F44043 		and	r3, r3, #49152
 302 0042 0293     		str	r3, [sp, #8]
 303 0044 029B     		ldr	r3, [sp, #8]
 304              	.LBE6:
 149:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 305              		.loc 1 149 0
 306 0046 0223     		movs	r3, #2
 307 0048 0893     		str	r3, [sp, #32]
 150:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 308              		.loc 1 150 0
 309 004a 0123     		movs	r3, #1
 310 004c 0B93     		str	r3, [sp, #44]
 151:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 311              		.loc 1 151 0
 312 004e 1023     		movs	r3, #16
 313 0050 0C93     		str	r3, [sp, #48]
 152:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 314              		.loc 1 152 0
 315 0052 0E94     		str	r4, [sp, #56]
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccMUnnZl.s 			page 12


 153:Src/main.c    ****   {
 316              		.loc 1 153 0
 317 0054 08A8     		add	r0, sp, #32
 318 0056 FFF7FEFF 		bl	HAL_RCC_OscConfig
 319              	.LVL5:
 159:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 320              		.loc 1 159 0
 321 005a 0F23     		movs	r3, #15
 322 005c 0393     		str	r3, [sp, #12]
 161:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 323              		.loc 1 161 0
 324 005e 0494     		str	r4, [sp, #16]
 162:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 325              		.loc 1 162 0
 326 0060 8023     		movs	r3, #128
 327 0062 0593     		str	r3, [sp, #20]
 163:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 328              		.loc 1 163 0
 329 0064 0694     		str	r4, [sp, #24]
 164:Src/main.c    **** 
 330              		.loc 1 164 0
 331 0066 0794     		str	r4, [sp, #28]
 166:Src/main.c    ****   {
 332              		.loc 1 166 0
 333 0068 2146     		mov	r1, r4
 334 006a 03A8     		add	r0, sp, #12
 335 006c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 336              	.LVL6:
 170:Src/main.c    **** 
 337              		.loc 1 170 0
 338 0070 14B0     		add	sp, sp, #80
 339              	.LCFI7:
 340              		.cfi_def_cfa_offset 8
 341              		@ sp needed
 342 0072 10BD     		pop	{r4, pc}
 343              	.L16:
 344              		.align	2
 345              	.L15:
 346 0074 00380240 		.word	1073887232
 347 0078 00700040 		.word	1073770496
 348              		.cfi_endproc
 349              	.LFE139:
 351              		.section	.text.main,"ax",%progbits
 352              		.align	1
 353              		.global	main
 354              		.syntax unified
 355              		.thumb
 356              		.thumb_func
 357              		.fpu fpv5-sp-d16
 359              	main:
 360              	.LFB138:
  94:Src/main.c    ****   /* USER CODE BEGIN 1 */
 361              		.loc 1 94 0
 362              		.cfi_startproc
 363              		@ Volatile: function does not return.
 364              		@ args = 0, pretend = 0, frame = 0
 365              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccMUnnZl.s 			page 13


 366 0000 08B5     		push	{r3, lr}
 367              	.LCFI8:
 368              		.cfi_def_cfa_offset 8
 369              		.cfi_offset 3, -8
 370              		.cfi_offset 14, -4
 102:Src/main.c    **** 
 371              		.loc 1 102 0
 372 0002 FFF7FEFF 		bl	HAL_Init
 373              	.LVL7:
 109:Src/main.c    **** 
 374              		.loc 1 109 0
 375 0006 FFF7FEFF 		bl	SystemClock_Config
 376              	.LVL8:
 116:Src/main.c    ****   MX_SPI1_Init();
 377              		.loc 1 116 0
 378 000a FFF7FEFF 		bl	MX_GPIO_Init
 379              	.LVL9:
 117:Src/main.c    ****   MX_SPI2_Init();
 380              		.loc 1 117 0
 381 000e FFF7FEFF 		bl	MX_SPI1_Init
 382              	.LVL10:
 118:Src/main.c    ****   /* USER CODE BEGIN 2 */
 383              		.loc 1 118 0
 384 0012 FFF7FEFF 		bl	MX_SPI2_Init
 385              	.LVL11:
 120:Src/main.c    ****   /* USER CODE END 2 */
 386              		.loc 1 120 0
 387 0016 FFF7FEFF 		bl	FT800_BootupConfig
 388              	.LVL12:
 389              	.L18:
 390 001a FEE7     		b	.L18
 391              		.cfi_endproc
 392              	.LFE138:
 394              		.section	.text.Error_Handler,"ax",%progbits
 395              		.align	1
 396              		.global	Error_Handler
 397              		.syntax unified
 398              		.thumb
 399              		.thumb_func
 400              		.fpu fpv5-sp-d16
 402              	Error_Handler:
 403              	.LFB143:
 277:Src/main.c    **** 
 278:Src/main.c    **** /* USER CODE BEGIN 4 */
 279:Src/main.c    **** 
 280:Src/main.c    **** /* USER CODE END 4 */
 281:Src/main.c    **** 
 282:Src/main.c    **** /**
 283:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 284:Src/main.c    ****   * @retval None
 285:Src/main.c    ****   */
 286:Src/main.c    **** void Error_Handler(void)
 287:Src/main.c    **** {
 404              		.loc 1 287 0
 405              		.cfi_startproc
 406              		@ args = 0, pretend = 0, frame = 0
 407              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccMUnnZl.s 			page 14


 408              		@ link register save eliminated.
 288:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 289:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 290:Src/main.c    **** 
 291:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 292:Src/main.c    **** }
 409              		.loc 1 292 0
 410 0000 7047     		bx	lr
 411              		.cfi_endproc
 412              	.LFE143:
 414              		.comm	hspi2,100,4
 415              		.comm	hspi1,100,4
 416              		.text
 417              	.Letext0:
 418              		.file 2 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/machine/_default_types
 419              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_stdint.h"
 420              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 421              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 422              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 423              		.file 7 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/lock.h"
 424              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/_types.h"
 425              		.file 9 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 426              		.file 10 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/reent.h"
 427              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 428              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 429              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 430              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 431              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 432              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_spi.h"
 433              		.file 17 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/sys/unistd.h"
 434              		.file 18 "/usr/local/Cellar/arm-none-eabi-gcc/20180627/arm-none-eabi/include/stdlib.h"
 435              		.file 19 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 436              		.file 20 "<built-in>"
ARM GAS  /var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccMUnnZl.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccMUnnZl.s:18     .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccMUnnZl.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccMUnnZl.s:109    .text.MX_GPIO_Init:000000000000006c $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccMUnnZl.s:115    .text.MX_SPI1_Init:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccMUnnZl.s:121    .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccMUnnZl.s:175    .text.MX_SPI1_Init:0000000000000038 $d
                            *COM*:0000000000000064 hspi1
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccMUnnZl.s:181    .text.MX_SPI2_Init:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccMUnnZl.s:187    .text.MX_SPI2_Init:0000000000000000 MX_SPI2_Init
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccMUnnZl.s:242    .text.MX_SPI2_Init:000000000000003c $d
                            *COM*:0000000000000064 hspi2
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccMUnnZl.s:248    .text.SystemClock_Config:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccMUnnZl.s:255    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccMUnnZl.s:346    .text.SystemClock_Config:0000000000000074 $d
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccMUnnZl.s:352    .text.main:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccMUnnZl.s:359    .text.main:0000000000000000 main
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccMUnnZl.s:395    .text.Error_Handler:0000000000000000 $t
/var/folders/n8/cvzdcwlj0vl4g_wtyz1ffy300000gn/T//ccMUnnZl.s:402    .text.Error_Handler:0000000000000000 Error_Handler

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_SPI_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
FT800_BootupConfig
