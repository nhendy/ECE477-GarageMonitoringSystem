/*
This file is automatically generated
DO NOT MODIFY BY HAND
Ft_Esd_PosSizeToRadius
Header
*/

#ifndef Ft_Esd_PosSizeToRadius__H
#define Ft_Esd_PosSizeToRadius__H

#include "FT_DataTypes.h"
#include "Ft_Esd.h"

#ifndef ESD_LOGIC
#define ESD_LOGIC(name, ...)
#define ESD_ACTOR(name, ...)
#define ESD_WIDGET(name, ...)
#define ESD_UI(name, ...)
#define ESD_PAGE(name, ...)
#define ESD_APPLICATION(name, ...)
#define ESD_INPUT(name, ...)
#define ESD_OUTPUT(name, ...)
#define ESD_SLOT(name, ...)
#define ESD_SIGNAL(name, ...)
#define ESD_VARIABLE(name, ...)
#define ESD_WRITER(name, ...)
#endif

ESD_LOGIC(Ft_Esd_PosSizeToRadius, Include = "Ft_Esd_PosSizeToRadius.h", Callback, Category = _GroupHidden)
typedef struct
{
	void *Owner;
	ESD_INPUT(X, Type = ft_int16_t)
	ft_int16_t(* X)(void *context);
	ESD_INPUT(Y, Type = ft_int16_t)
	ft_int16_t(* Y)(void *context);
	ESD_INPUT(Width, Type = ft_int16_t)
	ft_int16_t(* Width)(void *context);
	ESD_INPUT(Height, Type = ft_int16_t)
	ft_int16_t(* Height)(void *context);
} Ft_Esd_PosSizeToRadius;

void Ft_Esd_PosSizeToRadius__Initializer(Ft_Esd_PosSizeToRadius *context);

ESD_OUTPUT(Radius, Type = ft_int16_t)
ft_int16_t Ft_Esd_PosSizeToRadius_Radius(Ft_Esd_PosSizeToRadius *context);

ESD_OUTPUT(CenterX, Type = ft_int16_t)
ft_int16_t Ft_Esd_PosSizeToRadius_CenterX(Ft_Esd_PosSizeToRadius *context);

ESD_OUTPUT(CenterY, Type = ft_int16_t)
ft_int16_t Ft_Esd_PosSizeToRadius_CenterY(Ft_Esd_PosSizeToRadius *context);

#endif /* Ft_Esd_PosSizeToRadius__H */

/* end of file */
